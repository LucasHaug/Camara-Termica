ARM GAS  /tmp/ccnkXTIt.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.comm	hadc,76,4
  16              		.comm	hdma_adc,68,4
  17              		.section	.rodata
  18              		.align	2
  19              	.LC1:
  20 0000 63756265 		.ascii	"cube/Src/adc.c\000"
  20      2F537263 
  20      2F616463 
  20      2E6300
  21              		.section	.text.MX_ADC_Init,"ax",%progbits
  22              		.align	1
  23              		.global	MX_ADC_Init
  24              		.syntax unified
  25              		.code	16
  26              		.thumb_func
  27              		.fpu softvfp
  29              	MX_ADC_Init:
  30              	.LFB37:
  31              		.file 1 "cube/Src/adc.c"
   1:cube/Src/adc.c **** /**
   2:cube/Src/adc.c ****   ******************************************************************************
   3:cube/Src/adc.c ****   * File Name          : ADC.c
   4:cube/Src/adc.c ****   * Description        : This file provides code for the configuration
   5:cube/Src/adc.c ****   *                      of the ADC instances.
   6:cube/Src/adc.c ****   ******************************************************************************
   7:cube/Src/adc.c ****   ** This notice applies to any and all portions of this file
   8:cube/Src/adc.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:cube/Src/adc.c ****   * USER CODE END. Other portions of this file, whether 
  10:cube/Src/adc.c ****   * inserted by the user or by software development tools
  11:cube/Src/adc.c ****   * are owned by their respective copyright owners.
  12:cube/Src/adc.c ****   *
  13:cube/Src/adc.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:cube/Src/adc.c ****   *
  15:cube/Src/adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:cube/Src/adc.c ****   * are permitted provided that the following conditions are met:
  17:cube/Src/adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:cube/Src/adc.c ****   *      this list of conditions and the following disclaimer.
  19:cube/Src/adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:cube/Src/adc.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:cube/Src/adc.c ****   *      and/or other materials provided with the distribution.
  22:cube/Src/adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:cube/Src/adc.c ****   *      may be used to endorse or promote products derived from this software
  24:cube/Src/adc.c ****   *      without specific prior written permission.
ARM GAS  /tmp/ccnkXTIt.s 			page 2


  25:cube/Src/adc.c ****   *
  26:cube/Src/adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:cube/Src/adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:cube/Src/adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:cube/Src/adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:cube/Src/adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:cube/Src/adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:cube/Src/adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:cube/Src/adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:cube/Src/adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:cube/Src/adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:cube/Src/adc.c ****   *
  37:cube/Src/adc.c ****   ******************************************************************************
  38:cube/Src/adc.c ****   */
  39:cube/Src/adc.c **** 
  40:cube/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  41:cube/Src/adc.c **** #include "adc.h"
  42:cube/Src/adc.c **** 
  43:cube/Src/adc.c **** #include "gpio.h"
  44:cube/Src/adc.c **** #include "dma.h"
  45:cube/Src/adc.c **** 
  46:cube/Src/adc.c **** /* USER CODE BEGIN 0 */
  47:cube/Src/adc.c **** 
  48:cube/Src/adc.c **** /* USER CODE END 0 */
  49:cube/Src/adc.c **** 
  50:cube/Src/adc.c **** ADC_HandleTypeDef hadc;
  51:cube/Src/adc.c **** DMA_HandleTypeDef hdma_adc;
  52:cube/Src/adc.c **** 
  53:cube/Src/adc.c **** /* ADC init function */
  54:cube/Src/adc.c **** void MX_ADC_Init(void)
  55:cube/Src/adc.c **** {
  32              		.loc 1 55 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 16
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 84B0     		sub	sp, sp, #16
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  56:cube/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig;
  57:cube/Src/adc.c **** 
  58:cube/Src/adc.c ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
  59:cube/Src/adc.c ****     */
  60:cube/Src/adc.c ****   hadc.Instance = ADC1;
  44              		.loc 1 60 0
  45 0006 314B     		ldr	r3, .L6
  46 0008 314A     		ldr	r2, .L6+4
  47 000a 1A60     		str	r2, [r3]
  61:cube/Src/adc.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  48              		.loc 1 61 0
  49 000c 2F4B     		ldr	r3, .L6
  50 000e 8022     		movs	r2, #128
  51 0010 1206     		lsls	r2, r2, #24
ARM GAS  /tmp/ccnkXTIt.s 			page 3


  52 0012 5A60     		str	r2, [r3, #4]
  62:cube/Src/adc.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
  53              		.loc 1 62 0
  54 0014 2D4B     		ldr	r3, .L6
  55 0016 0022     		movs	r2, #0
  56 0018 9A60     		str	r2, [r3, #8]
  63:cube/Src/adc.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  57              		.loc 1 63 0
  58 001a 2C4B     		ldr	r3, .L6
  59 001c 0022     		movs	r2, #0
  60 001e DA60     		str	r2, [r3, #12]
  64:cube/Src/adc.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
  61              		.loc 1 64 0
  62 0020 2A4B     		ldr	r3, .L6
  63 0022 0122     		movs	r2, #1
  64 0024 1A61     		str	r2, [r3, #16]
  65:cube/Src/adc.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  65              		.loc 1 65 0
  66 0026 294B     		ldr	r3, .L6
  67 0028 0422     		movs	r2, #4
  68 002a 5A61     		str	r2, [r3, #20]
  66:cube/Src/adc.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
  69              		.loc 1 66 0
  70 002c 274B     		ldr	r3, .L6
  71 002e 0022     		movs	r2, #0
  72 0030 9A61     		str	r2, [r3, #24]
  67:cube/Src/adc.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
  73              		.loc 1 67 0
  74 0032 264B     		ldr	r3, .L6
  75 0034 0022     		movs	r2, #0
  76 0036 DA61     		str	r2, [r3, #28]
  68:cube/Src/adc.c ****   hadc.Init.ContinuousConvMode = ENABLE;
  77              		.loc 1 68 0
  78 0038 244B     		ldr	r3, .L6
  79 003a 0122     		movs	r2, #1
  80 003c 1A62     		str	r2, [r3, #32]
  69:cube/Src/adc.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
  81              		.loc 1 69 0
  82 003e 234B     		ldr	r3, .L6
  83 0040 0022     		movs	r2, #0
  84 0042 5A62     		str	r2, [r3, #36]
  70:cube/Src/adc.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  85              		.loc 1 70 0
  86 0044 214B     		ldr	r3, .L6
  87 0046 C222     		movs	r2, #194
  88 0048 FF32     		adds	r2, r2, #255
  89 004a 9A62     		str	r2, [r3, #40]
  71:cube/Src/adc.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  90              		.loc 1 71 0
  91 004c 1F4B     		ldr	r3, .L6
  92 004e 0022     		movs	r2, #0
  93 0050 DA62     		str	r2, [r3, #44]
  72:cube/Src/adc.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
  94              		.loc 1 72 0
  95 0052 1E4B     		ldr	r3, .L6
  96 0054 0122     		movs	r2, #1
  97 0056 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccnkXTIt.s 			page 4


  73:cube/Src/adc.c ****   hadc.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  98              		.loc 1 73 0
  99 0058 1C4B     		ldr	r3, .L6
 100 005a 0022     		movs	r2, #0
 101 005c 5A63     		str	r2, [r3, #52]
  74:cube/Src/adc.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 102              		.loc 1 74 0
 103 005e 1B4B     		ldr	r3, .L6
 104 0060 1800     		movs	r0, r3
 105 0062 FFF7FEFF 		bl	HAL_ADC_Init
 106 0066 031E     		subs	r3, r0, #0
 107 0068 04D0     		beq	.L2
  75:cube/Src/adc.c ****   {
  76:cube/Src/adc.c ****     _Error_Handler(__FILE__, __LINE__);
 108              		.loc 1 76 0
 109 006a 1A4B     		ldr	r3, .L6+8
 110 006c 4C21     		movs	r1, #76
 111 006e 1800     		movs	r0, r3
 112 0070 FFF7FEFF 		bl	_Error_Handler
 113              	.L2:
  77:cube/Src/adc.c ****   }
  78:cube/Src/adc.c **** 
  79:cube/Src/adc.c ****     /**Configure for the selected ADC regular channel to be converted. 
  80:cube/Src/adc.c ****     */
  81:cube/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
 114              		.loc 1 81 0
 115 0074 3B1D     		adds	r3, r7, #4
 116 0076 0022     		movs	r2, #0
 117 0078 1A60     		str	r2, [r3]
  82:cube/Src/adc.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 118              		.loc 1 82 0
 119 007a 3B1D     		adds	r3, r7, #4
 120 007c 8022     		movs	r2, #128
 121 007e 5201     		lsls	r2, r2, #5
 122 0080 5A60     		str	r2, [r3, #4]
  83:cube/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 123              		.loc 1 83 0
 124 0082 3B1D     		adds	r3, r7, #4
 125 0084 0222     		movs	r2, #2
 126 0086 9A60     		str	r2, [r3, #8]
  84:cube/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 127              		.loc 1 84 0
 128 0088 3A1D     		adds	r2, r7, #4
 129 008a 104B     		ldr	r3, .L6
 130 008c 1100     		movs	r1, r2
 131 008e 1800     		movs	r0, r3
 132 0090 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 133 0094 031E     		subs	r3, r0, #0
 134 0096 04D0     		beq	.L3
  85:cube/Src/adc.c ****   {
  86:cube/Src/adc.c ****     _Error_Handler(__FILE__, __LINE__);
 135              		.loc 1 86 0
 136 0098 0E4B     		ldr	r3, .L6+8
 137 009a 5621     		movs	r1, #86
 138 009c 1800     		movs	r0, r3
 139 009e FFF7FEFF 		bl	_Error_Handler
 140              	.L3:
ARM GAS  /tmp/ccnkXTIt.s 			page 5


  87:cube/Src/adc.c ****   }
  88:cube/Src/adc.c **** 
  89:cube/Src/adc.c ****     /**Configure for the selected ADC regular channel to be converted. 
  90:cube/Src/adc.c ****     */
  91:cube/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 141              		.loc 1 91 0
 142 00a2 3B1D     		adds	r3, r7, #4
 143 00a4 0122     		movs	r2, #1
 144 00a6 1A60     		str	r2, [r3]
  92:cube/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 145              		.loc 1 92 0
 146 00a8 3A1D     		adds	r2, r7, #4
 147 00aa 084B     		ldr	r3, .L6
 148 00ac 1100     		movs	r1, r2
 149 00ae 1800     		movs	r0, r3
 150 00b0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 151 00b4 031E     		subs	r3, r0, #0
 152 00b6 04D0     		beq	.L5
  93:cube/Src/adc.c ****   {
  94:cube/Src/adc.c ****     _Error_Handler(__FILE__, __LINE__);
 153              		.loc 1 94 0
 154 00b8 064B     		ldr	r3, .L6+8
 155 00ba 5E21     		movs	r1, #94
 156 00bc 1800     		movs	r0, r3
 157 00be FFF7FEFF 		bl	_Error_Handler
 158              	.L5:
  95:cube/Src/adc.c ****   }
  96:cube/Src/adc.c **** 
  97:cube/Src/adc.c **** }
 159              		.loc 1 97 0
 160 00c2 C046     		nop
 161 00c4 BD46     		mov	sp, r7
 162 00c6 04B0     		add	sp, sp, #16
 163              		@ sp needed
 164 00c8 80BD     		pop	{r7, pc}
 165              	.L7:
 166 00ca C046     		.align	2
 167              	.L6:
 168 00cc 00000000 		.word	hadc
 169 00d0 00240140 		.word	1073816576
 170 00d4 00000000 		.word	.LC1
 171              		.cfi_endproc
 172              	.LFE37:
 174              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 175              		.align	1
 176              		.global	HAL_ADC_MspInit
 177              		.syntax unified
 178              		.code	16
 179              		.thumb_func
 180              		.fpu softvfp
 182              	HAL_ADC_MspInit:
 183              	.LFB38:
  98:cube/Src/adc.c **** 
  99:cube/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 100:cube/Src/adc.c **** {
 184              		.loc 1 100 0
 185              		.cfi_startproc
ARM GAS  /tmp/ccnkXTIt.s 			page 6


 186              		@ args = 0, pretend = 0, frame = 32
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188 0000 80B5     		push	{r7, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0002 88B0     		sub	sp, sp, #32
 193              		.cfi_def_cfa_offset 40
 194 0004 00AF     		add	r7, sp, #0
 195              		.cfi_def_cfa_register 7
 196 0006 7860     		str	r0, [r7, #4]
 101:cube/Src/adc.c **** 
 102:cube/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 103:cube/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 197              		.loc 1 103 0
 198 0008 7B68     		ldr	r3, [r7, #4]
 199 000a 1B68     		ldr	r3, [r3]
 200 000c 2C4A     		ldr	r2, .L12
 201 000e 9342     		cmp	r3, r2
 202 0010 52D1     		bne	.L11
 203              	.LBB2:
 104:cube/Src/adc.c ****   {
 105:cube/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 106:cube/Src/adc.c **** 
 107:cube/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 108:cube/Src/adc.c ****     /* ADC1 clock enable */
 109:cube/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 204              		.loc 1 109 0
 205 0012 2C4B     		ldr	r3, .L12+4
 206 0014 9A69     		ldr	r2, [r3, #24]
 207 0016 2B4B     		ldr	r3, .L12+4
 208 0018 8021     		movs	r1, #128
 209 001a 8900     		lsls	r1, r1, #2
 210 001c 0A43     		orrs	r2, r1
 211 001e 9A61     		str	r2, [r3, #24]
 212 0020 284B     		ldr	r3, .L12+4
 213 0022 9A69     		ldr	r2, [r3, #24]
 214 0024 8023     		movs	r3, #128
 215 0026 9B00     		lsls	r3, r3, #2
 216 0028 1340     		ands	r3, r2
 217 002a BB60     		str	r3, [r7, #8]
 218 002c BB68     		ldr	r3, [r7, #8]
 219              	.LBE2:
 110:cube/Src/adc.c ****   
 111:cube/Src/adc.c ****     /**ADC GPIO Configuration    
 112:cube/Src/adc.c ****     PA0     ------> ADC_IN0
 113:cube/Src/adc.c ****     PA1     ------> ADC_IN1 
 114:cube/Src/adc.c ****     */
 115:cube/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 220              		.loc 1 115 0
 221 002e 0C21     		movs	r1, #12
 222 0030 7B18     		adds	r3, r7, r1
 223 0032 0322     		movs	r2, #3
 224 0034 1A60     		str	r2, [r3]
 116:cube/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 225              		.loc 1 116 0
 226 0036 7B18     		adds	r3, r7, r1
ARM GAS  /tmp/ccnkXTIt.s 			page 7


 227 0038 0322     		movs	r2, #3
 228 003a 5A60     		str	r2, [r3, #4]
 117:cube/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 229              		.loc 1 117 0
 230 003c 7B18     		adds	r3, r7, r1
 231 003e 0022     		movs	r2, #0
 232 0040 9A60     		str	r2, [r3, #8]
 118:cube/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 233              		.loc 1 118 0
 234 0042 7A18     		adds	r2, r7, r1
 235 0044 9023     		movs	r3, #144
 236 0046 DB05     		lsls	r3, r3, #23
 237 0048 1100     		movs	r1, r2
 238 004a 1800     		movs	r0, r3
 239 004c FFF7FEFF 		bl	HAL_GPIO_Init
 119:cube/Src/adc.c **** 
 120:cube/Src/adc.c ****     /* ADC1 DMA Init */
 121:cube/Src/adc.c ****     /* ADC Init */
 122:cube/Src/adc.c ****     hdma_adc.Instance = DMA1_Channel1;
 240              		.loc 1 122 0
 241 0050 1D4B     		ldr	r3, .L12+8
 242 0052 1E4A     		ldr	r2, .L12+12
 243 0054 1A60     		str	r2, [r3]
 123:cube/Src/adc.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 244              		.loc 1 123 0
 245 0056 1C4B     		ldr	r3, .L12+8
 246 0058 0022     		movs	r2, #0
 247 005a 5A60     		str	r2, [r3, #4]
 124:cube/Src/adc.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 248              		.loc 1 124 0
 249 005c 1A4B     		ldr	r3, .L12+8
 250 005e 0022     		movs	r2, #0
 251 0060 9A60     		str	r2, [r3, #8]
 125:cube/Src/adc.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 252              		.loc 1 125 0
 253 0062 194B     		ldr	r3, .L12+8
 254 0064 8022     		movs	r2, #128
 255 0066 DA60     		str	r2, [r3, #12]
 126:cube/Src/adc.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 256              		.loc 1 126 0
 257 0068 174B     		ldr	r3, .L12+8
 258 006a 8022     		movs	r2, #128
 259 006c 9200     		lsls	r2, r2, #2
 260 006e 1A61     		str	r2, [r3, #16]
 127:cube/Src/adc.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 261              		.loc 1 127 0
 262 0070 154B     		ldr	r3, .L12+8
 263 0072 8022     		movs	r2, #128
 264 0074 1201     		lsls	r2, r2, #4
 265 0076 5A61     		str	r2, [r3, #20]
 128:cube/Src/adc.c ****     hdma_adc.Init.Mode = DMA_CIRCULAR;
 266              		.loc 1 128 0
 267 0078 134B     		ldr	r3, .L12+8
 268 007a 2022     		movs	r2, #32
 269 007c 9A61     		str	r2, [r3, #24]
 129:cube/Src/adc.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_HIGH;
 270              		.loc 1 129 0
ARM GAS  /tmp/ccnkXTIt.s 			page 8


 271 007e 124B     		ldr	r3, .L12+8
 272 0080 8022     		movs	r2, #128
 273 0082 9201     		lsls	r2, r2, #6
 274 0084 DA61     		str	r2, [r3, #28]
 130:cube/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 275              		.loc 1 130 0
 276 0086 104B     		ldr	r3, .L12+8
 277 0088 1800     		movs	r0, r3
 278 008a FFF7FEFF 		bl	HAL_DMA_Init
 279 008e 031E     		subs	r3, r0, #0
 280 0090 04D0     		beq	.L10
 131:cube/Src/adc.c ****     {
 132:cube/Src/adc.c ****       _Error_Handler(__FILE__, __LINE__);
 281              		.loc 1 132 0
 282 0092 0F4B     		ldr	r3, .L12+16
 283 0094 8421     		movs	r1, #132
 284 0096 1800     		movs	r0, r3
 285 0098 FFF7FEFF 		bl	_Error_Handler
 286              	.L10:
 133:cube/Src/adc.c ****     }
 134:cube/Src/adc.c **** 
 135:cube/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc);
 287              		.loc 1 135 0
 288 009c 7B68     		ldr	r3, [r7, #4]
 289 009e 0A4A     		ldr	r2, .L12+8
 290 00a0 DA63     		str	r2, [r3, #60]
 291 00a2 094B     		ldr	r3, .L12+8
 292 00a4 7A68     		ldr	r2, [r7, #4]
 293 00a6 5A62     		str	r2, [r3, #36]
 136:cube/Src/adc.c **** 
 137:cube/Src/adc.c ****     /* ADC1 interrupt Init */
 138:cube/Src/adc.c ****     HAL_NVIC_SetPriority(ADC1_COMP_IRQn, 0, 0);
 294              		.loc 1 138 0
 295 00a8 0022     		movs	r2, #0
 296 00aa 0021     		movs	r1, #0
 297 00ac 0C20     		movs	r0, #12
 298 00ae FFF7FEFF 		bl	HAL_NVIC_SetPriority
 139:cube/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC1_COMP_IRQn);
 299              		.loc 1 139 0
 300 00b2 0C20     		movs	r0, #12
 301 00b4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 302              	.L11:
 140:cube/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 141:cube/Src/adc.c **** 
 142:cube/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 143:cube/Src/adc.c ****   }
 144:cube/Src/adc.c **** }
 303              		.loc 1 144 0
 304 00b8 C046     		nop
 305 00ba BD46     		mov	sp, r7
 306 00bc 08B0     		add	sp, sp, #32
 307              		@ sp needed
 308 00be 80BD     		pop	{r7, pc}
 309              	.L13:
 310              		.align	2
 311              	.L12:
 312 00c0 00240140 		.word	1073816576
ARM GAS  /tmp/ccnkXTIt.s 			page 9


 313 00c4 00100240 		.word	1073876992
 314 00c8 00000000 		.word	hdma_adc
 315 00cc 08000240 		.word	1073872904
 316 00d0 00000000 		.word	.LC1
 317              		.cfi_endproc
 318              	.LFE38:
 320              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 321              		.align	1
 322              		.global	HAL_ADC_MspDeInit
 323              		.syntax unified
 324              		.code	16
 325              		.thumb_func
 326              		.fpu softvfp
 328              	HAL_ADC_MspDeInit:
 329              	.LFB39:
 145:cube/Src/adc.c **** 
 146:cube/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 147:cube/Src/adc.c **** {
 330              		.loc 1 147 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 8
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334 0000 80B5     		push	{r7, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 82B0     		sub	sp, sp, #8
 339              		.cfi_def_cfa_offset 16
 340 0004 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 342 0006 7860     		str	r0, [r7, #4]
 148:cube/Src/adc.c **** 
 149:cube/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 343              		.loc 1 149 0
 344 0008 7B68     		ldr	r3, [r7, #4]
 345 000a 1B68     		ldr	r3, [r3]
 346 000c 0D4A     		ldr	r2, .L17
 347 000e 9342     		cmp	r3, r2
 348 0010 13D1     		bne	.L16
 150:cube/Src/adc.c ****   {
 151:cube/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 152:cube/Src/adc.c **** 
 153:cube/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 154:cube/Src/adc.c ****     /* Peripheral clock disable */
 155:cube/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 349              		.loc 1 155 0
 350 0012 0D4B     		ldr	r3, .L17+4
 351 0014 9A69     		ldr	r2, [r3, #24]
 352 0016 0C4B     		ldr	r3, .L17+4
 353 0018 0C49     		ldr	r1, .L17+8
 354 001a 0A40     		ands	r2, r1
 355 001c 9A61     		str	r2, [r3, #24]
 156:cube/Src/adc.c ****   
 157:cube/Src/adc.c ****     /**ADC GPIO Configuration    
 158:cube/Src/adc.c ****     PA0     ------> ADC_IN0
 159:cube/Src/adc.c ****     PA1     ------> ADC_IN1 
 160:cube/Src/adc.c ****     */
ARM GAS  /tmp/ccnkXTIt.s 			page 10


 161:cube/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1);
 356              		.loc 1 161 0
 357 001e 9023     		movs	r3, #144
 358 0020 DB05     		lsls	r3, r3, #23
 359 0022 0321     		movs	r1, #3
 360 0024 1800     		movs	r0, r3
 361 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 162:cube/Src/adc.c **** 
 163:cube/Src/adc.c ****     /* ADC1 DMA DeInit */
 164:cube/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 362              		.loc 1 164 0
 363 002a 7B68     		ldr	r3, [r7, #4]
 364 002c DB6B     		ldr	r3, [r3, #60]
 365 002e 1800     		movs	r0, r3
 366 0030 FFF7FEFF 		bl	HAL_DMA_DeInit
 165:cube/Src/adc.c **** 
 166:cube/Src/adc.c ****     /* ADC1 interrupt Deinit */
 167:cube/Src/adc.c ****     HAL_NVIC_DisableIRQ(ADC1_COMP_IRQn);
 367              		.loc 1 167 0
 368 0034 0C20     		movs	r0, #12
 369 0036 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 370              	.L16:
 168:cube/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 169:cube/Src/adc.c **** 
 170:cube/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 171:cube/Src/adc.c ****   }
 172:cube/Src/adc.c **** } 
 371              		.loc 1 172 0
 372 003a C046     		nop
 373 003c BD46     		mov	sp, r7
 374 003e 02B0     		add	sp, sp, #8
 375              		@ sp needed
 376 0040 80BD     		pop	{r7, pc}
 377              	.L18:
 378 0042 C046     		.align	2
 379              	.L17:
 380 0044 00240140 		.word	1073816576
 381 0048 00100240 		.word	1073876992
 382 004c FFFDFFFF 		.word	-513
 383              		.cfi_endproc
 384              	.LFE39:
 386              		.text
 387              	.Letext0:
 388              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 389              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 390              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 391              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 392              		.file 6 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 393              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 394              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 395              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 396              		.file 10 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/re
 397              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 398              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 399              		.file 13 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 400              		.file 14 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 401              		.file 15 "cube/Inc/adc.h"
ARM GAS  /tmp/ccnkXTIt.s 			page 11


ARM GAS  /tmp/ccnkXTIt.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
                            *COM*:000000000000004c hadc
                            *COM*:0000000000000044 hdma_adc
     /tmp/ccnkXTIt.s:18     .rodata:0000000000000000 $d
     /tmp/ccnkXTIt.s:22     .text.MX_ADC_Init:0000000000000000 $t
     /tmp/ccnkXTIt.s:29     .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
     /tmp/ccnkXTIt.s:168    .text.MX_ADC_Init:00000000000000cc $d
     /tmp/ccnkXTIt.s:175    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccnkXTIt.s:182    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccnkXTIt.s:312    .text.HAL_ADC_MspInit:00000000000000c0 $d
     /tmp/ccnkXTIt.s:321    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccnkXTIt.s:328    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccnkXTIt.s:380    .text.HAL_ADC_MspDeInit:0000000000000044 $d
                           .group:0000000000000000 wm4.0.b7c3d577b02d87ac381ee43eef398462
                           .group:0000000000000000 wm4.main.h.42.3939338cba6ab0a8b761d08be8206d51
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.b0c07d2233f75e3b04f03d95093d88ca
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
ARM GAS  /tmp/ccnkXTIt.s 			page 13


                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart.h.38.e5eada3cdf37ca88de33bd21ddd21a5e
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart_ex.h.38.9430c2ca5ec832677dbe7308c46115fd
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

UNDEFINED SYMBOLS
HAL_ADC_Init
_Error_Handler
HAL_ADC_ConfigChannel
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
