ARM GAS  /tmp/ccTdIOtv.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_ADC_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_ADC_Init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_ADC_Init:
  24              	.LFB37:
  25              		.file 1 "cube/Src/adc.c"
   1:cube/Src/adc.c **** /**
   2:cube/Src/adc.c ****   ******************************************************************************
   3:cube/Src/adc.c ****   * File Name          : ADC.c
   4:cube/Src/adc.c ****   * Description        : This file provides code for the configuration
   5:cube/Src/adc.c ****   *                      of the ADC instances.
   6:cube/Src/adc.c ****   ******************************************************************************
   7:cube/Src/adc.c ****   ** This notice applies to any and all portions of this file
   8:cube/Src/adc.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:cube/Src/adc.c ****   * USER CODE END. Other portions of this file, whether 
  10:cube/Src/adc.c ****   * inserted by the user or by software development tools
  11:cube/Src/adc.c ****   * are owned by their respective copyright owners.
  12:cube/Src/adc.c ****   *
  13:cube/Src/adc.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:cube/Src/adc.c ****   *
  15:cube/Src/adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:cube/Src/adc.c ****   * are permitted provided that the following conditions are met:
  17:cube/Src/adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:cube/Src/adc.c ****   *      this list of conditions and the following disclaimer.
  19:cube/Src/adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:cube/Src/adc.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:cube/Src/adc.c ****   *      and/or other materials provided with the distribution.
  22:cube/Src/adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:cube/Src/adc.c ****   *      may be used to endorse or promote products derived from this software
  24:cube/Src/adc.c ****   *      without specific prior written permission.
  25:cube/Src/adc.c ****   *
  26:cube/Src/adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:cube/Src/adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:cube/Src/adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:cube/Src/adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:cube/Src/adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:cube/Src/adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:cube/Src/adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:cube/Src/adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccTdIOtv.s 			page 2


  34:cube/Src/adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:cube/Src/adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:cube/Src/adc.c ****   *
  37:cube/Src/adc.c ****   ******************************************************************************
  38:cube/Src/adc.c ****   */
  39:cube/Src/adc.c **** 
  40:cube/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  41:cube/Src/adc.c **** #include "adc.h"
  42:cube/Src/adc.c **** 
  43:cube/Src/adc.c **** #include "gpio.h"
  44:cube/Src/adc.c **** #include "dma.h"
  45:cube/Src/adc.c **** 
  46:cube/Src/adc.c **** /* USER CODE BEGIN 0 */
  47:cube/Src/adc.c **** 
  48:cube/Src/adc.c **** /* USER CODE END 0 */
  49:cube/Src/adc.c **** 
  50:cube/Src/adc.c **** ADC_HandleTypeDef hadc;
  51:cube/Src/adc.c **** DMA_HandleTypeDef hdma_adc;
  52:cube/Src/adc.c **** 
  53:cube/Src/adc.c **** /* ADC init function */
  54:cube/Src/adc.c **** void MX_ADC_Init(void)
  55:cube/Src/adc.c **** {
  26              		.loc 1 55 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              		.cfi_def_cfa_offset 4
  32              		.cfi_offset 14, -4
  33 0002 85B0     		sub	sp, sp, #20
  34              		.cfi_def_cfa_offset 24
  56:cube/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig;
  57:cube/Src/adc.c **** 
  58:cube/Src/adc.c ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
  59:cube/Src/adc.c ****     */
  60:cube/Src/adc.c ****   hadc.Instance = ADC1;
  35              		.loc 1 60 0
  36 0004 2048     		ldr	r0, .L8
  37 0006 214B     		ldr	r3, .L8+4
  38 0008 0360     		str	r3, [r0]
  61:cube/Src/adc.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  39              		.loc 1 61 0
  40 000a 8023     		movs	r3, #128
  41 000c 1B06     		lsls	r3, r3, #24
  42 000e 4360     		str	r3, [r0, #4]
  62:cube/Src/adc.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
  43              		.loc 1 62 0
  44 0010 0023     		movs	r3, #0
  45 0012 8360     		str	r3, [r0, #8]
  63:cube/Src/adc.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  46              		.loc 1 63 0
  47 0014 C360     		str	r3, [r0, #12]
  64:cube/Src/adc.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
  48              		.loc 1 64 0
  49 0016 0122     		movs	r2, #1
  50 0018 0261     		str	r2, [r0, #16]
  65:cube/Src/adc.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
ARM GAS  /tmp/ccTdIOtv.s 			page 3


  51              		.loc 1 65 0
  52 001a 0421     		movs	r1, #4
  53 001c 4161     		str	r1, [r0, #20]
  66:cube/Src/adc.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
  54              		.loc 1 66 0
  55 001e 8361     		str	r3, [r0, #24]
  67:cube/Src/adc.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
  56              		.loc 1 67 0
  57 0020 C361     		str	r3, [r0, #28]
  68:cube/Src/adc.c ****   hadc.Init.ContinuousConvMode = ENABLE;
  58              		.loc 1 68 0
  59 0022 0262     		str	r2, [r0, #32]
  69:cube/Src/adc.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
  60              		.loc 1 69 0
  61 0024 4362     		str	r3, [r0, #36]
  70:cube/Src/adc.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  62              		.loc 1 70 0
  63 0026 C221     		movs	r1, #194
  64 0028 FF31     		adds	r1, r1, #255
  65 002a 8162     		str	r1, [r0, #40]
  71:cube/Src/adc.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  66              		.loc 1 71 0
  67 002c C362     		str	r3, [r0, #44]
  72:cube/Src/adc.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
  68              		.loc 1 72 0
  69 002e 0263     		str	r2, [r0, #48]
  73:cube/Src/adc.c ****   hadc.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  70              		.loc 1 73 0
  71 0030 4363     		str	r3, [r0, #52]
  74:cube/Src/adc.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
  72              		.loc 1 74 0
  73 0032 FFF7FEFF 		bl	HAL_ADC_Init
  74              	.LVL0:
  75 0036 0028     		cmp	r0, #0
  76 0038 16D1     		bne	.L5
  77              	.L2:
  75:cube/Src/adc.c ****   {
  76:cube/Src/adc.c ****     _Error_Handler(__FILE__, __LINE__);
  77:cube/Src/adc.c ****   }
  78:cube/Src/adc.c **** 
  79:cube/Src/adc.c ****     /**Configure for the selected ADC regular channel to be converted. 
  80:cube/Src/adc.c ****     */
  81:cube/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
  78              		.loc 1 81 0
  79 003a 0023     		movs	r3, #0
  80 003c 0193     		str	r3, [sp, #4]
  82:cube/Src/adc.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
  81              		.loc 1 82 0
  82 003e 8023     		movs	r3, #128
  83 0040 5B01     		lsls	r3, r3, #5
  84 0042 0293     		str	r3, [sp, #8]
  83:cube/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
  85              		.loc 1 83 0
  86 0044 0223     		movs	r3, #2
  87 0046 0393     		str	r3, [sp, #12]
  84:cube/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
  88              		.loc 1 84 0
ARM GAS  /tmp/ccTdIOtv.s 			page 4


  89 0048 01A9     		add	r1, sp, #4
  90 004a 0F48     		ldr	r0, .L8
  91 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  92              	.LVL1:
  93 0050 0028     		cmp	r0, #0
  94 0052 0ED1     		bne	.L6
  95              	.L3:
  85:cube/Src/adc.c ****   {
  86:cube/Src/adc.c ****     _Error_Handler(__FILE__, __LINE__);
  87:cube/Src/adc.c ****   }
  88:cube/Src/adc.c **** 
  89:cube/Src/adc.c ****     /**Configure for the selected ADC regular channel to be converted. 
  90:cube/Src/adc.c ****     */
  91:cube/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
  96              		.loc 1 91 0
  97 0054 0123     		movs	r3, #1
  98 0056 0193     		str	r3, [sp, #4]
  92:cube/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
  99              		.loc 1 92 0
 100 0058 01A9     		add	r1, sp, #4
 101 005a 0B48     		ldr	r0, .L8
 102 005c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 103              	.LVL2:
 104 0060 0028     		cmp	r0, #0
 105 0062 0BD1     		bne	.L7
 106              	.L1:
  93:cube/Src/adc.c ****   {
  94:cube/Src/adc.c ****     _Error_Handler(__FILE__, __LINE__);
  95:cube/Src/adc.c ****   }
  96:cube/Src/adc.c **** 
  97:cube/Src/adc.c **** }
 107              		.loc 1 97 0
 108 0064 05B0     		add	sp, sp, #20
 109              		@ sp needed
 110 0066 00BD     		pop	{pc}
 111              	.L5:
  76:cube/Src/adc.c ****   }
 112              		.loc 1 76 0
 113 0068 4C21     		movs	r1, #76
 114 006a 0948     		ldr	r0, .L8+8
 115 006c FFF7FEFF 		bl	_Error_Handler
 116              	.LVL3:
 117 0070 E3E7     		b	.L2
 118              	.L6:
  86:cube/Src/adc.c ****   }
 119              		.loc 1 86 0
 120 0072 5621     		movs	r1, #86
 121 0074 0648     		ldr	r0, .L8+8
 122 0076 FFF7FEFF 		bl	_Error_Handler
 123              	.LVL4:
 124 007a EBE7     		b	.L3
 125              	.L7:
  94:cube/Src/adc.c ****   }
 126              		.loc 1 94 0
 127 007c 5E21     		movs	r1, #94
 128 007e 0448     		ldr	r0, .L8+8
 129 0080 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /tmp/ccTdIOtv.s 			page 5


 130              	.LVL5:
 131              		.loc 1 97 0
 132 0084 EEE7     		b	.L1
 133              	.L9:
 134 0086 C046     		.align	2
 135              	.L8:
 136 0088 00000000 		.word	hadc
 137 008c 00240140 		.word	1073816576
 138 0090 00000000 		.word	.LC1
 139              		.cfi_endproc
 140              	.LFE37:
 142              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 143              		.align	1
 144              		.global	HAL_ADC_MspInit
 145              		.syntax unified
 146              		.code	16
 147              		.thumb_func
 148              		.fpu softvfp
 150              	HAL_ADC_MspInit:
 151              	.LFB38:
  98:cube/Src/adc.c **** 
  99:cube/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 100:cube/Src/adc.c **** {
 152              		.loc 1 100 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 24
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              	.LVL6:
 157 0000 70B5     		push	{r4, r5, r6, lr}
 158              		.cfi_def_cfa_offset 16
 159              		.cfi_offset 4, -16
 160              		.cfi_offset 5, -12
 161              		.cfi_offset 6, -8
 162              		.cfi_offset 14, -4
 163 0002 86B0     		sub	sp, sp, #24
 164              		.cfi_def_cfa_offset 40
 165 0004 0400     		movs	r4, r0
 101:cube/Src/adc.c **** 
 102:cube/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 103:cube/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 166              		.loc 1 103 0
 167 0006 1F4B     		ldr	r3, .L15
 168 0008 0268     		ldr	r2, [r0]
 169 000a 9A42     		cmp	r2, r3
 170 000c 01D0     		beq	.L13
 171              	.LVL7:
 172              	.L10:
 104:cube/Src/adc.c ****   {
 105:cube/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 106:cube/Src/adc.c **** 
 107:cube/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 108:cube/Src/adc.c ****     /* ADC1 clock enable */
 109:cube/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 110:cube/Src/adc.c ****   
 111:cube/Src/adc.c ****     /**ADC GPIO Configuration    
 112:cube/Src/adc.c ****     PA0     ------> ADC_IN0
 113:cube/Src/adc.c ****     PA1     ------> ADC_IN1 
ARM GAS  /tmp/ccTdIOtv.s 			page 6


 114:cube/Src/adc.c ****     */
 115:cube/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 116:cube/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 117:cube/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 118:cube/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 119:cube/Src/adc.c **** 
 120:cube/Src/adc.c ****     /* ADC1 DMA Init */
 121:cube/Src/adc.c ****     /* ADC Init */
 122:cube/Src/adc.c ****     hdma_adc.Instance = DMA1_Channel1;
 123:cube/Src/adc.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 124:cube/Src/adc.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 125:cube/Src/adc.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 126:cube/Src/adc.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 127:cube/Src/adc.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 128:cube/Src/adc.c ****     hdma_adc.Init.Mode = DMA_CIRCULAR;
 129:cube/Src/adc.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_HIGH;
 130:cube/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 131:cube/Src/adc.c ****     {
 132:cube/Src/adc.c ****       _Error_Handler(__FILE__, __LINE__);
 133:cube/Src/adc.c ****     }
 134:cube/Src/adc.c **** 
 135:cube/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc);
 136:cube/Src/adc.c **** 
 137:cube/Src/adc.c ****     /* ADC1 interrupt Init */
 138:cube/Src/adc.c ****     HAL_NVIC_SetPriority(ADC1_COMP_IRQn, 0, 0);
 139:cube/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC1_COMP_IRQn);
 140:cube/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 141:cube/Src/adc.c **** 
 142:cube/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 143:cube/Src/adc.c ****   }
 144:cube/Src/adc.c **** }
 173              		.loc 1 144 0
 174 000e 06B0     		add	sp, sp, #24
 175              		@ sp needed
 176              	.LVL8:
 177 0010 70BD     		pop	{r4, r5, r6, pc}
 178              	.LVL9:
 179              	.L13:
 180              	.LBB2:
 109:cube/Src/adc.c ****   
 181              		.loc 1 109 0
 182 0012 1D4B     		ldr	r3, .L15+4
 183 0014 9A69     		ldr	r2, [r3, #24]
 184 0016 8025     		movs	r5, #128
 185 0018 AD00     		lsls	r5, r5, #2
 186 001a 2A43     		orrs	r2, r5
 187 001c 9A61     		str	r2, [r3, #24]
 188 001e 9B69     		ldr	r3, [r3, #24]
 189 0020 2B40     		ands	r3, r5
 190 0022 0093     		str	r3, [sp]
 191 0024 009B     		ldr	r3, [sp]
 192              	.LBE2:
 115:cube/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 193              		.loc 1 115 0
 194 0026 0323     		movs	r3, #3
 195 0028 0193     		str	r3, [sp, #4]
 116:cube/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccTdIOtv.s 			page 7


 196              		.loc 1 116 0
 197 002a 0293     		str	r3, [sp, #8]
 117:cube/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 198              		.loc 1 117 0
 199 002c 0026     		movs	r6, #0
 200 002e 0396     		str	r6, [sp, #12]
 118:cube/Src/adc.c **** 
 201              		.loc 1 118 0
 202 0030 9020     		movs	r0, #144
 203              	.LVL10:
 204 0032 01A9     		add	r1, sp, #4
 205 0034 C005     		lsls	r0, r0, #23
 206 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 207              	.LVL11:
 122:cube/Src/adc.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 208              		.loc 1 122 0
 209 003a 1448     		ldr	r0, .L15+8
 210 003c 144B     		ldr	r3, .L15+12
 211 003e 0360     		str	r3, [r0]
 123:cube/Src/adc.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 212              		.loc 1 123 0
 213 0040 4660     		str	r6, [r0, #4]
 124:cube/Src/adc.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 214              		.loc 1 124 0
 215 0042 8660     		str	r6, [r0, #8]
 125:cube/Src/adc.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 216              		.loc 1 125 0
 217 0044 8023     		movs	r3, #128
 218 0046 C360     		str	r3, [r0, #12]
 126:cube/Src/adc.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 219              		.loc 1 126 0
 220 0048 0561     		str	r5, [r0, #16]
 127:cube/Src/adc.c ****     hdma_adc.Init.Mode = DMA_CIRCULAR;
 221              		.loc 1 127 0
 222 004a 8023     		movs	r3, #128
 223 004c 1B01     		lsls	r3, r3, #4
 224 004e 4361     		str	r3, [r0, #20]
 128:cube/Src/adc.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_HIGH;
 225              		.loc 1 128 0
 226 0050 2023     		movs	r3, #32
 227 0052 8361     		str	r3, [r0, #24]
 129:cube/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 228              		.loc 1 129 0
 229 0054 8023     		movs	r3, #128
 230 0056 9B01     		lsls	r3, r3, #6
 231 0058 C361     		str	r3, [r0, #28]
 130:cube/Src/adc.c ****     {
 232              		.loc 1 130 0
 233 005a FFF7FEFF 		bl	HAL_DMA_Init
 234              	.LVL12:
 235 005e 0028     		cmp	r0, #0
 236 0060 0BD1     		bne	.L14
 237              	.L12:
 135:cube/Src/adc.c **** 
 238              		.loc 1 135 0
 239 0062 0A4B     		ldr	r3, .L15+8
 240 0064 E363     		str	r3, [r4, #60]
ARM GAS  /tmp/ccTdIOtv.s 			page 8


 241 0066 5C62     		str	r4, [r3, #36]
 138:cube/Src/adc.c ****     HAL_NVIC_EnableIRQ(ADC1_COMP_IRQn);
 242              		.loc 1 138 0
 243 0068 0022     		movs	r2, #0
 244 006a 0021     		movs	r1, #0
 245 006c 0C20     		movs	r0, #12
 246 006e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 247              	.LVL13:
 139:cube/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 248              		.loc 1 139 0
 249 0072 0C20     		movs	r0, #12
 250 0074 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 251              	.LVL14:
 252              		.loc 1 144 0
 253 0078 C9E7     		b	.L10
 254              	.L14:
 132:cube/Src/adc.c ****     }
 255              		.loc 1 132 0
 256 007a 8421     		movs	r1, #132
 257 007c 0548     		ldr	r0, .L15+16
 258 007e FFF7FEFF 		bl	_Error_Handler
 259              	.LVL15:
 260 0082 EEE7     		b	.L12
 261              	.L16:
 262              		.align	2
 263              	.L15:
 264 0084 00240140 		.word	1073816576
 265 0088 00100240 		.word	1073876992
 266 008c 00000000 		.word	hdma_adc
 267 0090 08000240 		.word	1073872904
 268 0094 00000000 		.word	.LC1
 269              		.cfi_endproc
 270              	.LFE38:
 272              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 273              		.align	1
 274              		.global	HAL_ADC_MspDeInit
 275              		.syntax unified
 276              		.code	16
 277              		.thumb_func
 278              		.fpu softvfp
 280              	HAL_ADC_MspDeInit:
 281              	.LFB39:
 145:cube/Src/adc.c **** 
 146:cube/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 147:cube/Src/adc.c **** {
 282              		.loc 1 147 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              	.LVL16:
 287 0000 10B5     		push	{r4, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 4, -8
 290              		.cfi_offset 14, -4
 291 0002 0400     		movs	r4, r0
 148:cube/Src/adc.c **** 
 149:cube/Src/adc.c ****   if(adcHandle->Instance==ADC1)
ARM GAS  /tmp/ccTdIOtv.s 			page 9


 292              		.loc 1 149 0
 293 0004 0A4B     		ldr	r3, .L20
 294 0006 0268     		ldr	r2, [r0]
 295 0008 9A42     		cmp	r2, r3
 296 000a 00D0     		beq	.L19
 297              	.LVL17:
 298              	.L17:
 150:cube/Src/adc.c ****   {
 151:cube/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 152:cube/Src/adc.c **** 
 153:cube/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 154:cube/Src/adc.c ****     /* Peripheral clock disable */
 155:cube/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 156:cube/Src/adc.c ****   
 157:cube/Src/adc.c ****     /**ADC GPIO Configuration    
 158:cube/Src/adc.c ****     PA0     ------> ADC_IN0
 159:cube/Src/adc.c ****     PA1     ------> ADC_IN1 
 160:cube/Src/adc.c ****     */
 161:cube/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1);
 162:cube/Src/adc.c **** 
 163:cube/Src/adc.c ****     /* ADC1 DMA DeInit */
 164:cube/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 165:cube/Src/adc.c **** 
 166:cube/Src/adc.c ****     /* ADC1 interrupt Deinit */
 167:cube/Src/adc.c ****     HAL_NVIC_DisableIRQ(ADC1_COMP_IRQn);
 168:cube/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 169:cube/Src/adc.c **** 
 170:cube/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 171:cube/Src/adc.c ****   }
 172:cube/Src/adc.c **** } 
 299              		.loc 1 172 0
 300              		@ sp needed
 301              	.LVL18:
 302 000c 10BD     		pop	{r4, pc}
 303              	.LVL19:
 304              	.L19:
 155:cube/Src/adc.c ****   
 305              		.loc 1 155 0
 306 000e 094A     		ldr	r2, .L20+4
 307 0010 9369     		ldr	r3, [r2, #24]
 308 0012 0949     		ldr	r1, .L20+8
 309 0014 0B40     		ands	r3, r1
 310 0016 9361     		str	r3, [r2, #24]
 161:cube/Src/adc.c **** 
 311              		.loc 1 161 0
 312 0018 9020     		movs	r0, #144
 313              	.LVL20:
 314 001a 0321     		movs	r1, #3
 315 001c C005     		lsls	r0, r0, #23
 316 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 317              	.LVL21:
 164:cube/Src/adc.c **** 
 318              		.loc 1 164 0
 319 0022 E06B     		ldr	r0, [r4, #60]
 320 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 321              	.LVL22:
 167:cube/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
ARM GAS  /tmp/ccTdIOtv.s 			page 10


 322              		.loc 1 167 0
 323 0028 0C20     		movs	r0, #12
 324 002a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 325              	.LVL23:
 326              		.loc 1 172 0
 327 002e EDE7     		b	.L17
 328              	.L21:
 329              		.align	2
 330              	.L20:
 331 0030 00240140 		.word	1073816576
 332 0034 00100240 		.word	1073876992
 333 0038 FFFDFFFF 		.word	-513
 334              		.cfi_endproc
 335              	.LFE39:
 337              		.comm	hdma_adc,68,4
 338              		.comm	hadc,76,4
 339              		.section	.rodata.MX_ADC_Init.str1.4,"aMS",%progbits,1
 340              		.align	2
 341              	.LC1:
 342 0000 63756265 		.ascii	"cube/Src/adc.c\000"
 342      2F537263 
 342      2F616463 
 342      2E6300
 343              		.text
 344              	.Letext0:
 345              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 346              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 347              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 348              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 349              		.file 6 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 350              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 351              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 352              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 353              		.file 10 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/re
 354              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 355              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 356              		.file 13 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 357              		.file 14 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 358              		.file 15 "cube/Inc/adc.h"
 359              		.file 16 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 360              		.file 17 "cube/Inc/dma.h"
ARM GAS  /tmp/ccTdIOtv.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccTdIOtv.s:16     .text.MX_ADC_Init:0000000000000000 $t
     /tmp/ccTdIOtv.s:23     .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
     /tmp/ccTdIOtv.s:136    .text.MX_ADC_Init:0000000000000088 $d
                            *COM*:000000000000004c hadc
     /tmp/ccTdIOtv.s:143    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccTdIOtv.s:150    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccTdIOtv.s:264    .text.HAL_ADC_MspInit:0000000000000084 $d
                            *COM*:0000000000000044 hdma_adc
     /tmp/ccTdIOtv.s:273    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccTdIOtv.s:280    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccTdIOtv.s:331    .text.HAL_ADC_MspDeInit:0000000000000030 $d
     /tmp/ccTdIOtv.s:340    .rodata.MX_ADC_Init.str1.4:0000000000000000 $d
                           .group:0000000000000000 wm4.0.f4162676b8f623651f7a1199aa7e48f7
                           .group:0000000000000000 wm4.main.h.42.f591c98852cf8b31b9d28a7417223f7f
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.e02fa95cc55e74dee1039d0a6f374aae
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
ARM GAS  /tmp/ccTdIOtv.s 			page 12


                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
