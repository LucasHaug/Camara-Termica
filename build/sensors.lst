ARM GAS  /tmp/cc6qlACu.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"sensors.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.sensors_init,"ax",%progbits
  16              		.align	1
  17              		.global	sensors_init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	sensors_init:
  24              	.LFB37:
  25              		.file 1 "src/sensors.c"
   1:src/sensors.c **** #include "adc.h"
   2:src/sensors.c **** #include "dma.h"
   3:src/sensors.c **** 
   4:src/sensors.c **** #include "sensors.h"
   5:src/sensors.c **** 
   6:src/sensors.c **** #define OLD_VALUE_WEIGHT 3
   7:src/sensors.c **** #define NEW_VALUE_WEIGHT 1
   8:src/sensors.c **** 
   9:src/sensors.c **** //@ calibration indexs
  10:src/sensors.c **** static float a = 0;
  11:src/sensors.c **** static float b = 0;
  12:src/sensors.c **** 
  13:src/sensors.c **** uint32_t temperature[T_ADC_CHANNELS] = {0};
  14:src/sensors.c **** //@ Mudar para adicionar o senosr de umidade + setar pino PA4
  15:src/sensors.c **** // uint32_t uint32_t humidity[H_ADC_CHANNELS] = {0};
  16:src/sensors.c **** 
  17:src/sensors.c **** uint32_t adc_buffer[ADC_BUFFER_SIZE] = {0};
  18:src/sensors.c **** 
  19:src/sensors.c **** void sensors_init(void) {
  26              		.loc 1 19 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
  20:src/sensors.c ****     MX_DMA_Init();
  34              		.loc 1 20 0
  35 0002 FFF7FEFF 		bl	MX_DMA_Init
  36              	.LVL0:
  21:src/sensors.c ****     MX_ADC_Init();
  37              		.loc 1 21 0
ARM GAS  /tmp/cc6qlACu.s 			page 2


  38 0006 FFF7FEFF 		bl	MX_ADC_Init
  39              	.LVL1:
  22:src/sensors.c **** 
  23:src/sensors.c ****     HAL_ADC_Start_DMA(&hadc, adc_buffer, ADC_BUFFER_SIZE);
  40              		.loc 1 23 0
  41 000a 8022     		movs	r2, #128
  42 000c 5200     		lsls	r2, r2, #1
  43 000e 0249     		ldr	r1, .L2
  44 0010 0248     		ldr	r0, .L2+4
  45 0012 FFF7FEFF 		bl	HAL_ADC_Start_DMA
  46              	.LVL2:
  24:src/sensors.c **** }
  47              		.loc 1 24 0
  48              		@ sp needed
  49 0016 10BD     		pop	{r4, pc}
  50              	.L3:
  51              		.align	2
  52              	.L2:
  53 0018 00000000 		.word	adc_buffer
  54 001c 00000000 		.word	hadc
  55              		.cfi_endproc
  56              	.LFE37:
  58              		.section	.text.calibrate_sensors,"ax",%progbits
  59              		.align	1
  60              		.global	calibrate_sensors
  61              		.syntax unified
  62              		.code	16
  63              		.thumb_func
  64              		.fpu softvfp
  66              	calibrate_sensors:
  67              	.LFB38:
  25:src/sensors.c **** 
  26:src/sensors.c **** void calibrate_sensors(float low_temp_ref, float high_temp_ref) {
  68              		.loc 1 26 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73              	.LVL3:
  27:src/sensors.c ****     float low_reading;
  28:src/sensors.c ****     float high_reading;
  29:src/sensors.c ****     float low_diff;
  30:src/sensors.c ****     float high_diff;
  31:src/sensors.c ****     return;
  32:src/sensors.c **** 
  33:src/sensors.c **** }
  74              		.loc 1 33 0
  75              		@ sp needed
  76 0000 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE38:
  80              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
  81              		.align	1
  82              		.global	HAL_ADC_ConvCpltCallback
  83              		.syntax unified
  84              		.code	16
  85              		.thumb_func
ARM GAS  /tmp/cc6qlACu.s 			page 3


  86              		.fpu softvfp
  88              	HAL_ADC_ConvCpltCallback:
  89              	.LFB39:
  34:src/sensors.c **** 
  35:src/sensors.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc) {
  90              		.loc 1 35 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 16
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              	.LVL4:
  95 0000 30B5     		push	{r4, r5, lr}
  96              		.cfi_def_cfa_offset 12
  97              		.cfi_offset 4, -12
  98              		.cfi_offset 5, -8
  99              		.cfi_offset 14, -4
 100 0002 85B0     		sub	sp, sp, #20
 101              		.cfi_def_cfa_offset 32
  36:src/sensors.c ****     uint32_t val[T_ADC_CHANNELS + H_ADC_CHANNELS] = {0};
 102              		.loc 1 36 0
 103 0004 0822     		movs	r2, #8
 104 0006 0021     		movs	r1, #0
 105 0008 02A8     		add	r0, sp, #8
 106              	.LVL5:
 107 000a FFF7FEFF 		bl	memset
 108              	.LVL6:
 109              	.LBB2:
  37:src/sensors.c **** 
  38:src/sensors.c ****     for (int i = 0; i < ADC_BUFFER_SIZE / (T_ADC_CHANNELS + H_ADC_CHANNELS); i++) {
 110              		.loc 1 38 0
 111 000e 0020     		movs	r0, #0
 112 0010 10E0     		b	.L6
 113              	.LVL7:
 114              	.L7:
 115              	.LBB3:
  39:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
  40:src/sensors.c ****             val[j] += adc_buffer[(T_ADC_CHANNELS + H_ADC_CHANNELS) * i + j];
 116              		.loc 1 40 0 discriminator 3
 117 0012 4200     		lsls	r2, r0, #1
 118 0014 D218     		adds	r2, r2, r3
 119 0016 9200     		lsls	r2, r2, #2
 120 0018 1749     		ldr	r1, .L15
 121 001a 5258     		ldr	r2, [r2, r1]
 122 001c 9900     		lsls	r1, r3, #2
 123 001e 02AC     		add	r4, sp, #8
 124 0020 0C59     		ldr	r4, [r1, r4]
 125 0022 0194     		str	r4, [sp, #4]
 126 0024 A446     		mov	ip, r4
 127 0026 6244     		add	r2, r2, ip
 128 0028 02AC     		add	r4, sp, #8
 129 002a 0A51     		str	r2, [r1, r4]
  39:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
 130              		.loc 1 39 0 discriminator 3
 131 002c 0133     		adds	r3, r3, #1
 132              	.LVL8:
 133              	.L8:
  39:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
 134              		.loc 1 39 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc6qlACu.s 			page 4


 135 002e 012B     		cmp	r3, #1
 136 0030 EFDD     		ble	.L7
 137              	.LBE3:
  38:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
 138              		.loc 1 38 0 is_stmt 1 discriminator 2
 139 0032 0130     		adds	r0, r0, #1
 140              	.LVL9:
 141              	.L6:
  38:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
 142              		.loc 1 38 0 is_stmt 0 discriminator 1
 143 0034 7F28     		cmp	r0, #127
 144 0036 01DC     		bgt	.L14
 145              	.LBB4:
  39:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
 146              		.loc 1 39 0 is_stmt 1
 147 0038 0023     		movs	r3, #0
 148 003a F8E7     		b	.L8
 149              	.L14:
 150              	.LBE4:
 151              	.LBE2:
 152              	.LBB5:
  41:src/sensors.c ****         }
  42:src/sensors.c ****     }
  43:src/sensors.c **** 
  44:src/sensors.c ****     for (int i = 0; i < (T_ADC_CHANNELS + H_ADC_CHANNELS); i++) {
 153              		.loc 1 44 0
 154 003c 0023     		movs	r3, #0
 155 003e 07E0     		b	.L9
 156              	.LVL10:
 157              	.L10:
  45:src/sensors.c ****         val[i] /= ADC_BUFFER_SIZE / (T_ADC_CHANNELS + H_ADC_CHANNELS);
 158              		.loc 1 45 0 discriminator 3
 159 0040 9900     		lsls	r1, r3, #2
 160 0042 02AA     		add	r2, sp, #8
 161 0044 8A58     		ldr	r2, [r1, r2]
 162 0046 0192     		str	r2, [sp, #4]
 163 0048 D209     		lsrs	r2, r2, #7
 164 004a 02A8     		add	r0, sp, #8
 165 004c 0A50     		str	r2, [r1, r0]
  44:src/sensors.c ****         val[i] /= ADC_BUFFER_SIZE / (T_ADC_CHANNELS + H_ADC_CHANNELS);
 166              		.loc 1 44 0 discriminator 3
 167 004e 0133     		adds	r3, r3, #1
 168              	.LVL11:
 169              	.L9:
  44:src/sensors.c ****         val[i] /= ADC_BUFFER_SIZE / (T_ADC_CHANNELS + H_ADC_CHANNELS);
 170              		.loc 1 44 0 is_stmt 0 discriminator 1
 171 0050 012B     		cmp	r3, #1
 172 0052 F5DD     		ble	.L10
 173              	.LBE5:
 174              	.LBB6:
  46:src/sensors.c ****     }
  47:src/sensors.c **** 
  48:src/sensors.c ****     for (int i = 0; i < T_ADC_CHANNELS; i++) {
 175              		.loc 1 48 0 is_stmt 1
 176 0054 0022     		movs	r2, #0
 177 0056 0AE0     		b	.L11
 178              	.LVL12:
ARM GAS  /tmp/cc6qlACu.s 			page 5


 179              	.L12:
  49:src/sensors.c ****         temperature[i] = (NEW_VALUE_WEIGHT * val[i] + OLD_VALUE_WEIGHT * temperature[i]) /
 180              		.loc 1 49 0 discriminator 3
 181 0058 9100     		lsls	r1, r2, #2
 182 005a 02AB     		add	r3, sp, #8
 183 005c CB58     		ldr	r3, [r1, r3]
 184 005e 074C     		ldr	r4, .L15+4
 185 0060 0D59     		ldr	r5, [r1, r4]
 186 0062 6800     		lsls	r0, r5, #1
 187 0064 4019     		adds	r0, r0, r5
 188 0066 1B18     		adds	r3, r3, r0
 189 0068 9B08     		lsrs	r3, r3, #2
 190 006a 0B51     		str	r3, [r1, r4]
  48:src/sensors.c ****         temperature[i] = (NEW_VALUE_WEIGHT * val[i] + OLD_VALUE_WEIGHT * temperature[i]) /
 191              		.loc 1 48 0 discriminator 3
 192 006c 0132     		adds	r2, r2, #1
 193              	.LVL13:
 194              	.L11:
  48:src/sensors.c ****         temperature[i] = (NEW_VALUE_WEIGHT * val[i] + OLD_VALUE_WEIGHT * temperature[i]) /
 195              		.loc 1 48 0 is_stmt 0 discriminator 1
 196 006e 012A     		cmp	r2, #1
 197 0070 F2DD     		ble	.L12
 198              	.LBE6:
  50:src/sensors.c ****                          (NEW_VALUE_WEIGHT + OLD_VALUE_WEIGHT);
  51:src/sensors.c ****     }
  52:src/sensors.c ****     //@ Mudar para adicionar o senosr de umidade + setar pino PA4
  53:src/sensors.c ****     // humidity = val[T_ADC_CHANNELS - 1];
  54:src/sensors.c **** }
 199              		.loc 1 54 0 is_stmt 1
 200 0072 05B0     		add	sp, sp, #20
 201              		@ sp needed
 202 0074 30BD     		pop	{r4, r5, pc}
 203              	.L16:
 204 0076 C046     		.align	2
 205              	.L15:
 206 0078 00000000 		.word	adc_buffer
 207 007c 00000000 		.word	.LANCHOR0
 208              		.cfi_endproc
 209              	.LFE39:
 211              		.global	adc_buffer
 212              		.global	temperature
 213              		.section	.bss.adc_buffer,"aw",%nobits
 214              		.align	2
 217              	adc_buffer:
 218 0000 00000000 		.space	1024
 218      00000000 
 218      00000000 
 218      00000000 
 218      00000000 
 219              		.section	.bss.temperature,"aw",%nobits
 220              		.align	2
 221              		.set	.LANCHOR0,. + 0
 224              	temperature:
 225 0000 00000000 		.space	8
 225      00000000 
 226              		.text
 227              	.Letext0:
ARM GAS  /tmp/cc6qlACu.s 			page 6


 228              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 229              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 230              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 231              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 232              		.file 6 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 233              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 234              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 235              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/ree
 236              		.file 10 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 237              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 238              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 239              		.file 13 "cube/Inc/adc.h"
 240              		.file 14 "inc/sensors.h"
 241              		.file 15 "cube/Inc/dma.h"
 242              		.file 16 "<built-in>"
ARM GAS  /tmp/cc6qlACu.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sensors.c
     /tmp/cc6qlACu.s:16     .text.sensors_init:0000000000000000 $t
     /tmp/cc6qlACu.s:23     .text.sensors_init:0000000000000000 sensors_init
     /tmp/cc6qlACu.s:53     .text.sensors_init:0000000000000018 $d
     /tmp/cc6qlACu.s:217    .bss.adc_buffer:0000000000000000 adc_buffer
     /tmp/cc6qlACu.s:59     .text.calibrate_sensors:0000000000000000 $t
     /tmp/cc6qlACu.s:66     .text.calibrate_sensors:0000000000000000 calibrate_sensors
     /tmp/cc6qlACu.s:81     .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cc6qlACu.s:88     .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cc6qlACu.s:206    .text.HAL_ADC_ConvCpltCallback:0000000000000078 $d
     /tmp/cc6qlACu.s:224    .bss.temperature:0000000000000000 temperature
     /tmp/cc6qlACu.s:214    .bss.adc_buffer:0000000000000000 $d
     /tmp/cc6qlACu.s:220    .bss.temperature:0000000000000000 $d
                           .group:0000000000000000 wm4.0.f4162676b8f623651f7a1199aa7e48f7
                           .group:0000000000000000 wm4.main.h.42.f591c98852cf8b31b9d28a7417223f7f
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.e02fa95cc55e74dee1039d0a6f374aae
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
ARM GAS  /tmp/cc6qlACu.s 			page 8


                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df
                           .group:0000000000000000 wm4.sensors.h.2.00432fce449e2e33197277736b8d3c92

UNDEFINED SYMBOLS
MX_DMA_Init
MX_ADC_Init
HAL_ADC_Start_DMA
hadc
memset
