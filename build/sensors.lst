ARM GAS  /tmp/ccYPPnbk.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"sensors.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.bss.a,"aw",%nobits
  16              		.align	2
  19              	a:
  20 0000 00000000 		.space	4
  21              		.section	.bss.b,"aw",%nobits
  22              		.align	2
  25              	b:
  26 0000 00000000 		.space	4
  27              		.global	temperature
  28              		.section	.bss.temperature,"aw",%nobits
  29              		.align	2
  32              	temperature:
  33 0000 00000000 		.space	8
  33      00000000 
  34              		.global	humidity
  35              		.section	.bss.humidity,"aw",%nobits
  36              		.align	3
  39              	humidity:
  40 0000 00000000 		.space	8
  40      00000000 
  41              		.global	adc_buffer
  42              		.section	.bss.adc_buffer,"aw",%nobits
  43              		.align	2
  46              	adc_buffer:
  47 0000 00000000 		.space	1536
  47      00000000 
  47      00000000 
  47      00000000 
  47      00000000 
  48              		.section	.text.sensors_init,"ax",%progbits
  49              		.align	1
  50              		.global	sensors_init
  51              		.syntax unified
  52              		.code	16
  53              		.thumb_func
  54              		.fpu softvfp
  56              	sensors_init:
  57              	.LFB37:
  58              		.file 1 "src/sensors.c"
   1:src/sensors.c **** #include <string.h>
   2:src/sensors.c **** 
   3:src/sensors.c **** #include "adc.h"
   4:src/sensors.c **** #include "dma.h"
ARM GAS  /tmp/ccYPPnbk.s 			page 2


   5:src/sensors.c **** 
   6:src/sensors.c **** #include "mcu.h"
   7:src/sensors.c **** #include "sensors.h"
   8:src/sensors.c **** 
   9:src/sensors.c **** #define OLD_VALUE_WEIGHT 3
  10:src/sensors.c **** #define NEW_VALUE_WEIGHT 1
  11:src/sensors.c **** 
  12:src/sensors.c **** //@ calibration indexs
  13:src/sensors.c **** static float a = 0;
  14:src/sensors.c **** static float b = 0;
  15:src/sensors.c **** 
  16:src/sensors.c **** uint32_t temperature[T_ADC_CHANNELS] = {0};
  17:src/sensors.c **** //@ Mudar para adicionar o senosr de umidade + setar pino PA4
  18:src/sensors.c **** uint64_t humidity[H_ADC_CHANNELS] = {0};
  19:src/sensors.c **** 
  20:src/sensors.c **** uint32_t adc_buffer[ADC_BUFFER_SIZE] = {0};
  21:src/sensors.c **** 
  22:src/sensors.c **** void sensors_init(void) {
  59              		.loc 1 22 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63 0000 80B5     		push	{r7, lr}
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  23:src/sensors.c ****     MX_DMA_Init();
  69              		.loc 1 23 0
  70 0004 FFF7FEFF 		bl	MX_DMA_Init
  24:src/sensors.c ****     MX_ADC_Init();
  71              		.loc 1 24 0
  72 0008 FFF7FEFF 		bl	MX_ADC_Init
  25:src/sensors.c **** 
  26:src/sensors.c ****     HAL_ADC_Start_DMA(&hadc, adc_buffer, ADC_BUFFER_SIZE);
  73              		.loc 1 26 0
  74 000c C023     		movs	r3, #192
  75 000e 5A00     		lsls	r2, r3, #1
  76 0010 0349     		ldr	r1, .L2
  77 0012 044B     		ldr	r3, .L2+4
  78 0014 1800     		movs	r0, r3
  79 0016 FFF7FEFF 		bl	HAL_ADC_Start_DMA
  27:src/sensors.c **** }
  80              		.loc 1 27 0
  81 001a C046     		nop
  82 001c BD46     		mov	sp, r7
  83              		@ sp needed
  84 001e 80BD     		pop	{r7, pc}
  85              	.L3:
  86              		.align	2
  87              	.L2:
  88 0020 00000000 		.word	adc_buffer
  89 0024 00000000 		.word	hadc
  90              		.cfi_endproc
  91              	.LFE37:
  93              		.global	__aeabi_fsub
ARM GAS  /tmp/ccYPPnbk.s 			page 3


  94              		.section	.text.calibrate_sensors,"ax",%progbits
  95              		.align	1
  96              		.global	calibrate_sensors
  97              		.syntax unified
  98              		.code	16
  99              		.thumb_func
 100              		.fpu softvfp
 102              	calibrate_sensors:
 103              	.LFB38:
  28:src/sensors.c **** 
  29:src/sensors.c **** void calibrate_sensors(float low_temp_ref, float high_temp_ref) {
 104              		.loc 1 29 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 24
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 86B0     		sub	sp, sp, #24
 113              		.cfi_def_cfa_offset 32
 114 0004 00AF     		add	r7, sp, #0
 115              		.cfi_def_cfa_register 7
 116 0006 7860     		str	r0, [r7, #4]
 117 0008 3960     		str	r1, [r7]
  30:src/sensors.c ****     float low_reading;
  31:src/sensors.c ****     float high_reading;
  32:src/sensors.c ****     float low_diff = low_reading - low_temp_ref;
 118              		.loc 1 32 0
 119 000a 7968     		ldr	r1, [r7, #4]
 120 000c 7869     		ldr	r0, [r7, #20]
 121 000e FFF7FEFF 		bl	__aeabi_fsub
 122              	.LVL0:
 123 0012 031C     		adds	r3, r0, #0
 124 0014 3B61     		str	r3, [r7, #16]
  33:src/sensors.c ****     float high_diff = high_reading - high_temp_ref;
 125              		.loc 1 33 0
 126 0016 3968     		ldr	r1, [r7]
 127 0018 F868     		ldr	r0, [r7, #12]
 128 001a FFF7FEFF 		bl	__aeabi_fsub
 129              	.LVL1:
 130 001e 031C     		adds	r3, r0, #0
 131 0020 BB60     		str	r3, [r7, #8]
  34:src/sensors.c ****     b = high_diff - low_diff;
 132              		.loc 1 34 0
 133 0022 3969     		ldr	r1, [r7, #16]
 134 0024 B868     		ldr	r0, [r7, #8]
 135 0026 FFF7FEFF 		bl	__aeabi_fsub
 136              	.LVL2:
 137 002a 031C     		adds	r3, r0, #0
 138 002c 1A1C     		adds	r2, r3, #0
 139 002e 044B     		ldr	r3, .L5
 140 0030 1A60     		str	r2, [r3]
  35:src/sensors.c ****     a = 0;
 141              		.loc 1 35 0
 142 0032 044B     		ldr	r3, .L5+4
 143 0034 0022     		movs	r2, #0
ARM GAS  /tmp/ccYPPnbk.s 			page 4


 144 0036 1A60     		str	r2, [r3]
  36:src/sensors.c **** }
 145              		.loc 1 36 0
 146 0038 C046     		nop
 147 003a BD46     		mov	sp, r7
 148 003c 06B0     		add	sp, sp, #24
 149              		@ sp needed
 150 003e 80BD     		pop	{r7, pc}
 151              	.L6:
 152              		.align	2
 153              	.L5:
 154 0040 00000000 		.word	b
 155 0044 00000000 		.word	a
 156              		.cfi_endproc
 157              	.LFE38:
 159              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 160              		.align	1
 161              		.global	HAL_ADC_ConvCpltCallback
 162              		.syntax unified
 163              		.code	16
 164              		.thumb_func
 165              		.fpu softvfp
 167              	HAL_ADC_ConvCpltCallback:
 168              	.LFB39:
  37:src/sensors.c **** 
  38:src/sensors.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc) {
 169              		.loc 1 38 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 48
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 174              		.cfi_def_cfa_offset 20
 175              		.cfi_offset 4, -20
 176              		.cfi_offset 5, -16
 177              		.cfi_offset 6, -12
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 8DB0     		sub	sp, sp, #52
 181              		.cfi_def_cfa_offset 72
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 184 0006 F860     		str	r0, [r7, #12]
  39:src/sensors.c ****     uint32_t val[T_ADC_CHANNELS + H_ADC_CHANNELS] = {0};
 185              		.loc 1 39 0
 186 0008 0C23     		movs	r3, #12
 187 000a 0822     		movs	r2, #8
 188 000c 9446     		mov	ip, r2
 189 000e BC44     		add	ip, ip, r7
 190 0010 6344     		add	r3, r3, ip
 191 0012 1800     		movs	r0, r3
 192 0014 0C23     		movs	r3, #12
 193 0016 1A00     		movs	r2, r3
 194 0018 0021     		movs	r1, #0
 195 001a FFF7FEFF 		bl	memset
 196              	.LBB2:
  40:src/sensors.c **** 
  41:src/sensors.c ****     for (int i = 0; i < ADC_BUFFER_SIZE / (T_ADC_CHANNELS + H_ADC_CHANNELS); i++) {
ARM GAS  /tmp/ccYPPnbk.s 			page 5


 197              		.loc 1 41 0
 198 001e 0023     		movs	r3, #0
 199 0020 FB62     		str	r3, [r7, #44]
 200 0022 21E0     		b	.L8
 201              	.L11:
 202              	.LBB3:
  42:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
 203              		.loc 1 42 0
 204 0024 0023     		movs	r3, #0
 205 0026 BB62     		str	r3, [r7, #40]
 206 0028 18E0     		b	.L9
 207              	.L10:
  43:src/sensors.c ****             val[j] += adc_buffer[(T_ADC_CHANNELS + H_ADC_CHANNELS) * i + j];
 208              		.loc 1 43 0 discriminator 3
 209 002a 0C20     		movs	r0, #12
 210 002c 0826     		movs	r6, #8
 211 002e BB19     		adds	r3, r7, r6
 212 0030 1B18     		adds	r3, r3, r0
 213 0032 BA6A     		ldr	r2, [r7, #40]
 214 0034 9200     		lsls	r2, r2, #2
 215 0036 D158     		ldr	r1, [r2, r3]
 216 0038 FA6A     		ldr	r2, [r7, #44]
 217 003a 1300     		movs	r3, r2
 218 003c 5B00     		lsls	r3, r3, #1
 219 003e 9A18     		adds	r2, r3, r2
 220 0040 BB6A     		ldr	r3, [r7, #40]
 221 0042 D218     		adds	r2, r2, r3
 222 0044 314B     		ldr	r3, .L16
 223 0046 9200     		lsls	r2, r2, #2
 224 0048 D358     		ldr	r3, [r2, r3]
 225 004a C918     		adds	r1, r1, r3
 226 004c BB19     		adds	r3, r7, r6
 227 004e 1B18     		adds	r3, r3, r0
 228 0050 BA6A     		ldr	r2, [r7, #40]
 229 0052 9200     		lsls	r2, r2, #2
 230 0054 D150     		str	r1, [r2, r3]
  42:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
 231              		.loc 1 42 0 discriminator 3
 232 0056 BB6A     		ldr	r3, [r7, #40]
 233 0058 0133     		adds	r3, r3, #1
 234 005a BB62     		str	r3, [r7, #40]
 235              	.L9:
  42:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
 236              		.loc 1 42 0 is_stmt 0 discriminator 1
 237 005c BB6A     		ldr	r3, [r7, #40]
 238 005e 022B     		cmp	r3, #2
 239 0060 E3DD     		ble	.L10
 240              	.LBE3:
  41:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
 241              		.loc 1 41 0 is_stmt 1 discriminator 2
 242 0062 FB6A     		ldr	r3, [r7, #44]
 243 0064 0133     		adds	r3, r3, #1
 244 0066 FB62     		str	r3, [r7, #44]
 245              	.L8:
  41:src/sensors.c ****         for (int j = 0; j < (T_ADC_CHANNELS + H_ADC_CHANNELS); j++) {
 246              		.loc 1 41 0 is_stmt 0 discriminator 1
 247 0068 FB6A     		ldr	r3, [r7, #44]
ARM GAS  /tmp/ccYPPnbk.s 			page 6


 248 006a 7F2B     		cmp	r3, #127
 249 006c DADD     		ble	.L11
 250              	.LBE2:
 251              	.LBB4:
  44:src/sensors.c ****         }
  45:src/sensors.c ****     }
  46:src/sensors.c **** 
  47:src/sensors.c ****     for (int i = 0; i < (T_ADC_CHANNELS + H_ADC_CHANNELS); i++) {
 252              		.loc 1 47 0 is_stmt 1
 253 006e 0023     		movs	r3, #0
 254 0070 7B62     		str	r3, [r7, #36]
 255 0072 0FE0     		b	.L12
 256              	.L13:
  48:src/sensors.c ****         val[i] /= ADC_BUFFER_SIZE / (T_ADC_CHANNELS + H_ADC_CHANNELS);
 257              		.loc 1 48 0 discriminator 3
 258 0074 0C20     		movs	r0, #12
 259 0076 0826     		movs	r6, #8
 260 0078 BB19     		adds	r3, r7, r6
 261 007a 1B18     		adds	r3, r3, r0
 262 007c 7A6A     		ldr	r2, [r7, #36]
 263 007e 9200     		lsls	r2, r2, #2
 264 0080 D358     		ldr	r3, [r2, r3]
 265 0082 D909     		lsrs	r1, r3, #7
 266 0084 BB19     		adds	r3, r7, r6
 267 0086 1B18     		adds	r3, r3, r0
 268 0088 7A6A     		ldr	r2, [r7, #36]
 269 008a 9200     		lsls	r2, r2, #2
 270 008c D150     		str	r1, [r2, r3]
  47:src/sensors.c ****         val[i] /= ADC_BUFFER_SIZE / (T_ADC_CHANNELS + H_ADC_CHANNELS);
 271              		.loc 1 47 0 discriminator 3
 272 008e 7B6A     		ldr	r3, [r7, #36]
 273 0090 0133     		adds	r3, r3, #1
 274 0092 7B62     		str	r3, [r7, #36]
 275              	.L12:
  47:src/sensors.c ****         val[i] /= ADC_BUFFER_SIZE / (T_ADC_CHANNELS + H_ADC_CHANNELS);
 276              		.loc 1 47 0 is_stmt 0 discriminator 1
 277 0094 7B6A     		ldr	r3, [r7, #36]
 278 0096 022B     		cmp	r3, #2
 279 0098 ECDD     		ble	.L13
 280              	.LBE4:
 281              	.LBB5:
  49:src/sensors.c ****     }
  50:src/sensors.c **** 
  51:src/sensors.c ****     for (int i = 0; i < T_ADC_CHANNELS; i++) {
 282              		.loc 1 51 0 is_stmt 1
 283 009a 0023     		movs	r3, #0
 284 009c 3B62     		str	r3, [r7, #32]
 285 009e 17E0     		b	.L14
 286              	.L15:
  52:src/sensors.c ****         temperature[i] =
  53:src/sensors.c ****             (NEW_VALUE_WEIGHT * val[i] + OLD_VALUE_WEIGHT * temperature[i]) / (NEW_VALUE_WEIGHT + O
 287              		.loc 1 53 0 discriminator 3
 288 00a0 0C23     		movs	r3, #12
 289 00a2 0822     		movs	r2, #8
 290 00a4 9446     		mov	ip, r2
 291 00a6 BC44     		add	ip, ip, r7
 292 00a8 6344     		add	r3, r3, ip
ARM GAS  /tmp/ccYPPnbk.s 			page 7


 293 00aa 3A6A     		ldr	r2, [r7, #32]
 294 00ac 9200     		lsls	r2, r2, #2
 295 00ae D158     		ldr	r1, [r2, r3]
 296 00b0 174B     		ldr	r3, .L16+4
 297 00b2 3A6A     		ldr	r2, [r7, #32]
 298 00b4 9200     		lsls	r2, r2, #2
 299 00b6 D258     		ldr	r2, [r2, r3]
 300 00b8 1300     		movs	r3, r2
 301 00ba 5B00     		lsls	r3, r3, #1
 302 00bc 9B18     		adds	r3, r3, r2
 303 00be CB18     		adds	r3, r1, r3
 304 00c0 9908     		lsrs	r1, r3, #2
  52:src/sensors.c ****         temperature[i] =
 305              		.loc 1 52 0 discriminator 3
 306 00c2 134B     		ldr	r3, .L16+4
 307 00c4 3A6A     		ldr	r2, [r7, #32]
 308 00c6 9200     		lsls	r2, r2, #2
 309 00c8 D150     		str	r1, [r2, r3]
  51:src/sensors.c ****         temperature[i] =
 310              		.loc 1 51 0 discriminator 3
 311 00ca 3B6A     		ldr	r3, [r7, #32]
 312 00cc 0133     		adds	r3, r3, #1
 313 00ce 3B62     		str	r3, [r7, #32]
 314              	.L14:
  51:src/sensors.c ****         temperature[i] =
 315              		.loc 1 51 0 is_stmt 0 discriminator 1
 316 00d0 3B6A     		ldr	r3, [r7, #32]
 317 00d2 012B     		cmp	r3, #1
 318 00d4 E4DD     		ble	.L15
 319              	.LBE5:
  54:src/sensors.c ****     }
  55:src/sensors.c ****     //@ Mudar para adicionar o senosr de umidade + setar pino PA4
  56:src/sensors.c ****     humidity[0] = val[T_ADC_CHANNELS - 1];
 320              		.loc 1 56 0 is_stmt 1
 321 00d6 0C23     		movs	r3, #12
 322 00d8 0822     		movs	r2, #8
 323 00da 9446     		mov	ip, r2
 324 00dc BC44     		add	ip, ip, r7
 325 00de 6344     		add	r3, r3, ip
 326 00e0 5B68     		ldr	r3, [r3, #4]
 327 00e2 3B60     		str	r3, [r7]
 328 00e4 0023     		movs	r3, #0
 329 00e6 7B60     		str	r3, [r7, #4]
 330 00e8 0A4B     		ldr	r3, .L16+8
 331 00ea 3968     		ldr	r1, [r7]
 332 00ec 7A68     		ldr	r2, [r7, #4]
 333 00ee 1960     		str	r1, [r3]
 334 00f0 5A60     		str	r2, [r3, #4]
  57:src/sensors.c ****     humidity[0] = humidity[0] >> 32;
 335              		.loc 1 57 0
 336 00f2 084B     		ldr	r3, .L16+8
 337 00f4 1A68     		ldr	r2, [r3]
 338 00f6 5B68     		ldr	r3, [r3, #4]
 339 00f8 1C00     		lsrs	r4, r3, #0
 340 00fa 0023     		movs	r3, #0
 341 00fc 1D00     		movs	r5, r3
 342 00fe 054B     		ldr	r3, .L16+8
ARM GAS  /tmp/ccYPPnbk.s 			page 8


 343 0100 1C60     		str	r4, [r3]
 344 0102 5D60     		str	r5, [r3, #4]
  58:src/sensors.c **** }
 345              		.loc 1 58 0
 346 0104 C046     		nop
 347 0106 BD46     		mov	sp, r7
 348 0108 0DB0     		add	sp, sp, #52
 349              		@ sp needed
 350 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 351              	.L17:
 352              		.align	2
 353              	.L16:
 354 010c 00000000 		.word	adc_buffer
 355 0110 00000000 		.word	temperature
 356 0114 00000000 		.word	humidity
 357              		.cfi_endproc
 358              	.LFE39:
 360              		.text
 361              	.Letext0:
 362              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 363              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 364              		.file 4 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 365              		.file 5 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 366              		.file 6 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/ree
 367              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 368              		.file 8 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 369              		.file 9 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 370              		.file 10 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 371              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 372              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 373              		.file 13 "cube/Inc/adc.h"
 374              		.file 14 "inc/sensors.h"
ARM GAS  /tmp/ccYPPnbk.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sensors.c
     /tmp/ccYPPnbk.s:16     .bss.a:0000000000000000 $d
     /tmp/ccYPPnbk.s:19     .bss.a:0000000000000000 a
     /tmp/ccYPPnbk.s:22     .bss.b:0000000000000000 $d
     /tmp/ccYPPnbk.s:25     .bss.b:0000000000000000 b
     /tmp/ccYPPnbk.s:32     .bss.temperature:0000000000000000 temperature
     /tmp/ccYPPnbk.s:29     .bss.temperature:0000000000000000 $d
     /tmp/ccYPPnbk.s:39     .bss.humidity:0000000000000000 humidity
     /tmp/ccYPPnbk.s:36     .bss.humidity:0000000000000000 $d
     /tmp/ccYPPnbk.s:46     .bss.adc_buffer:0000000000000000 adc_buffer
     /tmp/ccYPPnbk.s:43     .bss.adc_buffer:0000000000000000 $d
     /tmp/ccYPPnbk.s:49     .text.sensors_init:0000000000000000 $t
     /tmp/ccYPPnbk.s:56     .text.sensors_init:0000000000000000 sensors_init
     /tmp/ccYPPnbk.s:88     .text.sensors_init:0000000000000020 $d
     /tmp/ccYPPnbk.s:95     .text.calibrate_sensors:0000000000000000 $t
     /tmp/ccYPPnbk.s:102    .text.calibrate_sensors:0000000000000000 calibrate_sensors
     /tmp/ccYPPnbk.s:154    .text.calibrate_sensors:0000000000000040 $d
     /tmp/ccYPPnbk.s:160    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccYPPnbk.s:167    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccYPPnbk.s:354    .text.HAL_ADC_ConvCpltCallback:000000000000010c $d
                           .group:0000000000000000 wm4.0.b7c3d577b02d87ac381ee43eef398462
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.373b5fd716c8f28bb5383d71effbe848
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.main.h.42.3939338cba6ab0a8b761d08be8206d51
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.b0c07d2233f75e3b04f03d95093d88ca
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
ARM GAS  /tmp/ccYPPnbk.s 			page 10


                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart.h.38.e5eada3cdf37ca88de33bd21ddd21a5e
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart_ex.h.38.9430c2ca5ec832677dbe7308c46115fd
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df
                           .group:0000000000000000 wm4.sensors.h.2.f28ea8c1f27d3bcba17595cfaf244921

UNDEFINED SYMBOLS
MX_DMA_Init
MX_ADC_Init
HAL_ADC_Start_DMA
hadc
__aeabi_fsub
memset
