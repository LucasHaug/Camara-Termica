ARM GAS  /tmp/ccOsQ1hK.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.comm	uwTick,4,4
  16              		.section	.text.HAL_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_Init
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_Init:
  25              	.LFB37:
  26              		.file 1 "cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   6:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
   8:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
   9:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  10:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  11:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  13:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  16:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
  17:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  19:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  20:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  21:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  22:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  23:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  24:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  26:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      and/or other materials provided with the distribution.
ARM GAS  /tmp/ccOsQ1hK.s 			page 2


  33:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      without specific prior written permission.
  36:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  37:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  48:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  49:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  50:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  51:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  53:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  54:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  55:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  56:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  57:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  58:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  59:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  60:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  61:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  62:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  63:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  65:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  68:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  69:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  70:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  71:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.7.0
  72:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  73:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  74:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x07) /*!< [23:16] sub1 version */
  75:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x00) /*!< [15:8]  sub2 version */
  76:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  77:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24U)\
  78:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16U)\
  79:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8U )\
  80:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  81:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  82:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  83:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  84:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  85:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  86:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  87:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  88:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  89:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
ARM GAS  /tmp/ccOsQ1hK.s 			page 3


  90:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  91:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  92:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  93:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  94:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  95:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  96:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  97:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  98:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  99:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
 100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
 112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           is needed and the backup domain when enabled.
 121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority. 
 124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
ARM GAS  /tmp/ccOsQ1hK.s 			page 4


 147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  27              		.loc 1 156 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
 157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  37              		.loc 1 159 0
  38 0004 074B     		ldr	r3, .L3
  39 0006 1A68     		ldr	r2, [r3]
  40 0008 064B     		ldr	r3, .L3
  41 000a 1021     		movs	r1, #16
  42 000c 0A43     		orrs	r2, r1
  43 000e 1A60     		str	r2, [r3]
 160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  44              		.loc 1 164 0
  45 0010 0020     		movs	r0, #0
  46 0012 FFF7FEFF 		bl	HAL_InitTick
 165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
  47              		.loc 1 167 0
  48 0016 FFF7FEFF 		bl	HAL_MspInit
 168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
  49              		.loc 1 170 0
  50 001a 0023     		movs	r3, #0
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  51              		.loc 1 171 0
  52 001c 1800     		movs	r0, r3
  53 001e BD46     		mov	sp, r7
  54              		@ sp needed
  55 0020 80BD     		pop	{r7, pc}
  56              	.L4:
  57 0022 C046     		.align	2
  58              	.L3:
ARM GAS  /tmp/ccOsQ1hK.s 			page 5


  59 0024 00200240 		.word	1073881088
  60              		.cfi_endproc
  61              	.LFE37:
  63              		.section	.text.HAL_DeInit,"ax",%progbits
  64              		.align	1
  65              		.global	HAL_DeInit
  66              		.syntax unified
  67              		.code	16
  68              		.thumb_func
  69              		.fpu softvfp
  71              	HAL_DeInit:
  72              	.LFB38:
 172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  73              		.loc 1 180 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77 0000 80B5     		push	{r7, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
  80              		.cfi_offset 14, -4
  81 0002 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
  83              		.loc 1 182 0
  84 0004 0D4B     		ldr	r3, .L7
  85 0006 0122     		movs	r2, #1
  86 0008 5242     		rsbs	r2, r2, #0
  87 000a 1A61     		str	r2, [r3, #16]
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  88              		.loc 1 183 0
  89 000c 0B4B     		ldr	r3, .L7
  90 000e 0022     		movs	r2, #0
  91 0010 1A61     		str	r2, [r3, #16]
 184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
  92              		.loc 1 185 0
  93 0012 0A4B     		ldr	r3, .L7
  94 0014 0122     		movs	r2, #1
  95 0016 5242     		rsbs	r2, r2, #0
  96 0018 DA60     		str	r2, [r3, #12]
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  97              		.loc 1 186 0
  98 001a 084B     		ldr	r3, .L7
  99 001c 0022     		movs	r2, #0
 100 001e DA60     		str	r2, [r3, #12]
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
ARM GAS  /tmp/ccOsQ1hK.s 			page 6


 101              		.loc 1 188 0
 102 0020 064B     		ldr	r3, .L7
 103 0022 0122     		movs	r2, #1
 104 0024 5242     		rsbs	r2, r2, #0
 105 0026 9A62     		str	r2, [r3, #40]
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 106              		.loc 1 189 0
 107 0028 044B     		ldr	r3, .L7
 108 002a 0022     		movs	r2, #0
 109 002c 9A62     		str	r2, [r3, #40]
 190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 110              		.loc 1 192 0
 111 002e FFF7FEFF 		bl	HAL_MspDeInit
 193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 112              		.loc 1 195 0
 113 0032 0023     		movs	r3, #0
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 114              		.loc 1 196 0
 115 0034 1800     		movs	r0, r3
 116 0036 BD46     		mov	sp, r7
 117              		@ sp needed
 118 0038 80BD     		pop	{r7, pc}
 119              	.L8:
 120 003a C046     		.align	2
 121              	.L7:
 122 003c 00100240 		.word	1073876992
 123              		.cfi_endproc
 124              	.LFE38:
 126              		.section	.text.HAL_MspInit,"ax",%progbits
 127              		.align	1
 128              		.weak	HAL_MspInit
 129              		.syntax unified
 130              		.code	16
 131              		.thumb_func
 132              		.fpu softvfp
 134              	HAL_MspInit:
 135              	.LFB39:
 197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initializes the MSP.
 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 136              		.loc 1 203 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccOsQ1hK.s 			page 7


 145              		.cfi_def_cfa_register 7
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 146              		.loc 1 207 0
 147 0004 C046     		nop
 148 0006 BD46     		mov	sp, r7
 149              		@ sp needed
 150 0008 80BD     		pop	{r7, pc}
 151              		.cfi_endproc
 152              	.LFE39:
 154              		.section	.text.HAL_MspDeInit,"ax",%progbits
 155              		.align	1
 156              		.weak	HAL_MspDeInit
 157              		.syntax unified
 158              		.code	16
 159              		.thumb_func
 160              		.fpu softvfp
 162              	HAL_MspDeInit:
 163              	.LFB40:
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 164              		.loc 1 214 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168 0000 80B5     		push	{r7, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 7, -8
 171              		.cfi_offset 14, -4
 172 0002 00AF     		add	r7, sp, #0
 173              		.cfi_def_cfa_register 7
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 174              		.loc 1 218 0
 175 0004 C046     		nop
 176 0006 BD46     		mov	sp, r7
 177              		@ sp needed
 178 0008 80BD     		pop	{r7, pc}
 179              		.cfi_endproc
 180              	.LFE40:
 182              		.global	__aeabi_uidiv
 183              		.section	.text.HAL_InitTick,"ax",%progbits
 184              		.align	1
 185              		.weak	HAL_InitTick
 186              		.syntax unified
 187              		.code	16
 188              		.thumb_func
 189              		.fpu softvfp
ARM GAS  /tmp/ccOsQ1hK.s 			page 8


 191              	HAL_InitTick:
 192              	.LFB41:
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 193              		.loc 1 237 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 8
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 80B5     		push	{r7, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 7, -8
 200              		.cfi_offset 14, -4
 201 0002 82B0     		sub	sp, sp, #8
 202              		.cfi_def_cfa_offset 16
 203 0004 00AF     		add	r7, sp, #0
 204              		.cfi_def_cfa_register 7
 205 0006 7860     		str	r0, [r7, #4]
 238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000U);
 206              		.loc 1 239 0
 207 0008 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 208 000c 0200     		movs	r2, r0
 209 000e FA23     		movs	r3, #250
 210 0010 9900     		lsls	r1, r3, #2
 211 0012 1000     		movs	r0, r2
 212 0014 FFF7FEFF 		bl	__aeabi_uidiv
 213              	.LVL0:
 214 0018 0300     		movs	r3, r0
 215 001a 1800     		movs	r0, r3
 216 001c FFF7FEFF 		bl	HAL_SYSTICK_Config
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick IRQ priority */
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 217              		.loc 1 242 0
 218 0020 7968     		ldr	r1, [r7, #4]
 219 0022 0123     		movs	r3, #1
 220 0024 5B42     		rsbs	r3, r3, #0
 221 0026 0022     		movs	r2, #0
 222 0028 1800     		movs	r0, r3
 223 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccOsQ1hK.s 			page 9


 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 224              		.loc 1 245 0
 225 002e 0023     		movs	r3, #0
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 226              		.loc 1 246 0
 227 0030 1800     		movs	r0, r3
 228 0032 BD46     		mov	sp, r7
 229 0034 02B0     		add	sp, sp, #8
 230              		@ sp needed
 231 0036 80BD     		pop	{r7, pc}
 232              		.cfi_endproc
 233              	.LFE41:
 235              		.section	.text.HAL_IncTick,"ax",%progbits
 236              		.align	1
 237              		.weak	HAL_IncTick
 238              		.syntax unified
 239              		.code	16
 240              		.thumb_func
 241              		.fpu softvfp
 243              	HAL_IncTick:
 244              	.LFB42:
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in Systick ISR.
 280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
ARM GAS  /tmp/ccOsQ1hK.s 			page 10


 281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 245              		.loc 1 285 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick++;
 255              		.loc 1 286 0
 256 0004 034B     		ldr	r3, .L14
 257 0006 1B68     		ldr	r3, [r3]
 258 0008 5A1C     		adds	r2, r3, #1
 259 000a 024B     		ldr	r3, .L14
 260 000c 1A60     		str	r2, [r3]
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 261              		.loc 1 287 0
 262 000e C046     		nop
 263 0010 BD46     		mov	sp, r7
 264              		@ sp needed
 265 0012 80BD     		pop	{r7, pc}
 266              	.L15:
 267              		.align	2
 268              	.L14:
 269 0014 00000000 		.word	uwTick
 270              		.cfi_endproc
 271              	.LFE42:
 273              		.section	.text.HAL_GetTick,"ax",%progbits
 274              		.align	1
 275              		.weak	HAL_GetTick
 276              		.syntax unified
 277              		.code	16
 278              		.thumb_func
 279              		.fpu softvfp
 281              	HAL_GetTick:
 282              	.LFB43:
 288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 283              		.loc 1 296 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccOsQ1hK.s 			page 11


 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 00AF     		add	r7, sp, #0
 292              		.cfi_def_cfa_register 7
 297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 293              		.loc 1 297 0
 294 0004 024B     		ldr	r3, .L18
 295 0006 1B68     		ldr	r3, [r3]
 298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 296              		.loc 1 298 0
 297 0008 1800     		movs	r0, r3
 298 000a BD46     		mov	sp, r7
 299              		@ sp needed
 300 000c 80BD     		pop	{r7, pc}
 301              	.L19:
 302 000e C046     		.align	2
 303              	.L18:
 304 0010 00000000 		.word	uwTick
 305              		.cfi_endproc
 306              	.LFE43:
 308              		.section	.text.HAL_Delay,"ax",%progbits
 309              		.align	1
 310              		.weak	HAL_Delay
 311              		.syntax unified
 312              		.code	16
 313              		.thumb_func
 314              		.fpu softvfp
 316              	HAL_Delay:
 317              	.LFB44:
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 318              		.loc 1 312 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 16
 321              		@ frame_needed = 1, uses_anonymous_args = 0
 322 0000 80B5     		push	{r7, lr}
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 7, -8
 325              		.cfi_offset 14, -4
 326 0002 84B0     		sub	sp, sp, #16
 327              		.cfi_def_cfa_offset 24
 328 0004 00AF     		add	r7, sp, #0
 329              		.cfi_def_cfa_register 7
 330 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccOsQ1hK.s 			page 12


 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 331              		.loc 1 313 0
 332 0008 FFF7FEFF 		bl	HAL_GetTick
 333 000c 0300     		movs	r3, r0
 334 000e BB60     		str	r3, [r7, #8]
 314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t wait = Delay;
 335              		.loc 1 314 0
 336 0010 7B68     		ldr	r3, [r7, #4]
 337 0012 FB60     		str	r3, [r7, #12]
 315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Add a period to guarantee minimum wait */
 317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 338              		.loc 1 317 0
 339 0014 FB68     		ldr	r3, [r7, #12]
 340 0016 0133     		adds	r3, r3, #1
 341 0018 02D0     		beq	.L23
 318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****      wait++;
 342              		.loc 1 319 0
 343 001a FB68     		ldr	r3, [r7, #12]
 344 001c 0133     		adds	r3, r3, #1
 345 001e FB60     		str	r3, [r7, #12]
 346              	.L23:
 320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 347              		.loc 1 322 0
 348 0020 C046     		nop
 349              	.L22:
 350              		.loc 1 322 0 is_stmt 0 discriminator 1
 351 0022 FFF7FEFF 		bl	HAL_GetTick
 352 0026 0200     		movs	r2, r0
 353 0028 BB68     		ldr	r3, [r7, #8]
 354 002a D31A     		subs	r3, r2, r3
 355 002c FA68     		ldr	r2, [r7, #12]
 356 002e 9A42     		cmp	r2, r3
 357 0030 F7D8     		bhi	.L22
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 358              		.loc 1 325 0 is_stmt 1
 359 0032 C046     		nop
 360 0034 BD46     		mov	sp, r7
 361 0036 04B0     		add	sp, sp, #16
 362              		@ sp needed
 363 0038 80BD     		pop	{r7, pc}
 364              		.cfi_endproc
 365              	.LFE44:
 367              		.section	.text.HAL_SuspendTick,"ax",%progbits
 368              		.align	1
 369              		.weak	HAL_SuspendTick
 370              		.syntax unified
 371              		.code	16
 372              		.thumb_func
 373              		.fpu softvfp
 375              	HAL_SuspendTick:
 376              	.LFB45:
ARM GAS  /tmp/ccOsQ1hK.s 			page 13


 326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 377              		.loc 1 339 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381 0000 80B5     		push	{r7, lr}
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 387              		.loc 1 341 0
 388 0004 044B     		ldr	r3, .L25
 389 0006 1A68     		ldr	r2, [r3]
 390 0008 034B     		ldr	r3, .L25
 391 000a 0221     		movs	r1, #2
 392 000c 8A43     		bics	r2, r1
 393 000e 1A60     		str	r2, [r3]
 342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 394              		.loc 1 342 0
 395 0010 C046     		nop
 396 0012 BD46     		mov	sp, r7
 397              		@ sp needed
 398 0014 80BD     		pop	{r7, pc}
 399              	.L26:
 400 0016 C046     		.align	2
 401              	.L25:
 402 0018 10E000E0 		.word	-536813552
 403              		.cfi_endproc
 404              	.LFE45:
 406              		.section	.text.HAL_ResumeTick,"ax",%progbits
 407              		.align	1
 408              		.weak	HAL_ResumeTick
 409              		.syntax unified
 410              		.code	16
 411              		.thumb_func
 412              		.fpu softvfp
 414              	HAL_ResumeTick:
 415              	.LFB46:
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
ARM GAS  /tmp/ccOsQ1hK.s 			page 14


 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 416              		.loc 1 355 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420 0000 80B5     		push	{r7, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 00AF     		add	r7, sp, #0
 425              		.cfi_def_cfa_register 7
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 426              		.loc 1 357 0
 427 0004 044B     		ldr	r3, .L28
 428 0006 1A68     		ldr	r2, [r3]
 429 0008 034B     		ldr	r3, .L28
 430 000a 0221     		movs	r1, #2
 431 000c 0A43     		orrs	r2, r1
 432 000e 1A60     		str	r2, [r3]
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 433              		.loc 1 358 0
 434 0010 C046     		nop
 435 0012 BD46     		mov	sp, r7
 436              		@ sp needed
 437 0014 80BD     		pop	{r7, pc}
 438              	.L29:
 439 0016 C046     		.align	2
 440              	.L28:
 441 0018 10E000E0 		.word	-536813552
 442              		.cfi_endproc
 443              	.LFE46:
 445              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 446              		.align	1
 447              		.global	HAL_GetHalVersion
 448              		.syntax unified
 449              		.code	16
 450              		.thumb_func
 451              		.fpu softvfp
 453              	HAL_GetHalVersion:
 454              	.LFB47:
 359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
ARM GAS  /tmp/ccOsQ1hK.s 			page 15


 455              		.loc 1 365 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 1, uses_anonymous_args = 0
 459 0000 80B5     		push	{r7, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0002 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 465              		.loc 1 366 0
 466 0004 014B     		ldr	r3, .L32
 367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 467              		.loc 1 367 0
 468 0006 1800     		movs	r0, r3
 469 0008 BD46     		mov	sp, r7
 470              		@ sp needed
 471 000a 80BD     		pop	{r7, pc}
 472              	.L33:
 473              		.align	2
 474              	.L32:
 475 000c 00000701 		.word	17235968
 476              		.cfi_endproc
 477              	.LFE47:
 479              		.section	.text.HAL_GetREVID,"ax",%progbits
 480              		.align	1
 481              		.global	HAL_GetREVID
 482              		.syntax unified
 483              		.code	16
 484              		.thumb_func
 485              		.fpu softvfp
 487              	HAL_GetREVID:
 488              	.LFB48:
 368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 489              		.loc 1 374 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 80B5     		push	{r7, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497 0002 00AF     		add	r7, sp, #0
 498              		.cfi_def_cfa_register 7
 375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 499              		.loc 1 375 0
 500 0004 024B     		ldr	r3, .L36
 501 0006 1B68     		ldr	r3, [r3]
 502 0008 1B0C     		lsrs	r3, r3, #16
 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
ARM GAS  /tmp/ccOsQ1hK.s 			page 16


 503              		.loc 1 376 0
 504 000a 1800     		movs	r0, r3
 505 000c BD46     		mov	sp, r7
 506              		@ sp needed
 507 000e 80BD     		pop	{r7, pc}
 508              	.L37:
 509              		.align	2
 510              	.L36:
 511 0010 00580140 		.word	1073829888
 512              		.cfi_endproc
 513              	.LFE48:
 515              		.section	.text.HAL_GetDEVID,"ax",%progbits
 516              		.align	1
 517              		.global	HAL_GetDEVID
 518              		.syntax unified
 519              		.code	16
 520              		.thumb_func
 521              		.fpu softvfp
 523              	HAL_GetDEVID:
 524              	.LFB49:
 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 525              		.loc 1 383 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529 0000 80B5     		push	{r7, lr}
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 7, -8
 532              		.cfi_offset 14, -4
 533 0002 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 535              		.loc 1 384 0
 536 0004 034B     		ldr	r3, .L40
 537 0006 1B68     		ldr	r3, [r3]
 538 0008 1B05     		lsls	r3, r3, #20
 539 000a 1B0D     		lsrs	r3, r3, #20
 385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 540              		.loc 1 385 0
 541 000c 1800     		movs	r0, r3
 542 000e BD46     		mov	sp, r7
 543              		@ sp needed
 544 0010 80BD     		pop	{r7, pc}
 545              	.L41:
 546 0012 C046     		.align	2
 547              	.L40:
 548 0014 00580140 		.word	1073829888
 549              		.cfi_endproc
 550              	.LFE49:
 552              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 553              		.align	1
ARM GAS  /tmp/ccOsQ1hK.s 			page 17


 554              		.global	HAL_GetUIDw0
 555              		.syntax unified
 556              		.code	16
 557              		.thumb_func
 558              		.fpu softvfp
 560              	HAL_GetUIDw0:
 561              	.LFB50:
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 562              		.loc 1 392 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566 0000 80B5     		push	{r7, lr}
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 7, -8
 569              		.cfi_offset 14, -4
 570 0002 00AF     		add	r7, sp, #0
 571              		.cfi_def_cfa_register 7
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 572              		.loc 1 393 0
 573 0004 024B     		ldr	r3, .L44
 574 0006 1B68     		ldr	r3, [r3]
 394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 575              		.loc 1 394 0
 576 0008 1800     		movs	r0, r3
 577 000a BD46     		mov	sp, r7
 578              		@ sp needed
 579 000c 80BD     		pop	{r7, pc}
 580              	.L45:
 581 000e C046     		.align	2
 582              	.L44:
 583 0010 ACF7FF1F 		.word	536868780
 584              		.cfi_endproc
 585              	.LFE50:
 587              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 588              		.align	1
 589              		.global	HAL_GetUIDw1
 590              		.syntax unified
 591              		.code	16
 592              		.thumb_func
 593              		.fpu softvfp
 595              	HAL_GetUIDw1:
 596              	.LFB51:
 395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 597              		.loc 1 401 0
ARM GAS  /tmp/ccOsQ1hK.s 			page 18


 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 00AF     		add	r7, sp, #0
 606              		.cfi_def_cfa_register 7
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 607              		.loc 1 402 0
 608 0004 024B     		ldr	r3, .L48
 609 0006 1B68     		ldr	r3, [r3]
 403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 610              		.loc 1 403 0
 611 0008 1800     		movs	r0, r3
 612 000a BD46     		mov	sp, r7
 613              		@ sp needed
 614 000c 80BD     		pop	{r7, pc}
 615              	.L49:
 616 000e C046     		.align	2
 617              	.L48:
 618 0010 B0F7FF1F 		.word	536868784
 619              		.cfi_endproc
 620              	.LFE51:
 622              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 623              		.align	1
 624              		.global	HAL_GetUIDw2
 625              		.syntax unified
 626              		.code	16
 627              		.thumb_func
 628              		.fpu softvfp
 630              	HAL_GetUIDw2:
 631              	.LFB52:
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 632              		.loc 1 410 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636 0000 80B5     		push	{r7, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 642              		.loc 1 411 0
 643 0004 024B     		ldr	r3, .L52
 644 0006 1B68     		ldr	r3, [r3]
 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 645              		.loc 1 412 0
ARM GAS  /tmp/ccOsQ1hK.s 			page 19


 646 0008 1800     		movs	r0, r3
 647 000a BD46     		mov	sp, r7
 648              		@ sp needed
 649 000c 80BD     		pop	{r7, pc}
 650              	.L53:
 651 000e C046     		.align	2
 652              	.L52:
 653 0010 B4F7FF1F 		.word	536868788
 654              		.cfi_endproc
 655              	.LFE52:
 657              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 658              		.align	1
 659              		.global	HAL_DBGMCU_EnableDBGStopMode
 660              		.syntax unified
 661              		.code	16
 662              		.thumb_func
 663              		.fpu softvfp
 665              	HAL_DBGMCU_EnableDBGStopMode:
 666              	.LFB53:
 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode       
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 667              		.loc 1 419 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 00AF     		add	r7, sp, #0
 676              		.cfi_def_cfa_register 7
 420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 677              		.loc 1 420 0
 678 0004 044B     		ldr	r3, .L55
 679 0006 5A68     		ldr	r2, [r3, #4]
 680 0008 034B     		ldr	r3, .L55
 681 000a 0221     		movs	r1, #2
 682 000c 0A43     		orrs	r2, r1
 683 000e 5A60     		str	r2, [r3, #4]
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 684              		.loc 1 421 0
 685 0010 C046     		nop
 686 0012 BD46     		mov	sp, r7
 687              		@ sp needed
 688 0014 80BD     		pop	{r7, pc}
 689              	.L56:
 690 0016 C046     		.align	2
 691              	.L55:
 692 0018 00580140 		.word	1073829888
 693              		.cfi_endproc
 694              	.LFE53:
 696              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
ARM GAS  /tmp/ccOsQ1hK.s 			page 20


 697              		.align	1
 698              		.global	HAL_DBGMCU_DisableDBGStopMode
 699              		.syntax unified
 700              		.code	16
 701              		.thumb_func
 702              		.fpu softvfp
 704              	HAL_DBGMCU_DisableDBGStopMode:
 705              	.LFB54:
 422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode       
 425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 706              		.loc 1 428 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 716              		.loc 1 429 0
 717 0004 044B     		ldr	r3, .L58
 718 0006 5A68     		ldr	r2, [r3, #4]
 719 0008 034B     		ldr	r3, .L58
 720 000a 0221     		movs	r1, #2
 721 000c 8A43     		bics	r2, r1
 722 000e 5A60     		str	r2, [r3, #4]
 430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 723              		.loc 1 430 0
 724 0010 C046     		nop
 725 0012 BD46     		mov	sp, r7
 726              		@ sp needed
 727 0014 80BD     		pop	{r7, pc}
 728              	.L59:
 729 0016 C046     		.align	2
 730              	.L58:
 731 0018 00580140 		.word	1073829888
 732              		.cfi_endproc
 733              	.LFE54:
 735              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 736              		.align	1
 737              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 738              		.syntax unified
 739              		.code	16
 740              		.thumb_func
 741              		.fpu softvfp
 743              	HAL_DBGMCU_EnableDBGStandbyMode:
 744              	.LFB55:
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode       
ARM GAS  /tmp/ccOsQ1hK.s 			page 21


 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 745              		.loc 1 437 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 755              		.loc 1 438 0
 756 0004 044B     		ldr	r3, .L61
 757 0006 5A68     		ldr	r2, [r3, #4]
 758 0008 034B     		ldr	r3, .L61
 759 000a 0421     		movs	r1, #4
 760 000c 0A43     		orrs	r2, r1
 761 000e 5A60     		str	r2, [r3, #4]
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 762              		.loc 1 439 0
 763 0010 C046     		nop
 764 0012 BD46     		mov	sp, r7
 765              		@ sp needed
 766 0014 80BD     		pop	{r7, pc}
 767              	.L62:
 768 0016 C046     		.align	2
 769              	.L61:
 770 0018 00580140 		.word	1073829888
 771              		.cfi_endproc
 772              	.LFE55:
 774              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 775              		.align	1
 776              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 777              		.syntax unified
 778              		.code	16
 779              		.thumb_func
 780              		.fpu softvfp
 782              	HAL_DBGMCU_DisableDBGStandbyMode:
 783              	.LFB56:
 440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode       
 443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 784              		.loc 1 446 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 1, uses_anonymous_args = 0
 788 0000 80B5     		push	{r7, lr}
 789              		.cfi_def_cfa_offset 8
 790              		.cfi_offset 7, -8
ARM GAS  /tmp/ccOsQ1hK.s 			page 22


 791              		.cfi_offset 14, -4
 792 0002 00AF     		add	r7, sp, #0
 793              		.cfi_def_cfa_register 7
 447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 794              		.loc 1 447 0
 795 0004 044B     		ldr	r3, .L64
 796 0006 5A68     		ldr	r2, [r3, #4]
 797 0008 034B     		ldr	r3, .L64
 798 000a 0421     		movs	r1, #4
 799 000c 8A43     		bics	r2, r1
 800 000e 5A60     		str	r2, [r3, #4]
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 801              		.loc 1 448 0
 802 0010 C046     		nop
 803 0012 BD46     		mov	sp, r7
 804              		@ sp needed
 805 0014 80BD     		pop	{r7, pc}
 806              	.L65:
 807 0016 C046     		.align	2
 808              	.L64:
 809 0018 00580140 		.word	1073829888
 810              		.cfi_endproc
 811              	.LFE56:
 813              		.text
 814              	.Letext0:
 815              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 816              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 817              		.file 4 "cube/Drivers/CMSIS/Include/core_cm0.h"
 818              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 819              		.file 6 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 820              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 821              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 822              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 823              		.file 10 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/re
 824              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
ARM GAS  /tmp/ccOsQ1hK.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal.c
                            *COM*:0000000000000004 uwTick
     /tmp/ccOsQ1hK.s:17     .text.HAL_Init:0000000000000000 $t
     /tmp/ccOsQ1hK.s:24     .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccOsQ1hK.s:191    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccOsQ1hK.s:134    .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccOsQ1hK.s:59     .text.HAL_Init:0000000000000024 $d
     /tmp/ccOsQ1hK.s:64     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccOsQ1hK.s:71     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccOsQ1hK.s:162    .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccOsQ1hK.s:122    .text.HAL_DeInit:000000000000003c $d
     /tmp/ccOsQ1hK.s:127    .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccOsQ1hK.s:155    .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccOsQ1hK.s:184    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccOsQ1hK.s:236    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccOsQ1hK.s:243    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccOsQ1hK.s:269    .text.HAL_IncTick:0000000000000014 $d
     /tmp/ccOsQ1hK.s:274    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccOsQ1hK.s:281    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccOsQ1hK.s:304    .text.HAL_GetTick:0000000000000010 $d
     /tmp/ccOsQ1hK.s:309    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccOsQ1hK.s:316    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccOsQ1hK.s:368    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccOsQ1hK.s:375    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccOsQ1hK.s:402    .text.HAL_SuspendTick:0000000000000018 $d
     /tmp/ccOsQ1hK.s:407    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccOsQ1hK.s:414    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccOsQ1hK.s:441    .text.HAL_ResumeTick:0000000000000018 $d
     /tmp/ccOsQ1hK.s:446    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccOsQ1hK.s:453    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccOsQ1hK.s:475    .text.HAL_GetHalVersion:000000000000000c $d
     /tmp/ccOsQ1hK.s:480    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccOsQ1hK.s:487    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccOsQ1hK.s:511    .text.HAL_GetREVID:0000000000000010 $d
     /tmp/ccOsQ1hK.s:516    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccOsQ1hK.s:523    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccOsQ1hK.s:548    .text.HAL_GetDEVID:0000000000000014 $d
     /tmp/ccOsQ1hK.s:553    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccOsQ1hK.s:560    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccOsQ1hK.s:583    .text.HAL_GetUIDw0:0000000000000010 $d
     /tmp/ccOsQ1hK.s:588    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccOsQ1hK.s:595    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccOsQ1hK.s:618    .text.HAL_GetUIDw1:0000000000000010 $d
     /tmp/ccOsQ1hK.s:623    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccOsQ1hK.s:630    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccOsQ1hK.s:653    .text.HAL_GetUIDw2:0000000000000010 $d
     /tmp/ccOsQ1hK.s:658    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccOsQ1hK.s:665    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccOsQ1hK.s:692    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000018 $d
     /tmp/ccOsQ1hK.s:697    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccOsQ1hK.s:704    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccOsQ1hK.s:731    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000018 $d
     /tmp/ccOsQ1hK.s:736    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccOsQ1hK.s:743    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccOsQ1hK.s:770    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000018 $d
     /tmp/ccOsQ1hK.s:775    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
ARM GAS  /tmp/ccOsQ1hK.s 			page 24


     /tmp/ccOsQ1hK.s:782    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccOsQ1hK.s:809    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000018 $d
                           .group:0000000000000000 wm4.0.b7c3d577b02d87ac381ee43eef398462
                           .group:0000000000000000 wm4.main.h.42.3939338cba6ab0a8b761d08be8206d51
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.b0c07d2233f75e3b04f03d95093d88ca
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart.h.38.e5eada3cdf37ca88de33bd21ddd21a5e
ARM GAS  /tmp/ccOsQ1hK.s 			page 25


                           .group:0000000000000000 wm4.stm32f0xx_hal_uart_ex.h.38.9430c2ca5ec832677dbe7308c46115fd
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
