ARM GAS  /tmp/cc19Ycjl.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB39:
  25              		.file 1 "cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   6:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
   8:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
   9:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  10:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  11:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  13:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  16:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
  17:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  19:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  20:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  21:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  22:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  23:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  24:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  26:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
ARM GAS  /tmp/cc19Ycjl.s 			page 2


  34:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *      without specific prior written permission.
  36:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  37:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  48:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  49:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  50:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  51:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  53:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  54:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  55:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  56:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  57:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  58:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  59:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  60:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  61:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  62:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  63:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  65:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  68:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  69:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  70:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  71:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.7.0
  72:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  73:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  74:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x07) /*!< [23:16] sub1 version */
  75:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x00) /*!< [15:8]  sub2 version */
  76:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  77:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24U)\
  78:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16U)\
  79:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8U )\
  80:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  81:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  82:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  83:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  84:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  85:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  86:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  87:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  88:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  89:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  90:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
ARM GAS  /tmp/cc19Ycjl.s 			page 3


  91:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  92:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  93:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  94:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  95:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  96:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  97:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  98:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  99:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
 100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
 112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           is needed and the backup domain when enabled.
 121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority. 
 124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
ARM GAS  /tmp/cc19Ycjl.s 			page 4


 148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
 168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initializes the MSP.
 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  26              		.loc 1 203 0
ARM GAS  /tmp/cc19Ycjl.s 			page 5


  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  31              		.loc 1 207 0
  32              		@ sp needed
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE39:
  37              		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	1
  39              		.weak	HAL_MspDeInit
  40              		.syntax unified
  41              		.code	16
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HAL_MspDeInit:
  46              	.LFB40:
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  47              		.loc 1 214 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  52              		.loc 1 218 0
  53              		@ sp needed
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE40:
  58              		.section	.text.HAL_DeInit,"ax",%progbits
  59              		.align	1
  60              		.global	HAL_DeInit
  61              		.syntax unified
  62              		.code	16
  63              		.thumb_func
  64              		.fpu softvfp
  66              	HAL_DeInit:
  67              	.LFB38:
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 180 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc19Ycjl.s 			page 6


  72 0000 10B5     		push	{r4, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 4, -8
  75              		.cfi_offset 14, -4
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  76              		.loc 1 182 0
  77 0002 074B     		ldr	r3, .L4
  78 0004 0121     		movs	r1, #1
  79 0006 4942     		rsbs	r1, r1, #0
  80 0008 1961     		str	r1, [r3, #16]
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  81              		.loc 1 183 0
  82 000a 0022     		movs	r2, #0
  83 000c 1A61     		str	r2, [r3, #16]
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  84              		.loc 1 185 0
  85 000e D960     		str	r1, [r3, #12]
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  86              		.loc 1 186 0
  87 0010 DA60     		str	r2, [r3, #12]
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  88              		.loc 1 188 0
  89 0012 9962     		str	r1, [r3, #40]
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  90              		.loc 1 189 0
  91 0014 9A62     		str	r2, [r3, #40]
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
  92              		.loc 1 192 0
  93 0016 FFF7FEFF 		bl	HAL_MspDeInit
  94              	.LVL0:
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  95              		.loc 1 196 0
  96 001a 0020     		movs	r0, #0
  97              		@ sp needed
  98 001c 10BD     		pop	{r4, pc}
  99              	.L5:
 100 001e C046     		.align	2
 101              	.L4:
 102 0020 00100240 		.word	1073876992
 103              		.cfi_endproc
 104              	.LFE38:
 106              		.global	__aeabi_uidiv
 107              		.section	.text.HAL_InitTick,"ax",%progbits
 108              		.align	1
 109              		.weak	HAL_InitTick
 110              		.syntax unified
 111              		.code	16
 112              		.thumb_func
 113              		.fpu softvfp
 115              	HAL_InitTick:
 116              	.LFB41:
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
ARM GAS  /tmp/cc19Ycjl.s 			page 7


 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 117              		.loc 1 237 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              	.LVL1:
 122 0000 10B5     		push	{r4, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 126 0002 0400     		movs	r4, r0
 238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000U);
 127              		.loc 1 239 0
 128 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 129              	.LVL2:
 130 0008 FA21     		movs	r1, #250
 131 000a 8900     		lsls	r1, r1, #2
 132 000c FFF7FEFF 		bl	__aeabi_uidiv
 133              	.LVL3:
 134 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 135              	.LVL4:
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick IRQ priority */
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 136              		.loc 1 242 0
 137 0014 0120     		movs	r0, #1
 138 0016 0022     		movs	r2, #0
 139 0018 2100     		movs	r1, r4
 140 001a 4042     		rsbs	r0, r0, #0
 141 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 142              	.LVL5:
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 143              		.loc 1 246 0
 144 0020 0020     		movs	r0, #0
 145              		@ sp needed
 146              	.LVL6:
 147 0022 10BD     		pop	{r4, pc}
 148              		.cfi_endproc
 149              	.LFE41:
 151              		.section	.text.HAL_Init,"ax",%progbits
 152              		.align	1
ARM GAS  /tmp/cc19Ycjl.s 			page 8


 153              		.global	HAL_Init
 154              		.syntax unified
 155              		.code	16
 156              		.thumb_func
 157              		.fpu softvfp
 159              	HAL_Init:
 160              	.LFB37:
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 161              		.loc 1 156 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 10B5     		push	{r4, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 4, -8
 168              		.cfi_offset 14, -4
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 169              		.loc 1 159 0
 170 0002 064A     		ldr	r2, .L8
 171 0004 1368     		ldr	r3, [r2]
 172 0006 1021     		movs	r1, #16
 173 0008 0B43     		orrs	r3, r1
 174 000a 1360     		str	r3, [r2]
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 175              		.loc 1 164 0
 176 000c 0020     		movs	r0, #0
 177 000e FFF7FEFF 		bl	HAL_InitTick
 178              	.LVL7:
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 179              		.loc 1 167 0
 180 0012 FFF7FEFF 		bl	HAL_MspInit
 181              	.LVL8:
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 182              		.loc 1 171 0
 183 0016 0020     		movs	r0, #0
 184              		@ sp needed
 185 0018 10BD     		pop	{r4, pc}
 186              	.L9:
 187 001a C046     		.align	2
 188              	.L8:
 189 001c 00200240 		.word	1073881088
 190              		.cfi_endproc
 191              	.LFE37:
 193              		.section	.text.HAL_IncTick,"ax",%progbits
 194              		.align	1
 195              		.weak	HAL_IncTick
 196              		.syntax unified
 197              		.code	16
 198              		.thumb_func
 199              		.fpu softvfp
 201              	HAL_IncTick:
 202              	.LFB42:
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
ARM GAS  /tmp/cc19Ycjl.s 			page 9


 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in Systick ISR.
 280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 203              		.loc 1 285 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick++;
 208              		.loc 1 286 0
 209 0000 024A     		ldr	r2, .L11
 210 0002 1368     		ldr	r3, [r2]
 211 0004 0133     		adds	r3, r3, #1
 212 0006 1360     		str	r3, [r2]
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 213              		.loc 1 287 0
 214              		@ sp needed
 215 0008 7047     		bx	lr
 216              	.L12:
 217 000a C046     		.align	2
 218              	.L11:
 219 000c 00000000 		.word	uwTick
 220              		.cfi_endproc
 221              	.LFE42:
 223              		.section	.text.HAL_GetTick,"ax",%progbits
 224              		.align	1
ARM GAS  /tmp/cc19Ycjl.s 			page 10


 225              		.weak	HAL_GetTick
 226              		.syntax unified
 227              		.code	16
 228              		.thumb_func
 229              		.fpu softvfp
 231              	HAL_GetTick:
 232              	.LFB43:
 288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 233              		.loc 1 296 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 238              		.loc 1 297 0
 239 0000 014B     		ldr	r3, .L14
 240 0002 1868     		ldr	r0, [r3]
 298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 241              		.loc 1 298 0
 242              		@ sp needed
 243 0004 7047     		bx	lr
 244              	.L15:
 245 0006 C046     		.align	2
 246              	.L14:
 247 0008 00000000 		.word	uwTick
 248              		.cfi_endproc
 249              	.LFE43:
 251              		.section	.text.HAL_Delay,"ax",%progbits
 252              		.align	1
 253              		.weak	HAL_Delay
 254              		.syntax unified
 255              		.code	16
 256              		.thumb_func
 257              		.fpu softvfp
 259              	HAL_Delay:
 260              	.LFB44:
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
ARM GAS  /tmp/cc19Ycjl.s 			page 11


 312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 261              		.loc 1 312 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 8
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              	.LVL9:
 266 0000 30B5     		push	{r4, r5, lr}
 267              		.cfi_def_cfa_offset 12
 268              		.cfi_offset 4, -12
 269              		.cfi_offset 5, -8
 270              		.cfi_offset 14, -4
 271 0002 83B0     		sub	sp, sp, #12
 272              		.cfi_def_cfa_offset 24
 273 0004 0190     		str	r0, [sp, #4]
 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 274              		.loc 1 313 0
 275 0006 FFF7FEFF 		bl	HAL_GetTick
 276              	.LVL10:
 277 000a 0500     		movs	r5, r0
 278              	.LVL11:
 314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t wait = Delay;
 279              		.loc 1 314 0
 280 000c 019C     		ldr	r4, [sp, #4]
 281              	.LVL12:
 315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Add a period to guarantee minimum wait */
 317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 282              		.loc 1 317 0
 283 000e 631C     		adds	r3, r4, #1
 284 0010 00D0     		beq	.L18
 318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****      wait++;
 285              		.loc 1 319 0
 286 0012 0134     		adds	r4, r4, #1
 287              	.LVL13:
 288              	.L18:
 320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 289              		.loc 1 322 0 discriminator 1
 290 0014 FFF7FEFF 		bl	HAL_GetTick
 291              	.LVL14:
 292 0018 401B     		subs	r0, r0, r5
 293 001a A042     		cmp	r0, r4
 294 001c FAD3     		bcc	.L18
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 295              		.loc 1 325 0
 296 001e 03B0     		add	sp, sp, #12
 297              		@ sp needed
 298              	.LVL15:
 299              	.LVL16:
 300 0020 30BD     		pop	{r4, r5, pc}
 301              		.cfi_endproc
 302              	.LFE44:
 304              		.section	.text.HAL_SuspendTick,"ax",%progbits
ARM GAS  /tmp/cc19Ycjl.s 			page 12


 305              		.align	1
 306              		.weak	HAL_SuspendTick
 307              		.syntax unified
 308              		.code	16
 309              		.thumb_func
 310              		.fpu softvfp
 312              	HAL_SuspendTick:
 313              	.LFB45:
 326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 314              		.loc 1 339 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 319              		.loc 1 341 0
 320 0000 024A     		ldr	r2, .L20
 321 0002 1368     		ldr	r3, [r2]
 322 0004 0221     		movs	r1, #2
 323 0006 8B43     		bics	r3, r1
 324 0008 1360     		str	r3, [r2]
 342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 325              		.loc 1 342 0
 326              		@ sp needed
 327 000a 7047     		bx	lr
 328              	.L21:
 329              		.align	2
 330              	.L20:
 331 000c 10E000E0 		.word	-536813552
 332              		.cfi_endproc
 333              	.LFE45:
 335              		.section	.text.HAL_ResumeTick,"ax",%progbits
 336              		.align	1
 337              		.weak	HAL_ResumeTick
 338              		.syntax unified
 339              		.code	16
 340              		.thumb_func
 341              		.fpu softvfp
 343              	HAL_ResumeTick:
 344              	.LFB46:
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
ARM GAS  /tmp/cc19Ycjl.s 			page 13


 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 345              		.loc 1 355 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 350              		.loc 1 357 0
 351 0000 024A     		ldr	r2, .L23
 352 0002 1368     		ldr	r3, [r2]
 353 0004 0221     		movs	r1, #2
 354 0006 0B43     		orrs	r3, r1
 355 0008 1360     		str	r3, [r2]
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 356              		.loc 1 358 0
 357              		@ sp needed
 358 000a 7047     		bx	lr
 359              	.L24:
 360              		.align	2
 361              	.L23:
 362 000c 10E000E0 		.word	-536813552
 363              		.cfi_endproc
 364              	.LFE46:
 366              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 367              		.align	1
 368              		.global	HAL_GetHalVersion
 369              		.syntax unified
 370              		.code	16
 371              		.thumb_func
 372              		.fpu softvfp
 374              	HAL_GetHalVersion:
 375              	.LFB47:
 359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 376              		.loc 1 365 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 381              		.loc 1 367 0
ARM GAS  /tmp/cc19Ycjl.s 			page 14


 382 0000 0048     		ldr	r0, .L26
 383              		@ sp needed
 384 0002 7047     		bx	lr
 385              	.L27:
 386              		.align	2
 387              	.L26:
 388 0004 00000701 		.word	17235968
 389              		.cfi_endproc
 390              	.LFE47:
 392              		.section	.text.HAL_GetREVID,"ax",%progbits
 393              		.align	1
 394              		.global	HAL_GetREVID
 395              		.syntax unified
 396              		.code	16
 397              		.thumb_func
 398              		.fpu softvfp
 400              	HAL_GetREVID:
 401              	.LFB48:
 368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 402              		.loc 1 374 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 407              		.loc 1 375 0
 408 0000 014B     		ldr	r3, .L29
 409 0002 1868     		ldr	r0, [r3]
 410 0004 000C     		lsrs	r0, r0, #16
 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 411              		.loc 1 376 0
 412              		@ sp needed
 413 0006 7047     		bx	lr
 414              	.L30:
 415              		.align	2
 416              	.L29:
 417 0008 00580140 		.word	1073829888
 418              		.cfi_endproc
 419              	.LFE48:
 421              		.section	.text.HAL_GetDEVID,"ax",%progbits
 422              		.align	1
 423              		.global	HAL_GetDEVID
 424              		.syntax unified
 425              		.code	16
 426              		.thumb_func
 427              		.fpu softvfp
 429              	HAL_GetDEVID:
 430              	.LFB49:
 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
ARM GAS  /tmp/cc19Ycjl.s 			page 15


 380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 431              		.loc 1 383 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 436              		.loc 1 384 0
 437 0000 024B     		ldr	r3, .L32
 438 0002 1868     		ldr	r0, [r3]
 439 0004 0005     		lsls	r0, r0, #20
 440 0006 000D     		lsrs	r0, r0, #20
 385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 441              		.loc 1 385 0
 442              		@ sp needed
 443 0008 7047     		bx	lr
 444              	.L33:
 445 000a C046     		.align	2
 446              	.L32:
 447 000c 00580140 		.word	1073829888
 448              		.cfi_endproc
 449              	.LFE49:
 451              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 452              		.align	1
 453              		.global	HAL_GetUIDw0
 454              		.syntax unified
 455              		.code	16
 456              		.thumb_func
 457              		.fpu softvfp
 459              	HAL_GetUIDw0:
 460              	.LFB50:
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 461              		.loc 1 392 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 466              		.loc 1 393 0
 467 0000 014B     		ldr	r3, .L35
 468 0002 1868     		ldr	r0, [r3]
 394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 469              		.loc 1 394 0
 470              		@ sp needed
 471 0004 7047     		bx	lr
 472              	.L36:
 473 0006 C046     		.align	2
 474              	.L35:
ARM GAS  /tmp/cc19Ycjl.s 			page 16


 475 0008 ACF7FF1F 		.word	536868780
 476              		.cfi_endproc
 477              	.LFE50:
 479              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 480              		.align	1
 481              		.global	HAL_GetUIDw1
 482              		.syntax unified
 483              		.code	16
 484              		.thumb_func
 485              		.fpu softvfp
 487              	HAL_GetUIDw1:
 488              	.LFB51:
 395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 489              		.loc 1 401 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 494              		.loc 1 402 0
 495 0000 014B     		ldr	r3, .L38
 496 0002 1868     		ldr	r0, [r3]
 403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 497              		.loc 1 403 0
 498              		@ sp needed
 499 0004 7047     		bx	lr
 500              	.L39:
 501 0006 C046     		.align	2
 502              	.L38:
 503 0008 B0F7FF1F 		.word	536868784
 504              		.cfi_endproc
 505              	.LFE51:
 507              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 508              		.align	1
 509              		.global	HAL_GetUIDw2
 510              		.syntax unified
 511              		.code	16
 512              		.thumb_func
 513              		.fpu softvfp
 515              	HAL_GetUIDw2:
 516              	.LFB52:
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 517              		.loc 1 410 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc19Ycjl.s 			page 17


 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 522              		.loc 1 411 0
 523 0000 014B     		ldr	r3, .L41
 524 0002 1868     		ldr	r0, [r3]
 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 525              		.loc 1 412 0
 526              		@ sp needed
 527 0004 7047     		bx	lr
 528              	.L42:
 529 0006 C046     		.align	2
 530              	.L41:
 531 0008 B4F7FF1F 		.word	536868788
 532              		.cfi_endproc
 533              	.LFE52:
 535              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 536              		.align	1
 537              		.global	HAL_DBGMCU_EnableDBGStopMode
 538              		.syntax unified
 539              		.code	16
 540              		.thumb_func
 541              		.fpu softvfp
 543              	HAL_DBGMCU_EnableDBGStopMode:
 544              	.LFB53:
 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode       
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 545              		.loc 1 419 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 550              		.loc 1 420 0
 551 0000 024A     		ldr	r2, .L44
 552 0002 5368     		ldr	r3, [r2, #4]
 553 0004 0221     		movs	r1, #2
 554 0006 0B43     		orrs	r3, r1
 555 0008 5360     		str	r3, [r2, #4]
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 556              		.loc 1 421 0
 557              		@ sp needed
 558 000a 7047     		bx	lr
 559              	.L45:
 560              		.align	2
 561              	.L44:
 562 000c 00580140 		.word	1073829888
 563              		.cfi_endproc
 564              	.LFE53:
 566              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 567              		.align	1
 568              		.global	HAL_DBGMCU_DisableDBGStopMode
ARM GAS  /tmp/cc19Ycjl.s 			page 18


 569              		.syntax unified
 570              		.code	16
 571              		.thumb_func
 572              		.fpu softvfp
 574              	HAL_DBGMCU_DisableDBGStopMode:
 575              	.LFB54:
 422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode       
 425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 576              		.loc 1 428 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 581              		.loc 1 429 0
 582 0000 024A     		ldr	r2, .L47
 583 0002 5368     		ldr	r3, [r2, #4]
 584 0004 0221     		movs	r1, #2
 585 0006 8B43     		bics	r3, r1
 586 0008 5360     		str	r3, [r2, #4]
 430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 587              		.loc 1 430 0
 588              		@ sp needed
 589 000a 7047     		bx	lr
 590              	.L48:
 591              		.align	2
 592              	.L47:
 593 000c 00580140 		.word	1073829888
 594              		.cfi_endproc
 595              	.LFE54:
 597              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 598              		.align	1
 599              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 600              		.syntax unified
 601              		.code	16
 602              		.thumb_func
 603              		.fpu softvfp
 605              	HAL_DBGMCU_EnableDBGStandbyMode:
 606              	.LFB55:
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode       
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 607              		.loc 1 437 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
ARM GAS  /tmp/cc19Ycjl.s 			page 19


 612              		.loc 1 438 0
 613 0000 024A     		ldr	r2, .L50
 614 0002 5368     		ldr	r3, [r2, #4]
 615 0004 0421     		movs	r1, #4
 616 0006 0B43     		orrs	r3, r1
 617 0008 5360     		str	r3, [r2, #4]
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 618              		.loc 1 439 0
 619              		@ sp needed
 620 000a 7047     		bx	lr
 621              	.L51:
 622              		.align	2
 623              	.L50:
 624 000c 00580140 		.word	1073829888
 625              		.cfi_endproc
 626              	.LFE55:
 628              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 629              		.align	1
 630              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 631              		.syntax unified
 632              		.code	16
 633              		.thumb_func
 634              		.fpu softvfp
 636              	HAL_DBGMCU_DisableDBGStandbyMode:
 637              	.LFB56:
 440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode       
 443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 638              		.loc 1 446 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 643              		.loc 1 447 0
 644 0000 024A     		ldr	r2, .L53
 645 0002 5368     		ldr	r3, [r2, #4]
 646 0004 0421     		movs	r1, #4
 647 0006 8B43     		bics	r3, r1
 648 0008 5360     		str	r3, [r2, #4]
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 649              		.loc 1 448 0
 650              		@ sp needed
 651 000a 7047     		bx	lr
 652              	.L54:
 653              		.align	2
 654              	.L53:
 655 000c 00580140 		.word	1073829888
 656              		.cfi_endproc
 657              	.LFE56:
 659              		.comm	uwTick,4,4
 660              		.text
 661              	.Letext0:
ARM GAS  /tmp/cc19Ycjl.s 			page 20


 662              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 663              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 664              		.file 4 "cube/Drivers/CMSIS/Include/core_cm0.h"
 665              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 666              		.file 6 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 667              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 668              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 669              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 670              		.file 10 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/re
 671              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 672              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 673              		.file 13 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/cc19Ycjl.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal.c
     /tmp/cc19Ycjl.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc19Ycjl.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc19Ycjl.s:38     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cc19Ycjl.s:45     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cc19Ycjl.s:59     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cc19Ycjl.s:66     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cc19Ycjl.s:102    .text.HAL_DeInit:0000000000000020 $d
     /tmp/cc19Ycjl.s:108    .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc19Ycjl.s:115    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc19Ycjl.s:152    .text.HAL_Init:0000000000000000 $t
     /tmp/cc19Ycjl.s:159    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cc19Ycjl.s:189    .text.HAL_Init:000000000000001c $d
     /tmp/cc19Ycjl.s:194    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cc19Ycjl.s:201    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cc19Ycjl.s:219    .text.HAL_IncTick:000000000000000c $d
                            *COM*:0000000000000004 uwTick
     /tmp/cc19Ycjl.s:224    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cc19Ycjl.s:231    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cc19Ycjl.s:247    .text.HAL_GetTick:0000000000000008 $d
     /tmp/cc19Ycjl.s:252    .text.HAL_Delay:0000000000000000 $t
     /tmp/cc19Ycjl.s:259    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cc19Ycjl.s:305    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc19Ycjl.s:312    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc19Ycjl.s:331    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/cc19Ycjl.s:336    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc19Ycjl.s:343    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc19Ycjl.s:362    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/cc19Ycjl.s:367    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cc19Ycjl.s:374    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cc19Ycjl.s:388    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/cc19Ycjl.s:393    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cc19Ycjl.s:400    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cc19Ycjl.s:417    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/cc19Ycjl.s:422    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cc19Ycjl.s:429    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cc19Ycjl.s:447    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/cc19Ycjl.s:452    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/cc19Ycjl.s:459    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/cc19Ycjl.s:475    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/cc19Ycjl.s:480    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/cc19Ycjl.s:487    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/cc19Ycjl.s:503    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/cc19Ycjl.s:508    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/cc19Ycjl.s:515    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/cc19Ycjl.s:531    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/cc19Ycjl.s:536    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cc19Ycjl.s:543    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/cc19Ycjl.s:562    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/cc19Ycjl.s:567    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cc19Ycjl.s:574    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cc19Ycjl.s:593    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/cc19Ycjl.s:598    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cc19Ycjl.s:605    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cc19Ycjl.s:624    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/cc19Ycjl.s:629    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
ARM GAS  /tmp/cc19Ycjl.s 			page 22


     /tmp/cc19Ycjl.s:636    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cc19Ycjl.s:655    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
                           .group:0000000000000000 wm4.0.f4162676b8f623651f7a1199aa7e48f7
                           .group:0000000000000000 wm4.main.h.42.f591c98852cf8b31b9d28a7417223f7f
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.e02fa95cc55e74dee1039d0a6f374aae
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df
ARM GAS  /tmp/cc19Ycjl.s 			page 23



UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
