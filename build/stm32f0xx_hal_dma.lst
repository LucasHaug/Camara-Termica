ARM GAS  /tmp/cc9n8MQ0.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_dma.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.DMA_SetConfig,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	DMA_SetConfig:
  23              	.LFB49:
  24              		.file 1 "cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c"
   1:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
   2:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   ******************************************************************************
   3:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @file    stm32f0xx_hal_dma.c
   4:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @author  MCD Application Team
   5:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *    
   7:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *         This file provides firmware functions to manage the following 
   8:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *         functionalities of the Direct Memory Access (DMA) peripheral:
   9:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  10:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *           + IO operation functions
  11:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *           + Peripheral State and errors functions
  12:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   @verbatim     
  13:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   ==============================================================================      
  14:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****                         ##### How to use this driver #####
  15:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   ============================================================================== 
  16:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   [..]
  17:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Channel
  18:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        (except for internal SRAM / FLASH memories: no initialization is 
  19:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        necessary). Please refer to Reference manual for connection between peripherals
  20:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        and DMA requests .
  21:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
  22:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****    (#) For a given Channel, program the required configuration through the following parameters:   
  23:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  24:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        Circular or Normal mode, Channel Priority level, Source and Destination Increment mode, 
  25:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        using HAL_DMA_Init() function.
  26:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
  27:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****    (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of er
  28:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        detection.
  29:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****                     
  30:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****    (#) Use HAL_DMA_Abort() function to abort the current transfer
  31:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****                    
  32:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  33:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      *** Polling mode IO operation ***
  34:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      =================================   
ARM GAS  /tmp/cc9n8MQ0.s 			page 2


  35:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     [..] 
  36:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  37:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           address and destination address and the Length of data to be transferred
  38:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  39:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           case a fixed Timeout can be configured by User depending from his application.
  40:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
  41:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      *** Interrupt mode IO operation ***    
  42:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      =================================== 
  43:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     [..]
  44:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  45:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ() 
  46:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  47:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           Source address and destination address and the Length of data to be transferred. 
  48:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           In this case the DMA interrupt is configured 
  49:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Use HAL_DMA_Channel_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  50:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  51:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           add his own function by customization of function pointer XferCpltCallback and 
  52:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           XferErrorCallback (i.e a member of DMA handle structure). 
  53:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
  54:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  55:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      ============================================= 
  56:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      [..]
  57:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  58:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
  59:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      [..] 
  60:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros  
  61:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
  62:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   @endverbatim
  63:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   ******************************************************************************
  64:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @attention
  65:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *
  66:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  67:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *
  68:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * Redistribution and use in source and binary forms, with or without modification,
  69:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * are permitted provided that the following conditions are met:
  70:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  71:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *      this list of conditions and the following disclaimer.
  72:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  73:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *      this list of conditions and the following disclaimer in the documentation
  74:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *      and/or other materials provided with the distribution.
  75:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  76:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *      may be used to endorse or promote products derived from this software
  77:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *      without specific prior written permission.
  78:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *
  79:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  80:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  81:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  82:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  83:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  84:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  85:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  86:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  87:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  88:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  89:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *
  90:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   ******************************************************************************
  91:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */ 
ARM GAS  /tmp/cc9n8MQ0.s 			page 3


  92:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
  93:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
  94:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** #include "stm32f0xx_hal.h"
  95:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
  96:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /** @addtogroup STM32F0xx_HAL_Driver
  97:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @{
  98:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
  99:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /** @defgroup DMA DMA
 102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief DMA HAL module driver
 103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @{
 104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /* Private typedef -----------------------------------------------------------*/
 109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /* Private define ------------------------------------------------------------*/
 110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /* Private macro -------------------------------------------------------------*/
 111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /* Private function prototypes -----------------------------------------------*/
 113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /** @defgroup DMA_Private_Functions DMA Private Functions
 114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @{
 115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** static void DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @}
 120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions DMA Exported Functions
 125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @{
 126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group1 Initialization and de-initialization functions
 129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  *  @brief   Initialization and de-initialization functions 
 130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  *
 131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** @verbatim   
 132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  ===============================================================================
 133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  ===============================================================================  
 135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     [..]
 136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Channel source
 137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Channel priority value.
 139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     [..]
 140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     reference manual.  
 142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** @endverbatim
 144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @{
 145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
ARM GAS  /tmp/cc9n8MQ0.s 			page 4


 149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and initialize the associated handle.
 150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.  
 152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL status
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** { 
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   uint32_t tmp = 0U;
 157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if(NULL == hdma)
 160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     return HAL_ERROR;
 162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Check the parameters */
 165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Change DMA peripheral state */
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
 176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Get the CR register value */
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   tmp = hdma->Instance->CCR;
 179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR bits */
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****                       DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****                       DMA_CCR_DIR));
 184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Prepare the DMA Channel configuration */
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   tmp |=  hdma->Init.Direction        |
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Write to DMA Channel CR register */
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->Instance->CCR = tmp;  
 193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Initialize DmaBaseAddress and ChannelIndex parameters used 
 195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   DMA_CalcBaseAndBitshift(hdma);
 197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Clean callbacks */
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;
 203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Initialise the error code */
 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
ARM GAS  /tmp/cc9n8MQ0.s 			page 5


 206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Initialize the DMA state*/
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Allocate lock resource and initialize it */
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->Lock = HAL_UNLOCKED;
 212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return HAL_OK;
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }  
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  DeInitialize the DMA peripheral 
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.  
 220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL status
 221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if(NULL == hdma)
 226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     return HAL_ERROR;
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Check the parameters */
 231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Disable the selected DMA Channelx */
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->Instance->CCR &= ~DMA_CCR_EN;
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Reset DMA Channel control register */
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->Instance->CCR  = 0U;
 238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Reset DMA Channel Number of Data to Transfer register */
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->Instance->CNDTR = 0U;
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Reset DMA Channel peripheral address register */
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->Instance->CPAR  = 0U;
 244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Reset DMA Channel memory address register */
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->Instance->CMAR = 0U;
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /* Get DMA Base Address */  
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   DMA_CalcBaseAndBitshift(hdma);
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Clear all flags */
 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Initialize the error code */
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Initialize the DMA state */
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Release Lock */
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
ARM GAS  /tmp/cc9n8MQ0.s 			page 6


 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return HAL_OK;
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @}
 268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group2 Input and Output operation functions 
 271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  *  @brief   I/O operation functions  
 272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  *
 273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** @verbatim   
 274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  ===============================================================================
 275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****                       #####  IO operation functions  #####
 276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  ===============================================================================  
 277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           Start DMA transfer with interrupt
 281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Abort DMA transfer
 282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Poll for transfer complete
 283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** @endverbatim
 286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @{
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Start the DMA Transfer.
 291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *              the configuration information for the specified DMA Channel.  
 293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL status
 297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	HAL_StatusTypeDef status = HAL_OK;
 301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Check the parameters */
 303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Process locked */
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Change DMA peripheral state */  
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	hdma->State = HAL_DMA_STATE_BUSY;
 312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Disable the peripheral */
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	hdma->Instance->CCR &= ~DMA_CCR_EN;  
 317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Configure the source, destination address and the data length */
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
ARM GAS  /tmp/cc9n8MQ0.s 			page 7


 320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Enable the Peripheral */
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	hdma->Instance->CCR |= DMA_CCR_EN;  
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else
 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Process Unlocked */
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	__HAL_UNLOCK(hdma);
 328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Remain BUSY */
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	status = HAL_BUSY;
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }  
 332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return status; 
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** } 
 335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *                     the configuration information for the specified DMA Channel.  
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL status
 344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	HAL_StatusTypeDef status = HAL_OK;
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Check the parameters */
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Process locked */
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Change DMA peripheral state */  
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	hdma->State = HAL_DMA_STATE_BUSY;
 359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Disable the peripheral */
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	hdma->Instance->CCR &= ~DMA_CCR_EN;
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Configure the source, destination address and the data length */  
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Enable the transfer complete, & transfer error interrupts */
 369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Half transfer interrupt is optional: enable it only if associated callback is available */
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     if(NULL != hdma->XferHalfCpltCallback )
 371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       hdma->Instance->CCR |= (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     }
 374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	else
 375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	{
 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		hdma->Instance->CCR |= (DMA_IT_TC | DMA_IT_TE);
ARM GAS  /tmp/cc9n8MQ0.s 			page 8


 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		hdma->Instance->CCR &= ~DMA_IT_HT;
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	}
 379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Enable the Peripheral */
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	hdma->Instance->CCR |= DMA_CCR_EN;
 382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Process Unlocked */
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     __HAL_UNLOCK(hdma); 
 387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Remain BUSY */
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     status = HAL_BUSY;
 390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }     
 391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return status;    
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** } 
 394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Abort the DMA Transfer.
 397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
 398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.                  
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL status
 400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
 403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	/* Disable DMA IT */
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	 hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	
 406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	/* Disable the channel */
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	hdma->Instance->CCR &= ~DMA_CCR_EN;
 408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	/* Clear all flags */
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	hdma->DmaBaseAddress->IFCR = (DMA_FLAG_GL1 << hdma->ChannelIndex);
 411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	
 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	/* Change the DMA state*/
 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	hdma->State = HAL_DMA_STATE_READY; 
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	
 415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	/* Process Unlocked */
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	__HAL_UNLOCK(hdma);
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	
 418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	return HAL_OK; 
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Abort the DMA Transfer in Interrupt mode.
 423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
 424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
 425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL status
 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {  
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* no transfer ongoing */
ARM GAS  /tmp/cc9n8MQ0.s 			page 9


 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     status = HAL_ERROR;
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   { 
 440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Disable DMA IT */
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Disable the channel */
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->Instance->CCR &= ~DMA_CCR_EN;
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Clear all flags */
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Change the DMA state */
 451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Process Unlocked */
 454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Call User Abort callback */ 
 457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     if(hdma->XferAbortCallback != NULL)
 458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       hdma->XferAbortCallback(hdma);
 460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     } 
 461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return status;
 463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma    pointer to a DMA_HandleTypeDef structure that contains
 468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *                  the configuration information for the specified DMA Channel.
 469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  CompleteLevel Specifies the DMA level complete.  
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  Timeout       Timeout duration.
 471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL status
 472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, uint32_t CompleteLevel, uint32_t
 474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
 475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   uint32_t temp;
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   uint32_t tickstart = 0U;
 477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* no transfer ongoing */
 481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     return HAL_ERROR;
 484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Polling mode not supported in circular mode */
 487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if (RESET != (hdma->Instance->CCR & DMA_CCR_CIRC))
 488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     return HAL_ERROR;
ARM GAS  /tmp/cc9n8MQ0.s 			page 10


 491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Get the level transfer complete flag */
 494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if(HAL_DMA_FULL_TRANSFER == CompleteLevel)
 495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Transfer Complete flag */
 497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     temp = DMA_FLAG_TC1 << hdma->ChannelIndex;
 498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else
 500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Half Transfer Complete flag */
 502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     temp = DMA_FLAG_HT1 << hdma->ChannelIndex;
 503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Get tick */
 506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   tickstart = HAL_GetTick();
 507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   while(RESET == (hdma->DmaBaseAddress->ISR & temp))
 509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     if(RESET != (hdma->DmaBaseAddress->ISR & (DMA_FLAG_TE1 << hdma->ChannelIndex)))
 511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {      
 512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       /* When a DMA transfer error occurs */
 513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       /* A hardware clear of its EN bits is performed */
 514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       /* Clear all flags */
 515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       
 517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       /* Update error code */
 518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TE;
 519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       /* Change the DMA state */
 521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;       
 522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       /* Process Unlocked */
 524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       
 526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       return HAL_ERROR;      
 527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     }      
 528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Check for the Timeout */
 529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       {
 533:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         /* Update error code */
 534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         
 536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         /* Change the DMA state */
 537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 539:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         /* Process Unlocked */
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 541:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         return HAL_ERROR;
 543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       }
 544:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     }
 545:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if(HAL_DMA_FULL_TRANSFER == CompleteLevel)
ARM GAS  /tmp/cc9n8MQ0.s 			page 11


 548:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Clear the transfer complete flag */
 550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = DMA_FLAG_TC1 << hdma->ChannelIndex;
 551:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 552:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* The selected Channelx EN bit is cleared (DMA is disabled and 
 553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     all transfers are complete) */
 554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 555:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else
 557:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   { 
 558:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Clear the half transfer complete flag */
 559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = DMA_FLAG_HT1 << hdma->ChannelIndex;
 560:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 562:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Process unlocked */
 563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);  
 564:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return HAL_OK;
 566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 568:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 569:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Handle DMA interrupt request.
 570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 571:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.  
 572:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval None
 573:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 574:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
 576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   uint32_t source_it = hdma->Instance->CCR;
 578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           
 579:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_
 581:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 584:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	{
 585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		/* Disable the half transfer interrupt */
 586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		hdma->Instance->CCR &= ~DMA_IT_HT;
 587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	}
 588:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Clear the half transfer complete flag */
 590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	hdma->DmaBaseAddress->IFCR = DMA_FLAG_HT1 << hdma->ChannelIndex;
 591:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 592:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* DMA peripheral state is not updated in Half Transfer */
 593:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* State is updated only in Transfer Complete case */
 594:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	if(hdma->XferHalfCpltCallback != NULL)
 596:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	{
 597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		/* Half transfer callback */
 598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		hdma->XferHalfCpltCallback(hdma);
 599:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	}
 600:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 601:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 602:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else if ((RESET != (flag_it & (DMA_FLAG_TC1 << hdma->ChannelIndex))) && (RESET != (source_it & DM
 604:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
ARM GAS  /tmp/cc9n8MQ0.s 			page 12


 605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 606:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	{
 607:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		/* Disable the transfer complete  & transfer error interrupts */
 608:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		/* if the DMA mode is not CIRCULAR */
 609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_TE);
 610:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		
 611:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		/* Change the DMA state */
 612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		hdma->State = HAL_DMA_STATE_READY;
 613:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	}
 614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 615:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Clear the transfer complete flag */
 616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	hdma->DmaBaseAddress->IFCR = DMA_FLAG_TC1 << hdma->ChannelIndex;
 617:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 618:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* Process Unlocked */
 619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	__HAL_UNLOCK(hdma);
 620:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	if(hdma->XferCpltCallback != NULL)
 622:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	{
 623:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		/* Transfer complete callback */
 624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		hdma->XferCpltCallback(hdma);
 625:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	}
 626:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 627:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 628:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else if (( RESET != (flag_it & (DMA_FLAG_TE1 << hdma->ChannelIndex))) && (RESET != (source_it & D
 630:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 631:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	/* When a DMA transfer error occurs */
 632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* A hardware clear of its EN bits is performed */
 633:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Then, disable all DMA interrupts */
 634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 635:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 636:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Clear all flags */
 637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 638:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 639:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Update error code */
 640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_TE;
 641:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Change the DMA state */
 643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;    
 644:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Process Unlocked */
 646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     __HAL_UNLOCK(hdma); 
 647:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 649:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     	/* Transfer error callback */
 651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     	hdma->XferErrorCallback(hdma);
 652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     }
 653:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****    }
 654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }  
 655:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 656:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Register callbacks
 658:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 659:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 660:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
ARM GAS  /tmp/cc9n8MQ0.s 			page 13


 662:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  pCallback            pointer to private callback function which has pointer to 
 663:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL status
 665:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */                          
 666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
 668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 670:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Process locked */
 671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 672:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 674:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     switch (CallbackID)
 676:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 677:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      case  HAL_DMA_XFER_CPLT_CB_ID:
 678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferCpltCallback = pCallback;
 679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;
 680:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        
 681:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferHalfCpltCallback = pCallback;
 683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;         
 684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 685:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      case  HAL_DMA_XFER_ERROR_CB_ID:
 686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferErrorCallback = pCallback;
 687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;         
 688:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            
 689:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      case  HAL_DMA_XFER_ABORT_CB_ID:
 690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferAbortCallback = pCallback;
 691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break; 
 692:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            
 693:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      default:
 694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            status = HAL_ERROR;
 695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;                                                            
 696:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     }
 697:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 698:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else
 699:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     status = HAL_ERROR;
 701:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   } 
 702:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 703:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Release Lock */
 704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 705:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 706:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return status;
 707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 708:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 709:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 710:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  UnRegister callbacks
 711:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 712:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 713:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 714:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
 715:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL status
 716:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */              
 717:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
 718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
ARM GAS  /tmp/cc9n8MQ0.s 			page 14


 719:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 720:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 721:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Process locked */
 722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 723:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 725:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     switch (CallbackID)
 727:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 728:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      case  HAL_DMA_XFER_CPLT_CB_ID:
 729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferCpltCallback = NULL;
 730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;
 731:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        
 732:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferHalfCpltCallback = NULL;
 734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;         
 735:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 736:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      case  HAL_DMA_XFER_ERROR_CB_ID:
 737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferErrorCallback = NULL;
 738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;         
 739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            
 740:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      case  HAL_DMA_XFER_ABORT_CB_ID:
 741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferAbortCallback = NULL;
 742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break; 
 743:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      
 744:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
 745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferCpltCallback = NULL;
 746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferHalfCpltCallback = NULL;
 747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferErrorCallback = NULL;
 748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferAbortCallback = NULL;
 749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break; 
 750:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      
 751:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     default:
 752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            status = HAL_ERROR;
 753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;                                                            
 754:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     }
 755:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else
 757:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     status = HAL_ERROR;
 759:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   } 
 760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 761:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Release Lock */
 762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 763:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 764:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return status;
 765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 766:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 767:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @}
 769:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 771:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group3 Peripheral State functions
 772:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  *  @brief    Peripheral State functions 
 773:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  *
 774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** @verbatim   
 775:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  ===============================================================================
ARM GAS  /tmp/cc9n8MQ0.s 			page 15


 776:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****                     ##### State and Errors functions #####
 777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****  ===============================================================================  
 778:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     [..]
 779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     This subsection provides functions allowing to
 780:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Check the DMA state
 781:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       (+) Get error code
 782:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 783:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** @endverbatim
 784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @{
 785:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */  
 786:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 788:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Returns the DMA state.
 789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.  
 791:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL state
 792:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 793:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
 794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
 795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return hdma->State;
 796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 798:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Return the DMA error code
 800:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 801:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *              the configuration information for the specified DMA Channel.
 802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval DMA Error Code
 803:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 804:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
 805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
 806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return hdma->ErrorCode;
 807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 808:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 810:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @}
 811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 814:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @}
 815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 816:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @{
 819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 820:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 822:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  Set the DMA Transfer parameters.
 823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 824:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *                     the configuration information for the specified DMA Channel.  
 825:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 826:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 827:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval HAL status
 829:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
  25              		.loc 1 831 0
ARM GAS  /tmp/cc9n8MQ0.s 			page 16


  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 6, -8
  35              		.cfi_offset 14, -4
 832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	/* Clear all flags */
 833:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->DmaBaseAddress->IFCR  = (DMA_FLAG_GL1 << hdma->ChannelIndex);
  36              		.loc 1 833 0
  37 0002 C56B     		ldr	r5, [r0, #60]
  38 0004 0124     		movs	r4, #1
  39 0006 066C     		ldr	r6, [r0, #64]
  40 0008 B440     		lsls	r4, r4, r6
  41 000a 6C60     		str	r4, [r5, #4]
 834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 835:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Configure DMA Channel data length */
 836:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->Instance->CNDTR = DataLength;
  42              		.loc 1 836 0
  43 000c 0468     		ldr	r4, [r0]
  44 000e 6360     		str	r3, [r4, #4]
 837:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 838:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Memory to Peripheral */
 839:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
  45              		.loc 1 839 0
  46 0010 4368     		ldr	r3, [r0, #4]
  47              	.LVL1:
  48 0012 102B     		cmp	r3, #16
  49 0014 04D0     		beq	.L4
 840:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {   
 841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Configure DMA Channel destination address */
 842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->Instance->CPAR = DstAddress;
 843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Configure DMA Channel source address */
 845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->Instance->CMAR = SrcAddress;
 846:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 847:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Peripheral to Memory */
 848:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else
 849:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 850:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Configure DMA Channel source address */
 851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->Instance->CPAR = SrcAddress;
  50              		.loc 1 851 0
  51 0016 0368     		ldr	r3, [r0]
  52 0018 9960     		str	r1, [r3, #8]
  53              	.LVL2:
 852:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 853:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* Configure DMA Channel destination address */
 854:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->Instance->CMAR = DstAddress;
  54              		.loc 1 854 0
  55 001a 0368     		ldr	r3, [r0]
  56 001c DA60     		str	r2, [r3, #12]
  57              	.L1:
 855:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 856:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
ARM GAS  /tmp/cc9n8MQ0.s 			page 17


  58              		.loc 1 856 0
  59              		@ sp needed
  60 001e 70BD     		pop	{r4, r5, r6, pc}
  61              	.LVL3:
  62              	.L4:
 842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
  63              		.loc 1 842 0
  64 0020 0368     		ldr	r3, [r0]
  65 0022 9A60     		str	r2, [r3, #8]
  66              	.LVL4:
 845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
  67              		.loc 1 845 0
  68 0024 0368     		ldr	r3, [r0]
  69 0026 D960     		str	r1, [r3, #12]
  70 0028 F9E7     		b	.L1
  71              		.cfi_endproc
  72              	.LFE49:
  74              		.global	__aeabi_uidiv
  75              		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.code	16
  79              		.thumb_func
  80              		.fpu softvfp
  82              	DMA_CalcBaseAndBitshift:
  83              	.LFB50:
 857:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 858:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** /**
 859:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @brief  set the DMA base address and channel index depending on DMA instance
 860:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 861:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
 862:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   * @retval None
 863:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   */
 864:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** static void DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
 865:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** {
  84              		.loc 1 865 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              	.LVL5:
  89 0000 10B5     		push	{r4, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 4, -8
  92              		.cfi_offset 14, -4
  93 0002 0400     		movs	r4, r0
 866:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** #if defined (DMA2)
 867:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* calculation of the channel index */
 868:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   if ((uint32_t)(hdma->Instance) < (uint32_t)(DMA2_Channel1))
 869:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 870:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* DMA1 */
 871:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Ch
 872:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->DmaBaseAddress = DMA1;
 873:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 874:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   else 
 875:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 876:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     /* DMA2 */
 877:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA2_Channel1) / ((uint32_t)DMA2_Ch
ARM GAS  /tmp/cc9n8MQ0.s 			page 18


 878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     hdma->DmaBaseAddress = DMA2;
 879:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 880:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** #else
 881:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* calculation of the channel index */
 882:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* DMA1 */
 883:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Chan
  94              		.loc 1 883 0
  95 0004 0368     		ldr	r3, [r0]
  96 0006 064A     		ldr	r2, .L6
  97 0008 9446     		mov	ip, r2
  98 000a 6344     		add	r3, r3, ip
  99 000c 1800     		movs	r0, r3
 100              	.LVL6:
 101 000e 1421     		movs	r1, #20
 102 0010 FFF7FEFF 		bl	__aeabi_uidiv
 103              	.LVL7:
 104 0014 8000     		lsls	r0, r0, #2
 105 0016 2064     		str	r0, [r4, #64]
 884:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
 106              		.loc 1 884 0
 107 0018 024B     		ldr	r3, .L6+4
 108 001a E363     		str	r3, [r4, #60]
 885:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** #endif
 886:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 109              		.loc 1 886 0
 110              		@ sp needed
 111              	.LVL8:
 112 001c 10BD     		pop	{r4, pc}
 113              	.L7:
 114 001e C046     		.align	2
 115              	.L6:
 116 0020 F8FFFDBF 		.word	-1073872904
 117 0024 00000240 		.word	1073872896
 118              		.cfi_endproc
 119              	.LFE50:
 121              		.section	.text.HAL_DMA_Init,"ax",%progbits
 122              		.align	1
 123              		.global	HAL_DMA_Init
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 127              		.fpu softvfp
 129              	HAL_DMA_Init:
 130              	.LFB37:
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   uint32_t tmp = 0U;
 131              		.loc 1 155 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              	.LVL9:
 136 0000 70B5     		push	{r4, r5, r6, lr}
 137              		.cfi_def_cfa_offset 16
 138              		.cfi_offset 4, -16
 139              		.cfi_offset 5, -12
 140              		.cfi_offset 6, -8
 141              		.cfi_offset 14, -4
 142 0002 041E     		subs	r4, r0, #0
ARM GAS  /tmp/cc9n8MQ0.s 			page 19


 143              	.LVL10:
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 144              		.loc 1 159 0
 145 0004 24D0     		beq	.L10
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 146              		.loc 1 175 0
 147 0006 2125     		movs	r5, #33
 148 0008 0223     		movs	r3, #2
 149 000a 4355     		strb	r3, [r0, r5]
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 150              		.loc 1 178 0
 151 000c 0168     		ldr	r1, [r0]
 152 000e 0B68     		ldr	r3, [r1]
 153              	.LVL11:
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****                       DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
 154              		.loc 1 181 0
 155 0010 104A     		ldr	r2, .L11
 156 0012 1A40     		ands	r2, r3
 157              	.LVL12:
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 158              		.loc 1 186 0
 159 0014 4368     		ldr	r3, [r0, #4]
 160 0016 8068     		ldr	r0, [r0, #8]
 161              	.LVL13:
 162 0018 0343     		orrs	r3, r0
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 163              		.loc 1 187 0
 164 001a E068     		ldr	r0, [r4, #12]
 165 001c 0343     		orrs	r3, r0
 166 001e 2069     		ldr	r0, [r4, #16]
 167 0020 0343     		orrs	r3, r0
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 168              		.loc 1 188 0
 169 0022 6069     		ldr	r0, [r4, #20]
 170 0024 0343     		orrs	r3, r0
 171 0026 A069     		ldr	r0, [r4, #24]
 172 0028 0343     		orrs	r3, r0
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 173              		.loc 1 189 0
 174 002a E069     		ldr	r0, [r4, #28]
 175 002c 0343     		orrs	r3, r0
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 176              		.loc 1 186 0
 177 002e 1343     		orrs	r3, r2
 178              	.LVL14:
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 179              		.loc 1 192 0
 180 0030 0B60     		str	r3, [r1]
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 181              		.loc 1 196 0
 182 0032 2000     		movs	r0, r4
 183 0034 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 184              	.LVL15:
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 185              		.loc 1 199 0
 186 0038 0023     		movs	r3, #0
 187 003a A362     		str	r3, [r4, #40]
ARM GAS  /tmp/cc9n8MQ0.s 			page 20


 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 188              		.loc 1 200 0
 189 003c E362     		str	r3, [r4, #44]
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;
 190              		.loc 1 201 0
 191 003e 2363     		str	r3, [r4, #48]
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 192              		.loc 1 202 0
 193 0040 6363     		str	r3, [r4, #52]
 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 194              		.loc 1 205 0
 195 0042 A363     		str	r3, [r4, #56]
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 196              		.loc 1 208 0
 197 0044 0122     		movs	r2, #1
 198 0046 6255     		strb	r2, [r4, r5]
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 199              		.loc 1 211 0
 200 0048 1F32     		adds	r2, r2, #31
 201 004a A354     		strb	r3, [r4, r2]
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }  
 202              		.loc 1 213 0
 203 004c 0020     		movs	r0, #0
 204              	.L9:
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 205              		.loc 1 214 0
 206              		@ sp needed
 207              	.LVL16:
 208 004e 70BD     		pop	{r4, r5, r6, pc}
 209              	.LVL17:
 210              	.L10:
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 211              		.loc 1 161 0
 212 0050 0120     		movs	r0, #1
 213              	.LVL18:
 214 0052 FCE7     		b	.L9
 215              	.L12:
 216              		.align	2
 217              	.L11:
 218 0054 0FC0FFFF 		.word	-16369
 219              		.cfi_endproc
 220              	.LFE37:
 222              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 223              		.align	1
 224              		.global	HAL_DMA_DeInit
 225              		.syntax unified
 226              		.code	16
 227              		.thumb_func
 228              		.fpu softvfp
 230              	HAL_DMA_DeInit:
 231              	.LFB38:
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 232              		.loc 1 223 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL19:
ARM GAS  /tmp/cc9n8MQ0.s 			page 21


 237 0000 70B5     		push	{r4, r5, r6, lr}
 238              		.cfi_def_cfa_offset 16
 239              		.cfi_offset 4, -16
 240              		.cfi_offset 5, -12
 241              		.cfi_offset 6, -8
 242              		.cfi_offset 14, -4
 243 0002 041E     		subs	r4, r0, #0
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 244              		.loc 1 225 0
 245 0004 1AD0     		beq	.L15
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 246              		.loc 1 234 0
 247 0006 0268     		ldr	r2, [r0]
 248 0008 1368     		ldr	r3, [r2]
 249 000a 0126     		movs	r6, #1
 250 000c B343     		bics	r3, r6
 251 000e 1360     		str	r3, [r2]
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 252              		.loc 1 237 0
 253 0010 0368     		ldr	r3, [r0]
 254 0012 0025     		movs	r5, #0
 255 0014 1D60     		str	r5, [r3]
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 256              		.loc 1 240 0
 257 0016 0368     		ldr	r3, [r0]
 258 0018 5D60     		str	r5, [r3, #4]
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 259              		.loc 1 243 0
 260 001a 0368     		ldr	r3, [r0]
 261 001c 9D60     		str	r5, [r3, #8]
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 262              		.loc 1 246 0
 263 001e 0368     		ldr	r3, [r0]
 264 0020 DD60     		str	r5, [r3, #12]
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 265              		.loc 1 249 0
 266 0022 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 267              	.LVL20:
 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 268              		.loc 1 252 0
 269 0026 E36B     		ldr	r3, [r4, #60]
 270 0028 226C     		ldr	r2, [r4, #64]
 271 002a 9640     		lsls	r6, r6, r2
 272 002c 5E60     		str	r6, [r3, #4]
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 273              		.loc 1 255 0
 274 002e A563     		str	r5, [r4, #56]
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 275              		.loc 1 258 0
 276 0030 2123     		movs	r3, #33
 277 0032 E554     		strb	r5, [r4, r3]
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 278              		.loc 1 261 0
 279 0034 013B     		subs	r3, r3, #1
 280 0036 E554     		strb	r5, [r4, r3]
 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 281              		.loc 1 263 0
ARM GAS  /tmp/cc9n8MQ0.s 			page 22


 282 0038 0020     		movs	r0, #0
 283              	.L14:
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 284              		.loc 1 264 0
 285              		@ sp needed
 286              	.LVL21:
 287 003a 70BD     		pop	{r4, r5, r6, pc}
 288              	.LVL22:
 289              	.L15:
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 290              		.loc 1 227 0
 291 003c 0120     		movs	r0, #1
 292              	.LVL23:
 293 003e FCE7     		b	.L14
 294              		.cfi_endproc
 295              	.LFE38:
 297              		.section	.text.HAL_DMA_Start,"ax",%progbits
 298              		.align	1
 299              		.global	HAL_DMA_Start
 300              		.syntax unified
 301              		.code	16
 302              		.thumb_func
 303              		.fpu softvfp
 305              	HAL_DMA_Start:
 306              	.LFB39:
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	HAL_StatusTypeDef status = HAL_OK;
 307              		.loc 1 299 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL24:
 312 0000 70B5     		push	{r4, r5, r6, lr}
 313              		.cfi_def_cfa_offset 16
 314              		.cfi_offset 4, -16
 315              		.cfi_offset 5, -12
 316              		.cfi_offset 6, -8
 317              		.cfi_offset 14, -4
 318 0002 0400     		movs	r4, r0
 319              	.LVL25:
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 320              		.loc 1 306 0
 321 0004 2020     		movs	r0, #32
 322              	.LVL26:
 323 0006 205C     		ldrb	r0, [r4, r0]
 324 0008 0128     		cmp	r0, #1
 325 000a 1ED0     		beq	.L19
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 326              		.loc 1 306 0 is_stmt 0 discriminator 2
 327 000c 2020     		movs	r0, #32
 328 000e 0125     		movs	r5, #1
 329 0010 2554     		strb	r5, [r4, r0]
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 330              		.loc 1 308 0 is_stmt 1 discriminator 2
 331 0012 0130     		adds	r0, r0, #1
 332 0014 205C     		ldrb	r0, [r4, r0]
 333 0016 0128     		cmp	r0, #1
 334 0018 04D0     		beq	.L20
ARM GAS  /tmp/cc9n8MQ0.s 			page 23


 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 335              		.loc 1 327 0
 336 001a 2023     		movs	r3, #32
 337              	.LVL27:
 338 001c 0022     		movs	r2, #0
 339              	.LVL28:
 340 001e E254     		strb	r2, [r4, r3]
 341              	.LVL29:
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }  
 342              		.loc 1 330 0
 343 0020 0220     		movs	r0, #2
 344              	.LVL30:
 345              	.L17:
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 346              		.loc 1 334 0
 347              		@ sp needed
 348              	.LVL31:
 349 0022 70BD     		pop	{r4, r5, r6, pc}
 350              	.LVL32:
 351              	.L20:
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 352              		.loc 1 311 0
 353 0024 2030     		adds	r0, r0, #32
 354 0026 0135     		adds	r5, r5, #1
 355 0028 2554     		strb	r5, [r4, r0]
 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 356              		.loc 1 313 0
 357 002a 0020     		movs	r0, #0
 358 002c A063     		str	r0, [r4, #56]
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 359              		.loc 1 316 0
 360 002e 2668     		ldr	r6, [r4]
 361 0030 3068     		ldr	r0, [r6]
 362 0032 013D     		subs	r5, r5, #1
 363 0034 A843     		bics	r0, r5
 364 0036 3060     		str	r0, [r6]
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 365              		.loc 1 319 0
 366 0038 2000     		movs	r0, r4
 367 003a FFF7FEFF 		bl	DMA_SetConfig
 368              	.LVL33:
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 369              		.loc 1 322 0
 370 003e 2268     		ldr	r2, [r4]
 371 0040 1368     		ldr	r3, [r2]
 372 0042 2B43     		orrs	r3, r5
 373 0044 1360     		str	r3, [r2]
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 374              		.loc 1 300 0
 375 0046 0020     		movs	r0, #0
 376 0048 EBE7     		b	.L17
 377              	.LVL34:
 378              	.L19:
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 379              		.loc 1 306 0
 380 004a 0220     		movs	r0, #2
 381 004c E9E7     		b	.L17
ARM GAS  /tmp/cc9n8MQ0.s 			page 24


 382              		.cfi_endproc
 383              	.LFE39:
 385              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 386              		.align	1
 387              		.global	HAL_DMA_Start_IT
 388              		.syntax unified
 389              		.code	16
 390              		.thumb_func
 391              		.fpu softvfp
 393              	HAL_DMA_Start_IT:
 394              	.LFB40:
 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	HAL_StatusTypeDef status = HAL_OK;
 395              		.loc 1 346 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              	.LVL35:
 400 0000 70B5     		push	{r4, r5, r6, lr}
 401              		.cfi_def_cfa_offset 16
 402              		.cfi_offset 4, -16
 403              		.cfi_offset 5, -12
 404              		.cfi_offset 6, -8
 405              		.cfi_offset 14, -4
 406 0002 0400     		movs	r4, r0
 407              	.LVL36:
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 408              		.loc 1 353 0
 409 0004 2020     		movs	r0, #32
 410              	.LVL37:
 411 0006 205C     		ldrb	r0, [r4, r0]
 412 0008 0128     		cmp	r0, #1
 413 000a 32D0     		beq	.L26
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 414              		.loc 1 353 0 is_stmt 0 discriminator 2
 415 000c 2020     		movs	r0, #32
 416 000e 0125     		movs	r5, #1
 417 0010 2554     		strb	r5, [r4, r0]
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 418              		.loc 1 355 0 is_stmt 1 discriminator 2
 419 0012 0130     		adds	r0, r0, #1
 420 0014 205C     		ldrb	r0, [r4, r0]
 421 0016 0128     		cmp	r0, #1
 422 0018 04D0     		beq	.L27
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 423              		.loc 1 386 0
 424 001a 2023     		movs	r3, #32
 425              	.LVL38:
 426 001c 0022     		movs	r2, #0
 427              	.LVL39:
 428 001e E254     		strb	r2, [r4, r3]
 429              	.LVL40:
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }     
 430              		.loc 1 389 0
 431 0020 0220     		movs	r0, #2
 432              	.LVL41:
 433              	.L22:
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
ARM GAS  /tmp/cc9n8MQ0.s 			page 25


 434              		.loc 1 393 0
 435              		@ sp needed
 436              	.LVL42:
 437 0022 70BD     		pop	{r4, r5, r6, pc}
 438              	.LVL43:
 439              	.L27:
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 440              		.loc 1 358 0
 441 0024 2030     		adds	r0, r0, #32
 442 0026 0135     		adds	r5, r5, #1
 443 0028 2554     		strb	r5, [r4, r0]
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 444              		.loc 1 360 0
 445 002a 0020     		movs	r0, #0
 446 002c A063     		str	r0, [r4, #56]
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 447              		.loc 1 363 0
 448 002e 2568     		ldr	r5, [r4]
 449 0030 2868     		ldr	r0, [r5]
 450 0032 0126     		movs	r6, #1
 451 0034 B043     		bics	r0, r6
 452 0036 2860     		str	r0, [r5]
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 453              		.loc 1 366 0
 454 0038 2000     		movs	r0, r4
 455 003a FFF7FEFF 		bl	DMA_SetConfig
 456              	.LVL44:
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 457              		.loc 1 370 0
 458 003e E36A     		ldr	r3, [r4, #44]
 459 0040 002B     		cmp	r3, #0
 460 0042 0BD0     		beq	.L24
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     }
 461              		.loc 1 372 0
 462 0044 2268     		ldr	r2, [r4]
 463 0046 1368     		ldr	r3, [r2]
 464 0048 0E21     		movs	r1, #14
 465 004a 0B43     		orrs	r3, r1
 466 004c 1360     		str	r3, [r2]
 467              	.L25:
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 468              		.loc 1 381 0
 469 004e 2268     		ldr	r2, [r4]
 470 0050 1368     		ldr	r3, [r2]
 471 0052 0121     		movs	r1, #1
 472 0054 0B43     		orrs	r3, r1
 473 0056 1360     		str	r3, [r2]
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 474              		.loc 1 347 0
 475 0058 0020     		movs	r0, #0
 476 005a E2E7     		b	.L22
 477              	.L24:
 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		hdma->Instance->CCR &= ~DMA_IT_HT;
 478              		.loc 1 376 0
 479 005c 2268     		ldr	r2, [r4]
 480 005e 1368     		ldr	r3, [r2]
 481 0060 0A21     		movs	r1, #10
ARM GAS  /tmp/cc9n8MQ0.s 			page 26


 482 0062 0B43     		orrs	r3, r1
 483 0064 1360     		str	r3, [r2]
 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	}
 484              		.loc 1 377 0
 485 0066 2268     		ldr	r2, [r4]
 486 0068 1368     		ldr	r3, [r2]
 487 006a 0639     		subs	r1, r1, #6
 488 006c 8B43     		bics	r3, r1
 489 006e 1360     		str	r3, [r2]
 490 0070 EDE7     		b	.L25
 491              	.LVL45:
 492              	.L26:
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 493              		.loc 1 353 0
 494 0072 0220     		movs	r0, #2
 495 0074 D5E7     		b	.L22
 496              		.cfi_endproc
 497              	.LFE40:
 499              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 500              		.align	1
 501              		.global	HAL_DMA_Abort
 502              		.syntax unified
 503              		.code	16
 504              		.thumb_func
 505              		.fpu softvfp
 507              	HAL_DMA_Abort:
 508              	.LFB41:
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	/* Disable DMA IT */
 509              		.loc 1 402 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL46:
 514 0000 10B5     		push	{r4, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 4, -8
 517              		.cfi_offset 14, -4
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	
 518              		.loc 1 404 0
 519 0002 0268     		ldr	r2, [r0]
 520 0004 1368     		ldr	r3, [r2]
 521 0006 0E21     		movs	r1, #14
 522 0008 8B43     		bics	r3, r1
 523 000a 1360     		str	r3, [r2]
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	
 524              		.loc 1 407 0
 525 000c 0168     		ldr	r1, [r0]
 526 000e 0A68     		ldr	r2, [r1]
 527 0010 0123     		movs	r3, #1
 528 0012 9A43     		bics	r2, r3
 529 0014 0A60     		str	r2, [r1]
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	
 530              		.loc 1 410 0
 531 0016 C26B     		ldr	r2, [r0, #60]
 532 0018 1900     		movs	r1, r3
 533 001a 046C     		ldr	r4, [r0, #64]
 534 001c A140     		lsls	r1, r1, r4
ARM GAS  /tmp/cc9n8MQ0.s 			page 27


 535 001e 5160     		str	r1, [r2, #4]
 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	
 536              		.loc 1 413 0
 537 0020 2122     		movs	r2, #33
 538 0022 8354     		strb	r3, [r0, r2]
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	
 539              		.loc 1 416 0
 540 0024 1F33     		adds	r3, r3, #31
 541 0026 0022     		movs	r2, #0
 542 0028 C254     		strb	r2, [r0, r3]
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 543              		.loc 1 419 0
 544 002a 0020     		movs	r0, #0
 545              	.LVL47:
 546              		@ sp needed
 547 002c 10BD     		pop	{r4, pc}
 548              		.cfi_endproc
 549              	.LFE41:
 551              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 552              		.align	1
 553              		.global	HAL_DMA_Abort_IT
 554              		.syntax unified
 555              		.code	16
 556              		.thumb_func
 557              		.fpu softvfp
 559              	HAL_DMA_Abort_IT:
 560              	.LFB42:
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 561              		.loc 1 428 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              	.LVL48:
 566 0000 10B5     		push	{r4, lr}
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 4, -8
 569              		.cfi_offset 14, -4
 570              	.LVL49:
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 571              		.loc 1 431 0
 572 0002 2123     		movs	r3, #33
 573 0004 C35C     		ldrb	r3, [r0, r3]
 574 0006 022B     		cmp	r3, #2
 575 0008 03D0     		beq	.L30
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         
 576              		.loc 1 434 0
 577 000a 0423     		movs	r3, #4
 578 000c 8363     		str	r3, [r0, #56]
 579              	.LVL50:
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 580              		.loc 1 436 0
 581 000e 0120     		movs	r0, #1
 582              	.LVL51:
 583              	.L31:
 463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 584              		.loc 1 463 0
 585              		@ sp needed
ARM GAS  /tmp/cc9n8MQ0.s 			page 28


 586 0010 10BD     		pop	{r4, pc}
 587              	.LVL52:
 588              	.L30:
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 589              		.loc 1 442 0
 590 0012 0268     		ldr	r2, [r0]
 591 0014 1368     		ldr	r3, [r2]
 592 0016 0E21     		movs	r1, #14
 593 0018 8B43     		bics	r3, r1
 594 001a 1360     		str	r3, [r2]
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 595              		.loc 1 445 0
 596 001c 0168     		ldr	r1, [r0]
 597 001e 0A68     		ldr	r2, [r1]
 598 0020 0123     		movs	r3, #1
 599 0022 9A43     		bics	r2, r3
 600 0024 0A60     		str	r2, [r1]
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 601              		.loc 1 448 0
 602 0026 C26B     		ldr	r2, [r0, #60]
 603 0028 1900     		movs	r1, r3
 604 002a 046C     		ldr	r4, [r0, #64]
 605 002c A140     		lsls	r1, r1, r4
 606 002e 5160     		str	r1, [r2, #4]
 451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 607              		.loc 1 451 0
 608 0030 2122     		movs	r2, #33
 609 0032 8354     		strb	r3, [r0, r2]
 454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 610              		.loc 1 454 0
 611 0034 1F33     		adds	r3, r3, #31
 612 0036 0022     		movs	r2, #0
 613 0038 C254     		strb	r2, [r0, r3]
 457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 614              		.loc 1 457 0
 615 003a 436B     		ldr	r3, [r0, #52]
 616 003c 002B     		cmp	r3, #0
 617 003e 02D0     		beq	.L32
 459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     } 
 618              		.loc 1 459 0
 619 0040 9847     		blx	r3
 620              	.LVL53:
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 621              		.loc 1 429 0
 622 0042 0020     		movs	r0, #0
 623 0044 E4E7     		b	.L31
 624              	.LVL54:
 625              	.L32:
 626 0046 0020     		movs	r0, #0
 627              	.LVL55:
 628 0048 E2E7     		b	.L31
 629              		.cfi_endproc
 630              	.LFE42:
 632              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 633              		.align	1
 634              		.global	HAL_DMA_PollForTransfer
 635              		.syntax unified
ARM GAS  /tmp/cc9n8MQ0.s 			page 29


 636              		.code	16
 637              		.thumb_func
 638              		.fpu softvfp
 640              	HAL_DMA_PollForTransfer:
 641              	.LFB43:
 474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   uint32_t temp;
 642              		.loc 1 474 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 8
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              	.LVL56:
 647 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 648              		.cfi_def_cfa_offset 20
 649              		.cfi_offset 4, -20
 650              		.cfi_offset 5, -16
 651              		.cfi_offset 6, -12
 652              		.cfi_offset 7, -8
 653              		.cfi_offset 14, -4
 654 0002 83B0     		sub	sp, sp, #12
 655              		.cfi_def_cfa_offset 32
 656 0004 0400     		movs	r4, r0
 657 0006 0D00     		movs	r5, r1
 658 0008 1700     		movs	r7, r2
 659              	.LVL57:
 478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 660              		.loc 1 478 0
 661 000a 2123     		movs	r3, #33
 662 000c C35C     		ldrb	r3, [r0, r3]
 663 000e 022B     		cmp	r3, #2
 664 0010 07D0     		beq	.L34
 481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 665              		.loc 1 481 0
 666 0012 0423     		movs	r3, #4
 667 0014 8363     		str	r3, [r0, #56]
 482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     return HAL_ERROR;
 668              		.loc 1 482 0
 669 0016 1C33     		adds	r3, r3, #28
 670 0018 0022     		movs	r2, #0
 671              	.LVL58:
 672 001a C254     		strb	r2, [r0, r3]
 483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 673              		.loc 1 483 0
 674 001c 0120     		movs	r0, #1
 675              	.LVL59:
 676              	.L35:
 566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 677              		.loc 1 566 0
 678 001e 03B0     		add	sp, sp, #12
 679              		@ sp needed
 680              	.LVL60:
 681              	.LVL61:
 682              	.LVL62:
 683 0020 F0BD     		pop	{r4, r5, r6, r7, pc}
 684              	.LVL63:
 685              	.L34:
 487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 686              		.loc 1 487 0
ARM GAS  /tmp/cc9n8MQ0.s 			page 30


 687 0022 0368     		ldr	r3, [r0]
 688 0024 1B68     		ldr	r3, [r3]
 689 0026 9B06     		lsls	r3, r3, #26
 690 0028 24D4     		bmi	.L46
 494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 691              		.loc 1 494 0
 692 002a 0029     		cmp	r1, #0
 693 002c 27D1     		bne	.L37
 497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 694              		.loc 1 497 0
 695 002e 0226     		movs	r6, #2
 696 0030 036C     		ldr	r3, [r0, #64]
 697 0032 9E40     		lsls	r6, r6, r3
 698              	.LVL64:
 699              	.L38:
 506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 700              		.loc 1 506 0
 701 0034 FFF7FEFF 		bl	HAL_GetTick
 702              	.LVL65:
 703 0038 0190     		str	r0, [sp, #4]
 704              	.LVL66:
 705              	.L41:
 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 706              		.loc 1 508 0
 707 003a E26B     		ldr	r2, [r4, #60]
 708 003c 1368     		ldr	r3, [r2]
 709 003e 1E42     		tst	r6, r3
 710 0040 2DD1     		bne	.L47
 510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {      
 711              		.loc 1 510 0
 712 0042 1068     		ldr	r0, [r2]
 713 0044 216C     		ldr	r1, [r4, #64]
 714 0046 0823     		movs	r3, #8
 715 0048 8B40     		lsls	r3, r3, r1
 716 004a 0342     		tst	r3, r0
 717 004c 1BD1     		bne	.L48
 529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 718              		.loc 1 529 0
 719 004e 7B1C     		adds	r3, r7, #1
 720 0050 F3D0     		beq	.L41
 531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       {
 721              		.loc 1 531 0
 722 0052 002F     		cmp	r7, #0
 723 0054 05D0     		beq	.L42
 531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       {
 724              		.loc 1 531 0 is_stmt 0 discriminator 1
 725 0056 FFF7FEFF 		bl	HAL_GetTick
 726              	.LVL67:
 727 005a 019B     		ldr	r3, [sp, #4]
 728 005c C01A     		subs	r0, r0, r3
 729 005e B842     		cmp	r0, r7
 730 0060 EBD9     		bls	.L41
 731              	.L42:
 534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****         
 732              		.loc 1 534 0 is_stmt 1
 733 0062 2023     		movs	r3, #32
 734 0064 A363     		str	r3, [r4, #56]
ARM GAS  /tmp/cc9n8MQ0.s 			page 31


 537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 735              		.loc 1 537 0
 736 0066 2122     		movs	r2, #33
 737 0068 0121     		movs	r1, #1
 738 006a A154     		strb	r1, [r4, r2]
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 739              		.loc 1 540 0
 740 006c 0022     		movs	r2, #0
 741 006e E254     		strb	r2, [r4, r3]
 542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       }
 742              		.loc 1 542 0
 743 0070 0120     		movs	r0, #1
 744 0072 D4E7     		b	.L35
 745              	.LVL68:
 746              	.L46:
 489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     return HAL_ERROR;
 747              		.loc 1 489 0
 748 0074 8023     		movs	r3, #128
 749 0076 5B00     		lsls	r3, r3, #1
 750 0078 8363     		str	r3, [r0, #56]
 490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 751              		.loc 1 490 0
 752 007a 0120     		movs	r0, #1
 753              	.LVL69:
 754 007c CFE7     		b	.L35
 755              	.LVL70:
 756              	.L37:
 502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 757              		.loc 1 502 0
 758 007e 0426     		movs	r6, #4
 759 0080 036C     		ldr	r3, [r0, #64]
 760 0082 9E40     		lsls	r6, r6, r3
 761              	.LVL71:
 762 0084 D6E7     		b	.L38
 763              	.LVL72:
 764              	.L48:
 515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       
 765              		.loc 1 515 0
 766 0086 0123     		movs	r3, #1
 767 0088 1800     		movs	r0, r3
 768 008a 8840     		lsls	r0, r0, r1
 769 008c 5060     		str	r0, [r2, #4]
 518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 770              		.loc 1 518 0
 771 008e A363     		str	r3, [r4, #56]
 521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       
 772              		.loc 1 521 0
 773 0090 2122     		movs	r2, #33
 774 0092 A354     		strb	r3, [r4, r2]
 524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****       
 775              		.loc 1 524 0
 776 0094 1F33     		adds	r3, r3, #31
 777 0096 0022     		movs	r2, #0
 778 0098 E254     		strb	r2, [r4, r3]
 526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     }      
 779              		.loc 1 526 0
 780 009a 0120     		movs	r0, #1
ARM GAS  /tmp/cc9n8MQ0.s 			page 32


 781 009c BFE7     		b	.L35
 782              	.L47:
 547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 783              		.loc 1 547 0
 784 009e 002D     		cmp	r5, #0
 785 00a0 0BD1     		bne	.L44
 550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 786              		.loc 1 550 0
 787 00a2 0223     		movs	r3, #2
 788 00a4 216C     		ldr	r1, [r4, #64]
 789 00a6 8B40     		lsls	r3, r3, r1
 790 00a8 5360     		str	r3, [r2, #4]
 554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 791              		.loc 1 554 0
 792 00aa 2123     		movs	r3, #33
 793 00ac 0122     		movs	r2, #1
 794 00ae E254     		strb	r2, [r4, r3]
 795              	.L45:
 563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 796              		.loc 1 563 0
 797 00b0 2023     		movs	r3, #32
 798 00b2 0022     		movs	r2, #0
 799 00b4 E254     		strb	r2, [r4, r3]
 565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 800              		.loc 1 565 0
 801 00b6 0020     		movs	r0, #0
 802 00b8 B1E7     		b	.L35
 803              	.L44:
 559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   }
 804              		.loc 1 559 0
 805 00ba 0423     		movs	r3, #4
 806 00bc 216C     		ldr	r1, [r4, #64]
 807 00be 8B40     		lsls	r3, r3, r1
 808 00c0 5360     		str	r3, [r2, #4]
 809 00c2 F5E7     		b	.L45
 810              		.cfi_endproc
 811              	.LFE43:
 813              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 814              		.align	1
 815              		.global	HAL_DMA_IRQHandler
 816              		.syntax unified
 817              		.code	16
 818              		.thumb_func
 819              		.fpu softvfp
 821              	HAL_DMA_IRQHandler:
 822              	.LFB44:
 575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 	uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 823              		.loc 1 575 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              	.LVL73:
 828 0000 70B5     		push	{r4, r5, r6, lr}
 829              		.cfi_def_cfa_offset 16
 830              		.cfi_offset 4, -16
 831              		.cfi_offset 5, -12
 832              		.cfi_offset 6, -8
ARM GAS  /tmp/cc9n8MQ0.s 			page 33


 833              		.cfi_offset 14, -4
 576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   uint32_t source_it = hdma->Instance->CCR;
 834              		.loc 1 576 0
 835 0002 C36B     		ldr	r3, [r0, #60]
 836 0004 1A68     		ldr	r2, [r3]
 837              	.LVL74:
 577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****           
 838              		.loc 1 577 0
 839 0006 0468     		ldr	r4, [r0]
 840 0008 2568     		ldr	r5, [r4]
 841              	.LVL75:
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 842              		.loc 1 580 0
 843 000a 016C     		ldr	r1, [r0, #64]
 844 000c 0423     		movs	r3, #4
 845 000e 8B40     		lsls	r3, r3, r1
 846 0010 1A42     		tst	r2, r3
 847 0012 12D0     		beq	.L50
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 848              		.loc 1 580 0 is_stmt 0 discriminator 1
 849 0014 6B07     		lsls	r3, r5, #29
 850 0016 10D5     		bpl	.L50
 583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	{
 851              		.loc 1 583 0 is_stmt 1
 852 0018 2368     		ldr	r3, [r4]
 853 001a 9B06     		lsls	r3, r3, #26
 854 001c 03D4     		bmi	.L51
 586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	}
 855              		.loc 1 586 0
 856 001e 2368     		ldr	r3, [r4]
 857 0020 0422     		movs	r2, #4
 858              	.LVL76:
 859 0022 9343     		bics	r3, r2
 860 0024 2360     		str	r3, [r4]
 861              	.L51:
 590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 862              		.loc 1 590 0
 863 0026 C26B     		ldr	r2, [r0, #60]
 864 0028 0423     		movs	r3, #4
 865 002a 016C     		ldr	r1, [r0, #64]
 866 002c 8B40     		lsls	r3, r3, r1
 867 002e 5360     		str	r3, [r2, #4]
 595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	{
 868              		.loc 1 595 0
 869 0030 C36A     		ldr	r3, [r0, #44]
 870 0032 002B     		cmp	r3, #0
 871 0034 00D0     		beq	.L49
 598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	}
 872              		.loc 1 598 0
 873 0036 9847     		blx	r3
 874              	.LVL77:
 875              	.L49:
 654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 876              		.loc 1 654 0
 877              		@ sp needed
 878              	.LVL78:
 879 0038 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cc9n8MQ0.s 			page 34


 880              	.LVL79:
 881              	.L50:
 603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 882              		.loc 1 603 0
 883 003a 0223     		movs	r3, #2
 884 003c 8B40     		lsls	r3, r3, r1
 885 003e 1A42     		tst	r2, r3
 886 0040 18D0     		beq	.L53
 603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 887              		.loc 1 603 0 is_stmt 0 discriminator 1
 888 0042 AB07     		lsls	r3, r5, #30
 889 0044 16D5     		bpl	.L53
 605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	{
 890              		.loc 1 605 0 is_stmt 1
 891 0046 2368     		ldr	r3, [r4]
 892 0048 9B06     		lsls	r3, r3, #26
 893 004a 06D4     		bmi	.L54
 609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   		
 894              		.loc 1 609 0
 895 004c 2368     		ldr	r3, [r4]
 896 004e 0A22     		movs	r2, #10
 897              	.LVL80:
 898 0050 9343     		bics	r3, r2
 899 0052 2360     		str	r3, [r4]
 612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	}
 900              		.loc 1 612 0
 901 0054 2123     		movs	r3, #33
 902 0056 093A     		subs	r2, r2, #9
 903 0058 C254     		strb	r2, [r0, r3]
 904              	.L54:
 616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 905              		.loc 1 616 0
 906 005a C26B     		ldr	r2, [r0, #60]
 907 005c 0223     		movs	r3, #2
 908 005e 016C     		ldr	r1, [r0, #64]
 909 0060 8B40     		lsls	r3, r3, r1
 910 0062 5360     		str	r3, [r2, #4]
 619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	
 911              		.loc 1 619 0
 912 0064 2023     		movs	r3, #32
 913 0066 0022     		movs	r2, #0
 914 0068 C254     		strb	r2, [r0, r3]
 621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	{
 915              		.loc 1 621 0
 916 006a 836A     		ldr	r3, [r0, #40]
 917 006c 002B     		cmp	r3, #0
 918 006e E3D0     		beq	.L49
 624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   	}
 919              		.loc 1 624 0
 920 0070 9847     		blx	r3
 921              	.LVL81:
 922 0072 E1E7     		b	.L49
 923              	.LVL82:
 924              	.L53:
 629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 925              		.loc 1 629 0
 926 0074 0823     		movs	r3, #8
ARM GAS  /tmp/cc9n8MQ0.s 			page 35


 927 0076 8B40     		lsls	r3, r3, r1
 928 0078 1A42     		tst	r2, r3
 929 007a DDD0     		beq	.L49
 629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 930              		.loc 1 629 0 is_stmt 0 discriminator 1
 931 007c 2B07     		lsls	r3, r5, #28
 932 007e DBD5     		bpl	.L49
 634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 933              		.loc 1 634 0 is_stmt 1
 934 0080 2368     		ldr	r3, [r4]
 935 0082 0E22     		movs	r2, #14
 936              	.LVL83:
 937 0084 9343     		bics	r3, r2
 938 0086 2360     		str	r3, [r4]
 637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 939              		.loc 1 637 0
 940 0088 C26B     		ldr	r2, [r0, #60]
 941 008a 0123     		movs	r3, #1
 942 008c 1900     		movs	r1, r3
 943 008e 046C     		ldr	r4, [r0, #64]
 944 0090 A140     		lsls	r1, r1, r4
 945 0092 5160     		str	r1, [r2, #4]
 640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 946              		.loc 1 640 0
 947 0094 8363     		str	r3, [r0, #56]
 643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 948              		.loc 1 643 0
 949 0096 2122     		movs	r2, #33
 950 0098 8354     		strb	r3, [r0, r2]
 646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     
 951              		.loc 1 646 0
 952 009a 1F33     		adds	r3, r3, #31
 953 009c 0022     		movs	r2, #0
 954 009e C254     		strb	r2, [r0, r3]
 648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 955              		.loc 1 648 0
 956 00a0 036B     		ldr	r3, [r0, #48]
 957 00a2 002B     		cmp	r3, #0
 958 00a4 C8D0     		beq	.L49
 651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     }
 959              		.loc 1 651 0
 960 00a6 9847     		blx	r3
 961              	.LVL84:
 654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 962              		.loc 1 654 0
 963 00a8 C6E7     		b	.L49
 964              		.cfi_endproc
 965              	.LFE44:
 967              		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 968              		.align	1
 969              		.global	HAL_DMA_RegisterCallback
 970              		.syntax unified
 971              		.code	16
 972              		.thumb_func
 973              		.fpu softvfp
 975              	HAL_DMA_RegisterCallback:
 976              	.LFB45:
ARM GAS  /tmp/cc9n8MQ0.s 			page 36


 667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 977              		.loc 1 667 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              	.LVL85:
 982 0000 10B5     		push	{r4, lr}
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 4, -8
 985              		.cfi_offset 14, -4
 986              	.LVL86:
 671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 987              		.loc 1 671 0
 988 0002 2023     		movs	r3, #32
 989 0004 C35C     		ldrb	r3, [r0, r3]
 990 0006 012B     		cmp	r3, #1
 991 0008 22D0     		beq	.L62
 671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 992              		.loc 1 671 0 is_stmt 0 discriminator 2
 993 000a 2023     		movs	r3, #32
 994 000c 0124     		movs	r4, #1
 995 000e C454     		strb	r4, [r0, r3]
 673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 996              		.loc 1 673 0 is_stmt 1 discriminator 2
 997 0010 0133     		adds	r3, r3, #1
 998 0012 C35C     		ldrb	r3, [r0, r3]
 999 0014 012B     		cmp	r3, #1
 1000 0016 05D0     		beq	.L66
 700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   } 
 1001              		.loc 1 700 0
 1002 0018 0123     		movs	r3, #1
 1003              	.L57:
 1004              	.LVL87:
 704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 1005              		.loc 1 704 0
 1006 001a 2022     		movs	r2, #32
 1007              	.LVL88:
 1008 001c 0021     		movs	r1, #0
 1009              	.LVL89:
 1010 001e 8154     		strb	r1, [r0, r2]
 1011              	.LVL90:
 1012              	.L56:
 707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 1013              		.loc 1 707 0
 1014 0020 1800     		movs	r0, r3
 1015              	.LVL91:
 1016              		@ sp needed
 1017 0022 10BD     		pop	{r4, pc}
 1018              	.LVL92:
 1019              	.L66:
 675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 1020              		.loc 1 675 0
 1021 0024 0129     		cmp	r1, #1
 1022 0026 0AD0     		beq	.L58
 1023 0028 0029     		cmp	r1, #0
 1024 002a 05D0     		beq	.L59
 1025 002c 0229     		cmp	r1, #2
ARM GAS  /tmp/cc9n8MQ0.s 			page 37


 1026 002e 09D0     		beq	.L60
 1027 0030 0329     		cmp	r1, #3
 1028 0032 0AD0     		beq	.L61
 694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;                                                            
 1029              		.loc 1 694 0
 1030 0034 0123     		movs	r3, #1
 1031 0036 F0E7     		b	.L57
 1032              	.L59:
 678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;
 1033              		.loc 1 678 0
 1034 0038 8262     		str	r2, [r0, #40]
 668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 1035              		.loc 1 668 0
 1036 003a 0023     		movs	r3, #0
 679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        
 1037              		.loc 1 679 0
 1038 003c EDE7     		b	.L57
 1039              	.L58:
 682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;         
 1040              		.loc 1 682 0
 1041 003e C262     		str	r2, [r0, #44]
 668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 1042              		.loc 1 668 0
 1043 0040 0023     		movs	r3, #0
 683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 1044              		.loc 1 683 0
 1045 0042 EAE7     		b	.L57
 1046              	.L60:
 686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;         
 1047              		.loc 1 686 0
 1048 0044 0263     		str	r2, [r0, #48]
 668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 1049              		.loc 1 668 0
 1050 0046 0023     		movs	r3, #0
 687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            
 1051              		.loc 1 687 0
 1052 0048 E7E7     		b	.L57
 1053              	.L61:
 690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break; 
 1054              		.loc 1 690 0
 1055 004a 4263     		str	r2, [r0, #52]
 668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 1056              		.loc 1 668 0
 1057 004c 0023     		movs	r3, #0
 691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            
 1058              		.loc 1 691 0
 1059 004e E4E7     		b	.L57
 1060              	.L62:
 671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 1061              		.loc 1 671 0
 1062 0050 0223     		movs	r3, #2
 1063 0052 E5E7     		b	.L56
 1064              		.cfi_endproc
 1065              	.LFE45:
 1067              		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1068              		.align	1
 1069              		.global	HAL_DMA_UnRegisterCallback
ARM GAS  /tmp/cc9n8MQ0.s 			page 38


 1070              		.syntax unified
 1071              		.code	16
 1072              		.thumb_func
 1073              		.fpu softvfp
 1075              	HAL_DMA_UnRegisterCallback:
 1076              	.LFB46:
 718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1077              		.loc 1 718 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              		@ link register save eliminated.
 1082              	.LVL93:
 722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 1083              		.loc 1 722 0
 1084 0000 2023     		movs	r3, #32
 1085 0002 C35C     		ldrb	r3, [r0, r3]
 1086 0004 012B     		cmp	r3, #1
 1087 0006 26D0     		beq	.L76
 722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 1088              		.loc 1 722 0 is_stmt 0 discriminator 2
 1089 0008 2023     		movs	r3, #32
 1090 000a 0122     		movs	r2, #1
 1091 000c C254     		strb	r2, [r0, r3]
 724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   {
 1092              		.loc 1 724 0 is_stmt 1 discriminator 2
 1093 000e 0133     		adds	r3, r3, #1
 1094 0010 C35C     		ldrb	r3, [r0, r3]
 1095 0012 012B     		cmp	r3, #1
 1096 0014 05D0     		beq	.L79
 758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   } 
 1097              		.loc 1 758 0
 1098 0016 0123     		movs	r3, #1
 1099              	.LVL94:
 1100              	.L69:
 762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 1101              		.loc 1 762 0
 1102 0018 2022     		movs	r2, #32
 1103 001a 0021     		movs	r1, #0
 1104 001c 8154     		strb	r1, [r0, r2]
 1105              	.LVL95:
 1106              	.L68:
 765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 1107              		.loc 1 765 0
 1108 001e 1800     		movs	r0, r3
 1109              	.LVL96:
 1110              		@ sp needed
 1111 0020 7047     		bx	lr
 1112              	.LVL97:
 1113              	.L79:
 726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****     {
 1114              		.loc 1 726 0
 1115 0022 0429     		cmp	r1, #4
 1116 0024 15D8     		bhi	.L78
 1117 0026 8900     		lsls	r1, r1, #2
 1118              	.LVL98:
 1119 0028 0C4B     		ldr	r3, .L80
ARM GAS  /tmp/cc9n8MQ0.s 			page 39


 1120 002a 5B58     		ldr	r3, [r3, r1]
 1121 002c 9F46     		mov	pc, r3
 1122              		.section	.rodata.HAL_DMA_UnRegisterCallback,"a",%progbits
 1123              		.align	2
 1124              	.L71:
 1125 0000 2E000000 		.word	.L70
 1126 0004 34000000 		.word	.L72
 1127 0008 3A000000 		.word	.L73
 1128 000c 40000000 		.word	.L74
 1129 0010 46000000 		.word	.L75
 1130              		.section	.text.HAL_DMA_UnRegisterCallback
 1131              	.L70:
 729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;
 1132              		.loc 1 729 0
 1133 002e 0023     		movs	r3, #0
 1134 0030 8362     		str	r3, [r0, #40]
 730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****        
 1135              		.loc 1 730 0
 1136 0032 F1E7     		b	.L69
 1137              	.L72:
 733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;         
 1138              		.loc 1 733 0
 1139 0034 0023     		movs	r3, #0
 1140 0036 C362     		str	r3, [r0, #44]
 734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 1141              		.loc 1 734 0
 1142 0038 EEE7     		b	.L69
 1143              	.L73:
 737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;         
 1144              		.loc 1 737 0
 1145 003a 0023     		movs	r3, #0
 1146 003c 0363     		str	r3, [r0, #48]
 738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            
 1147              		.loc 1 738 0
 1148 003e EBE7     		b	.L69
 1149              	.L74:
 741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break; 
 1150              		.loc 1 741 0
 1151 0040 0023     		movs	r3, #0
 1152 0042 4363     		str	r3, [r0, #52]
 742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      
 1153              		.loc 1 742 0
 1154 0044 E8E7     		b	.L69
 1155              	.L75:
 745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferHalfCpltCallback = NULL;
 1156              		.loc 1 745 0
 1157 0046 0023     		movs	r3, #0
 1158 0048 8362     		str	r3, [r0, #40]
 746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferErrorCallback = NULL;
 1159              		.loc 1 746 0
 1160 004a C362     		str	r3, [r0, #44]
 747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            hdma->XferAbortCallback = NULL;
 1161              		.loc 1 747 0
 1162 004c 0363     		str	r3, [r0, #48]
 748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break; 
 1163              		.loc 1 748 0
 1164 004e 4363     		str	r3, [r0, #52]
ARM GAS  /tmp/cc9n8MQ0.s 			page 40


 749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****      
 1165              		.loc 1 749 0
 1166 0050 E2E7     		b	.L69
 1167              	.LVL99:
 1168              	.L78:
 752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****            break;                                                            
 1169              		.loc 1 752 0
 1170 0052 0123     		movs	r3, #1
 1171 0054 E0E7     		b	.L69
 1172              	.L76:
 722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   
 1173              		.loc 1 722 0
 1174 0056 0223     		movs	r3, #2
 1175 0058 E1E7     		b	.L68
 1176              	.L81:
 1177 005a C046     		.align	2
 1178              	.L80:
 1179 005c 00000000 		.word	.L71
 1180              		.cfi_endproc
 1181              	.LFE46:
 1183              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1184              		.align	1
 1185              		.global	HAL_DMA_GetState
 1186              		.syntax unified
 1187              		.code	16
 1188              		.thumb_func
 1189              		.fpu softvfp
 1191              	HAL_DMA_GetState:
 1192              	.LFB47:
 794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return hdma->State;
 1193              		.loc 1 794 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 1197              		@ link register save eliminated.
 1198              	.LVL100:
 795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 1199              		.loc 1 795 0
 1200 0000 2123     		movs	r3, #33
 1201 0002 C05C     		ldrb	r0, [r0, r3]
 1202              	.LVL101:
 1203 0004 C0B2     		uxtb	r0, r0
 796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 1204              		.loc 1 796 0
 1205              		@ sp needed
 1206 0006 7047     		bx	lr
 1207              		.cfi_endproc
 1208              	.LFE47:
 1210              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 1211              		.align	1
 1212              		.global	HAL_DMA_GetError
 1213              		.syntax unified
 1214              		.code	16
 1215              		.thumb_func
 1216              		.fpu softvfp
 1218              	HAL_DMA_GetError:
 1219              	.LFB48:
ARM GAS  /tmp/cc9n8MQ0.s 			page 41


 805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c ****   return hdma->ErrorCode;
 1220              		.loc 1 805 0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 1224              		@ link register save eliminated.
 1225              	.LVL102:
 806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** }
 1226              		.loc 1 806 0
 1227 0000 806B     		ldr	r0, [r0, #56]
 1228              	.LVL103:
 807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_dma.c **** 
 1229              		.loc 1 807 0
 1230              		@ sp needed
 1231 0002 7047     		bx	lr
 1232              		.cfi_endproc
 1233              	.LFE48:
 1235              		.text
 1236              	.Letext0:
 1237              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 1238              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 1239              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1240              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1241              		.file 6 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 1242              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 1243              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 1244              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/ree
 1245              		.file 10 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1246              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1247              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1248              		.file 13 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/cc9n8MQ0.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_dma.c
     /tmp/cc9n8MQ0.s:16     .text.DMA_SetConfig:0000000000000000 $t
     /tmp/cc9n8MQ0.s:22     .text.DMA_SetConfig:0000000000000000 DMA_SetConfig
     /tmp/cc9n8MQ0.s:76     .text.DMA_CalcBaseAndBitshift:0000000000000000 $t
     /tmp/cc9n8MQ0.s:82     .text.DMA_CalcBaseAndBitshift:0000000000000000 DMA_CalcBaseAndBitshift
     /tmp/cc9n8MQ0.s:116    .text.DMA_CalcBaseAndBitshift:0000000000000020 $d
     /tmp/cc9n8MQ0.s:122    .text.HAL_DMA_Init:0000000000000000 $t
     /tmp/cc9n8MQ0.s:129    .text.HAL_DMA_Init:0000000000000000 HAL_DMA_Init
     /tmp/cc9n8MQ0.s:218    .text.HAL_DMA_Init:0000000000000054 $d
     /tmp/cc9n8MQ0.s:223    .text.HAL_DMA_DeInit:0000000000000000 $t
     /tmp/cc9n8MQ0.s:230    .text.HAL_DMA_DeInit:0000000000000000 HAL_DMA_DeInit
     /tmp/cc9n8MQ0.s:298    .text.HAL_DMA_Start:0000000000000000 $t
     /tmp/cc9n8MQ0.s:305    .text.HAL_DMA_Start:0000000000000000 HAL_DMA_Start
     /tmp/cc9n8MQ0.s:386    .text.HAL_DMA_Start_IT:0000000000000000 $t
     /tmp/cc9n8MQ0.s:393    .text.HAL_DMA_Start_IT:0000000000000000 HAL_DMA_Start_IT
     /tmp/cc9n8MQ0.s:500    .text.HAL_DMA_Abort:0000000000000000 $t
     /tmp/cc9n8MQ0.s:507    .text.HAL_DMA_Abort:0000000000000000 HAL_DMA_Abort
     /tmp/cc9n8MQ0.s:552    .text.HAL_DMA_Abort_IT:0000000000000000 $t
     /tmp/cc9n8MQ0.s:559    .text.HAL_DMA_Abort_IT:0000000000000000 HAL_DMA_Abort_IT
     /tmp/cc9n8MQ0.s:633    .text.HAL_DMA_PollForTransfer:0000000000000000 $t
     /tmp/cc9n8MQ0.s:640    .text.HAL_DMA_PollForTransfer:0000000000000000 HAL_DMA_PollForTransfer
     /tmp/cc9n8MQ0.s:814    .text.HAL_DMA_IRQHandler:0000000000000000 $t
     /tmp/cc9n8MQ0.s:821    .text.HAL_DMA_IRQHandler:0000000000000000 HAL_DMA_IRQHandler
     /tmp/cc9n8MQ0.s:968    .text.HAL_DMA_RegisterCallback:0000000000000000 $t
     /tmp/cc9n8MQ0.s:975    .text.HAL_DMA_RegisterCallback:0000000000000000 HAL_DMA_RegisterCallback
     /tmp/cc9n8MQ0.s:1068   .text.HAL_DMA_UnRegisterCallback:0000000000000000 $t
     /tmp/cc9n8MQ0.s:1075   .text.HAL_DMA_UnRegisterCallback:0000000000000000 HAL_DMA_UnRegisterCallback
     /tmp/cc9n8MQ0.s:1123   .rodata.HAL_DMA_UnRegisterCallback:0000000000000000 $d
     /tmp/cc9n8MQ0.s:1179   .text.HAL_DMA_UnRegisterCallback:000000000000005c $d
     /tmp/cc9n8MQ0.s:1184   .text.HAL_DMA_GetState:0000000000000000 $t
     /tmp/cc9n8MQ0.s:1191   .text.HAL_DMA_GetState:0000000000000000 HAL_DMA_GetState
     /tmp/cc9n8MQ0.s:1211   .text.HAL_DMA_GetError:0000000000000000 $t
     /tmp/cc9n8MQ0.s:1218   .text.HAL_DMA_GetError:0000000000000000 HAL_DMA_GetError
                           .group:0000000000000000 wm4.0.f4162676b8f623651f7a1199aa7e48f7
                           .group:0000000000000000 wm4.main.h.42.f591c98852cf8b31b9d28a7417223f7f
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.e02fa95cc55e74dee1039d0a6f374aae
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
ARM GAS  /tmp/cc9n8MQ0.s 			page 43


                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_GetTick
