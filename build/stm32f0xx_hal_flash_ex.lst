ARM GAS  /tmp/cchftIgu.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_flash_ex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_FLASHEx_Erase
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_FLASHEx_Erase:
  24              	.LFB37:
  25              		.file 1 "cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c"
   1:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
   2:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   ******************************************************************************
   3:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @file    stm32f0xx_hal_flash_ex.c
   4:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   6:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *    
   7:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following 
   8:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *          functionalities of the FLASH peripheral:
   9:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *           + Extended Initialization/de-initialization functions
  10:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *           + Extended I/O operation functions
  11:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *           + Extended Peripheral Control functions 
  12:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         
  13:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   @verbatim
  14:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   ==============================================================================
  15:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****                ##### Flash peripheral extended features  #####
  16:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   ==============================================================================
  17:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****            
  18:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****                       ##### How to use this driver #####
  19:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   ==============================================================================
  20:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory 
  21:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****        of all STM32F0xxx devices. It includes
  22:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****        
  23:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         (++) Set/Reset the write protection
  24:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         (++) Program the user Option Bytes
  25:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         (++) Get the Read protection Level
  26:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
  27:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   @endverbatim
  28:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   ******************************************************************************
  29:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @attention
  30:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
  31:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  32:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
  33:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
ARM GAS  /tmp/cchftIgu.s 			page 2


  34:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * are permitted provided that the following conditions are met:
  35:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  36:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *      this list of conditions and the following disclaimer.
  37:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  38:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  39:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *      and/or other materials provided with the distribution.
  40:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  41:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *      may be used to endorse or promote products derived from this software
  42:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *      without specific prior written permission.
  43:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
  44:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  45:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  46:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  47:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  48:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  49:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  50:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  51:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  52:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  53:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  54:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
  55:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   ******************************************************************************  
  56:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
  57:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
  58:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  59:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #include "stm32f0xx_hal.h"
  60:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
  61:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @addtogroup STM32F0xx_HAL_Driver
  62:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @{
  63:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
  64:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  65:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
  66:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @addtogroup FLASH
  67:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @{
  68:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
  69:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @addtogroup FLASH_Private_Variables
  70:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  * @{
  71:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  */
  72:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /* Variables used for Erase pages under interruption*/
  73:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** extern FLASH_ProcessTypeDef pFlash;
  74:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
  75:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @}
  76:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
  77:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
  78:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
  79:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @}
  80:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
  81:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
  82:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @defgroup FLASHEx FLASHEx
  83:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief FLASH HAL Extension module driver
  84:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @{
  85:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
  86:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
  87:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
  88:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/
  89:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Constants FLASHEx Private Constants
  90:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  * @{
ARM GAS  /tmp/cchftIgu.s 			page 3


  91:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  */
  92:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #define FLASH_POSITION_IWDGSW_BIT        8U
  93:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #define FLASH_POSITION_OB_USERDATA0_BIT  16U
  94:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #define FLASH_POSITION_OB_USERDATA1_BIT  24U
  95:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
  96:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @}
  97:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
  98:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
  99:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
 100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Macros FLASHEx Private Macros
 101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @{
 102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @}
 105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */ 
 106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
 108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
 109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Functions FLASHEx Private Functions
 110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  * @{
 111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  */
 112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /* Erase operations */
 113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static void              FLASH_MassErase(void);
 114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** void    FLASH_PageErase(uint32_t PageAddress);
 115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /* Option bytes control */
 117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WriteProtectPage);
 118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WriteProtectPage);
 119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDP_LevelConfig(uint8_t ReadProtectLevel);
 120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t UserConfig);
 121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_ProgramData(uint32_t Address, uint8_t Data);
 122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static uint32_t          FLASH_OB_GetWRP(void);
 123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static uint32_t          FLASH_OB_GetRDP(void);
 124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static uint8_t           FLASH_OB_GetUser(void);
 125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @}
 128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /* Exported functions ---------------------------------------------------------*/
 131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASHEx Exported Functions
 132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @{
 133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 FLASHEx Memory Erasing functions
 136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  *  @brief   FLASH Memory Erasing functions
 137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
 138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** @verbatim   
 139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   ==============================================================================
 140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****                 ##### FLASH Erasing Programming functions ##### 
 141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   ==============================================================================
 142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     [..] The FLASH Memory Erasing functions, includes the following functions:
 144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     (+) @ref HAL_FLASHEx_Erase: return only when erase has been done
 145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     (+) @ref HAL_FLASHEx_Erase_IT: end of erase is done when @ref HAL_FLASH_EndOfOperationCallback 
 146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         is called with parameter 0xFFFFFFFF
 147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
ARM GAS  /tmp/cchftIgu.s 			page 4


 148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     [..] Any operation of erase should follow these steps:
 149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASH_Unlock() function to enable the flash control register and 
 150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         program memory access.
 151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     (#) Call the desired function to erase page.
 152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASH_Lock() to disable the flash program memory access 
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****        (recommended to protect the FLASH memory against possible unwanted operation).
 154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** @endverbatim
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @{
 157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory pages
 162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_Unlock() function
 163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         must be called before.
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASH_Lock() to disable the flash memory access 
 165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         (recommended to protect the FLASH memory against possible unwanted operation)
 166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param[in]  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
 169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param[out]  PageError pointer to variable  that
 170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         contains the configuration information on faulty page in case of error
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         (0xFFFFFFFF means that all the pages have been correctly erased)
 172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
 173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *PageError)
 176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
  26              		.loc 1 176 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 B0B5     		push	{r4, r5, r7, lr}
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              		.cfi_def_cfa_offset 32
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 3960     		str	r1, [r7]
 177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
  42              		.loc 1 177 0
  43 000a 0F23     		movs	r3, #15
  44 000c FB18     		adds	r3, r7, r3
  45 000e 0122     		movs	r2, #1
  46 0010 1A70     		strb	r2, [r3]
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint32_t address = 0U;
  47              		.loc 1 178 0
  48 0012 0023     		movs	r3, #0
  49 0014 BB60     		str	r3, [r7, #8]
 179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Process Locked */
ARM GAS  /tmp/cchftIgu.s 			page 5


 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
  50              		.loc 1 181 0
  51 0016 324B     		ldr	r3, .L10
  52 0018 1B7E     		ldrb	r3, [r3, #24]
  53 001a 012B     		cmp	r3, #1
  54 001c 01D1     		bne	.L2
  55              		.loc 1 181 0 is_stmt 0 discriminator 1
  56 001e 0223     		movs	r3, #2
  57 0020 5AE0     		b	.L3
  58              	.L2:
  59              		.loc 1 181 0 discriminator 2
  60 0022 2F4B     		ldr	r3, .L10
  61 0024 0122     		movs	r2, #1
  62 0026 1A76     		strb	r2, [r3, #24]
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Check the parameters */
 184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
  63              		.loc 1 186 0 is_stmt 1 discriminator 2
  64 0028 7B68     		ldr	r3, [r7, #4]
  65 002a 1B68     		ldr	r3, [r3]
  66 002c 012B     		cmp	r3, #1
  67 002e 16D1     		bne	.L4
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Mass Erase requested for Bank1 */
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       if (FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK)
  68              		.loc 1 190 0
  69 0030 2C4B     		ldr	r3, .L10+4
  70 0032 1800     		movs	r0, r3
  71 0034 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  72 0038 031E     		subs	r3, r0, #0
  73 003a 47D1     		bne	.L6
 191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       {
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /*Mass erase to be done*/
 193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         FLASH_MassErase();
  74              		.loc 1 193 0
  75 003c FFF7FEFF 		bl	FLASH_MassErase
 194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
  76              		.loc 1 196 0
  77 0040 0F23     		movs	r3, #15
  78 0042 FC18     		adds	r4, r7, r3
  79 0044 274B     		ldr	r3, .L10+4
  80 0046 1800     		movs	r0, r3
  81 0048 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  82 004c 0300     		movs	r3, r0
  83 004e 2370     		strb	r3, [r4]
 197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* If the erase operation is completed, disable the MER Bit */
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR, FLASH_CR_MER);
  84              		.loc 1 199 0
  85 0050 254B     		ldr	r3, .L10+8
  86 0052 1A69     		ldr	r2, [r3, #16]
  87 0054 244B     		ldr	r3, .L10+8
ARM GAS  /tmp/cchftIgu.s 			page 6


  88 0056 0421     		movs	r1, #4
  89 0058 8A43     		bics	r2, r1
  90 005a 1A61     		str	r2, [r3, #16]
  91 005c 36E0     		b	.L6
  92              	.L4:
 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       }
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   else
 203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Page Erase is requested */
 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Check the parameters */
 206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS(pEraseInit->PageAddress));
 207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     assert_param(IS_FLASH_NB_PAGES(pEraseInit->PageAddress, pEraseInit->NbPages));
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     
 209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Page Erase requested on address located on bank1 */
 210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       if (FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK)
  93              		.loc 1 211 0
  94 005e 214B     		ldr	r3, .L10+4
  95 0060 1800     		movs	r0, r3
  96 0062 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  97 0066 031E     		subs	r3, r0, #0
  98 0068 30D1     		bne	.L6
 212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       {
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /*Initialization of PageError variable*/
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         *PageError = 0xFFFFFFFFU;
  99              		.loc 1 214 0
 100 006a 3B68     		ldr	r3, [r7]
 101 006c 0122     		movs	r2, #1
 102 006e 5242     		rsbs	r2, r2, #0
 103 0070 1A60     		str	r2, [r3]
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* Erase page by page to be done*/
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         for(address = pEraseInit->PageAddress;
 104              		.loc 1 217 0
 105 0072 7B68     		ldr	r3, [r7, #4]
 106 0074 5B68     		ldr	r3, [r3, #4]
 107 0076 BB60     		str	r3, [r7, #8]
 108 0078 1FE0     		b	.L7
 109              	.L9:
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****             address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****             address += FLASH_PAGE_SIZE)
 220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         {
 221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           FLASH_PageErase(address);
 110              		.loc 1 221 0
 111 007a BB68     		ldr	r3, [r7, #8]
 112 007c 1800     		movs	r0, r3
 113 007e FFF7FEFF 		bl	FLASH_PageErase
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           /* Wait for last operation to be completed */
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 114              		.loc 1 224 0
 115 0082 0F25     		movs	r5, #15
 116 0084 7C19     		adds	r4, r7, r5
 117 0086 174B     		ldr	r3, .L10+4
 118 0088 1800     		movs	r0, r3
 119 008a FFF7FEFF 		bl	FLASH_WaitForLastOperation
ARM GAS  /tmp/cchftIgu.s 			page 7


 120 008e 0300     		movs	r3, r0
 121 0090 2370     		strb	r3, [r4]
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           
 226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           /* If the erase operation is completed, disable the PER Bit */
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           CLEAR_BIT(FLASH->CR, FLASH_CR_PER);
 122              		.loc 1 227 0
 123 0092 154B     		ldr	r3, .L10+8
 124 0094 1A69     		ldr	r2, [r3, #16]
 125 0096 144B     		ldr	r3, .L10+8
 126 0098 0221     		movs	r1, #2
 127 009a 8A43     		bics	r2, r1
 128 009c 1A61     		str	r2, [r3, #16]
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           if (status != HAL_OK)
 129              		.loc 1 229 0
 130 009e 7B19     		adds	r3, r7, r5
 131 00a0 1B78     		ldrb	r3, [r3]
 132 00a2 002B     		cmp	r3, #0
 133 00a4 03D0     		beq	.L8
 230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           {
 231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****             /* In case of error, stop erase procedure and return the faulty address */
 232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****             *PageError = address;
 134              		.loc 1 232 0
 135 00a6 3B68     		ldr	r3, [r7]
 136 00a8 BA68     		ldr	r2, [r7, #8]
 137 00aa 1A60     		str	r2, [r3]
 233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****             break;
 138              		.loc 1 233 0
 139 00ac 0EE0     		b	.L6
 140              	.L8:
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         {
 141              		.loc 1 219 0
 142 00ae BB68     		ldr	r3, [r7, #8]
 143 00b0 8022     		movs	r2, #128
 144 00b2 1201     		lsls	r2, r2, #4
 145 00b4 9446     		mov	ip, r2
 146 00b6 6344     		add	r3, r3, ip
 147 00b8 BB60     		str	r3, [r7, #8]
 148              	.L7:
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****             address += FLASH_PAGE_SIZE)
 149              		.loc 1 218 0 discriminator 1
 150 00ba 7B68     		ldr	r3, [r7, #4]
 151 00bc 9B68     		ldr	r3, [r3, #8]
 152 00be DA02     		lsls	r2, r3, #11
 153 00c0 7B68     		ldr	r3, [r7, #4]
 154 00c2 5B68     		ldr	r3, [r3, #4]
 155 00c4 D318     		adds	r3, r2, r3
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****             address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 156              		.loc 1 217 0 discriminator 1
 157 00c6 BA68     		ldr	r2, [r7, #8]
 158 00c8 9A42     		cmp	r2, r3
 159 00ca D6D3     		bcc	.L9
 160              	.L6:
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****           }
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         }
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       }
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
ARM GAS  /tmp/cchftIgu.s 			page 8


 238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Process Unlocked */
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 161              		.loc 1 240 0
 162 00cc 044B     		ldr	r3, .L10
 163 00ce 0022     		movs	r2, #0
 164 00d0 1A76     		strb	r2, [r3, #24]
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return status;
 165              		.loc 1 242 0
 166 00d2 0F23     		movs	r3, #15
 167 00d4 FB18     		adds	r3, r7, r3
 168 00d6 1B78     		ldrb	r3, [r3]
 169              	.L3:
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 170              		.loc 1 243 0
 171 00d8 1800     		movs	r0, r3
 172 00da BD46     		mov	sp, r7
 173 00dc 04B0     		add	sp, sp, #16
 174              		@ sp needed
 175 00de B0BD     		pop	{r4, r5, r7, pc}
 176              	.L11:
 177              		.align	2
 178              	.L10:
 179 00e0 00000000 		.word	pFlash
 180 00e4 50C30000 		.word	50000
 181 00e8 00200240 		.word	1073881088
 182              		.cfi_endproc
 183              	.LFE37:
 185              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
 186              		.align	1
 187              		.global	HAL_FLASHEx_Erase_IT
 188              		.syntax unified
 189              		.code	16
 190              		.thumb_func
 191              		.fpu softvfp
 193              	HAL_FLASHEx_Erase_IT:
 194              	.LFB38:
 244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory pages with interrupt enabled
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_Unlock() function
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         must be called before.
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASH_Lock() to disable the flash memory access 
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         (recommended to protect the FLASH memory against possible unwanted operation)
 251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 195              		.loc 1 257 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 16
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cchftIgu.s 			page 9


 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 84B0     		sub	sp, sp, #16
 204              		.cfi_def_cfa_offset 24
 205 0004 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
 207 0006 7860     		str	r0, [r7, #4]
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 208              		.loc 1 258 0
 209 0008 0F23     		movs	r3, #15
 210 000a FB18     		adds	r3, r7, r3
 211 000c 0022     		movs	r2, #0
 212 000e 1A70     		strb	r2, [r3]
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Process Locked */
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 213              		.loc 1 261 0
 214 0010 1B4B     		ldr	r3, .L18
 215 0012 1B7E     		ldrb	r3, [r3, #24]
 216 0014 012B     		cmp	r3, #1
 217 0016 01D1     		bne	.L13
 218              		.loc 1 261 0 is_stmt 0 discriminator 1
 219 0018 0223     		movs	r3, #2
 220 001a 2DE0     		b	.L14
 221              	.L13:
 222              		.loc 1 261 0 discriminator 2
 223 001c 184B     		ldr	r3, .L18
 224 001e 0122     		movs	r2, #1
 225 0020 1A76     		strb	r2, [r3, #24]
 262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* If procedure already ongoing, reject the next one */
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if (pFlash.ProcedureOnGoing != FLASH_PROC_NONE)
 226              		.loc 1 264 0 is_stmt 1 discriminator 2
 227 0022 174B     		ldr	r3, .L18
 228 0024 1B78     		ldrb	r3, [r3]
 229 0026 DBB2     		uxtb	r3, r3
 230 0028 002B     		cmp	r3, #0
 231 002a 01D0     		beq	.L15
 265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     return HAL_ERROR;
 232              		.loc 1 266 0
 233 002c 0123     		movs	r3, #1
 234 002e 23E0     		b	.L14
 235              	.L15:
 267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Check the parameters */
 270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Enable End of FLASH Operation and Error source interrupts */
 273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_ERR);
 236              		.loc 1 273 0
 237 0030 144B     		ldr	r3, .L18+4
 238 0032 1A69     		ldr	r2, [r3, #16]
 239 0034 134B     		ldr	r3, .L18+4
 240 0036 A021     		movs	r1, #160
ARM GAS  /tmp/cchftIgu.s 			page 10


 241 0038 4901     		lsls	r1, r1, #5
 242 003a 0A43     		orrs	r2, r1
 243 003c 1A61     		str	r2, [r3, #16]
 274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 244              		.loc 1 275 0
 245 003e 7B68     		ldr	r3, [r7, #4]
 246 0040 1B68     		ldr	r3, [r3]
 247 0042 012B     		cmp	r3, #1
 248 0044 05D1     		bne	.L16
 276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /*Mass erase to be done*/
 278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_MASSERASE;
 249              		.loc 1 278 0
 250 0046 0E4B     		ldr	r3, .L18
 251 0048 0222     		movs	r2, #2
 252 004a 1A70     		strb	r2, [r3]
 279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         FLASH_MassErase();
 253              		.loc 1 279 0
 254 004c FFF7FEFF 		bl	FLASH_MassErase
 255 0050 0FE0     		b	.L17
 256              	.L16:
 280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   else
 282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Erase by page to be done*/
 284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Check the parameters */
 286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS(pEraseInit->PageAddress));
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     assert_param(IS_FLASH_NB_PAGES(pEraseInit->PageAddress, pEraseInit->NbPages));
 288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PAGEERASE;
 257              		.loc 1 289 0
 258 0052 0B4B     		ldr	r3, .L18
 259 0054 0122     		movs	r2, #1
 260 0056 1A70     		strb	r2, [r3]
 290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     pFlash.DataRemaining = pEraseInit->NbPages;
 261              		.loc 1 290 0
 262 0058 7B68     		ldr	r3, [r7, #4]
 263 005a 9A68     		ldr	r2, [r3, #8]
 264 005c 084B     		ldr	r3, .L18
 265 005e 5A60     		str	r2, [r3, #4]
 291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     pFlash.Address = pEraseInit->PageAddress;
 266              		.loc 1 291 0
 267 0060 7B68     		ldr	r3, [r7, #4]
 268 0062 5A68     		ldr	r2, [r3, #4]
 269 0064 064B     		ldr	r3, .L18
 270 0066 9A60     		str	r2, [r3, #8]
 292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /*Erase 1st page and wait for IT*/
 294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     FLASH_PageErase(pEraseInit->PageAddress);
 271              		.loc 1 294 0
 272 0068 7B68     		ldr	r3, [r7, #4]
 273 006a 5B68     		ldr	r3, [r3, #4]
 274 006c 1800     		movs	r0, r3
 275 006e FFF7FEFF 		bl	FLASH_PageErase
 276              	.L17:
ARM GAS  /tmp/cchftIgu.s 			page 11


 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return status;
 277              		.loc 1 297 0
 278 0072 0F23     		movs	r3, #15
 279 0074 FB18     		adds	r3, r7, r3
 280 0076 1B78     		ldrb	r3, [r3]
 281              	.L14:
 298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 282              		.loc 1 298 0
 283 0078 1800     		movs	r0, r3
 284 007a BD46     		mov	sp, r7
 285 007c 04B0     		add	sp, sp, #16
 286              		@ sp needed
 287 007e 80BD     		pop	{r7, pc}
 288              	.L19:
 289              		.align	2
 290              	.L18:
 291 0080 00000000 		.word	pFlash
 292 0084 00200240 		.word	1073881088
 293              		.cfi_endproc
 294              	.LFE38:
 296              		.section	.text.HAL_FLASHEx_OBErase,"ax",%progbits
 297              		.align	1
 298              		.global	HAL_FLASHEx_OBErase
 299              		.syntax unified
 300              		.code	16
 301              		.thumb_func
 302              		.fpu softvfp
 304              	HAL_FLASHEx_OBErase:
 305              	.LFB39:
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @}
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group2 Option Bytes Programming functions
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  *  @brief   Option Bytes Programming functions
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** @verbatim   
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   ==============================================================================
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****                 ##### Option Bytes Programming functions ##### 
 310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   ==============================================================================  
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     [..]
 312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     This subsection provides a set of functions allowing to control the FLASH 
 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     option bytes operations.
 314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** @endverbatim
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @{
 317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Erases the FLASH option bytes.
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   This functions erases all option bytes except the Read protection (RDP).
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_Unlock() should be called before to unlock the FLASH interf
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Unlock() should be called before to unlock the options b
 324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Launch() should be called after to force the reload of t
ARM GAS  /tmp/cchftIgu.s 			page 12


 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         (system reset will occur)
 326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval HAL status
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBErase(void)
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 306              		.loc 1 330 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 8
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310 0000 90B5     		push	{r4, r7, lr}
 311              		.cfi_def_cfa_offset 12
 312              		.cfi_offset 4, -12
 313              		.cfi_offset 7, -8
 314              		.cfi_offset 14, -4
 315 0002 83B0     		sub	sp, sp, #12
 316              		.cfi_def_cfa_offset 24
 317 0004 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint8_t rdptmp = OB_RDP_LEVEL_0;
 319              		.loc 1 331 0
 320 0006 BB1D     		adds	r3, r7, #6
 321 0008 AA22     		movs	r2, #170
 322 000a 1A70     		strb	r2, [r3]
 332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 323              		.loc 1 332 0
 324 000c FB1D     		adds	r3, r7, #7
 325 000e 0122     		movs	r2, #1
 326 0010 1A70     		strb	r2, [r3]
 333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Get the actual read protection Option Byte value */
 335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   rdptmp = FLASH_OB_GetRDP();
 327              		.loc 1 335 0
 328 0012 FFF7FEFF 		bl	FLASH_OB_GetRDP
 329 0016 0200     		movs	r2, r0
 330 0018 BB1D     		adds	r3, r7, #6
 331 001a 1A70     		strb	r2, [r3]
 336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 332              		.loc 1 338 0
 333 001c FC1D     		adds	r4, r7, #7
 334 001e 1C4B     		ldr	r3, .L23
 335 0020 1800     		movs	r0, r3
 336 0022 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 337 0026 0300     		movs	r3, r0
 338 0028 2370     		strb	r3, [r4]
 339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 339              		.loc 1 340 0
 340 002a FB1D     		adds	r3, r7, #7
 341 002c 1B78     		ldrb	r3, [r3]
 342 002e 002B     		cmp	r3, #0
 343 0030 27D1     		bne	.L21
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Clean the error context */
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
ARM GAS  /tmp/cchftIgu.s 			page 13


 344              		.loc 1 343 0
 345 0032 184B     		ldr	r3, .L23+4
 346 0034 0022     		movs	r2, #0
 347 0036 DA61     		str	r2, [r3, #28]
 344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* If the previous operation is completed, proceed to erase the option bytes */
 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTER);
 348              		.loc 1 346 0
 349 0038 174B     		ldr	r3, .L23+8
 350 003a 1A69     		ldr	r2, [r3, #16]
 351 003c 164B     		ldr	r3, .L23+8
 352 003e 2021     		movs	r1, #32
 353 0040 0A43     		orrs	r2, r1
 354 0042 1A61     		str	r2, [r3, #16]
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 355              		.loc 1 347 0
 356 0044 144B     		ldr	r3, .L23+8
 357 0046 1A69     		ldr	r2, [r3, #16]
 358 0048 134B     		ldr	r3, .L23+8
 359 004a 4021     		movs	r1, #64
 360 004c 0A43     		orrs	r2, r1
 361 004e 1A61     		str	r2, [r3, #16]
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 362              		.loc 1 350 0
 363 0050 FC1D     		adds	r4, r7, #7
 364 0052 0F4B     		ldr	r3, .L23
 365 0054 1800     		movs	r0, r3
 366 0056 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 367 005a 0300     		movs	r3, r0
 368 005c 2370     		strb	r3, [r4]
 351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* If the erase operation is completed, disable the OPTER Bit */
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTER);
 369              		.loc 1 353 0
 370 005e 0E4B     		ldr	r3, .L23+8
 371 0060 1A69     		ldr	r2, [r3, #16]
 372 0062 0D4B     		ldr	r3, .L23+8
 373 0064 2021     		movs	r1, #32
 374 0066 8A43     		bics	r2, r1
 375 0068 1A61     		str	r2, [r3, #16]
 354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     if(status == HAL_OK)
 376              		.loc 1 355 0
 377 006a FB1D     		adds	r3, r7, #7
 378 006c 1B78     		ldrb	r3, [r3]
 379 006e 002B     		cmp	r3, #0
 380 0070 07D1     		bne	.L21
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     {
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Restore the last read protection Option Byte value */
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       status = FLASH_OB_RDP_LevelConfig(rdptmp);
 381              		.loc 1 358 0
 382 0072 FC1D     		adds	r4, r7, #7
 383 0074 BB1D     		adds	r3, r7, #6
 384 0076 1B78     		ldrb	r3, [r3]
 385 0078 1800     		movs	r0, r3
ARM GAS  /tmp/cchftIgu.s 			page 14


 386 007a FFF7FEFF 		bl	FLASH_OB_RDP_LevelConfig
 387 007e 0300     		movs	r3, r0
 388 0080 2370     		strb	r3, [r4]
 389              	.L21:
 359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     }
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Return the erase status */
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return status;
 390              		.loc 1 363 0
 391 0082 FB1D     		adds	r3, r7, #7
 392 0084 1B78     		ldrb	r3, [r3]
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 393              		.loc 1 364 0
 394 0086 1800     		movs	r0, r3
 395 0088 BD46     		mov	sp, r7
 396 008a 03B0     		add	sp, sp, #12
 397              		@ sp needed
 398 008c 90BD     		pop	{r4, r7, pc}
 399              	.L24:
 400 008e C046     		.align	2
 401              	.L23:
 402 0090 50C30000 		.word	50000
 403 0094 00000000 		.word	pFlash
 404 0098 00200240 		.word	1073881088
 405              		.cfi_endproc
 406              	.LFE39:
 408              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 409              		.align	1
 410              		.global	HAL_FLASHEx_OBProgram
 411              		.syntax unified
 412              		.code	16
 413              		.thumb_func
 414              		.fpu softvfp
 416              	HAL_FLASHEx_OBProgram:
 417              	.LFB40:
 365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Program option bytes
 368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   The function @ref HAL_FLASH_Unlock() should be called before to unlock the FLASH interf
 369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Unlock() should be called before to unlock the options b
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Launch() should be called after to force the reload of t
 371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         (system reset will occur)
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 418              		.loc 1 379 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 16
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 B0B5     		push	{r4, r5, r7, lr}
 423              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cchftIgu.s 			page 15


 424              		.cfi_offset 4, -16
 425              		.cfi_offset 5, -12
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 84B0     		sub	sp, sp, #16
 429              		.cfi_def_cfa_offset 32
 430 0004 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 432 0006 7860     		str	r0, [r7, #4]
 380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 433              		.loc 1 380 0
 434 0008 0F23     		movs	r3, #15
 435 000a FB18     		adds	r3, r7, r3
 436 000c 0122     		movs	r2, #1
 437 000e 1A70     		strb	r2, [r3]
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Process Locked */
 383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 438              		.loc 1 383 0
 439 0010 444B     		ldr	r3, .L34
 440 0012 1B7E     		ldrb	r3, [r3, #24]
 441 0014 012B     		cmp	r3, #1
 442 0016 01D1     		bne	.L26
 443              		.loc 1 383 0 is_stmt 0 discriminator 1
 444 0018 0223     		movs	r3, #2
 445 001a 7EE0     		b	.L27
 446              	.L26:
 447              		.loc 1 383 0 discriminator 2
 448 001c 414B     		ldr	r3, .L34
 449 001e 0122     		movs	r2, #1
 450 0020 1A76     		strb	r2, [r3, #24]
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Check the parameters */
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Write protection configuration */
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_WRP) == OPTIONBYTE_WRP)
 451              		.loc 1 389 0 is_stmt 1 discriminator 2
 452 0022 7B68     		ldr	r3, [r7, #4]
 453 0024 1B68     		ldr	r3, [r3]
 454 0026 0122     		movs	r2, #1
 455 0028 1340     		ands	r3, r2
 456 002a 22D0     		beq	.L28
 390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     assert_param(IS_WRPSTATE(pOBInit->WRPState));
 392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     if (pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 457              		.loc 1 392 0
 458 002c 7B68     		ldr	r3, [r7, #4]
 459 002e 5B68     		ldr	r3, [r3, #4]
 460 0030 012B     		cmp	r3, #1
 461 0032 09D1     		bne	.L29
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     {
 394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Enable of Write protection on the selected page */
 395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       status = FLASH_OB_EnableWRP(pOBInit->WRPPage);
 462              		.loc 1 395 0
 463 0034 7B68     		ldr	r3, [r7, #4]
 464 0036 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/cchftIgu.s 			page 16


 465 0038 0F22     		movs	r2, #15
 466 003a BC18     		adds	r4, r7, r2
 467 003c 1800     		movs	r0, r3
 468 003e FFF7FEFF 		bl	FLASH_OB_EnableWRP
 469 0042 0300     		movs	r3, r0
 470 0044 2370     		strb	r3, [r4]
 471 0046 08E0     		b	.L30
 472              	.L29:
 396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     }
 397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     else
 398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     {
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Disable of Write protection on the selected page */
 400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       status = FLASH_OB_DisableWRP(pOBInit->WRPPage);
 473              		.loc 1 400 0
 474 0048 7B68     		ldr	r3, [r7, #4]
 475 004a 9B68     		ldr	r3, [r3, #8]
 476 004c 0F22     		movs	r2, #15
 477 004e BC18     		adds	r4, r7, r2
 478 0050 1800     		movs	r0, r3
 479 0052 FFF7FEFF 		bl	FLASH_OB_DisableWRP
 480 0056 0300     		movs	r3, r0
 481 0058 2370     		strb	r3, [r4]
 482              	.L30:
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     }
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     if (status != HAL_OK)
 483              		.loc 1 402 0
 484 005a 0F23     		movs	r3, #15
 485 005c FB18     		adds	r3, r7, r3
 486 005e 1B78     		ldrb	r3, [r3]
 487 0060 002B     		cmp	r3, #0
 488 0062 06D0     		beq	.L28
 403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     {
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Process Unlocked */
 405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 489              		.loc 1 405 0
 490 0064 2F4B     		ldr	r3, .L34
 491 0066 0022     		movs	r2, #0
 492 0068 1A76     		strb	r2, [r3, #24]
 406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       return status;
 493              		.loc 1 406 0
 494 006a 0F23     		movs	r3, #15
 495 006c FB18     		adds	r3, r7, r3
 496 006e 1B78     		ldrb	r3, [r3]
 497 0070 53E0     		b	.L27
 498              	.L28:
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     }
 408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Read protection configuration */
 411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_RDP) == OPTIONBYTE_RDP)
 499              		.loc 1 411 0
 500 0072 7B68     		ldr	r3, [r7, #4]
 501 0074 1B68     		ldr	r3, [r3]
 502 0076 0222     		movs	r2, #2
 503 0078 1340     		ands	r3, r2
 504 007a 13D0     		beq	.L31
 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
ARM GAS  /tmp/cchftIgu.s 			page 17


 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     status = FLASH_OB_RDP_LevelConfig(pOBInit->RDPLevel);
 505              		.loc 1 413 0
 506 007c 7B68     		ldr	r3, [r7, #4]
 507 007e 1B7B     		ldrb	r3, [r3, #12]
 508 0080 0F25     		movs	r5, #15
 509 0082 7C19     		adds	r4, r7, r5
 510 0084 1800     		movs	r0, r3
 511 0086 FFF7FEFF 		bl	FLASH_OB_RDP_LevelConfig
 512 008a 0300     		movs	r3, r0
 513 008c 2370     		strb	r3, [r4]
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     if (status != HAL_OK)
 514              		.loc 1 414 0
 515 008e 7B19     		adds	r3, r7, r5
 516 0090 1B78     		ldrb	r3, [r3]
 517 0092 002B     		cmp	r3, #0
 518 0094 06D0     		beq	.L31
 415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     {
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Process Unlocked */
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 519              		.loc 1 417 0
 520 0096 234B     		ldr	r3, .L34
 521 0098 0022     		movs	r2, #0
 522 009a 1A76     		strb	r2, [r3, #24]
 418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       return status;
 523              		.loc 1 418 0
 524 009c 0F23     		movs	r3, #15
 525 009e FB18     		adds	r3, r7, r3
 526 00a0 1B78     		ldrb	r3, [r3]
 527 00a2 3AE0     		b	.L27
 528              	.L31:
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     }
 420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* USER configuration */
 423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_USER) == OPTIONBYTE_USER)
 529              		.loc 1 423 0
 530 00a4 7B68     		ldr	r3, [r7, #4]
 531 00a6 1B68     		ldr	r3, [r3]
 532 00a8 0422     		movs	r2, #4
 533 00aa 1340     		ands	r3, r2
 534 00ac 13D0     		beq	.L32
 424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     status = FLASH_OB_UserConfig(pOBInit->USERConfig);
 535              		.loc 1 425 0
 536 00ae 7B68     		ldr	r3, [r7, #4]
 537 00b0 5B7B     		ldrb	r3, [r3, #13]
 538 00b2 0F25     		movs	r5, #15
 539 00b4 7C19     		adds	r4, r7, r5
 540 00b6 1800     		movs	r0, r3
 541 00b8 FFF7FEFF 		bl	FLASH_OB_UserConfig
 542 00bc 0300     		movs	r3, r0
 543 00be 2370     		strb	r3, [r4]
 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     if (status != HAL_OK)
 544              		.loc 1 426 0
 545 00c0 7B19     		adds	r3, r7, r5
 546 00c2 1B78     		ldrb	r3, [r3]
 547 00c4 002B     		cmp	r3, #0
ARM GAS  /tmp/cchftIgu.s 			page 18


 548 00c6 06D0     		beq	.L32
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     {
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Process Unlocked */
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 549              		.loc 1 429 0
 550 00c8 164B     		ldr	r3, .L34
 551 00ca 0022     		movs	r2, #0
 552 00cc 1A76     		strb	r2, [r3, #24]
 430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       return status;
 553              		.loc 1 430 0
 554 00ce 0F23     		movs	r3, #15
 555 00d0 FB18     		adds	r3, r7, r3
 556 00d2 1B78     		ldrb	r3, [r3]
 557 00d4 21E0     		b	.L27
 558              	.L32:
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     }
 432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* DATA configuration*/
 435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_DATA) == OPTIONBYTE_DATA)
 559              		.loc 1 435 0
 560 00d6 7B68     		ldr	r3, [r7, #4]
 561 00d8 1B68     		ldr	r3, [r3]
 562 00da 0822     		movs	r2, #8
 563 00dc 1340     		ands	r3, r2
 564 00de 16D0     		beq	.L33
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     status = FLASH_OB_ProgramData(pOBInit->DATAAddress, pOBInit->DATAData);
 565              		.loc 1 437 0
 566 00e0 7B68     		ldr	r3, [r7, #4]
 567 00e2 1A69     		ldr	r2, [r3, #16]
 568 00e4 7B68     		ldr	r3, [r7, #4]
 569 00e6 1B7D     		ldrb	r3, [r3, #20]
 570 00e8 0F25     		movs	r5, #15
 571 00ea 7C19     		adds	r4, r7, r5
 572 00ec 1900     		movs	r1, r3
 573 00ee 1000     		movs	r0, r2
 574 00f0 FFF7FEFF 		bl	FLASH_OB_ProgramData
 575 00f4 0300     		movs	r3, r0
 576 00f6 2370     		strb	r3, [r4]
 438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     if (status != HAL_OK)
 577              		.loc 1 438 0
 578 00f8 7B19     		adds	r3, r7, r5
 579 00fa 1B78     		ldrb	r3, [r3]
 580 00fc 002B     		cmp	r3, #0
 581 00fe 06D0     		beq	.L33
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     {
 440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Process Unlocked */
 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 582              		.loc 1 441 0
 583 0100 084B     		ldr	r3, .L34
 584 0102 0022     		movs	r2, #0
 585 0104 1A76     		strb	r2, [r3, #24]
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       return status;
 586              		.loc 1 442 0
 587 0106 0F23     		movs	r3, #15
 588 0108 FB18     		adds	r3, r7, r3
ARM GAS  /tmp/cchftIgu.s 			page 19


 589 010a 1B78     		ldrb	r3, [r3]
 590 010c 05E0     		b	.L27
 591              	.L33:
 443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     }
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Process Unlocked */
 447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 592              		.loc 1 447 0
 593 010e 054B     		ldr	r3, .L34
 594 0110 0022     		movs	r2, #0
 595 0112 1A76     		strb	r2, [r3, #24]
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return status;
 596              		.loc 1 449 0
 597 0114 0F23     		movs	r3, #15
 598 0116 FB18     		adds	r3, r7, r3
 599 0118 1B78     		ldrb	r3, [r3]
 600              	.L27:
 450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 601              		.loc 1 450 0
 602 011a 1800     		movs	r0, r3
 603 011c BD46     		mov	sp, r7
 604 011e 04B0     		add	sp, sp, #16
 605              		@ sp needed
 606 0120 B0BD     		pop	{r4, r5, r7, pc}
 607              	.L35:
 608 0122 C046     		.align	2
 609              	.L34:
 610 0124 00000000 		.word	pFlash
 611              		.cfi_endproc
 612              	.LFE40:
 614              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 615              		.align	1
 616              		.global	HAL_FLASHEx_OBGetConfig
 617              		.syntax unified
 618              		.code	16
 619              		.thumb_func
 620              		.fpu softvfp
 622              	HAL_FLASHEx_OBGetConfig:
 623              	.LFB41:
 451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Get the Option byte configuration
 454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
 457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval None
 458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
 460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 624              		.loc 1 460 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 8
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cchftIgu.s 			page 20


 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 82B0     		sub	sp, sp, #8
 633              		.cfi_def_cfa_offset 16
 634 0004 00AF     		add	r7, sp, #0
 635              		.cfi_def_cfa_register 7
 636 0006 7860     		str	r0, [r7, #4]
 461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER;
 637              		.loc 1 461 0
 638 0008 7B68     		ldr	r3, [r7, #4]
 639 000a 0722     		movs	r2, #7
 640 000c 1A60     		str	r2, [r3]
 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /*Get WRP*/
 464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   pOBInit->WRPPage = FLASH_OB_GetWRP();
 641              		.loc 1 464 0
 642 000e FFF7FEFF 		bl	FLASH_OB_GetWRP
 643 0012 0200     		movs	r2, r0
 644 0014 7B68     		ldr	r3, [r7, #4]
 645 0016 9A60     		str	r2, [r3, #8]
 465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /*Get RDP Level*/
 467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   pOBInit->RDPLevel = FLASH_OB_GetRDP();
 646              		.loc 1 467 0
 647 0018 FFF7FEFF 		bl	FLASH_OB_GetRDP
 648 001c 0300     		movs	r3, r0
 649 001e DAB2     		uxtb	r2, r3
 650 0020 7B68     		ldr	r3, [r7, #4]
 651 0022 1A73     		strb	r2, [r3, #12]
 468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /*Get USER*/
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   pOBInit->USERConfig = FLASH_OB_GetUser();
 652              		.loc 1 470 0
 653 0024 FFF7FEFF 		bl	FLASH_OB_GetUser
 654 0028 0300     		movs	r3, r0
 655 002a 1A00     		movs	r2, r3
 656 002c 7B68     		ldr	r3, [r7, #4]
 657 002e 5A73     		strb	r2, [r3, #13]
 471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 658              		.loc 1 471 0
 659 0030 C046     		nop
 660 0032 BD46     		mov	sp, r7
 661 0034 02B0     		add	sp, sp, #8
 662              		@ sp needed
 663 0036 80BD     		pop	{r7, pc}
 664              		.cfi_endproc
 665              	.LFE41:
 667              		.section	.text.HAL_FLASHEx_OBGetUserData,"ax",%progbits
 668              		.align	1
 669              		.global	HAL_FLASHEx_OBGetUserData
 670              		.syntax unified
 671              		.code	16
 672              		.thumb_func
 673              		.fpu softvfp
 675              	HAL_FLASHEx_OBGetUserData:
 676              	.LFB42:
 472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
ARM GAS  /tmp/cchftIgu.s 			page 21


 473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Get the Option byte user data
 475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  DATAAdress Address of the option byte DATA
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *            @arg @ref OB_DATA_ADDRESS_DATA0
 478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *            @arg @ref OB_DATA_ADDRESS_DATA1
 479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval Value programmed in USER data
 480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** uint32_t HAL_FLASHEx_OBGetUserData(uint32_t DATAAdress)
 482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 677              		.loc 1 482 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 16
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 84B0     		sub	sp, sp, #16
 686              		.cfi_def_cfa_offset 24
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 689 0006 7860     		str	r0, [r7, #4]
 483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint32_t value = 0U;
 690              		.loc 1 483 0
 691 0008 0023     		movs	r3, #0
 692 000a FB60     		str	r3, [r7, #12]
 484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if (DATAAdress == OB_DATA_ADDRESS_DATA0)
 693              		.loc 1 485 0
 694 000c 7B68     		ldr	r3, [r7, #4]
 695 000e 0A4A     		ldr	r2, .L41
 696 0010 9342     		cmp	r3, r2
 697 0012 06D1     		bne	.L38
 486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Get value programmed in OB USER Data0 */
 488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     value = READ_BIT(FLASH->OBR, FLASH_OBR_DATA0) >> FLASH_POSITION_OB_USERDATA0_BIT;
 698              		.loc 1 488 0
 699 0014 094B     		ldr	r3, .L41+4
 700 0016 DB69     		ldr	r3, [r3, #28]
 701 0018 1B0C     		lsrs	r3, r3, #16
 702 001a FF22     		movs	r2, #255
 703 001c 1340     		ands	r3, r2
 704 001e FB60     		str	r3, [r7, #12]
 705 0020 05E0     		b	.L39
 706              	.L38:
 489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   else
 491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Get value programmed in OB USER Data1 */
 493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     value = READ_BIT(FLASH->OBR, FLASH_OBR_DATA1) >> FLASH_POSITION_OB_USERDATA1_BIT;
 707              		.loc 1 493 0
 708 0022 064B     		ldr	r3, .L41+4
 709 0024 DB69     		ldr	r3, [r3, #28]
 710 0026 1B0E     		lsrs	r3, r3, #24
 711 0028 FF22     		movs	r2, #255
 712 002a 1340     		ands	r3, r2
ARM GAS  /tmp/cchftIgu.s 			page 22


 713 002c FB60     		str	r3, [r7, #12]
 714              	.L39:
 494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return value;
 715              		.loc 1 496 0
 716 002e FB68     		ldr	r3, [r7, #12]
 497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 717              		.loc 1 497 0
 718 0030 1800     		movs	r0, r3
 719 0032 BD46     		mov	sp, r7
 720 0034 04B0     		add	sp, sp, #16
 721              		@ sp needed
 722 0036 80BD     		pop	{r7, pc}
 723              	.L42:
 724              		.align	2
 725              	.L41:
 726 0038 04F8FF1F 		.word	536868868
 727 003c 00200240 		.word	1073881088
 728              		.cfi_endproc
 729              	.LFE42:
 731              		.section	.text.FLASH_MassErase,"ax",%progbits
 732              		.align	1
 733              		.syntax unified
 734              		.code	16
 735              		.thumb_func
 736              		.fpu softvfp
 738              	FLASH_MassErase:
 739              	.LFB43:
 498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @}
 501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @}
 505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  * @{
 509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  */
 510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Full erase of FLASH memory Bank 
 513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *
 514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval None
 515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static void FLASH_MassErase(void)
 517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 740              		.loc 1 517 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 1, uses_anonymous_args = 0
 744 0000 80B5     		push	{r7, lr}
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
ARM GAS  /tmp/cchftIgu.s 			page 23


 748 0002 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Clean the error context */
 519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 750              		.loc 1 519 0
 751 0004 084B     		ldr	r3, .L44
 752 0006 0022     		movs	r2, #0
 753 0008 DA61     		str	r2, [r3, #28]
 520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Only bank1 will be erased*/
 522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_MER);
 754              		.loc 1 522 0
 755 000a 084B     		ldr	r3, .L44+4
 756 000c 1A69     		ldr	r2, [r3, #16]
 757 000e 074B     		ldr	r3, .L44+4
 758 0010 0421     		movs	r1, #4
 759 0012 0A43     		orrs	r2, r1
 760 0014 1A61     		str	r2, [r3, #16]
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 761              		.loc 1 523 0
 762 0016 054B     		ldr	r3, .L44+4
 763 0018 1A69     		ldr	r2, [r3, #16]
 764 001a 044B     		ldr	r3, .L44+4
 765 001c 4021     		movs	r1, #64
 766 001e 0A43     		orrs	r2, r1
 767 0020 1A61     		str	r2, [r3, #16]
 524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 768              		.loc 1 524 0
 769 0022 C046     		nop
 770 0024 BD46     		mov	sp, r7
 771              		@ sp needed
 772 0026 80BD     		pop	{r7, pc}
 773              	.L45:
 774              		.align	2
 775              	.L44:
 776 0028 00000000 		.word	pFlash
 777 002c 00200240 		.word	1073881088
 778              		.cfi_endproc
 779              	.LFE43:
 781              		.section	.text.FLASH_OB_EnableWRP,"ax",%progbits
 782              		.align	1
 783              		.syntax unified
 784              		.code	16
 785              		.thumb_func
 786              		.fpu softvfp
 788              	FLASH_OB_EnableWRP:
 789              	.LFB44:
 525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Enable the write protection of the desired pages
 528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   An option byte erase is done automatically in this function. 
 529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash page i if
 531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * 
 533:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  WriteProtectPage specifies the page(s) to be write protected.
 534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
ARM GAS  /tmp/cchftIgu.s 			page 24


 535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval HAL status 
 536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WriteProtectPage)
 538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 790              		.loc 1 538 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 24
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 795              		.cfi_def_cfa_offset 20
 796              		.cfi_offset 4, -20
 797              		.cfi_offset 5, -16
 798              		.cfi_offset 6, -12
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
 801 0002 87B0     		sub	sp, sp, #28
 802              		.cfi_def_cfa_offset 48
 803 0004 00AF     		add	r7, sp, #0
 804              		.cfi_def_cfa_register 7
 805 0006 7860     		str	r0, [r7, #4]
 539:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 806              		.loc 1 539 0
 807 0008 1724     		movs	r4, #23
 808 000a 3B19     		adds	r3, r7, r4
 809 000c 0022     		movs	r2, #0
 810 000e 1A70     		strb	r2, [r3]
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint16_t WRP0_Data = 0xFFFFU;
 811              		.loc 1 540 0
 812 0010 1425     		movs	r5, #20
 813 0012 7B19     		adds	r3, r7, r5
 814 0014 0122     		movs	r2, #1
 815 0016 5242     		rsbs	r2, r2, #0
 816 0018 1A80     		strh	r2, [r3]
 541:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP1_WRP1)
 542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint16_t WRP1_Data = 0xFFFFU;
 817              		.loc 1 542 0
 818 001a 1226     		movs	r6, #18
 819 001c BB19     		adds	r3, r7, r6
 820 001e 0122     		movs	r2, #1
 821 0020 5242     		rsbs	r2, r2, #0
 822 0022 1A80     		strh	r2, [r3]
 543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP1_WRP1 */
 544:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP2_WRP2)
 545:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint16_t WRP2_Data = 0xFFFFU;
 823              		.loc 1 545 0
 824 0024 1023     		movs	r3, #16
 825 0026 FB18     		adds	r3, r7, r3
 826 0028 0122     		movs	r2, #1
 827 002a 5242     		rsbs	r2, r2, #0
 828 002c 1A80     		strh	r2, [r3]
 546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP2_WRP2 */
 547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP3_WRP3)
 548:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint16_t WRP3_Data = 0xFFFFU;
 829              		.loc 1 548 0
 830 002e 0E22     		movs	r2, #14
 831 0030 BB18     		adds	r3, r7, r2
 832 0032 0122     		movs	r2, #1
ARM GAS  /tmp/cchftIgu.s 			page 25


 833 0034 5242     		rsbs	r2, r2, #0
 834 0036 1A80     		strh	r2, [r3]
 549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP3_WRP3 */
 550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 551:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Check the parameters */
 552:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP(WriteProtectPage));
 553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     
 554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Get current write protected pages and the new pages to be protected ******/
 555:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
 835              		.loc 1 555 0
 836 0038 FFF7FEFF 		bl	FLASH_OB_GetWRP
 837 003c 0300     		movs	r3, r0
 838 003e DA43     		mvns	r2, r3
 839 0040 7B68     		ldr	r3, [r7, #4]
 840 0042 1343     		orrs	r3, r2
 841 0044 DB43     		mvns	r3, r3
 842 0046 7B60     		str	r3, [r7, #4]
 556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 557:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES0TO15MASK)
 558:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
 843              		.loc 1 558 0
 844 0048 7B68     		ldr	r3, [r7, #4]
 845 004a 9AB2     		uxth	r2, r3
 846 004c 7B19     		adds	r3, r7, r5
 847 004e FF21     		movs	r1, #255
 848 0050 0A40     		ands	r2, r1
 849 0052 1A80     		strh	r2, [r3]
 559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES0TO31MASK)
 560:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
 561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES0TO31MASK */
 562:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES16TO31MASK)
 564:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
 850              		.loc 1 564 0
 851 0054 7B68     		ldr	r3, [r7, #4]
 852 0056 1B0A     		lsrs	r3, r3, #8
 853 0058 9AB2     		uxth	r2, r3
 854 005a BB19     		adds	r3, r7, r6
 855 005c FF21     		movs	r1, #255
 856 005e 0A40     		ands	r2, r1
 857 0060 1A80     		strh	r2, [r3]
 565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES32TO63MASK)
 566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
 567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO63MASK */
 568:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  
 569:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES32TO47MASK)
 570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
 858              		.loc 1 570 0
 859 0062 7B68     		ldr	r3, [r7, #4]
 860 0064 1B0C     		lsrs	r3, r3, #16
 861 0066 9AB2     		uxth	r2, r3
 862 0068 1023     		movs	r3, #16
 863 006a FB18     		adds	r3, r7, r3
 864 006c FF21     		movs	r1, #255
 865 006e 0A40     		ands	r2, r1
 866 0070 1A80     		strh	r2, [r3]
 571:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO47MASK */
ARM GAS  /tmp/cchftIgu.s 			page 26


 572:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 573:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES48TO63MASK)
 574:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO63MASK) >> 24U); 
 867              		.loc 1 574 0
 868 0072 7B68     		ldr	r3, [r7, #4]
 869 0074 1A0E     		lsrs	r2, r3, #24
 870 0076 0E23     		movs	r3, #14
 871 0078 FB18     		adds	r3, r7, r3
 872 007a 1A80     		strh	r2, [r3]
 575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO127MASK)
 576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO127MASK) >> 24U); 
 577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES48TO63MASK */
 578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 579:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 873              		.loc 1 580 0
 874 007c 2500     		movs	r5, r4
 875 007e 3C19     		adds	r4, r7, r4
 876 0080 4B4B     		ldr	r3, .L53
 877 0082 1800     		movs	r0, r3
 878 0084 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 879 0088 0300     		movs	r3, r0
 880 008a 2370     		strb	r3, [r4]
 581:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 881              		.loc 1 582 0
 882 008c 2C00     		movs	r4, r5
 883 008e 3B19     		adds	r3, r7, r4
 884 0090 1B78     		ldrb	r3, [r3]
 885 0092 002B     		cmp	r3, #0
 886 0094 00D0     		beq	.LCB774
 887 0096 84E0     		b	.L47	@long jump
 888              	.LCB774:
 583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   { 
 584:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Clean the error context */
 585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 889              		.loc 1 585 0
 890 0098 464B     		ldr	r3, .L53+4
 891 009a 0022     		movs	r2, #0
 892 009c DA61     		str	r2, [r3, #28]
 586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* To be able to write again option byte, need to perform a option byte erase */
 588:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     status = HAL_FLASHEx_OBErase();
 893              		.loc 1 588 0
 894 009e 1725     		movs	r5, #23
 895 00a0 7C19     		adds	r4, r7, r5
 896 00a2 FFF7FEFF 		bl	HAL_FLASHEx_OBErase
 897 00a6 0300     		movs	r3, r0
 898 00a8 2370     		strb	r3, [r4]
 589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     if (status == HAL_OK)  
 899              		.loc 1 589 0
 900 00aa 7B19     		adds	r3, r7, r5
 901 00ac 1B78     		ldrb	r3, [r3]
 902 00ae 002B     		cmp	r3, #0
 903 00b0 00D0     		beq	.LCB787
 904 00b2 76E0     		b	.L47	@long jump
 905              	.LCB787:
ARM GAS  /tmp/cchftIgu.s 			page 27


 590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     {
 591:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Enable write protection */
 592:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       SET_BIT(FLASH->CR, FLASH_CR_OPTPG);
 906              		.loc 1 592 0
 907 00b4 404B     		ldr	r3, .L53+8
 908 00b6 1A69     		ldr	r2, [r3, #16]
 909 00b8 3F4B     		ldr	r3, .L53+8
 910 00ba 1021     		movs	r1, #16
 911 00bc 0A43     		orrs	r2, r1
 912 00be 1A61     		str	r2, [r3, #16]
 593:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 594:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP0_WRP0)
 595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       if(WRP0_Data != 0xFFU)
 913              		.loc 1 595 0
 914 00c0 1423     		movs	r3, #20
 915 00c2 FB18     		adds	r3, r7, r3
 916 00c4 1B88     		ldrh	r3, [r3]
 917 00c6 FF2B     		cmp	r3, #255
 918 00c8 11D0     		beq	.L48
 596:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       {
 597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         OB->WRP0 &= WRP0_Data;
 919              		.loc 1 597 0
 920 00ca 3C4B     		ldr	r3, .L53+12
 921 00cc 1B89     		ldrh	r3, [r3, #8]
 922 00ce 9BB2     		uxth	r3, r3
 923 00d0 3A49     		ldr	r1, .L53+12
 924 00d2 1422     		movs	r2, #20
 925 00d4 BA18     		adds	r2, r7, r2
 926 00d6 1288     		ldrh	r2, [r2]
 927 00d8 1340     		ands	r3, r2
 928 00da 9BB2     		uxth	r3, r3
 929 00dc 0B81     		strh	r3, [r1, #8]
 598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 599:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 600:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 930              		.loc 1 600 0
 931 00de 1723     		movs	r3, #23
 932 00e0 FC18     		adds	r4, r7, r3
 933 00e2 334B     		ldr	r3, .L53
 934 00e4 1800     		movs	r0, r3
 935 00e6 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 936 00ea 0300     		movs	r3, r0
 937 00ec 2370     		strb	r3, [r4]
 938              	.L48:
 601:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       }
 602:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP0_WRP0 */
 603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 604:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP1_WRP1)
 605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP1_Data != 0xFFU))
 939              		.loc 1 605 0
 940 00ee 1723     		movs	r3, #23
 941 00f0 FB18     		adds	r3, r7, r3
 942 00f2 1B78     		ldrb	r3, [r3]
 943 00f4 002B     		cmp	r3, #0
 944 00f6 16D1     		bne	.L49
 945              		.loc 1 605 0 is_stmt 0 discriminator 1
 946 00f8 1223     		movs	r3, #18
ARM GAS  /tmp/cchftIgu.s 			page 28


 947 00fa FB18     		adds	r3, r7, r3
 948 00fc 1B88     		ldrh	r3, [r3]
 949 00fe FF2B     		cmp	r3, #255
 950 0100 11D0     		beq	.L49
 606:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       {
 607:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         OB->WRP1 &= WRP1_Data;
 951              		.loc 1 607 0 is_stmt 1
 952 0102 2E4B     		ldr	r3, .L53+12
 953 0104 5B89     		ldrh	r3, [r3, #10]
 954 0106 9BB2     		uxth	r3, r3
 955 0108 2C49     		ldr	r1, .L53+12
 956 010a 1222     		movs	r2, #18
 957 010c BA18     		adds	r2, r7, r2
 958 010e 1288     		ldrh	r2, [r2]
 959 0110 1340     		ands	r3, r2
 960 0112 9BB2     		uxth	r3, r3
 961 0114 4B81     		strh	r3, [r1, #10]
 608:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 610:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 962              		.loc 1 610 0
 963 0116 1723     		movs	r3, #23
 964 0118 FC18     		adds	r4, r7, r3
 965 011a 254B     		ldr	r3, .L53
 966 011c 1800     		movs	r0, r3
 967 011e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 968 0122 0300     		movs	r3, r0
 969 0124 2370     		strb	r3, [r4]
 970              	.L49:
 611:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       }
 612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP1_WRP1 */
 613:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP2_WRP2)
 615:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP2_Data != 0xFFU))
 971              		.loc 1 615 0
 972 0126 1723     		movs	r3, #23
 973 0128 FB18     		adds	r3, r7, r3
 974 012a 1B78     		ldrb	r3, [r3]
 975 012c 002B     		cmp	r3, #0
 976 012e 16D1     		bne	.L50
 977              		.loc 1 615 0 is_stmt 0 discriminator 1
 978 0130 1023     		movs	r3, #16
 979 0132 FB18     		adds	r3, r7, r3
 980 0134 1B88     		ldrh	r3, [r3]
 981 0136 FF2B     		cmp	r3, #255
 982 0138 11D0     		beq	.L50
 616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       {
 617:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         OB->WRP2 &= WRP2_Data;
 983              		.loc 1 617 0 is_stmt 1
 984 013a 204B     		ldr	r3, .L53+12
 985 013c 9B89     		ldrh	r3, [r3, #12]
 986 013e 9BB2     		uxth	r3, r3
 987 0140 1E49     		ldr	r1, .L53+12
 988 0142 1022     		movs	r2, #16
 989 0144 BA18     		adds	r2, r7, r2
 990 0146 1288     		ldrh	r2, [r2]
 991 0148 1340     		ands	r3, r2
ARM GAS  /tmp/cchftIgu.s 			page 29


 992 014a 9BB2     		uxth	r3, r3
 993 014c 8B81     		strh	r3, [r1, #12]
 618:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 620:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 994              		.loc 1 620 0
 995 014e 1723     		movs	r3, #23
 996 0150 FC18     		adds	r4, r7, r3
 997 0152 174B     		ldr	r3, .L53
 998 0154 1800     		movs	r0, r3
 999 0156 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1000 015a 0300     		movs	r3, r0
 1001 015c 2370     		strb	r3, [r4]
 1002              	.L50:
 621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       }
 622:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP2_WRP2 */
 623:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP3_WRP3)
 625:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP3_Data != 0xFFU))
 1003              		.loc 1 625 0
 1004 015e 1723     		movs	r3, #23
 1005 0160 FB18     		adds	r3, r7, r3
 1006 0162 1B78     		ldrb	r3, [r3]
 1007 0164 002B     		cmp	r3, #0
 1008 0166 16D1     		bne	.L51
 1009              		.loc 1 625 0 is_stmt 0 discriminator 1
 1010 0168 0E23     		movs	r3, #14
 1011 016a FB18     		adds	r3, r7, r3
 1012 016c 1B88     		ldrh	r3, [r3]
 1013 016e FF2B     		cmp	r3, #255
 1014 0170 11D0     		beq	.L51
 626:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       {
 627:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         OB->WRP3 &= WRP3_Data;
 1015              		.loc 1 627 0 is_stmt 1
 1016 0172 124B     		ldr	r3, .L53+12
 1017 0174 DB89     		ldrh	r3, [r3, #14]
 1018 0176 9BB2     		uxth	r3, r3
 1019 0178 1049     		ldr	r1, .L53+12
 1020 017a 0E22     		movs	r2, #14
 1021 017c BA18     		adds	r2, r7, r2
 1022 017e 1288     		ldrh	r2, [r2]
 1023 0180 1340     		ands	r3, r2
 1024 0182 9BB2     		uxth	r3, r3
 1025 0184 CB81     		strh	r3, [r1, #14]
 628:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 630:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1026              		.loc 1 630 0
 1027 0186 1723     		movs	r3, #23
 1028 0188 FC18     		adds	r4, r7, r3
 1029 018a 094B     		ldr	r3, .L53
 1030 018c 1800     		movs	r0, r3
 1031 018e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1032 0192 0300     		movs	r3, r0
 1033 0194 2370     		strb	r3, [r4]
 1034              	.L51:
 631:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       }
ARM GAS  /tmp/cchftIgu.s 			page 30


 632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP3_WRP3 */
 633:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* if the program operation is completed, disable the OPTPG Bit */
 635:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1035              		.loc 1 635 0
 1036 0196 084B     		ldr	r3, .L53+8
 1037 0198 1A69     		ldr	r2, [r3, #16]
 1038 019a 074B     		ldr	r3, .L53+8
 1039 019c 1021     		movs	r1, #16
 1040 019e 8A43     		bics	r2, r1
 1041 01a0 1A61     		str	r2, [r3, #16]
 1042              	.L47:
 636:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     }
 637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 638:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 639:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return status;
 1043              		.loc 1 639 0
 1044 01a2 1723     		movs	r3, #23
 1045 01a4 FB18     		adds	r3, r7, r3
 1046 01a6 1B78     		ldrb	r3, [r3]
 640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 1047              		.loc 1 640 0
 1048 01a8 1800     		movs	r0, r3
 1049 01aa BD46     		mov	sp, r7
 1050 01ac 07B0     		add	sp, sp, #28
 1051              		@ sp needed
 1052 01ae F0BD     		pop	{r4, r5, r6, r7, pc}
 1053              	.L54:
 1054              		.align	2
 1055              	.L53:
 1056 01b0 50C30000 		.word	50000
 1057 01b4 00000000 		.word	pFlash
 1058 01b8 00200240 		.word	1073881088
 1059 01bc 00F8FF1F 		.word	536868864
 1060              		.cfi_endproc
 1061              	.LFE44:
 1063              		.section	.text.FLASH_OB_DisableWRP,"ax",%progbits
 1064              		.align	1
 1065              		.syntax unified
 1066              		.code	16
 1067              		.thumb_func
 1068              		.fpu softvfp
 1070              	FLASH_OB_DisableWRP:
 1071              	.LFB45:
 641:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Disable the write protection of the desired pages
 644:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   An option byte erase is done automatically in this function. 
 645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash page i if   
 647:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * 
 649:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  WriteProtectPage specifies the page(s) to be write unprotected.
 650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
 651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval HAL status 
 652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 653:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WriteProtectPage)
ARM GAS  /tmp/cchftIgu.s 			page 31


 654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 1072              		.loc 1 654 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 24
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1077              		.cfi_def_cfa_offset 20
 1078              		.cfi_offset 4, -20
 1079              		.cfi_offset 5, -16
 1080              		.cfi_offset 6, -12
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 1083 0002 87B0     		sub	sp, sp, #28
 1084              		.cfi_def_cfa_offset 48
 1085 0004 00AF     		add	r7, sp, #0
 1086              		.cfi_def_cfa_register 7
 1087 0006 7860     		str	r0, [r7, #4]
 655:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1088              		.loc 1 655 0
 1089 0008 1724     		movs	r4, #23
 1090 000a 3B19     		adds	r3, r7, r4
 1091 000c 0022     		movs	r2, #0
 1092 000e 1A70     		strb	r2, [r3]
 656:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint16_t WRP0_Data = 0xFFFFU;
 1093              		.loc 1 656 0
 1094 0010 1425     		movs	r5, #20
 1095 0012 7B19     		adds	r3, r7, r5
 1096 0014 0122     		movs	r2, #1
 1097 0016 5242     		rsbs	r2, r2, #0
 1098 0018 1A80     		strh	r2, [r3]
 657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP1_WRP1)
 658:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint16_t WRP1_Data = 0xFFFFU;
 1099              		.loc 1 658 0
 1100 001a 1226     		movs	r6, #18
 1101 001c BB19     		adds	r3, r7, r6
 1102 001e 0122     		movs	r2, #1
 1103 0020 5242     		rsbs	r2, r2, #0
 1104 0022 1A80     		strh	r2, [r3]
 659:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP1_WRP1 */
 660:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP2_WRP2)
 661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint16_t WRP2_Data = 0xFFFFU;
 1105              		.loc 1 661 0
 1106 0024 1023     		movs	r3, #16
 1107 0026 FB18     		adds	r3, r7, r3
 1108 0028 0122     		movs	r2, #1
 1109 002a 5242     		rsbs	r2, r2, #0
 1110 002c 1A80     		strh	r2, [r3]
 662:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP2_WRP2 */
 663:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP3_WRP3)
 664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint16_t WRP3_Data = 0xFFFFU;
 1111              		.loc 1 664 0
 1112 002e 0E22     		movs	r2, #14
 1113 0030 BB18     		adds	r3, r7, r2
 1114 0032 0122     		movs	r2, #1
 1115 0034 5242     		rsbs	r2, r2, #0
 1116 0036 1A80     		strh	r2, [r3]
 665:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP3_WRP3 */
ARM GAS  /tmp/cchftIgu.s 			page 32


 666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Check the parameters */
 668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP(WriteProtectPage));
 669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 670:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Get current write protected pages and the new pages to be unprotected ******/
 671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
 1117              		.loc 1 671 0
 1118 0038 FFF7FEFF 		bl	FLASH_OB_GetWRP
 1119 003c 0200     		movs	r2, r0
 1120 003e 7B68     		ldr	r3, [r7, #4]
 1121 0040 1343     		orrs	r3, r2
 1122 0042 7B60     		str	r3, [r7, #4]
 672:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES0TO15MASK)
 674:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
 1123              		.loc 1 674 0
 1124 0044 7B68     		ldr	r3, [r7, #4]
 1125 0046 9AB2     		uxth	r2, r3
 1126 0048 7B19     		adds	r3, r7, r5
 1127 004a FF21     		movs	r1, #255
 1128 004c 0A40     		ands	r2, r1
 1129 004e 1A80     		strh	r2, [r3]
 675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES0TO31MASK)
 676:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
 677:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES0TO31MASK */
 678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES16TO31MASK)
 680:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
 1130              		.loc 1 680 0
 1131 0050 7B68     		ldr	r3, [r7, #4]
 1132 0052 1B0A     		lsrs	r3, r3, #8
 1133 0054 9AB2     		uxth	r2, r3
 1134 0056 BB19     		adds	r3, r7, r6
 1135 0058 FF21     		movs	r1, #255
 1136 005a 0A40     		ands	r2, r1
 1137 005c 1A80     		strh	r2, [r3]
 681:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES32TO63MASK)
 682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8U);
 683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO63MASK */
 684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  
 685:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES32TO47MASK)
 686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
 1138              		.loc 1 686 0
 1139 005e 7B68     		ldr	r3, [r7, #4]
 1140 0060 1B0C     		lsrs	r3, r3, #16
 1141 0062 9AB2     		uxth	r2, r3
 1142 0064 1023     		movs	r3, #16
 1143 0066 FB18     		adds	r3, r7, r3
 1144 0068 FF21     		movs	r1, #255
 1145 006a 0A40     		ands	r2, r1
 1146 006c 1A80     		strh	r2, [r3]
 687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO47MASK */
 688:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 689:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES48TO63MASK)
 690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO63MASK) >> 24U); 
 1147              		.loc 1 690 0
 1148 006e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cchftIgu.s 			page 33


 1149 0070 1A0E     		lsrs	r2, r3, #24
 1150 0072 0E23     		movs	r3, #14
 1151 0074 FB18     		adds	r3, r7, r3
 1152 0076 1A80     		strh	r2, [r3]
 691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO127MASK)
 692:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO127MASK) >> 24U); 
 693:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES48TO63MASK */
 694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     
 696:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 697:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1153              		.loc 1 697 0
 1154 0078 2500     		movs	r5, r4
 1155 007a 3C19     		adds	r4, r7, r4
 1156 007c 4B4B     		ldr	r3, .L62
 1157 007e 1800     		movs	r0, r3
 1158 0080 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1159 0084 0300     		movs	r3, r0
 1160 0086 2370     		strb	r3, [r4]
 698:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 699:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1161              		.loc 1 699 0
 1162 0088 2C00     		movs	r4, r5
 1163 008a 3B19     		adds	r3, r7, r4
 1164 008c 1B78     		ldrb	r3, [r3]
 1165 008e 002B     		cmp	r3, #0
 1166 0090 00D0     		beq	.LCB1031
 1167 0092 84E0     		b	.L56	@long jump
 1168              	.LCB1031:
 700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   { 
 701:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Clean the error context */
 702:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1169              		.loc 1 702 0
 1170 0094 464B     		ldr	r3, .L62+4
 1171 0096 0022     		movs	r2, #0
 1172 0098 DA61     		str	r2, [r3, #28]
 703:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* To be able to write again option byte, need to perform a option byte erase */
 705:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     status = HAL_FLASHEx_OBErase();
 1173              		.loc 1 705 0
 1174 009a 1725     		movs	r5, #23
 1175 009c 7C19     		adds	r4, r7, r5
 1176 009e FFF7FEFF 		bl	HAL_FLASHEx_OBErase
 1177 00a2 0300     		movs	r3, r0
 1178 00a4 2370     		strb	r3, [r4]
 706:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     if (status == HAL_OK)  
 1179              		.loc 1 706 0
 1180 00a6 7B19     		adds	r3, r7, r5
 1181 00a8 1B78     		ldrb	r3, [r3]
 1182 00aa 002B     		cmp	r3, #0
 1183 00ac 00D0     		beq	.LCB1044
 1184 00ae 76E0     		b	.L56	@long jump
 1185              	.LCB1044:
 707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     {
 708:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       SET_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1186              		.loc 1 708 0
 1187 00b0 404B     		ldr	r3, .L62+8
ARM GAS  /tmp/cchftIgu.s 			page 34


 1188 00b2 1A69     		ldr	r2, [r3, #16]
 1189 00b4 3F4B     		ldr	r3, .L62+8
 1190 00b6 1021     		movs	r1, #16
 1191 00b8 0A43     		orrs	r2, r1
 1192 00ba 1A61     		str	r2, [r3, #16]
 709:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 710:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP0_WRP0)
 711:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       if(WRP0_Data != 0xFFU)
 1193              		.loc 1 711 0
 1194 00bc 1423     		movs	r3, #20
 1195 00be FB18     		adds	r3, r7, r3
 1196 00c0 1B88     		ldrh	r3, [r3]
 1197 00c2 FF2B     		cmp	r3, #255
 1198 00c4 11D0     		beq	.L57
 712:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       {
 713:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         OB->WRP0 |= WRP0_Data;
 1199              		.loc 1 713 0
 1200 00c6 3C4B     		ldr	r3, .L62+12
 1201 00c8 1B89     		ldrh	r3, [r3, #8]
 1202 00ca 9AB2     		uxth	r2, r3
 1203 00cc 3A49     		ldr	r1, .L62+12
 1204 00ce 1423     		movs	r3, #20
 1205 00d0 FB18     		adds	r3, r7, r3
 1206 00d2 1B88     		ldrh	r3, [r3]
 1207 00d4 1343     		orrs	r3, r2
 1208 00d6 9BB2     		uxth	r3, r3
 1209 00d8 0B81     		strh	r3, [r1, #8]
 714:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 715:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 716:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1210              		.loc 1 716 0
 1211 00da 1723     		movs	r3, #23
 1212 00dc FC18     		adds	r4, r7, r3
 1213 00de 334B     		ldr	r3, .L62
 1214 00e0 1800     		movs	r0, r3
 1215 00e2 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1216 00e6 0300     		movs	r3, r0
 1217 00e8 2370     		strb	r3, [r4]
 1218              	.L57:
 717:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       }
 718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP0_WRP0 */
 719:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 720:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP1_WRP1)
 721:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP1_Data != 0xFFU))
 1219              		.loc 1 721 0
 1220 00ea 1723     		movs	r3, #23
 1221 00ec FB18     		adds	r3, r7, r3
 1222 00ee 1B78     		ldrb	r3, [r3]
 1223 00f0 002B     		cmp	r3, #0
 1224 00f2 16D1     		bne	.L58
 1225              		.loc 1 721 0 is_stmt 0 discriminator 1
 1226 00f4 1223     		movs	r3, #18
 1227 00f6 FB18     		adds	r3, r7, r3
 1228 00f8 1B88     		ldrh	r3, [r3]
 1229 00fa FF2B     		cmp	r3, #255
 1230 00fc 11D0     		beq	.L58
 722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       {
ARM GAS  /tmp/cchftIgu.s 			page 35


 723:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         OB->WRP1 |= WRP1_Data;
 1231              		.loc 1 723 0 is_stmt 1
 1232 00fe 2E4B     		ldr	r3, .L62+12
 1233 0100 5B89     		ldrh	r3, [r3, #10]
 1234 0102 9AB2     		uxth	r2, r3
 1235 0104 2C49     		ldr	r1, .L62+12
 1236 0106 1223     		movs	r3, #18
 1237 0108 FB18     		adds	r3, r7, r3
 1238 010a 1B88     		ldrh	r3, [r3]
 1239 010c 1343     		orrs	r3, r2
 1240 010e 9BB2     		uxth	r3, r3
 1241 0110 4B81     		strh	r3, [r1, #10]
 724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 725:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1242              		.loc 1 726 0
 1243 0112 1723     		movs	r3, #23
 1244 0114 FC18     		adds	r4, r7, r3
 1245 0116 254B     		ldr	r3, .L62
 1246 0118 1800     		movs	r0, r3
 1247 011a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1248 011e 0300     		movs	r3, r0
 1249 0120 2370     		strb	r3, [r4]
 1250              	.L58:
 727:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       }
 728:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP1_WRP1 */
 729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP2_WRP2)
 731:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP2_Data != 0xFFU))
 1251              		.loc 1 731 0
 1252 0122 1723     		movs	r3, #23
 1253 0124 FB18     		adds	r3, r7, r3
 1254 0126 1B78     		ldrb	r3, [r3]
 1255 0128 002B     		cmp	r3, #0
 1256 012a 16D1     		bne	.L59
 1257              		.loc 1 731 0 is_stmt 0 discriminator 1
 1258 012c 1023     		movs	r3, #16
 1259 012e FB18     		adds	r3, r7, r3
 1260 0130 1B88     		ldrh	r3, [r3]
 1261 0132 FF2B     		cmp	r3, #255
 1262 0134 11D0     		beq	.L59
 732:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       {
 733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         OB->WRP2 |= WRP2_Data;
 1263              		.loc 1 733 0 is_stmt 1
 1264 0136 204B     		ldr	r3, .L62+12
 1265 0138 9B89     		ldrh	r3, [r3, #12]
 1266 013a 9AB2     		uxth	r2, r3
 1267 013c 1E49     		ldr	r1, .L62+12
 1268 013e 1023     		movs	r3, #16
 1269 0140 FB18     		adds	r3, r7, r3
 1270 0142 1B88     		ldrh	r3, [r3]
 1271 0144 1343     		orrs	r3, r2
 1272 0146 9BB2     		uxth	r3, r3
 1273 0148 8B81     		strh	r3, [r1, #12]
 734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 735:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 736:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
ARM GAS  /tmp/cchftIgu.s 			page 36


 1274              		.loc 1 736 0
 1275 014a 1723     		movs	r3, #23
 1276 014c FC18     		adds	r4, r7, r3
 1277 014e 174B     		ldr	r3, .L62
 1278 0150 1800     		movs	r0, r3
 1279 0152 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1280 0156 0300     		movs	r3, r0
 1281 0158 2370     		strb	r3, [r4]
 1282              	.L59:
 737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       }
 738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP2_WRP2 */
 739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 740:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(OB_WRP3_WRP3)
 741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP3_Data != 0xFFU))
 1283              		.loc 1 741 0
 1284 015a 1723     		movs	r3, #23
 1285 015c FB18     		adds	r3, r7, r3
 1286 015e 1B78     		ldrb	r3, [r3]
 1287 0160 002B     		cmp	r3, #0
 1288 0162 16D1     		bne	.L60
 1289              		.loc 1 741 0 is_stmt 0 discriminator 1
 1290 0164 0E23     		movs	r3, #14
 1291 0166 FB18     		adds	r3, r7, r3
 1292 0168 1B88     		ldrh	r3, [r3]
 1293 016a FF2B     		cmp	r3, #255
 1294 016c 11D0     		beq	.L60
 742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       {
 743:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         OB->WRP3 |= WRP3_Data;
 1295              		.loc 1 743 0 is_stmt 1
 1296 016e 124B     		ldr	r3, .L62+12
 1297 0170 DB89     		ldrh	r3, [r3, #14]
 1298 0172 9AB2     		uxth	r2, r3
 1299 0174 1049     		ldr	r1, .L62+12
 1300 0176 0E23     		movs	r3, #14
 1301 0178 FB18     		adds	r3, r7, r3
 1302 017a 1B88     		ldrh	r3, [r3]
 1303 017c 1343     		orrs	r3, r2
 1304 017e 9BB2     		uxth	r3, r3
 1305 0180 CB81     		strh	r3, [r1, #14]
 744:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         
 745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1306              		.loc 1 746 0
 1307 0182 1723     		movs	r3, #23
 1308 0184 FC18     		adds	r4, r7, r3
 1309 0186 094B     		ldr	r3, .L62
 1310 0188 1800     		movs	r0, r3
 1311 018a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1312 018e 0300     		movs	r3, r0
 1313 0190 2370     		strb	r3, [r4]
 1314              	.L60:
 747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       }
 748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* OB_WRP3_WRP3 */
 749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 750:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* if the program operation is completed, disable the OPTPG Bit */
 751:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1315              		.loc 1 751 0
ARM GAS  /tmp/cchftIgu.s 			page 37


 1316 0192 084B     		ldr	r3, .L62+8
 1317 0194 1A69     		ldr	r2, [r3, #16]
 1318 0196 074B     		ldr	r3, .L62+8
 1319 0198 1021     		movs	r1, #16
 1320 019a 8A43     		bics	r2, r1
 1321 019c 1A61     		str	r2, [r3, #16]
 1322              	.L56:
 752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     }
 753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 754:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return status;
 1323              		.loc 1 754 0
 1324 019e 1723     		movs	r3, #23
 1325 01a0 FB18     		adds	r3, r7, r3
 1326 01a2 1B78     		ldrb	r3, [r3]
 755:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 1327              		.loc 1 755 0
 1328 01a4 1800     		movs	r0, r3
 1329 01a6 BD46     		mov	sp, r7
 1330 01a8 07B0     		add	sp, sp, #28
 1331              		@ sp needed
 1332 01aa F0BD     		pop	{r4, r5, r6, r7, pc}
 1333              	.L63:
 1334              		.align	2
 1335              	.L62:
 1336 01ac 50C30000 		.word	50000
 1337 01b0 00000000 		.word	pFlash
 1338 01b4 00200240 		.word	1073881088
 1339 01b8 00F8FF1F 		.word	536868864
 1340              		.cfi_endproc
 1341              	.LFE45:
 1343              		.section	.text.FLASH_OB_RDP_LevelConfig,"ax",%progbits
 1344              		.align	1
 1345              		.syntax unified
 1346              		.code	16
 1347              		.thumb_func
 1348              		.fpu softvfp
 1350              	FLASH_OB_RDP_LevelConfig:
 1351              	.LFB46:
 756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 757:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Set the read protection level.
 759:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  ReadProtectLevel specifies the read protection level.
 760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
 761:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_0 No protection
 762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_1 Read protection of the memory
 763:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_2 Full chip protection
 764:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   Warning: When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
 765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval HAL status
 766:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 767:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDP_LevelConfig(uint8_t ReadProtectLevel)
 768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 1352              		.loc 1 768 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 16
 1355              		@ frame_needed = 1, uses_anonymous_args = 0
 1356 0000 B0B5     		push	{r4, r5, r7, lr}
 1357              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cchftIgu.s 			page 38


 1358              		.cfi_offset 4, -16
 1359              		.cfi_offset 5, -12
 1360              		.cfi_offset 7, -8
 1361              		.cfi_offset 14, -4
 1362 0002 84B0     		sub	sp, sp, #16
 1363              		.cfi_def_cfa_offset 32
 1364 0004 00AF     		add	r7, sp, #0
 1365              		.cfi_def_cfa_register 7
 1366 0006 0200     		movs	r2, r0
 1367 0008 FB1D     		adds	r3, r7, #7
 1368 000a 1A70     		strb	r2, [r3]
 769:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1369              		.loc 1 769 0
 1370 000c 0F25     		movs	r5, #15
 1371 000e 7B19     		adds	r3, r7, r5
 1372 0010 0022     		movs	r2, #0
 1373 0012 1A70     		strb	r2, [r3]
 770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 771:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Check the parameters */
 772:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP_LEVEL(ReadProtectLevel));
 773:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 775:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1374              		.loc 1 775 0
 1375 0014 7C19     		adds	r4, r7, r5
 1376 0016 254B     		ldr	r3, .L67
 1377 0018 1800     		movs	r0, r3
 1378 001a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1379 001e 0300     		movs	r3, r0
 1380 0020 2370     		strb	r3, [r4]
 776:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1381              		.loc 1 777 0
 1382 0022 7B19     		adds	r3, r7, r5
 1383 0024 1B78     		ldrb	r3, [r3]
 1384 0026 002B     		cmp	r3, #0
 1385 0028 39D1     		bne	.L65
 778:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   { 
 779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Clean the error context */
 780:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1386              		.loc 1 780 0
 1387 002a 214B     		ldr	r3, .L67+4
 1388 002c 0022     		movs	r2, #0
 1389 002e DA61     		str	r2, [r3, #28]
 781:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     
 782:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* If the previous operation is completed, proceed to erase the option bytes */
 783:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTER);
 1390              		.loc 1 783 0
 1391 0030 204B     		ldr	r3, .L67+8
 1392 0032 1A69     		ldr	r2, [r3, #16]
 1393 0034 1F4B     		ldr	r3, .L67+8
 1394 0036 2021     		movs	r1, #32
 1395 0038 0A43     		orrs	r2, r1
 1396 003a 1A61     		str	r2, [r3, #16]
 784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 1397              		.loc 1 784 0
 1398 003c 1D4B     		ldr	r3, .L67+8
ARM GAS  /tmp/cchftIgu.s 			page 39


 1399 003e 1A69     		ldr	r2, [r3, #16]
 1400 0040 1C4B     		ldr	r3, .L67+8
 1401 0042 4021     		movs	r1, #64
 1402 0044 0A43     		orrs	r2, r1
 1403 0046 1A61     		str	r2, [r3, #16]
 785:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 786:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1404              		.loc 1 787 0
 1405 0048 0F25     		movs	r5, #15
 1406 004a 7C19     		adds	r4, r7, r5
 1407 004c 174B     		ldr	r3, .L67
 1408 004e 1800     		movs	r0, r3
 1409 0050 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1410 0054 0300     		movs	r3, r0
 1411 0056 2370     		strb	r3, [r4]
 788:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* If the erase operation is completed, disable the OPTER Bit */
 790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTER);
 1412              		.loc 1 790 0
 1413 0058 164B     		ldr	r3, .L67+8
 1414 005a 1A69     		ldr	r2, [r3, #16]
 1415 005c 154B     		ldr	r3, .L67+8
 1416 005e 2021     		movs	r1, #32
 1417 0060 8A43     		bics	r2, r1
 1418 0062 1A61     		str	r2, [r3, #16]
 791:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 792:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     if(status == HAL_OK)
 1419              		.loc 1 792 0
 1420 0064 7B19     		adds	r3, r7, r5
 1421 0066 1B78     		ldrb	r3, [r3]
 1422 0068 002B     		cmp	r3, #0
 1423 006a 18D1     		bne	.L65
 793:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     {
 794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Enable the Option Bytes Programming operation */
 795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       SET_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1424              		.loc 1 795 0
 1425 006c 114B     		ldr	r3, .L67+8
 1426 006e 1A69     		ldr	r2, [r3, #16]
 1427 0070 104B     		ldr	r3, .L67+8
 1428 0072 1021     		movs	r1, #16
 1429 0074 0A43     		orrs	r2, r1
 1430 0076 1A61     		str	r2, [r3, #16]
 796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       
 797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       WRITE_REG(OB->RDP, ReadProtectLevel);
 1431              		.loc 1 797 0
 1432 0078 0F4A     		ldr	r2, .L67+12
 1433 007a FB1D     		adds	r3, r7, #7
 1434 007c 1B78     		ldrb	r3, [r3]
 1435 007e 9BB2     		uxth	r3, r3
 1436 0080 1380     		strh	r3, [r2]
 798:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       
 799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 800:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE); 
 1437              		.loc 1 800 0
 1438 0082 0F23     		movs	r3, #15
 1439 0084 FC18     		adds	r4, r7, r3
ARM GAS  /tmp/cchftIgu.s 			page 40


 1440 0086 094B     		ldr	r3, .L67
 1441 0088 1800     		movs	r0, r3
 1442 008a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1443 008e 0300     		movs	r3, r0
 1444 0090 2370     		strb	r3, [r4]
 801:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       
 802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       /* if the program operation is completed, disable the OPTPG Bit */
 803:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1445              		.loc 1 803 0
 1446 0092 084B     		ldr	r3, .L67+8
 1447 0094 1A69     		ldr	r2, [r3, #16]
 1448 0096 074B     		ldr	r3, .L67+8
 1449 0098 1021     		movs	r1, #16
 1450 009a 8A43     		bics	r2, r1
 1451 009c 1A61     		str	r2, [r3, #16]
 1452              	.L65:
 804:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     }
 805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return status;
 1453              		.loc 1 807 0
 1454 009e 0F23     		movs	r3, #15
 1455 00a0 FB18     		adds	r3, r7, r3
 1456 00a2 1B78     		ldrb	r3, [r3]
 808:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 1457              		.loc 1 808 0
 1458 00a4 1800     		movs	r0, r3
 1459 00a6 BD46     		mov	sp, r7
 1460 00a8 04B0     		add	sp, sp, #16
 1461              		@ sp needed
 1462 00aa B0BD     		pop	{r4, r5, r7, pc}
 1463              	.L68:
 1464              		.align	2
 1465              	.L67:
 1466 00ac 50C30000 		.word	50000
 1467 00b0 00000000 		.word	pFlash
 1468 00b4 00200240 		.word	1073881088
 1469 00b8 00F8FF1F 		.word	536868864
 1470              		.cfi_endproc
 1471              	.LFE46:
 1473              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 1474              		.align	1
 1475              		.syntax unified
 1476              		.code	16
 1477              		.thumb_func
 1478              		.fpu softvfp
 1480              	FLASH_OB_UserConfig:
 1481              	.LFB47:
 809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 810:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Program the FLASH User Option Byte.    
 812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   Programming of the OB should be performed only after an erase (otherwise PGERR occurs)
 813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  UserConfig The FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1), RST_STDBY
 814:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         VDDA_Analog_Monitoring(Bit5) and SRAM_Parity_Enable(Bit6). 
 815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         For few devices, following option bytes are available: nBOOT0(Bit3) & BOOT_SEL(Bit7).
 816:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval HAL status
 817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
ARM GAS  /tmp/cchftIgu.s 			page 41


 818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t UserConfig)
 819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 1482              		.loc 1 819 0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 16
 1485              		@ frame_needed = 1, uses_anonymous_args = 0
 1486 0000 B0B5     		push	{r4, r5, r7, lr}
 1487              		.cfi_def_cfa_offset 16
 1488              		.cfi_offset 4, -16
 1489              		.cfi_offset 5, -12
 1490              		.cfi_offset 7, -8
 1491              		.cfi_offset 14, -4
 1492 0002 84B0     		sub	sp, sp, #16
 1493              		.cfi_def_cfa_offset 32
 1494 0004 00AF     		add	r7, sp, #0
 1495              		.cfi_def_cfa_register 7
 1496 0006 0200     		movs	r2, r0
 1497 0008 FB1D     		adds	r3, r7, #7
 1498 000a 1A70     		strb	r2, [r3]
 820:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1499              		.loc 1 820 0
 1500 000c 0F25     		movs	r5, #15
 1501 000e 7B19     		adds	r3, r7, r5
 1502 0010 0022     		movs	r2, #0
 1503 0012 1A70     		strb	r2, [r3]
 821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 822:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Check the parameters */
 823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_IWDG_SOURCE((UserConfig&OB_IWDG_SW)));
 824:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE((UserConfig&OB_STOP_NO_RST)));
 825:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE((UserConfig&OB_STDBY_NO_RST)));
 826:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT1((UserConfig&OB_BOOT1_SET)));
 827:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_VDDA_ANALOG((UserConfig&OB_VDDA_ANALOG_ON)));
 828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_SRAM_PARITY((UserConfig&OB_SRAM_PARITY_RESET)));
 829:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(FLASH_OBR_BOOT_SEL)
 830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT_SEL((UserConfig&OB_BOOT_SEL_SET)));
 831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT0((UserConfig&OB_BOOT0_SET)));
 832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif /* FLASH_OBR_BOOT_SEL */
 833:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 835:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1504              		.loc 1 835 0
 1505 0014 7C19     		adds	r4, r7, r5
 1506 0016 184B     		ldr	r3, .L72
 1507 0018 1800     		movs	r0, r3
 1508 001a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1509 001e 0300     		movs	r3, r0
 1510 0020 2370     		strb	r3, [r4]
 836:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 837:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1511              		.loc 1 837 0
 1512 0022 7B19     		adds	r3, r7, r5
 1513 0024 1B78     		ldrb	r3, [r3]
 1514 0026 002B     		cmp	r3, #0
 1515 0028 1FD1     		bne	.L70
 838:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {     
 839:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Clean the error context */
 840:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
ARM GAS  /tmp/cchftIgu.s 			page 42


 1516              		.loc 1 840 0
 1517 002a 144B     		ldr	r3, .L72+4
 1518 002c 0022     		movs	r2, #0
 1519 002e DA61     		str	r2, [r3, #28]
 841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Enable the Option Bytes Programming operation */
 843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTPG); 
 1520              		.loc 1 843 0
 1521 0030 134B     		ldr	r3, .L72+8
 1522 0032 1A69     		ldr	r2, [r3, #16]
 1523 0034 124B     		ldr	r3, .L72+8
 1524 0036 1021     		movs	r1, #16
 1525 0038 0A43     		orrs	r2, r1
 1526 003a 1A61     		str	r2, [r3, #16]
 844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  
 845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #if defined(FLASH_OBR_BOOT_SEL)
 846:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     OB->USER = UserConfig;
 847:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #else
 848:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     OB->USER = (UserConfig | 0x88U);
 1527              		.loc 1 848 0
 1528 003c FB1D     		adds	r3, r7, #7
 1529 003e 1B78     		ldrb	r3, [r3]
 1530 0040 7822     		movs	r2, #120
 1531 0042 5242     		rsbs	r2, r2, #0
 1532 0044 1343     		orrs	r3, r2
 1533 0046 DAB2     		uxtb	r2, r3
 1534 0048 0E4B     		ldr	r3, .L72+12
 1535 004a 92B2     		uxth	r2, r2
 1536 004c 5A80     		strh	r2, [r3, #2]
 849:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** #endif
 850:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 852:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1537              		.loc 1 852 0
 1538 004e 0F23     		movs	r3, #15
 1539 0050 FC18     		adds	r4, r7, r3
 1540 0052 094B     		ldr	r3, .L72
 1541 0054 1800     		movs	r0, r3
 1542 0056 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1543 005a 0300     		movs	r3, r0
 1544 005c 2370     		strb	r3, [r4]
 853:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 854:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* if the program operation is completed, disable the OPTPG Bit */
 855:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1545              		.loc 1 855 0
 1546 005e 084B     		ldr	r3, .L72+8
 1547 0060 1A69     		ldr	r2, [r3, #16]
 1548 0062 074B     		ldr	r3, .L72+8
 1549 0064 1021     		movs	r1, #16
 1550 0066 8A43     		bics	r2, r1
 1551 0068 1A61     		str	r2, [r3, #16]
 1552              	.L70:
 856:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 857:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 858:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return status; 
 1553              		.loc 1 858 0
 1554 006a 0F23     		movs	r3, #15
ARM GAS  /tmp/cchftIgu.s 			page 43


 1555 006c FB18     		adds	r3, r7, r3
 1556 006e 1B78     		ldrb	r3, [r3]
 859:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 1557              		.loc 1 859 0
 1558 0070 1800     		movs	r0, r3
 1559 0072 BD46     		mov	sp, r7
 1560 0074 04B0     		add	sp, sp, #16
 1561              		@ sp needed
 1562 0076 B0BD     		pop	{r4, r5, r7, pc}
 1563              	.L73:
 1564              		.align	2
 1565              	.L72:
 1566 0078 50C30000 		.word	50000
 1567 007c 00000000 		.word	pFlash
 1568 0080 00200240 		.word	1073881088
 1569 0084 00F8FF1F 		.word	536868864
 1570              		.cfi_endproc
 1571              	.LFE47:
 1573              		.section	.text.FLASH_OB_ProgramData,"ax",%progbits
 1574              		.align	1
 1575              		.syntax unified
 1576              		.code	16
 1577              		.thumb_func
 1578              		.fpu softvfp
 1580              	FLASH_OB_ProgramData:
 1581              	.LFB48:
 860:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 861:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 862:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Programs a half word at a specified Option Byte Data address.
 863:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @note   The function @ref HAL_FLASH_Unlock() should be called before to unlock the FLASH interf
 864:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Unlock() should be called before to unlock the options b
 865:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Launch() should be called after to force the reload of t
 866:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         (system reset will occur)
 867:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         Programming of the OB should be performed only after an erase (otherwise PGERR occurs)
 868:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  Address specifies the address to be programmed.
 869:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         This parameter can be 0x1FFFF804 or 0x1FFFF806. 
 870:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  Data specifies the data to be programmed.
 871:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval HAL status
 872:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 873:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_ProgramData(uint32_t Address, uint8_t Data)
 874:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 1582              		.loc 1 874 0
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 16
 1585              		@ frame_needed = 1, uses_anonymous_args = 0
 1586 0000 B0B5     		push	{r4, r5, r7, lr}
 1587              		.cfi_def_cfa_offset 16
 1588              		.cfi_offset 4, -16
 1589              		.cfi_offset 5, -12
 1590              		.cfi_offset 7, -8
 1591              		.cfi_offset 14, -4
 1592 0002 84B0     		sub	sp, sp, #16
 1593              		.cfi_def_cfa_offset 32
 1594 0004 00AF     		add	r7, sp, #0
 1595              		.cfi_def_cfa_register 7
 1596 0006 7860     		str	r0, [r7, #4]
 1597 0008 0A00     		movs	r2, r1
ARM GAS  /tmp/cchftIgu.s 			page 44


 1598 000a FB1C     		adds	r3, r7, #3
 1599 000c 1A70     		strb	r2, [r3]
 875:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1600              		.loc 1 875 0
 1601 000e 0F25     		movs	r5, #15
 1602 0010 7B19     		adds	r3, r7, r5
 1603 0012 0122     		movs	r2, #1
 1604 0014 1A70     		strb	r2, [r3]
 876:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 877:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Check the parameters */
 878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   assert_param(IS_OB_DATA_ADDRESS(Address));
 879:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 880:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 881:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1605              		.loc 1 881 0
 1606 0016 7C19     		adds	r4, r7, r5
 1607 0018 164B     		ldr	r3, .L77
 1608 001a 1800     		movs	r0, r3
 1609 001c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1610 0020 0300     		movs	r3, r0
 1611 0022 2370     		strb	r3, [r4]
 882:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 883:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1612              		.loc 1 883 0
 1613 0024 7B19     		adds	r3, r7, r5
 1614 0026 1B78     		ldrb	r3, [r3]
 1615 0028 002B     		cmp	r3, #0
 1616 002a 1BD1     		bne	.L75
 884:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 885:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Clean the error context */
 886:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1617              		.loc 1 886 0
 1618 002c 124B     		ldr	r3, .L77+4
 1619 002e 0022     		movs	r2, #0
 1620 0030 DA61     		str	r2, [r3, #28]
 887:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 888:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Enables the Option Bytes Programming operation */
 889:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTPG); 
 1621              		.loc 1 889 0
 1622 0032 124B     		ldr	r3, .L77+8
 1623 0034 1A69     		ldr	r2, [r3, #16]
 1624 0036 114B     		ldr	r3, .L77+8
 1625 0038 1021     		movs	r1, #16
 1626 003a 0A43     		orrs	r2, r1
 1627 003c 1A61     		str	r2, [r3, #16]
 890:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     *(__IO uint16_t*)Address = Data;
 1628              		.loc 1 890 0
 1629 003e 7B68     		ldr	r3, [r7, #4]
 1630 0040 FA1C     		adds	r2, r7, #3
 1631 0042 1278     		ldrb	r2, [r2]
 1632 0044 92B2     		uxth	r2, r2
 1633 0046 1A80     		strh	r2, [r3]
 891:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     
 892:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 893:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1634              		.loc 1 893 0
 1635 0048 0F23     		movs	r3, #15
ARM GAS  /tmp/cchftIgu.s 			page 45


 1636 004a FC18     		adds	r4, r7, r3
 1637 004c 094B     		ldr	r3, .L77
 1638 004e 1800     		movs	r0, r3
 1639 0050 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1640 0054 0300     		movs	r3, r0
 1641 0056 2370     		strb	r3, [r4]
 894:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     
 895:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* If the program operation is completed, disable the OPTPG Bit */
 896:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1642              		.loc 1 896 0
 1643 0058 084B     		ldr	r3, .L77+8
 1644 005a 1A69     		ldr	r2, [r3, #16]
 1645 005c 074B     		ldr	r3, .L77+8
 1646 005e 1021     		movs	r1, #16
 1647 0060 8A43     		bics	r2, r1
 1648 0062 1A61     		str	r2, [r3, #16]
 1649              	.L75:
 897:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 898:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Return the Option Byte Data Program Status */
 899:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return status;
 1650              		.loc 1 899 0
 1651 0064 0F23     		movs	r3, #15
 1652 0066 FB18     		adds	r3, r7, r3
 1653 0068 1B78     		ldrb	r3, [r3]
 900:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 1654              		.loc 1 900 0
 1655 006a 1800     		movs	r0, r3
 1656 006c BD46     		mov	sp, r7
 1657 006e 04B0     		add	sp, sp, #16
 1658              		@ sp needed
 1659 0070 B0BD     		pop	{r4, r5, r7, pc}
 1660              	.L78:
 1661 0072 C046     		.align	2
 1662              	.L77:
 1663 0074 50C30000 		.word	50000
 1664 0078 00000000 		.word	pFlash
 1665 007c 00200240 		.word	1073881088
 1666              		.cfi_endproc
 1667              	.LFE48:
 1669              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 1670              		.align	1
 1671              		.syntax unified
 1672              		.code	16
 1673              		.thumb_func
 1674              		.fpu softvfp
 1676              	FLASH_OB_GetWRP:
 1677              	.LFB49:
 901:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 902:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 903:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Return the FLASH Write Protection Option Bytes value.
 904:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval The FLASH Write Protection Option Bytes value
 905:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 906:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetWRP(void)
 907:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 1678              		.loc 1 907 0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cchftIgu.s 			page 46


 1681              		@ frame_needed = 1, uses_anonymous_args = 0
 1682 0000 80B5     		push	{r7, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 7, -8
 1685              		.cfi_offset 14, -4
 1686 0002 00AF     		add	r7, sp, #0
 1687              		.cfi_def_cfa_register 7
 908:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
 909:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return (uint32_t)(READ_REG(FLASH->WRPR));
 1688              		.loc 1 909 0
 1689 0004 024B     		ldr	r3, .L81
 1690 0006 1B6A     		ldr	r3, [r3, #32]
 910:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 1691              		.loc 1 910 0
 1692 0008 1800     		movs	r0, r3
 1693 000a BD46     		mov	sp, r7
 1694              		@ sp needed
 1695 000c 80BD     		pop	{r7, pc}
 1696              	.L82:
 1697 000e C046     		.align	2
 1698              	.L81:
 1699 0010 00200240 		.word	1073881088
 1700              		.cfi_endproc
 1701              	.LFE49:
 1703              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 1704              		.align	1
 1705              		.syntax unified
 1706              		.code	16
 1707              		.thumb_func
 1708              		.fpu softvfp
 1710              	FLASH_OB_GetRDP:
 1711              	.LFB50:
 911:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 912:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 913:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Read Protection level.
 914:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval FLASH RDP level
 915:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
 916:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_0 No protection
 917:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_1 Read protection of the memory
 918:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_2 Full chip protection
 919:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 920:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetRDP(void)
 921:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 1712              		.loc 1 921 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 8
 1715              		@ frame_needed = 1, uses_anonymous_args = 0
 1716 0000 80B5     		push	{r7, lr}
 1717              		.cfi_def_cfa_offset 8
 1718              		.cfi_offset 7, -8
 1719              		.cfi_offset 14, -4
 1720 0002 82B0     		sub	sp, sp, #8
 1721              		.cfi_def_cfa_offset 16
 1722 0004 00AF     		add	r7, sp, #0
 1723              		.cfi_def_cfa_register 7
 922:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   uint32_t tmp_reg = 0U;
 1724              		.loc 1 922 0
ARM GAS  /tmp/cchftIgu.s 			page 47


 1725 0006 0023     		movs	r3, #0
 1726 0008 7B60     		str	r3, [r7, #4]
 923:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   
 924:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Read RDP level bits */
 925:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   tmp_reg = READ_BIT(FLASH->OBR, (FLASH_OBR_RDPRT1 | FLASH_OBR_RDPRT2));
 1727              		.loc 1 925 0
 1728 000a 0A4B     		ldr	r3, .L87
 1729 000c DB69     		ldr	r3, [r3, #28]
 1730 000e 0622     		movs	r2, #6
 1731 0010 1340     		ands	r3, r2
 1732 0012 7B60     		str	r3, [r7, #4]
 926:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 927:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   if (tmp_reg == FLASH_OBR_RDPRT1)
 1733              		.loc 1 927 0
 1734 0014 7B68     		ldr	r3, [r7, #4]
 1735 0016 022B     		cmp	r3, #2
 1736 0018 01D1     		bne	.L84
 928:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 929:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     return OB_RDP_LEVEL_1;
 1737              		.loc 1 929 0
 1738 001a BB23     		movs	r3, #187
 1739 001c 05E0     		b	.L85
 1740              	.L84:
 930:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 931:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   else if (tmp_reg == FLASH_OBR_RDPRT2)
 1741              		.loc 1 931 0
 1742 001e 7B68     		ldr	r3, [r7, #4]
 1743 0020 042B     		cmp	r3, #4
 1744 0022 01D1     		bne	.L86
 932:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 933:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     return OB_RDP_LEVEL_2;
 1745              		.loc 1 933 0
 1746 0024 CC23     		movs	r3, #204
 1747 0026 00E0     		b	.L85
 1748              	.L86:
 934:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 935:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   else 
 936:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   {
 937:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     return OB_RDP_LEVEL_0;
 1749              		.loc 1 937 0
 1750 0028 AA23     		movs	r3, #170
 1751              	.L85:
 938:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   }
 939:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 1752              		.loc 1 939 0
 1753 002a 1800     		movs	r0, r3
 1754 002c BD46     		mov	sp, r7
 1755 002e 02B0     		add	sp, sp, #8
 1756              		@ sp needed
 1757 0030 80BD     		pop	{r7, pc}
 1758              	.L88:
 1759 0032 C046     		.align	2
 1760              	.L87:
 1761 0034 00200240 		.word	1073881088
 1762              		.cfi_endproc
 1763              	.LFE50:
 1765              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
ARM GAS  /tmp/cchftIgu.s 			page 48


 1766              		.align	1
 1767              		.syntax unified
 1768              		.code	16
 1769              		.thumb_func
 1770              		.fpu softvfp
 1772              	FLASH_OB_GetUser:
 1773              	.LFB51:
 940:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 941:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 942:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Return the FLASH User Option Byte value.
 943:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval  The FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1), RST_STDBY(Bit2), nB
 944:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         VDDA_Analog_Monitoring(Bit5) and SRAM_Parity_Enable(Bit6). 
 945:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         For few devices, following option bytes are available: nBOOT0(Bit3) & BOOT_SEL(Bit7).
 946:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 947:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetUser(void)
 948:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 1774              		.loc 1 948 0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 0
 1777              		@ frame_needed = 1, uses_anonymous_args = 0
 1778 0000 80B5     		push	{r7, lr}
 1779              		.cfi_def_cfa_offset 8
 1780              		.cfi_offset 7, -8
 1781              		.cfi_offset 14, -4
 1782 0002 00AF     		add	r7, sp, #0
 1783              		.cfi_def_cfa_register 7
 949:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Return the User Option Byte */
 950:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   return (uint8_t)((READ_REG(FLASH->OBR) & FLASH_OBR_USER) >> FLASH_POSITION_IWDGSW_BIT);
 1784              		.loc 1 950 0
 1785 0004 044B     		ldr	r3, .L91
 1786 0006 DB69     		ldr	r3, [r3, #28]
 1787 0008 1B0A     		lsrs	r3, r3, #8
 1788 000a DBB2     		uxtb	r3, r3
 1789 000c 7722     		movs	r2, #119
 1790 000e 1340     		ands	r3, r2
 1791 0010 DBB2     		uxtb	r3, r3
 951:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 1792              		.loc 1 951 0
 1793 0012 1800     		movs	r0, r3
 1794 0014 BD46     		mov	sp, r7
 1795              		@ sp needed
 1796 0016 80BD     		pop	{r7, pc}
 1797              	.L92:
 1798              		.align	2
 1799              	.L91:
 1800 0018 00200240 		.word	1073881088
 1801              		.cfi_endproc
 1802              	.LFE51:
 1804              		.section	.text.FLASH_PageErase,"ax",%progbits
 1805              		.align	1
 1806              		.global	FLASH_PageErase
 1807              		.syntax unified
 1808              		.code	16
 1809              		.thumb_func
 1810              		.fpu softvfp
 1812              	FLASH_PageErase:
 1813              	.LFB52:
ARM GAS  /tmp/cchftIgu.s 			page 49


 952:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 953:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 954:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @}
 955:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 956:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 957:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 958:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @}
 959:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 960:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 961:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @addtogroup FLASH
 962:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @{
 963:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 964:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 965:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /** @addtogroup FLASH_Private_Functions
 966:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  * @{
 967:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****  */
 968:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 969:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** /**
 970:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory page
 971:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @param  PageAddress FLASH page to erase
 972:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series      
 973:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * 
 974:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   * @retval None
 975:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   */
 976:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** void FLASH_PageErase(uint32_t PageAddress)
 977:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** {
 1814              		.loc 1 977 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 8
 1817              		@ frame_needed = 1, uses_anonymous_args = 0
 1818 0000 80B5     		push	{r7, lr}
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 7, -8
 1821              		.cfi_offset 14, -4
 1822 0002 82B0     		sub	sp, sp, #8
 1823              		.cfi_def_cfa_offset 16
 1824 0004 00AF     		add	r7, sp, #0
 1825              		.cfi_def_cfa_register 7
 1826 0006 7860     		str	r0, [r7, #4]
 978:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   /* Clean the error context */
 979:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1827              		.loc 1 979 0
 1828 0008 0A4B     		ldr	r3, .L94
 1829 000a 0022     		movs	r2, #0
 1830 000c DA61     		str	r2, [r3, #28]
 980:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** 
 981:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     /* Proceed to erase the page */
 982:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_PER);
 1831              		.loc 1 982 0
 1832 000e 0A4B     		ldr	r3, .L94+4
 1833 0010 1A69     		ldr	r2, [r3, #16]
 1834 0012 094B     		ldr	r3, .L94+4
 1835 0014 0221     		movs	r1, #2
 1836 0016 0A43     		orrs	r2, r1
 1837 0018 1A61     		str	r2, [r3, #16]
 983:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     WRITE_REG(FLASH->AR, PageAddress);
 1838              		.loc 1 983 0
ARM GAS  /tmp/cchftIgu.s 			page 50


 1839 001a 074B     		ldr	r3, .L94+4
 1840 001c 7A68     		ldr	r2, [r7, #4]
 1841 001e 5A61     		str	r2, [r3, #20]
 984:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 1842              		.loc 1 984 0
 1843 0020 054B     		ldr	r3, .L94+4
 1844 0022 1A69     		ldr	r2, [r3, #16]
 1845 0024 044B     		ldr	r3, .L94+4
 1846 0026 4021     		movs	r1, #64
 1847 0028 0A43     		orrs	r2, r1
 1848 002a 1A61     		str	r2, [r3, #16]
 985:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_flash_ex.c **** }
 1849              		.loc 1 985 0
 1850 002c C046     		nop
 1851 002e BD46     		mov	sp, r7
 1852 0030 02B0     		add	sp, sp, #8
 1853              		@ sp needed
 1854 0032 80BD     		pop	{r7, pc}
 1855              	.L95:
 1856              		.align	2
 1857              	.L94:
 1858 0034 00000000 		.word	pFlash
 1859 0038 00200240 		.word	1073881088
 1860              		.cfi_endproc
 1861              	.LFE52:
 1863              		.text
 1864              	.Letext0:
 1865              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 1866              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 1867              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1868              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1869              		.file 6 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 1870              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 1871              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 1872              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/ree
 1873              		.file 10 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1874              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_flash.h"
 1875              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_flash_ex.h"
ARM GAS  /tmp/cchftIgu.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_flash_ex.c
     /tmp/cchftIgu.s:16     .text.HAL_FLASHEx_Erase:0000000000000000 $t
     /tmp/cchftIgu.s:23     .text.HAL_FLASHEx_Erase:0000000000000000 HAL_FLASHEx_Erase
     /tmp/cchftIgu.s:738    .text.FLASH_MassErase:0000000000000000 FLASH_MassErase
     /tmp/cchftIgu.s:1812   .text.FLASH_PageErase:0000000000000000 FLASH_PageErase
     /tmp/cchftIgu.s:179    .text.HAL_FLASHEx_Erase:00000000000000e0 $d
     /tmp/cchftIgu.s:186    .text.HAL_FLASHEx_Erase_IT:0000000000000000 $t
     /tmp/cchftIgu.s:193    .text.HAL_FLASHEx_Erase_IT:0000000000000000 HAL_FLASHEx_Erase_IT
     /tmp/cchftIgu.s:291    .text.HAL_FLASHEx_Erase_IT:0000000000000080 $d
     /tmp/cchftIgu.s:297    .text.HAL_FLASHEx_OBErase:0000000000000000 $t
     /tmp/cchftIgu.s:304    .text.HAL_FLASHEx_OBErase:0000000000000000 HAL_FLASHEx_OBErase
     /tmp/cchftIgu.s:1710   .text.FLASH_OB_GetRDP:0000000000000000 FLASH_OB_GetRDP
     /tmp/cchftIgu.s:1350   .text.FLASH_OB_RDP_LevelConfig:0000000000000000 FLASH_OB_RDP_LevelConfig
     /tmp/cchftIgu.s:402    .text.HAL_FLASHEx_OBErase:0000000000000090 $d
     /tmp/cchftIgu.s:409    .text.HAL_FLASHEx_OBProgram:0000000000000000 $t
     /tmp/cchftIgu.s:416    .text.HAL_FLASHEx_OBProgram:0000000000000000 HAL_FLASHEx_OBProgram
     /tmp/cchftIgu.s:788    .text.FLASH_OB_EnableWRP:0000000000000000 FLASH_OB_EnableWRP
     /tmp/cchftIgu.s:1070   .text.FLASH_OB_DisableWRP:0000000000000000 FLASH_OB_DisableWRP
     /tmp/cchftIgu.s:1480   .text.FLASH_OB_UserConfig:0000000000000000 FLASH_OB_UserConfig
     /tmp/cchftIgu.s:1580   .text.FLASH_OB_ProgramData:0000000000000000 FLASH_OB_ProgramData
     /tmp/cchftIgu.s:610    .text.HAL_FLASHEx_OBProgram:0000000000000124 $d
     /tmp/cchftIgu.s:615    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 $t
     /tmp/cchftIgu.s:622    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 HAL_FLASHEx_OBGetConfig
     /tmp/cchftIgu.s:1676   .text.FLASH_OB_GetWRP:0000000000000000 FLASH_OB_GetWRP
     /tmp/cchftIgu.s:1772   .text.FLASH_OB_GetUser:0000000000000000 FLASH_OB_GetUser
     /tmp/cchftIgu.s:668    .text.HAL_FLASHEx_OBGetUserData:0000000000000000 $t
     /tmp/cchftIgu.s:675    .text.HAL_FLASHEx_OBGetUserData:0000000000000000 HAL_FLASHEx_OBGetUserData
     /tmp/cchftIgu.s:726    .text.HAL_FLASHEx_OBGetUserData:0000000000000038 $d
     /tmp/cchftIgu.s:732    .text.FLASH_MassErase:0000000000000000 $t
     /tmp/cchftIgu.s:776    .text.FLASH_MassErase:0000000000000028 $d
     /tmp/cchftIgu.s:782    .text.FLASH_OB_EnableWRP:0000000000000000 $t
     /tmp/cchftIgu.s:1056   .text.FLASH_OB_EnableWRP:00000000000001b0 $d
     /tmp/cchftIgu.s:1064   .text.FLASH_OB_DisableWRP:0000000000000000 $t
     /tmp/cchftIgu.s:1336   .text.FLASH_OB_DisableWRP:00000000000001ac $d
     /tmp/cchftIgu.s:1344   .text.FLASH_OB_RDP_LevelConfig:0000000000000000 $t
     /tmp/cchftIgu.s:1466   .text.FLASH_OB_RDP_LevelConfig:00000000000000ac $d
     /tmp/cchftIgu.s:1474   .text.FLASH_OB_UserConfig:0000000000000000 $t
     /tmp/cchftIgu.s:1566   .text.FLASH_OB_UserConfig:0000000000000078 $d
     /tmp/cchftIgu.s:1574   .text.FLASH_OB_ProgramData:0000000000000000 $t
     /tmp/cchftIgu.s:1663   .text.FLASH_OB_ProgramData:0000000000000074 $d
     /tmp/cchftIgu.s:1670   .text.FLASH_OB_GetWRP:0000000000000000 $t
     /tmp/cchftIgu.s:1699   .text.FLASH_OB_GetWRP:0000000000000010 $d
     /tmp/cchftIgu.s:1704   .text.FLASH_OB_GetRDP:0000000000000000 $t
     /tmp/cchftIgu.s:1761   .text.FLASH_OB_GetRDP:0000000000000034 $d
     /tmp/cchftIgu.s:1766   .text.FLASH_OB_GetUser:0000000000000000 $t
     /tmp/cchftIgu.s:1800   .text.FLASH_OB_GetUser:0000000000000018 $d
     /tmp/cchftIgu.s:1805   .text.FLASH_PageErase:0000000000000000 $t
     /tmp/cchftIgu.s:1858   .text.FLASH_PageErase:0000000000000034 $d
                           .group:0000000000000000 wm4.0.b7c3d577b02d87ac381ee43eef398462
                           .group:0000000000000000 wm4.main.h.42.3939338cba6ab0a8b761d08be8206d51
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.b0c07d2233f75e3b04f03d95093d88ca
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
ARM GAS  /tmp/cchftIgu.s 			page 52


                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart.h.38.e5eada3cdf37ca88de33bd21ddd21a5e
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart_ex.h.38.9430c2ca5ec832677dbe7308c46115fd
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

UNDEFINED SYMBOLS
FLASH_WaitForLastOperation
pFlash
