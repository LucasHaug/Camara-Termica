ARM GAS  /tmp/cc2KpHu1.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_gpio.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_GPIO_Init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_GPIO_Init:
  24              	.LFB37:
  25              		.file 1 "cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c"
   1:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
   2:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ******************************************************************************
   3:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @file    stm32f0xx_hal_gpio.c
   4:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @author  MCD Application Team
   5:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief   GPIO HAL module driver.
   6:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *          This file provides firmware functions to manage the following 
   7:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *          functionalities of the General Purpose Input/Output (GPIO) peripheral:
   8:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *           + Initialization and de-initialization functions
   9:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *           + IO operation functions
  10:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         
  11:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   @verbatim
  12:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ==============================================================================
  13:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                     ##### GPIO Peripheral features #####
  14:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ==============================================================================         
  15:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   [..] 
  16:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) Each port bit of the general-purpose I/O (GPIO) ports can be individually
  17:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   configured by software in several modes:
  18:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) Input mode
  19:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) Analog mode
  20:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) Output mode
  21:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) Alternate function mode
  22:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) External interrupt/event lines
  23:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  
  24:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) During and just after reset, the alternate functions and external interrupt
  25:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   lines are not active and the I/O ports are configured in input floating mode.
  26:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  27:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) All GPIO pins have weak internal pull-up and pull-down resistors, which can be
  28:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   activated or not.
  29:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****            
  30:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) In Output or Alternate mode, each IO can be configured on open-drain or push-pull
  31:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   type and the IO speed can be selected depending on the VDD value.
  32:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        
  33:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) The microcontroller IO pins are connected to onboard peripherals/modules through a
ARM GAS  /tmp/cc2KpHu1.s 			page 2


  34:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         multiplexer that allows only one peripheral alternate function (AF) connected
  35:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   to an IO pin at a time. In this way, there can be no conflict between peripherals 
  36:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   sharing the same IO pin. 
  37:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  38:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) All ports have external interrupt/event capability. To use external interrupt
  39:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   lines, the port must be configured in input mode. All available GPIO pins are 
  40:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   connected to the 16 external interrupt/event lines from EXTI0 to EXTI15.
  41:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  42:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) The external interrupt/event controller consists of up to 28 edge detectors
  43:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (16 lines are connected to GPIO) for generating event/interrupt requests (each
  44:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         input line can be independently configured to select the type (interrupt or event)
  45:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         and the corresponding trigger event (rising or falling or both). Each line can
  46:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         also be masked independently.
  47:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    
  48:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             ##### How to use this driver #####
  49:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ==============================================================================  
  50:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   [..]
  51:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) Enable the GPIO AHB clock using the following function : __HAL_RCC_GPIOx_CLK_ENABLE(). 
  52:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                                     
  53:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) Configure the GPIO pin(s) using HAL_GPIO_Init().
  54:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (++) Configure the IO mode using "Mode" member from GPIO_InitTypeDef structure
  55:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (++) Activate Pull-up, Pull-down resistor using "Pull" member from GPIO_InitTypeDef 
  56:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             structure.
  57:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (++) In case of Output or alternate function mode selection: the speed is 
  58:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****              configured through "Speed" member from GPIO_InitTypeDef structure.
  59:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) In alternate mode is selection, the alternate function connected to the IO
  60:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****              is configured through "Alternate" member from GPIO_InitTypeDef structure.
  61:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (++) Analog mode is required when a pin is to be used as ADC channel 
  62:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             or DAC output.
  63:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (++) In case of external interrupt/event selection the "Mode" member from 
  64:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             GPIO_InitTypeDef structure select the type (interrupt or event) and 
  65:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             the corresponding trigger event (rising or falling or both).
  66:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  67:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) In case of external interrupt/event mode selection, configure NVIC IRQ priority 
  68:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        mapped to the EXTI line using HAL_NVIC_SetPriority() and enable it using
  69:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        HAL_NVIC_EnableIRQ().
  70:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  71:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) HAL_GPIO_DeInit allows to set register values to their reset value. It's also 
  72:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        recommended to use it to unconfigure pin which was used as an external interrupt 
  73:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        or in event mode. That's the only way to reset corresponding bit in EXTI & SYSCFG 
  74:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        registers.
  75:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  76:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) To get the level of a pin configured in input mode use HAL_GPIO_ReadPin().
  77:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  78:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) To set/reset the level of a pin configured in output mode use 
  79:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        HAL_GPIO_WritePin()/HAL_GPIO_TogglePin().
  80:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  81:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) To lock pin configuration until next reset use HAL_GPIO_LockPin().
  82:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  83:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) During and just after reset, the alternate functions are not 
  84:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        active and the GPIO pins are configured in input floating mode (except JTAG
  85:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        pins).
  86:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  87:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as general purpose 
  88:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (PC14 and PC15, respectively) when the LSE oscillator is off. The LSE has 
  89:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        priority over the GPIO function.
  90:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
ARM GAS  /tmp/cc2KpHu1.s 			page 3


  91:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  92:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         general purpose PF0 and PF1, respectively, when the HSE oscillator is off.
  93:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        The HSE has priority over the GPIO function.
  94:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  95:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   @endverbatim
  96:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ******************************************************************************
  97:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @attention
  98:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *
  99:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *
 101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * Redistribution and use in source and binary forms, with or without modification,
 102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * are permitted provided that the following conditions are met:
 103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *      this list of conditions and the following disclaimer.
 105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *      this list of conditions and the following disclaimer in the documentation
 107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *      and/or other materials provided with the distribution.
 108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *      may be used to endorse or promote products derived from this software
 110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *      without specific prior written permission.
 111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *
 112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *
 123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ******************************************************************************  
 124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Includes ------------------------------------------------------------------*/
 127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #include "stm32f0xx_hal.h"
 128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @addtogroup STM32F0xx_HAL_Driver
 130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @defgroup GPIO GPIO
 134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief GPIO HAL module driver
 135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #ifdef HAL_GPIO_MODULE_ENABLED
 139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Private typedef -----------------------------------------------------------*/
 141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Private defines -----------------------------------------------------------*/
 142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @defgroup GPIO_Private_Defines GPIO Private Defines
 143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define GPIO_MODE             (0x00000003U)
 146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define EXTI_MODE             (0x10000000U)
 147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define GPIO_MODE_IT          (0x00010000U)
ARM GAS  /tmp/cc2KpHu1.s 			page 4


 148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define GPIO_MODE_EVT         (0x00020000U)
 149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define RISING_EDGE           (0x00100000U)
 150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define FALLING_EDGE          (0x00200000U)
 151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define GPIO_OUTPUT_TYPE      (0x00000010U)
 152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define GPIO_NUMBER           (16U)
 154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @}
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Private macros ------------------------------------------------------------*/
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Private variables ---------------------------------------------------------*/
 160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Private function prototypes -----------------------------------------------*/
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Exported functions --------------------------------------------------------*/
 162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @defgroup GPIO_Exported_Functions GPIO Exported Functions
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @defgroup GPIO_Exported_Functions_Group1 Initialization/de-initialization functions 
 168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  *  @brief    Initialization and Configuration functions 
 169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  *
 170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** @verbatim    
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  ===============================================================================
 172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****               ##### Initialization and de-initialization functions #####
 173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  ===============================================================================
 174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** @endverbatim
 176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  Initialize the GPIOx peripheral according to the specified parameters in the GPIO_Init.
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** { 
  26              		.loc 1 187 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 86B0     		sub	sp, sp, #24
  35              		.cfi_def_cfa_offset 32
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 7860     		str	r0, [r7, #4]
  39 0008 3960     		str	r1, [r7]
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t position = 0x00U;
  40              		.loc 1 188 0
  41 000a 0023     		movs	r3, #0
ARM GAS  /tmp/cc2KpHu1.s 			page 5


  42 000c 7B61     		str	r3, [r7, #20]
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t iocurrent = 0x00U;
  43              		.loc 1 189 0
  44 000e 0023     		movs	r3, #0
  45 0010 FB60     		str	r3, [r7, #12]
 190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t temp = 0x00U;
  46              		.loc 1 190 0
  47 0012 0023     		movs	r3, #0
  48 0014 3B61     		str	r3, [r7, #16]
 191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull)); 
 197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Configure the port pins */
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   while (((GPIO_Init->Pin) >> position) != RESET)
  49              		.loc 1 199 0
  50 0016 55E1     		b	.L2
  51              	.L22:
 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     /* Get current io position */
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     iocurrent = (GPIO_Init->Pin) & (1U << position);
  52              		.loc 1 202 0
  53 0018 3B68     		ldr	r3, [r7]
  54 001a 1B68     		ldr	r3, [r3]
  55 001c 0121     		movs	r1, #1
  56 001e 7A69     		ldr	r2, [r7, #20]
  57 0020 9140     		lsls	r1, r1, r2
  58 0022 0A00     		movs	r2, r1
  59 0024 1340     		ands	r3, r2
  60 0026 FB60     		str	r3, [r7, #12]
 203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     if(iocurrent)
  61              		.loc 1 204 0
  62 0028 FB68     		ldr	r3, [r7, #12]
  63 002a 002B     		cmp	r3, #0
  64 002c 00D1     		bne	.LCB34
  65 002e 46E1     		b	.L3	@long jump
  66              	.LCB34:
 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     {
 206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* In case of Alternate function mode selection */
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) 
  67              		.loc 1 208 0
  68 0030 3B68     		ldr	r3, [r7]
  69 0032 5B68     		ldr	r3, [r3, #4]
  70 0034 022B     		cmp	r3, #2
  71 0036 03D0     		beq	.L4
  72              		.loc 1 208 0 is_stmt 0 discriminator 1
  73 0038 3B68     		ldr	r3, [r7]
  74 003a 5B68     		ldr	r3, [r3, #4]
  75 003c 122B     		cmp	r3, #18
  76 003e 23D1     		bne	.L5
  77              	.L4:
 209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
ARM GAS  /tmp/cc2KpHu1.s 			page 6


 210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Check the Alternate function parameters */
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
 212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Configure Alternate function mapped with the current IO */ 
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = GPIOx->AFR[position >> 3];
  78              		.loc 1 215 0 is_stmt 1
  79 0040 7B69     		ldr	r3, [r7, #20]
  80 0042 DA08     		lsrs	r2, r3, #3
  81 0044 7B68     		ldr	r3, [r7, #4]
  82 0046 0832     		adds	r2, r2, #8
  83 0048 9200     		lsls	r2, r2, #2
  84 004a D358     		ldr	r3, [r2, r3]
  85 004c 3B61     		str	r3, [r7, #16]
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
  86              		.loc 1 216 0
  87 004e 7B69     		ldr	r3, [r7, #20]
  88 0050 0722     		movs	r2, #7
  89 0052 1340     		ands	r3, r2
  90 0054 9B00     		lsls	r3, r3, #2
  91 0056 0F22     		movs	r2, #15
  92 0058 9A40     		lsls	r2, r2, r3
  93 005a 1300     		movs	r3, r2
  94 005c DA43     		mvns	r2, r3
  95 005e 3B69     		ldr	r3, [r7, #16]
  96 0060 1340     		ands	r3, r2
  97 0062 3B61     		str	r3, [r7, #16]
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
  98              		.loc 1 217 0
  99 0064 3B68     		ldr	r3, [r7]
 100 0066 1A69     		ldr	r2, [r3, #16]
 101 0068 7B69     		ldr	r3, [r7, #20]
 102 006a 0721     		movs	r1, #7
 103 006c 0B40     		ands	r3, r1
 104 006e 9B00     		lsls	r3, r3, #2
 105 0070 9A40     		lsls	r2, r2, r3
 106 0072 1300     		movs	r3, r2
 107 0074 3A69     		ldr	r2, [r7, #16]
 108 0076 1343     		orrs	r3, r2
 109 0078 3B61     		str	r3, [r7, #16]
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         GPIOx->AFR[position >> 3U] = temp;
 110              		.loc 1 218 0
 111 007a 7B69     		ldr	r3, [r7, #20]
 112 007c DA08     		lsrs	r2, r3, #3
 113 007e 7B68     		ldr	r3, [r7, #4]
 114 0080 0832     		adds	r2, r2, #8
 115 0082 9200     		lsls	r2, r2, #2
 116 0084 3969     		ldr	r1, [r7, #16]
 117 0086 D150     		str	r1, [r2, r3]
 118              	.L5:
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       temp = GPIOx->MODER;
 119              		.loc 1 222 0
 120 0088 7B68     		ldr	r3, [r7, #4]
 121 008a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc2KpHu1.s 			page 7


 122 008c 3B61     		str	r3, [r7, #16]
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 123              		.loc 1 223 0
 124 008e 7B69     		ldr	r3, [r7, #20]
 125 0090 5B00     		lsls	r3, r3, #1
 126 0092 0322     		movs	r2, #3
 127 0094 9A40     		lsls	r2, r2, r3
 128 0096 1300     		movs	r3, r2
 129 0098 DA43     		mvns	r2, r3
 130 009a 3B69     		ldr	r3, [r7, #16]
 131 009c 1340     		ands	r3, r2
 132 009e 3B61     		str	r3, [r7, #16]
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 133              		.loc 1 224 0
 134 00a0 3B68     		ldr	r3, [r7]
 135 00a2 5B68     		ldr	r3, [r3, #4]
 136 00a4 0322     		movs	r2, #3
 137 00a6 1A40     		ands	r2, r3
 138 00a8 7B69     		ldr	r3, [r7, #20]
 139 00aa 5B00     		lsls	r3, r3, #1
 140 00ac 9A40     		lsls	r2, r2, r3
 141 00ae 1300     		movs	r3, r2
 142 00b0 3A69     		ldr	r2, [r7, #16]
 143 00b2 1343     		orrs	r3, r2
 144 00b4 3B61     		str	r3, [r7, #16]
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       GPIOx->MODER = temp;
 145              		.loc 1 225 0
 146 00b6 7B68     		ldr	r3, [r7, #4]
 147 00b8 3A69     		ldr	r2, [r7, #16]
 148 00ba 1A60     		str	r2, [r3]
 226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* In case of Output or Alternate function mode selection */
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 149              		.loc 1 228 0
 150 00bc 3B68     		ldr	r3, [r7]
 151 00be 5B68     		ldr	r3, [r3, #4]
 152 00c0 012B     		cmp	r3, #1
 153 00c2 0BD0     		beq	.L6
 154              		.loc 1 228 0 is_stmt 0 discriminator 1
 155 00c4 3B68     		ldr	r3, [r7]
 156 00c6 5B68     		ldr	r3, [r3, #4]
 157 00c8 022B     		cmp	r3, #2
 158 00ca 07D0     		beq	.L6
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 159              		.loc 1 229 0 is_stmt 1 discriminator 2
 160 00cc 3B68     		ldr	r3, [r7]
 161 00ce 5B68     		ldr	r3, [r3, #4]
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 162              		.loc 1 228 0 discriminator 2
 163 00d0 112B     		cmp	r3, #17
 164 00d2 03D0     		beq	.L6
 165              		.loc 1 229 0
 166 00d4 3B68     		ldr	r3, [r7]
 167 00d6 5B68     		ldr	r3, [r3, #4]
 168 00d8 122B     		cmp	r3, #18
 169 00da 30D1     		bne	.L7
 170              	.L6:
ARM GAS  /tmp/cc2KpHu1.s 			page 8


 230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Check the Speed parameter */
 232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Configure the IO Speed */
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = GPIOx->OSPEEDR; 
 171              		.loc 1 234 0
 172 00dc 7B68     		ldr	r3, [r7, #4]
 173 00de 9B68     		ldr	r3, [r3, #8]
 174 00e0 3B61     		str	r3, [r7, #16]
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 175              		.loc 1 235 0
 176 00e2 7B69     		ldr	r3, [r7, #20]
 177 00e4 5B00     		lsls	r3, r3, #1
 178 00e6 0322     		movs	r2, #3
 179 00e8 9A40     		lsls	r2, r2, r3
 180 00ea 1300     		movs	r3, r2
 181 00ec DA43     		mvns	r2, r3
 182 00ee 3B69     		ldr	r3, [r7, #16]
 183 00f0 1340     		ands	r3, r2
 184 00f2 3B61     		str	r3, [r7, #16]
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 185              		.loc 1 236 0
 186 00f4 3B68     		ldr	r3, [r7]
 187 00f6 DA68     		ldr	r2, [r3, #12]
 188 00f8 7B69     		ldr	r3, [r7, #20]
 189 00fa 5B00     		lsls	r3, r3, #1
 190 00fc 9A40     		lsls	r2, r2, r3
 191 00fe 1300     		movs	r3, r2
 192 0100 3A69     		ldr	r2, [r7, #16]
 193 0102 1343     		orrs	r3, r2
 194 0104 3B61     		str	r3, [r7, #16]
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         GPIOx->OSPEEDR = temp;
 195              		.loc 1 237 0
 196 0106 7B68     		ldr	r3, [r7, #4]
 197 0108 3A69     		ldr	r2, [r7, #16]
 198 010a 9A60     		str	r2, [r3, #8]
 238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Configure the IO Output Type */
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = GPIOx->OTYPER;
 199              		.loc 1 240 0
 200 010c 7B68     		ldr	r3, [r7, #4]
 201 010e 5B68     		ldr	r3, [r3, #4]
 202 0110 3B61     		str	r3, [r7, #16]
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 203              		.loc 1 241 0
 204 0112 0122     		movs	r2, #1
 205 0114 7B69     		ldr	r3, [r7, #20]
 206 0116 9A40     		lsls	r2, r2, r3
 207 0118 1300     		movs	r3, r2
 208 011a DA43     		mvns	r2, r3
 209 011c 3B69     		ldr	r3, [r7, #16]
 210 011e 1340     		ands	r3, r2
 211 0120 3B61     		str	r3, [r7, #16]
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 212              		.loc 1 242 0
 213 0122 3B68     		ldr	r3, [r7]
 214 0124 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cc2KpHu1.s 			page 9


 215 0126 1B09     		lsrs	r3, r3, #4
 216 0128 0122     		movs	r2, #1
 217 012a 1A40     		ands	r2, r3
 218 012c 7B69     		ldr	r3, [r7, #20]
 219 012e 9A40     		lsls	r2, r2, r3
 220 0130 1300     		movs	r3, r2
 221 0132 3A69     		ldr	r2, [r7, #16]
 222 0134 1343     		orrs	r3, r2
 223 0136 3B61     		str	r3, [r7, #16]
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         GPIOx->OTYPER = temp;
 224              		.loc 1 243 0
 225 0138 7B68     		ldr	r3, [r7, #4]
 226 013a 3A69     		ldr	r2, [r7, #16]
 227 013c 5A60     		str	r2, [r3, #4]
 228              	.L7:
 244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       temp = GPIOx->PUPDR;
 229              		.loc 1 247 0
 230 013e 7B68     		ldr	r3, [r7, #4]
 231 0140 DB68     		ldr	r3, [r3, #12]
 232 0142 3B61     		str	r3, [r7, #16]
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 233              		.loc 1 248 0
 234 0144 7B69     		ldr	r3, [r7, #20]
 235 0146 5B00     		lsls	r3, r3, #1
 236 0148 0322     		movs	r2, #3
 237 014a 9A40     		lsls	r2, r2, r3
 238 014c 1300     		movs	r3, r2
 239 014e DA43     		mvns	r2, r3
 240 0150 3B69     		ldr	r3, [r7, #16]
 241 0152 1340     		ands	r3, r2
 242 0154 3B61     		str	r3, [r7, #16]
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 243              		.loc 1 249 0
 244 0156 3B68     		ldr	r3, [r7]
 245 0158 9A68     		ldr	r2, [r3, #8]
 246 015a 7B69     		ldr	r3, [r7, #20]
 247 015c 5B00     		lsls	r3, r3, #1
 248 015e 9A40     		lsls	r2, r2, r3
 249 0160 1300     		movs	r3, r2
 250 0162 3A69     		ldr	r2, [r7, #16]
 251 0164 1343     		orrs	r3, r2
 252 0166 3B61     		str	r3, [r7, #16]
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       GPIOx->PUPDR = temp;
 253              		.loc 1 250 0
 254 0168 7B68     		ldr	r3, [r7, #4]
 255 016a 3A69     		ldr	r2, [r7, #16]
 256 016c DA60     		str	r2, [r3, #12]
 251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure the External Interrupt or event for the current IO */
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE) 
 257              		.loc 1 254 0
 258 016e 3B68     		ldr	r3, [r7]
 259 0170 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/cc2KpHu1.s 			page 10


 260 0172 8023     		movs	r3, #128
 261 0174 5B05     		lsls	r3, r3, #21
 262 0176 1340     		ands	r3, r2
 263 0178 00D1     		bne	.LCB206
 264 017a A0E0     		b	.L3	@long jump
 265              	.LCB206:
 266              	.LBB2:
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Enable SYSCFG Clock */
 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 267              		.loc 1 257 0
 268 017c 574B     		ldr	r3, .L23
 269 017e 9A69     		ldr	r2, [r3, #24]
 270 0180 564B     		ldr	r3, .L23
 271 0182 0121     		movs	r1, #1
 272 0184 0A43     		orrs	r2, r1
 273 0186 9A61     		str	r2, [r3, #24]
 274 0188 544B     		ldr	r3, .L23
 275 018a 9B69     		ldr	r3, [r3, #24]
 276 018c 0122     		movs	r2, #1
 277 018e 1340     		ands	r3, r2
 278 0190 BB60     		str	r3, [r7, #8]
 279 0192 BB68     		ldr	r3, [r7, #8]
 280              	.LBE2:
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = SYSCFG->EXTICR[position >> 2];
 281              		.loc 1 259 0
 282 0194 524A     		ldr	r2, .L23+4
 283 0196 7B69     		ldr	r3, [r7, #20]
 284 0198 9B08     		lsrs	r3, r3, #2
 285 019a 0233     		adds	r3, r3, #2
 286 019c 9B00     		lsls	r3, r3, #2
 287 019e 9B58     		ldr	r3, [r3, r2]
 288 01a0 3B61     		str	r3, [r7, #16]
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 289              		.loc 1 260 0
 290 01a2 7B69     		ldr	r3, [r7, #20]
 291 01a4 0322     		movs	r2, #3
 292 01a6 1340     		ands	r3, r2
 293 01a8 9B00     		lsls	r3, r3, #2
 294 01aa 0F22     		movs	r2, #15
 295 01ac 9A40     		lsls	r2, r2, r3
 296 01ae 1300     		movs	r3, r2
 297 01b0 DA43     		mvns	r2, r3
 298 01b2 3B69     		ldr	r3, [r7, #16]
 299 01b4 1340     		ands	r3, r2
 300 01b6 3B61     		str	r3, [r7, #16]
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 301              		.loc 1 261 0
 302 01b8 7A68     		ldr	r2, [r7, #4]
 303 01ba 9023     		movs	r3, #144
 304 01bc DB05     		lsls	r3, r3, #23
 305 01be 9A42     		cmp	r2, r3
 306 01c0 19D0     		beq	.L8
 307              		.loc 1 261 0 is_stmt 0 discriminator 1
 308 01c2 7B68     		ldr	r3, [r7, #4]
 309 01c4 474A     		ldr	r2, .L23+8
ARM GAS  /tmp/cc2KpHu1.s 			page 11


 310 01c6 9342     		cmp	r3, r2
 311 01c8 13D0     		beq	.L9
 312              		.loc 1 261 0 discriminator 3
 313 01ca 7B68     		ldr	r3, [r7, #4]
 314 01cc 464A     		ldr	r2, .L23+12
 315 01ce 9342     		cmp	r3, r2
 316 01d0 0DD0     		beq	.L10
 317              		.loc 1 261 0 discriminator 5
 318 01d2 7B68     		ldr	r3, [r7, #4]
 319 01d4 454A     		ldr	r2, .L23+16
 320 01d6 9342     		cmp	r3, r2
 321 01d8 07D0     		beq	.L11
 322              		.loc 1 261 0 discriminator 7
 323 01da 7B68     		ldr	r3, [r7, #4]
 324 01dc 444A     		ldr	r2, .L23+20
 325 01de 9342     		cmp	r3, r2
 326 01e0 01D1     		bne	.L12
 327              		.loc 1 261 0 discriminator 9
 328 01e2 0423     		movs	r3, #4
 329 01e4 08E0     		b	.L17
 330              	.L12:
 331              		.loc 1 261 0 discriminator 10
 332 01e6 0523     		movs	r3, #5
 333 01e8 06E0     		b	.L17
 334              	.L11:
 335              		.loc 1 261 0 discriminator 8
 336 01ea 0323     		movs	r3, #3
 337 01ec 04E0     		b	.L17
 338              	.L10:
 339              		.loc 1 261 0 discriminator 6
 340 01ee 0223     		movs	r3, #2
 341 01f0 02E0     		b	.L17
 342              	.L9:
 343              		.loc 1 261 0 discriminator 4
 344 01f2 0123     		movs	r3, #1
 345 01f4 00E0     		b	.L17
 346              	.L8:
 347              		.loc 1 261 0 discriminator 2
 348 01f6 0023     		movs	r3, #0
 349              	.L17:
 350              		.loc 1 261 0 discriminator 20
 351 01f8 7A69     		ldr	r2, [r7, #20]
 352 01fa 0321     		movs	r1, #3
 353 01fc 0A40     		ands	r2, r1
 354 01fe 9200     		lsls	r2, r2, #2
 355 0200 9340     		lsls	r3, r3, r2
 356 0202 3A69     		ldr	r2, [r7, #16]
 357 0204 1343     		orrs	r3, r2
 358 0206 3B61     		str	r3, [r7, #16]
 262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 359              		.loc 1 262 0 is_stmt 1 discriminator 20
 360 0208 3549     		ldr	r1, .L23+4
 361 020a 7B69     		ldr	r3, [r7, #20]
 362 020c 9B08     		lsrs	r3, r3, #2
 363 020e 0233     		adds	r3, r3, #2
 364 0210 9B00     		lsls	r3, r3, #2
 365 0212 3A69     		ldr	r2, [r7, #16]
ARM GAS  /tmp/cc2KpHu1.s 			page 12


 366 0214 5A50     		str	r2, [r3, r1]
 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                   
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Clear EXTI line configuration */
 265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = EXTI->IMR;
 367              		.loc 1 265 0 discriminator 20
 368 0216 374B     		ldr	r3, .L23+24
 369 0218 1B68     		ldr	r3, [r3]
 370 021a 3B61     		str	r3, [r7, #16]
 266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 371              		.loc 1 266 0 discriminator 20
 372 021c FB68     		ldr	r3, [r7, #12]
 373 021e DA43     		mvns	r2, r3
 374 0220 3B69     		ldr	r3, [r7, #16]
 375 0222 1340     		ands	r3, r2
 376 0224 3B61     		str	r3, [r7, #16]
 267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 377              		.loc 1 267 0 discriminator 20
 378 0226 3B68     		ldr	r3, [r7]
 379 0228 5A68     		ldr	r2, [r3, #4]
 380 022a 8023     		movs	r3, #128
 381 022c 5B02     		lsls	r3, r3, #9
 382 022e 1340     		ands	r3, r2
 383 0230 03D0     		beq	.L18
 268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         {
 269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           SET_BIT(temp, iocurrent); 
 384              		.loc 1 269 0
 385 0232 3A69     		ldr	r2, [r7, #16]
 386 0234 FB68     		ldr	r3, [r7, #12]
 387 0236 1343     		orrs	r3, r2
 388 0238 3B61     		str	r3, [r7, #16]
 389              	.L18:
 270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         }
 271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         EXTI->IMR = temp;
 390              		.loc 1 271 0
 391 023a 2E4B     		ldr	r3, .L23+24
 392 023c 3A69     		ldr	r2, [r7, #16]
 393 023e 1A60     		str	r2, [r3]
 272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = EXTI->EMR;
 394              		.loc 1 273 0
 395 0240 2C4B     		ldr	r3, .L23+24
 396 0242 5B68     		ldr	r3, [r3, #4]
 397 0244 3B61     		str	r3, [r7, #16]
 274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 398              		.loc 1 274 0
 399 0246 FB68     		ldr	r3, [r7, #12]
 400 0248 DA43     		mvns	r2, r3
 401 024a 3B69     		ldr	r3, [r7, #16]
 402 024c 1340     		ands	r3, r2
 403 024e 3B61     		str	r3, [r7, #16]
 275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 404              		.loc 1 275 0
 405 0250 3B68     		ldr	r3, [r7]
 406 0252 5A68     		ldr	r2, [r3, #4]
 407 0254 8023     		movs	r3, #128
 408 0256 9B02     		lsls	r3, r3, #10
 409 0258 1340     		ands	r3, r2
ARM GAS  /tmp/cc2KpHu1.s 			page 13


 410 025a 03D0     		beq	.L19
 276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         { 
 277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           SET_BIT(temp, iocurrent); 
 411              		.loc 1 277 0
 412 025c 3A69     		ldr	r2, [r7, #16]
 413 025e FB68     		ldr	r3, [r7, #12]
 414 0260 1343     		orrs	r3, r2
 415 0262 3B61     		str	r3, [r7, #16]
 416              	.L19:
 278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         }
 279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         EXTI->EMR = temp;
 417              		.loc 1 279 0
 418 0264 234B     		ldr	r3, .L23+24
 419 0266 3A69     		ldr	r2, [r7, #16]
 420 0268 5A60     		str	r2, [r3, #4]
 280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Clear Rising Falling edge configuration */
 282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = EXTI->RTSR;
 421              		.loc 1 282 0
 422 026a 224B     		ldr	r3, .L23+24
 423 026c 9B68     		ldr	r3, [r3, #8]
 424 026e 3B61     		str	r3, [r7, #16]
 283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 425              		.loc 1 283 0
 426 0270 FB68     		ldr	r3, [r7, #12]
 427 0272 DA43     		mvns	r2, r3
 428 0274 3B69     		ldr	r3, [r7, #16]
 429 0276 1340     		ands	r3, r2
 430 0278 3B61     		str	r3, [r7, #16]
 284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 431              		.loc 1 284 0
 432 027a 3B68     		ldr	r3, [r7]
 433 027c 5A68     		ldr	r2, [r3, #4]
 434 027e 8023     		movs	r3, #128
 435 0280 5B03     		lsls	r3, r3, #13
 436 0282 1340     		ands	r3, r2
 437 0284 03D0     		beq	.L20
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         {
 286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           SET_BIT(temp, iocurrent); 
 438              		.loc 1 286 0
 439 0286 3A69     		ldr	r2, [r7, #16]
 440 0288 FB68     		ldr	r3, [r7, #12]
 441 028a 1343     		orrs	r3, r2
 442 028c 3B61     		str	r3, [r7, #16]
 443              	.L20:
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         }
 288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         EXTI->RTSR = temp;
 444              		.loc 1 288 0
 445 028e 194B     		ldr	r3, .L23+24
 446 0290 3A69     		ldr	r2, [r7, #16]
 447 0292 9A60     		str	r2, [r3, #8]
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = EXTI->FTSR;
 448              		.loc 1 290 0
 449 0294 174B     		ldr	r3, .L23+24
 450 0296 DB68     		ldr	r3, [r3, #12]
 451 0298 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/cc2KpHu1.s 			page 14


 291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 452              		.loc 1 291 0
 453 029a FB68     		ldr	r3, [r7, #12]
 454 029c DA43     		mvns	r2, r3
 455 029e 3B69     		ldr	r3, [r7, #16]
 456 02a0 1340     		ands	r3, r2
 457 02a2 3B61     		str	r3, [r7, #16]
 292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 458              		.loc 1 292 0
 459 02a4 3B68     		ldr	r3, [r7]
 460 02a6 5A68     		ldr	r2, [r3, #4]
 461 02a8 8023     		movs	r3, #128
 462 02aa 9B03     		lsls	r3, r3, #14
 463 02ac 1340     		ands	r3, r2
 464 02ae 03D0     		beq	.L21
 293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         {
 294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           SET_BIT(temp, iocurrent); 
 465              		.loc 1 294 0
 466 02b0 3A69     		ldr	r2, [r7, #16]
 467 02b2 FB68     		ldr	r3, [r7, #12]
 468 02b4 1343     		orrs	r3, r2
 469 02b6 3B61     		str	r3, [r7, #16]
 470              	.L21:
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         }
 296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         EXTI->FTSR = temp;
 471              		.loc 1 296 0
 472 02b8 0E4B     		ldr	r3, .L23+24
 473 02ba 3A69     		ldr	r2, [r7, #16]
 474 02bc DA60     		str	r2, [r3, #12]
 475              	.L3:
 297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     }
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     position++;
 476              		.loc 1 300 0
 477 02be 7B69     		ldr	r3, [r7, #20]
 478 02c0 0133     		adds	r3, r3, #1
 479 02c2 7B61     		str	r3, [r7, #20]
 480              	.L2:
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 481              		.loc 1 199 0
 482 02c4 3B68     		ldr	r3, [r7]
 483 02c6 1A68     		ldr	r2, [r3]
 484 02c8 7B69     		ldr	r3, [r7, #20]
 485 02ca DA40     		lsrs	r2, r2, r3
 486 02cc 131E     		subs	r3, r2, #0
 487 02ce 00D0     		beq	.LCB412
 488 02d0 A2E6     		b	.L22	@long jump
 489              	.LCB412:
 301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   } 
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 490              		.loc 1 302 0
 491 02d2 C046     		nop
 492 02d4 BD46     		mov	sp, r7
 493 02d6 06B0     		add	sp, sp, #24
 494              		@ sp needed
 495 02d8 80BD     		pop	{r7, pc}
ARM GAS  /tmp/cc2KpHu1.s 			page 15


 496              	.L24:
 497 02da C046     		.align	2
 498              	.L23:
 499 02dc 00100240 		.word	1073876992
 500 02e0 00000140 		.word	1073807360
 501 02e4 00040048 		.word	1207960576
 502 02e8 00080048 		.word	1207961600
 503 02ec 000C0048 		.word	1207962624
 504 02f0 00100048 		.word	1207963648
 505 02f4 00040140 		.word	1073808384
 506              		.cfi_endproc
 507              	.LFE37:
 509              		.section	.text.HAL_GPIO_DeInit,"ax",%progbits
 510              		.align	1
 511              		.global	HAL_GPIO_DeInit
 512              		.syntax unified
 513              		.code	16
 514              		.thumb_func
 515              		.fpu softvfp
 517              	HAL_GPIO_DeInit:
 518              	.LFB38:
 303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  De-initialize the GPIOx peripheral registers to their default reset values.
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bit to be written.
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         This parameter can be one of GPIO_PIN_x where x can be (0..15).
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
 312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 519              		.loc 1 312 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 24
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 86B0     		sub	sp, sp, #24
 528              		.cfi_def_cfa_offset 32
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 532 0008 3960     		str	r1, [r7]
 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t position = 0x00U;
 533              		.loc 1 313 0
 534 000a 0023     		movs	r3, #0
 535 000c 7B61     		str	r3, [r7, #20]
 314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t iocurrent = 0x00U;
 536              		.loc 1 314 0
 537 000e 0023     		movs	r3, #0
 538 0010 3B61     		str	r3, [r7, #16]
 315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t tmp = 0x00U;
 539              		.loc 1 315 0
 540 0012 0023     		movs	r3, #0
 541 0014 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cc2KpHu1.s 			page 16


 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Configure the port pins */
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   while ((GPIO_Pin >> position) != RESET)
 542              		.loc 1 322 0
 543 0016 B7E0     		b	.L26
 544              	.L38:
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     /* Get current io position */
 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     iocurrent = GPIO_Pin & (1U << position);
 545              		.loc 1 325 0
 546 0018 0122     		movs	r2, #1
 547 001a 7B69     		ldr	r3, [r7, #20]
 548 001c 9A40     		lsls	r2, r2, r3
 549 001e 3B68     		ldr	r3, [r7]
 550 0020 1340     		ands	r3, r2
 551 0022 3B61     		str	r3, [r7, #16]
 326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     if (iocurrent)
 552              		.loc 1 327 0
 553 0024 3B69     		ldr	r3, [r7, #16]
 554 0026 002B     		cmp	r3, #0
 555 0028 00D1     		bne	.LCB468
 556 002a AAE0     		b	.L27	@long jump
 557              	.LCB468:
 328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     {
 329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /*------------------------- GPIO Mode Configuration --------------------*/
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure IO Direction in Input Floting Mode */
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(GPIOx->MODER, GPIO_MODER_MODER0 << (position * 2U)); 
 558              		.loc 1 331 0
 559 002c 7B68     		ldr	r3, [r7, #4]
 560 002e 1B68     		ldr	r3, [r3]
 561 0030 7A69     		ldr	r2, [r7, #20]
 562 0032 5200     		lsls	r2, r2, #1
 563 0034 0321     		movs	r1, #3
 564 0036 9140     		lsls	r1, r1, r2
 565 0038 0A00     		movs	r2, r1
 566 003a D243     		mvns	r2, r2
 567 003c 1A40     		ands	r2, r3
 568 003e 7B68     		ldr	r3, [r7, #4]
 569 0040 1A60     		str	r2, [r3]
 332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure the default Alternate Function in current IO */ 
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(GPIOx->AFR[position >> 3U], 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 570              		.loc 1 334 0
 571 0042 7B69     		ldr	r3, [r7, #20]
 572 0044 DA08     		lsrs	r2, r3, #3
 573 0046 7B68     		ldr	r3, [r7, #4]
 574 0048 0832     		adds	r2, r2, #8
 575 004a 9200     		lsls	r2, r2, #2
 576 004c D358     		ldr	r3, [r2, r3]
 577 004e 7A69     		ldr	r2, [r7, #20]
 578 0050 0721     		movs	r1, #7
 579 0052 0A40     		ands	r2, r1
ARM GAS  /tmp/cc2KpHu1.s 			page 17


 580 0054 9200     		lsls	r2, r2, #2
 581 0056 0F21     		movs	r1, #15
 582 0058 9140     		lsls	r1, r1, r2
 583 005a 0A00     		movs	r2, r1
 584 005c D143     		mvns	r1, r2
 585 005e 7A69     		ldr	r2, [r7, #20]
 586 0060 D208     		lsrs	r2, r2, #3
 587 0062 1940     		ands	r1, r3
 588 0064 7B68     		ldr	r3, [r7, #4]
 589 0066 0832     		adds	r2, r2, #8
 590 0068 9200     		lsls	r2, r2, #2
 591 006a D150     		str	r1, [r2, r3]
 335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure the default value for IO Speed */
 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(GPIOx->OSPEEDR, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 592              		.loc 1 337 0
 593 006c 7B68     		ldr	r3, [r7, #4]
 594 006e 9B68     		ldr	r3, [r3, #8]
 595 0070 7A69     		ldr	r2, [r7, #20]
 596 0072 5200     		lsls	r2, r2, #1
 597 0074 0321     		movs	r1, #3
 598 0076 9140     		lsls	r1, r1, r2
 599 0078 0A00     		movs	r2, r1
 600 007a D243     		mvns	r2, r2
 601 007c 1A40     		ands	r2, r3
 602 007e 7B68     		ldr	r3, [r7, #4]
 603 0080 9A60     		str	r2, [r3, #8]
 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                   
 339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure the default value IO Output Type */
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(GPIOx->OTYPER, GPIO_OTYPER_OT_0 << position) ;
 604              		.loc 1 340 0
 605 0082 7B68     		ldr	r3, [r7, #4]
 606 0084 5B68     		ldr	r3, [r3, #4]
 607 0086 0121     		movs	r1, #1
 608 0088 7A69     		ldr	r2, [r7, #20]
 609 008a 9140     		lsls	r1, r1, r2
 610 008c 0A00     		movs	r2, r1
 611 008e D243     		mvns	r2, r2
 612 0090 1A40     		ands	r2, r3
 613 0092 7B68     		ldr	r3, [r7, #4]
 614 0094 5A60     		str	r2, [r3, #4]
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Deactivate the Pull-up oand Pull-down resistor for the current IO */
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(GPIOx->PUPDR, GPIO_PUPDR_PUPDR0 << (position * 2U));
 615              		.loc 1 343 0
 616 0096 7B68     		ldr	r3, [r7, #4]
 617 0098 DB68     		ldr	r3, [r3, #12]
 618 009a 7A69     		ldr	r2, [r7, #20]
 619 009c 5200     		lsls	r2, r2, #1
 620 009e 0321     		movs	r1, #3
 621 00a0 9140     		lsls	r1, r1, r2
 622 00a2 0A00     		movs	r2, r1
 623 00a4 D243     		mvns	r2, r2
 624 00a6 1A40     		ands	r2, r3
 625 00a8 7B68     		ldr	r3, [r7, #4]
 626 00aa DA60     		str	r2, [r3, #12]
 344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
ARM GAS  /tmp/cc2KpHu1.s 			page 18


 345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /*------------------------- EXTI Mode Configuration --------------------*/
 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Clear the External Interrupt or Event for the current IO */
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       tmp = SYSCFG->EXTICR[position >> 2U];
 627              		.loc 1 348 0
 628 00ac 3B4A     		ldr	r2, .L39
 629 00ae 7B69     		ldr	r3, [r7, #20]
 630 00b0 9B08     		lsrs	r3, r3, #2
 631 00b2 0233     		adds	r3, r3, #2
 632 00b4 9B00     		lsls	r3, r3, #2
 633 00b6 9B58     		ldr	r3, [r3, r2]
 634 00b8 FB60     		str	r3, [r7, #12]
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       tmp &= ((0x0FU) << (4U * (position & 0x03U)));
 635              		.loc 1 349 0
 636 00ba 7B69     		ldr	r3, [r7, #20]
 637 00bc 0322     		movs	r2, #3
 638 00be 1340     		ands	r3, r2
 639 00c0 9B00     		lsls	r3, r3, #2
 640 00c2 0F22     		movs	r2, #15
 641 00c4 9A40     		lsls	r2, r2, r3
 642 00c6 FB68     		ldr	r3, [r7, #12]
 643 00c8 1340     		ands	r3, r2
 644 00ca FB60     		str	r3, [r7, #12]
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       if(tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 645              		.loc 1 350 0
 646 00cc 7A68     		ldr	r2, [r7, #4]
 647 00ce 9023     		movs	r3, #144
 648 00d0 DB05     		lsls	r3, r3, #23
 649 00d2 9A42     		cmp	r2, r3
 650 00d4 19D0     		beq	.L28
 651              		.loc 1 350 0 is_stmt 0 discriminator 1
 652 00d6 7B68     		ldr	r3, [r7, #4]
 653 00d8 314A     		ldr	r2, .L39+4
 654 00da 9342     		cmp	r3, r2
 655 00dc 13D0     		beq	.L29
 656              		.loc 1 350 0 discriminator 3
 657 00de 7B68     		ldr	r3, [r7, #4]
 658 00e0 304A     		ldr	r2, .L39+8
 659 00e2 9342     		cmp	r3, r2
 660 00e4 0DD0     		beq	.L30
 661              		.loc 1 350 0 discriminator 5
 662 00e6 7B68     		ldr	r3, [r7, #4]
 663 00e8 2F4A     		ldr	r2, .L39+12
 664 00ea 9342     		cmp	r3, r2
 665 00ec 07D0     		beq	.L31
 666              		.loc 1 350 0 discriminator 7
 667 00ee 7B68     		ldr	r3, [r7, #4]
 668 00f0 2E4A     		ldr	r2, .L39+16
 669 00f2 9342     		cmp	r3, r2
 670 00f4 01D1     		bne	.L32
 671              		.loc 1 350 0 discriminator 9
 672 00f6 0423     		movs	r3, #4
 673 00f8 08E0     		b	.L37
 674              	.L32:
 675              		.loc 1 350 0 discriminator 10
 676 00fa 0523     		movs	r3, #5
 677 00fc 06E0     		b	.L37
ARM GAS  /tmp/cc2KpHu1.s 			page 19


 678              	.L31:
 679              		.loc 1 350 0 discriminator 8
 680 00fe 0323     		movs	r3, #3
 681 0100 04E0     		b	.L37
 682              	.L30:
 683              		.loc 1 350 0 discriminator 6
 684 0102 0223     		movs	r3, #2
 685 0104 02E0     		b	.L37
 686              	.L29:
 687              		.loc 1 350 0 discriminator 4
 688 0106 0123     		movs	r3, #1
 689 0108 00E0     		b	.L37
 690              	.L28:
 691              		.loc 1 350 0 discriminator 2
 692 010a 0023     		movs	r3, #0
 693              	.L37:
 694              		.loc 1 350 0 discriminator 20
 695 010c 7A69     		ldr	r2, [r7, #20]
 696 010e 0321     		movs	r1, #3
 697 0110 0A40     		ands	r2, r1
 698 0112 9200     		lsls	r2, r2, #2
 699 0114 9340     		lsls	r3, r3, r2
 700 0116 FA68     		ldr	r2, [r7, #12]
 701 0118 9A42     		cmp	r2, r3
 702 011a 32D1     		bne	.L27
 351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         tmp = (0x0FU) << (4U * (position & 0x03U));
 703              		.loc 1 352 0 is_stmt 1
 704 011c 7B69     		ldr	r3, [r7, #20]
 705 011e 0322     		movs	r2, #3
 706 0120 1340     		ands	r3, r2
 707 0122 9B00     		lsls	r3, r3, #2
 708 0124 0F22     		movs	r2, #15
 709 0126 9A40     		lsls	r2, r2, r3
 710 0128 1300     		movs	r3, r2
 711 012a FB60     		str	r3, [r7, #12]
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(SYSCFG->EXTICR[position >> 2U], tmp);
 712              		.loc 1 353 0
 713 012c 1B4A     		ldr	r2, .L39
 714 012e 7B69     		ldr	r3, [r7, #20]
 715 0130 9B08     		lsrs	r3, r3, #2
 716 0132 0233     		adds	r3, r3, #2
 717 0134 9B00     		lsls	r3, r3, #2
 718 0136 9A58     		ldr	r2, [r3, r2]
 719 0138 FB68     		ldr	r3, [r7, #12]
 720 013a D943     		mvns	r1, r3
 721 013c 1748     		ldr	r0, .L39
 722 013e 7B69     		ldr	r3, [r7, #20]
 723 0140 9B08     		lsrs	r3, r3, #2
 724 0142 0A40     		ands	r2, r1
 725 0144 0233     		adds	r3, r3, #2
 726 0146 9B00     		lsls	r3, r3, #2
 727 0148 1A50     		str	r2, [r3, r0]
 354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Clear EXTI line configuration */
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(EXTI->IMR, (uint32_t)iocurrent);
 728              		.loc 1 356 0
ARM GAS  /tmp/cc2KpHu1.s 			page 20


 729 014a 194B     		ldr	r3, .L39+20
 730 014c 1A68     		ldr	r2, [r3]
 731 014e 3B69     		ldr	r3, [r7, #16]
 732 0150 D943     		mvns	r1, r3
 733 0152 174B     		ldr	r3, .L39+20
 734 0154 0A40     		ands	r2, r1
 735 0156 1A60     		str	r2, [r3]
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(EXTI->EMR, (uint32_t)iocurrent);
 736              		.loc 1 357 0
 737 0158 154B     		ldr	r3, .L39+20
 738 015a 5A68     		ldr	r2, [r3, #4]
 739 015c 3B69     		ldr	r3, [r7, #16]
 740 015e D943     		mvns	r1, r3
 741 0160 134B     		ldr	r3, .L39+20
 742 0162 0A40     		ands	r2, r1
 743 0164 5A60     		str	r2, [r3, #4]
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         
 359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Clear Rising Falling edge configuration */
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(EXTI->RTSR, (uint32_t)iocurrent);
 744              		.loc 1 360 0
 745 0166 124B     		ldr	r3, .L39+20
 746 0168 9A68     		ldr	r2, [r3, #8]
 747 016a 3B69     		ldr	r3, [r7, #16]
 748 016c D943     		mvns	r1, r3
 749 016e 104B     		ldr	r3, .L39+20
 750 0170 0A40     		ands	r2, r1
 751 0172 9A60     		str	r2, [r3, #8]
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(EXTI->FTSR, (uint32_t)iocurrent);
 752              		.loc 1 361 0
 753 0174 0E4B     		ldr	r3, .L39+20
 754 0176 DA68     		ldr	r2, [r3, #12]
 755 0178 3B69     		ldr	r3, [r7, #16]
 756 017a D943     		mvns	r1, r3
 757 017c 0C4B     		ldr	r3, .L39+20
 758 017e 0A40     		ands	r2, r1
 759 0180 DA60     		str	r2, [r3, #12]
 760              	.L27:
 362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     }
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     
 365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     position++;
 761              		.loc 1 365 0
 762 0182 7B69     		ldr	r3, [r7, #20]
 763 0184 0133     		adds	r3, r3, #1
 764 0186 7B61     		str	r3, [r7, #20]
 765              	.L26:
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 766              		.loc 1 322 0
 767 0188 3A68     		ldr	r2, [r7]
 768 018a 7B69     		ldr	r3, [r7, #20]
 769 018c DA40     		lsrs	r2, r2, r3
 770 018e 131E     		subs	r3, r2, #0
 771 0190 00D0     		beq	.LCB669
 772 0192 41E7     		b	.L38	@long jump
 773              	.LCB669:
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
ARM GAS  /tmp/cc2KpHu1.s 			page 21


 774              		.loc 1 367 0
 775 0194 C046     		nop
 776 0196 BD46     		mov	sp, r7
 777 0198 06B0     		add	sp, sp, #24
 778              		@ sp needed
 779 019a 80BD     		pop	{r7, pc}
 780              	.L40:
 781              		.align	2
 782              	.L39:
 783 019c 00000140 		.word	1073807360
 784 01a0 00040048 		.word	1207960576
 785 01a4 00080048 		.word	1207961600
 786 01a8 000C0048 		.word	1207962624
 787 01ac 00100048 		.word	1207963648
 788 01b0 00040140 		.word	1073808384
 789              		.cfi_endproc
 790              	.LFE38:
 792              		.section	.text.HAL_GPIO_ReadPin,"ax",%progbits
 793              		.align	1
 794              		.global	HAL_GPIO_ReadPin
 795              		.syntax unified
 796              		.code	16
 797              		.thumb_func
 798              		.fpu softvfp
 800              	HAL_GPIO_ReadPin:
 801              	.LFB39:
 368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @}
 371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @defgroup GPIO_Exported_Functions_Group2 IO operation functions 
 374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  *  @brief GPIO Read, Write, Toggle, Lock and EXTI management functions.
 375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  *
 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** @verbatim   
 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  ===============================================================================
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                        ##### IO operation functions #####
 379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  ===============================================================================  
 380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** @endverbatim
 382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  Read the specified input port pin.
 387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bit to read.
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         This parameter can be GPIO_PIN_x where x can be (0..15).
 390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval The input port pin value.
 391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 802              		.loc 1 393 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 16
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cc2KpHu1.s 			page 22


 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
 810 0002 84B0     		sub	sp, sp, #16
 811              		.cfi_def_cfa_offset 24
 812 0004 00AF     		add	r7, sp, #0
 813              		.cfi_def_cfa_register 7
 814 0006 7860     		str	r0, [r7, #4]
 815 0008 0A00     		movs	r2, r1
 816 000a BB1C     		adds	r3, r7, #2
 817 000c 1A80     		strh	r2, [r3]
 394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   GPIO_PinState bitstatus;
 395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 818              		.loc 1 399 0
 819 000e 7B68     		ldr	r3, [r7, #4]
 820 0010 1B69     		ldr	r3, [r3, #16]
 821 0012 BA1C     		adds	r2, r7, #2
 822 0014 1288     		ldrh	r2, [r2]
 823 0016 1340     		ands	r3, r2
 824 0018 04D0     		beq	.L42
 400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     bitstatus = GPIO_PIN_SET;
 825              		.loc 1 401 0
 826 001a 0F23     		movs	r3, #15
 827 001c FB18     		adds	r3, r7, r3
 828 001e 0122     		movs	r2, #1
 829 0020 1A70     		strb	r2, [r3]
 830 0022 03E0     		b	.L43
 831              	.L42:
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   else
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     bitstatus = GPIO_PIN_RESET;
 832              		.loc 1 405 0
 833 0024 0F23     		movs	r3, #15
 834 0026 FB18     		adds	r3, r7, r3
 835 0028 0022     		movs	r2, #0
 836 002a 1A70     		strb	r2, [r3]
 837              	.L43:
 406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   return bitstatus;
 838              		.loc 1 407 0
 839 002c 0F23     		movs	r3, #15
 840 002e FB18     		adds	r3, r7, r3
 841 0030 1B78     		ldrb	r3, [r3]
 408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 842              		.loc 1 408 0
 843 0032 1800     		movs	r0, r3
 844 0034 BD46     		mov	sp, r7
 845 0036 04B0     		add	sp, sp, #16
 846              		@ sp needed
 847 0038 80BD     		pop	{r7, pc}
 848              		.cfi_endproc
ARM GAS  /tmp/cc2KpHu1.s 			page 23


 849              	.LFE39:
 851              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 852              		.align	1
 853              		.global	HAL_GPIO_WritePin
 854              		.syntax unified
 855              		.code	16
 856              		.thumb_func
 857              		.fpu softvfp
 859              	HAL_GPIO_WritePin:
 860              	.LFB40:
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  Set or clear the selected data port bit.
 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @note   This function uses GPIOx_BSRR and GPIOx_BRR registers to allow atomic read/modify
 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         the read and the modify access.
 415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..H) to select the GPIO peripheral for STM32F0 family
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bit to be written.
 418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  PinState specifies the value to be written to the selected bit.
 420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *          This parameter can be one of the GPIO_PinState enum values:
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
 422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *            @arg GPIO_PIN_SET: to set the port pin
 423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 861              		.loc 1 426 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 8
 864              		@ frame_needed = 1, uses_anonymous_args = 0
 865 0000 80B5     		push	{r7, lr}
 866              		.cfi_def_cfa_offset 8
 867              		.cfi_offset 7, -8
 868              		.cfi_offset 14, -4
 869 0002 82B0     		sub	sp, sp, #8
 870              		.cfi_def_cfa_offset 16
 871 0004 00AF     		add	r7, sp, #0
 872              		.cfi_def_cfa_register 7
 873 0006 7860     		str	r0, [r7, #4]
 874 0008 0800     		movs	r0, r1
 875 000a 1100     		movs	r1, r2
 876 000c BB1C     		adds	r3, r7, #2
 877 000e 021C     		adds	r2, r0, #0
 878 0010 1A80     		strh	r2, [r3]
 879 0012 7B1C     		adds	r3, r7, #1
 880 0014 0A1C     		adds	r2, r1, #0
 881 0016 1A70     		strb	r2, [r3]
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   if (PinState != GPIO_PIN_RESET)
 882              		.loc 1 431 0
 883 0018 7B1C     		adds	r3, r7, #1
 884 001a 1B78     		ldrb	r3, [r3]
ARM GAS  /tmp/cc2KpHu1.s 			page 24


 885 001c 002B     		cmp	r3, #0
 886 001e 04D0     		beq	.L46
 432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin;
 887              		.loc 1 433 0
 888 0020 BB1C     		adds	r3, r7, #2
 889 0022 1A88     		ldrh	r2, [r3]
 890 0024 7B68     		ldr	r3, [r7, #4]
 891 0026 9A61     		str	r2, [r3, #24]
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   else
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     GPIOx->BRR = (uint32_t)GPIO_Pin;
 438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 892              		.loc 1 439 0
 893 0028 03E0     		b	.L48
 894              	.L46:
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 895              		.loc 1 437 0
 896 002a BB1C     		adds	r3, r7, #2
 897 002c 1A88     		ldrh	r2, [r3]
 898 002e 7B68     		ldr	r3, [r7, #4]
 899 0030 9A62     		str	r2, [r3, #40]
 900              	.L48:
 901              		.loc 1 439 0
 902 0032 C046     		nop
 903 0034 BD46     		mov	sp, r7
 904 0036 02B0     		add	sp, sp, #8
 905              		@ sp needed
 906 0038 80BD     		pop	{r7, pc}
 907              		.cfi_endproc
 908              	.LFE40:
 910              		.section	.text.HAL_GPIO_TogglePin,"ax",%progbits
 911              		.align	1
 912              		.global	HAL_GPIO_TogglePin
 913              		.syntax unified
 914              		.code	16
 915              		.thumb_func
 916              		.fpu softvfp
 918              	HAL_GPIO_TogglePin:
 919              	.LFB41:
 440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  Toggle the specified GPIO pin.
 443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the pin to be toggled.
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 920              		.loc 1 448 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 8
 923              		@ frame_needed = 1, uses_anonymous_args = 0
 924 0000 80B5     		push	{r7, lr}
 925              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc2KpHu1.s 			page 25


 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 82B0     		sub	sp, sp, #8
 929              		.cfi_def_cfa_offset 16
 930 0004 00AF     		add	r7, sp, #0
 931              		.cfi_def_cfa_register 7
 932 0006 7860     		str	r0, [r7, #4]
 933 0008 0A00     		movs	r2, r1
 934 000a BB1C     		adds	r3, r7, #2
 935 000c 1A80     		strh	r2, [r3]
 449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 936              		.loc 1 452 0
 937 000e 7B68     		ldr	r3, [r7, #4]
 938 0010 5A69     		ldr	r2, [r3, #20]
 939 0012 BB1C     		adds	r3, r7, #2
 940 0014 1B88     		ldrh	r3, [r3]
 941 0016 5A40     		eors	r2, r3
 942 0018 7B68     		ldr	r3, [r7, #4]
 943 001a 5A61     		str	r2, [r3, #20]
 453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 944              		.loc 1 453 0
 945 001c C046     		nop
 946 001e BD46     		mov	sp, r7
 947 0020 02B0     		add	sp, sp, #8
 948              		@ sp needed
 949 0022 80BD     		pop	{r7, pc}
 950              		.cfi_endproc
 951              	.LFE41:
 953              		.section	.text.HAL_GPIO_LockPin,"ax",%progbits
 954              		.align	1
 955              		.global	HAL_GPIO_LockPin
 956              		.syntax unified
 957              		.code	16
 958              		.thumb_func
 959              		.fpu softvfp
 961              	HAL_GPIO_LockPin:
 962              	.LFB42:
 454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** * @brief  Locks GPIO Pins configuration registers.
 457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** * @note   The configuration of the locked GPIO pins can no longer be modified
 460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** *         until the next reset.
 461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bits to be locked.
 463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** *         This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** * @retval None
 465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** */
 466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** HAL_StatusTypeDef HAL_GPIO_LockPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 963              		.loc 1 467 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cc2KpHu1.s 			page 26


 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967 0000 80B5     		push	{r7, lr}
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 84B0     		sub	sp, sp, #16
 972              		.cfi_def_cfa_offset 24
 973 0004 00AF     		add	r7, sp, #0
 974              		.cfi_def_cfa_register 7
 975 0006 7860     		str	r0, [r7, #4]
 976 0008 0A00     		movs	r2, r1
 977 000a BB1C     		adds	r3, r7, #2
 978 000c 1A80     		strh	r2, [r3]
 468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   __IO uint32_t tmp = GPIO_LCKR_LCKK;
 979              		.loc 1 468 0
 980 000e 8023     		movs	r3, #128
 981 0010 5B02     		lsls	r3, r3, #9
 982 0012 FB60     		str	r3, [r7, #12]
 469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_LOCK_INSTANCE(GPIOx));
 472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Apply lock key write sequence */
 475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   SET_BIT(tmp, GPIO_Pin);
 983              		.loc 1 475 0
 984 0014 BB1C     		adds	r3, r7, #2
 985 0016 1A88     		ldrh	r2, [r3]
 986 0018 FB68     		ldr	r3, [r7, #12]
 987 001a 1343     		orrs	r3, r2
 988 001c FB60     		str	r3, [r7, #12]
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Set LCKx bit(s): LCKK='1' + LCK[15-0] */
 477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   GPIOx->LCKR = tmp;
 989              		.loc 1 477 0
 990 001e FA68     		ldr	r2, [r7, #12]
 991 0020 7B68     		ldr	r3, [r7, #4]
 992 0022 DA61     		str	r2, [r3, #28]
 478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Reset LCKx bit(s): LCKK='0' + LCK[15-0] */
 479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   GPIOx->LCKR = GPIO_Pin;
 993              		.loc 1 479 0
 994 0024 BB1C     		adds	r3, r7, #2
 995 0026 1A88     		ldrh	r2, [r3]
 996 0028 7B68     		ldr	r3, [r7, #4]
 997 002a DA61     		str	r2, [r3, #28]
 480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Set LCKx bit(s): LCKK='1' + LCK[15-0] */
 481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   GPIOx->LCKR = tmp;
 998              		.loc 1 481 0
 999 002c FA68     		ldr	r2, [r7, #12]
 1000 002e 7B68     		ldr	r3, [r7, #4]
 1001 0030 DA61     		str	r2, [r3, #28]
 482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Read LCKK bit*/
 483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   tmp = GPIOx->LCKR;
 1002              		.loc 1 483 0
 1003 0032 7B68     		ldr	r3, [r7, #4]
 1004 0034 DB69     		ldr	r3, [r3, #28]
 1005 0036 FB60     		str	r3, [r7, #12]
 484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
ARM GAS  /tmp/cc2KpHu1.s 			page 27


 485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   if((GPIOx->LCKR & GPIO_LCKR_LCKK) != RESET)
 1006              		.loc 1 485 0
 1007 0038 7B68     		ldr	r3, [r7, #4]
 1008 003a DA69     		ldr	r2, [r3, #28]
 1009 003c 8023     		movs	r3, #128
 1010 003e 5B02     		lsls	r3, r3, #9
 1011 0040 1340     		ands	r3, r2
 1012 0042 01D0     		beq	.L51
 486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     return HAL_OK;
 1013              		.loc 1 487 0
 1014 0044 0023     		movs	r3, #0
 1015 0046 00E0     		b	.L52
 1016              	.L51:
 488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   else
 490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     return HAL_ERROR;
 1017              		.loc 1 491 0
 1018 0048 0123     		movs	r3, #1
 1019              	.L52:
 492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 1020              		.loc 1 493 0
 1021 004a 1800     		movs	r0, r3
 1022 004c BD46     		mov	sp, r7
 1023 004e 04B0     		add	sp, sp, #16
 1024              		@ sp needed
 1025 0050 80BD     		pop	{r7, pc}
 1026              		.cfi_endproc
 1027              	.LFE42:
 1029              		.section	.text.HAL_GPIO_EXTI_IRQHandler,"ax",%progbits
 1030              		.align	1
 1031              		.global	HAL_GPIO_EXTI_IRQHandler
 1032              		.syntax unified
 1033              		.code	16
 1034              		.thumb_func
 1035              		.fpu softvfp
 1037              	HAL_GPIO_EXTI_IRQHandler:
 1038              	.LFB43:
 494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  Handle EXTI interrupt request.
 497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
 498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
 501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 1039              		.loc 1 501 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 8
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043 0000 80B5     		push	{r7, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/cc2KpHu1.s 			page 28


 1048              		.cfi_def_cfa_offset 16
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 0200     		movs	r2, r0
 1052 0008 BB1D     		adds	r3, r7, #6
 1053 000a 1A80     		strh	r2, [r3]
 502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* EXTI line interrupt detected */
 503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET) 
 1054              		.loc 1 503 0
 1055 000c 094B     		ldr	r3, .L56
 1056 000e 5B69     		ldr	r3, [r3, #20]
 1057 0010 BA1D     		adds	r2, r7, #6
 1058 0012 1288     		ldrh	r2, [r2]
 1059 0014 1340     		ands	r3, r2
 1060 0016 08D0     		beq	.L55
 504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   { 
 505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 1061              		.loc 1 505 0
 1062 0018 064B     		ldr	r3, .L56
 1063 001a BA1D     		adds	r2, r7, #6
 1064 001c 1288     		ldrh	r2, [r2]
 1065 001e 5A61     		str	r2, [r3, #20]
 506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     HAL_GPIO_EXTI_Callback(GPIO_Pin);
 1066              		.loc 1 506 0
 1067 0020 BB1D     		adds	r3, r7, #6
 1068 0022 1B88     		ldrh	r3, [r3]
 1069 0024 1800     		movs	r0, r3
 1070 0026 FFF7FEFF 		bl	HAL_GPIO_EXTI_Callback
 1071              	.L55:
 507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 1072              		.loc 1 508 0
 1073 002a C046     		nop
 1074 002c BD46     		mov	sp, r7
 1075 002e 02B0     		add	sp, sp, #8
 1076              		@ sp needed
 1077 0030 80BD     		pop	{r7, pc}
 1078              	.L57:
 1079 0032 C046     		.align	2
 1080              	.L56:
 1081 0034 00040140 		.word	1073808384
 1082              		.cfi_endproc
 1083              	.LFE43:
 1085              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1086              		.align	1
 1087              		.weak	HAL_GPIO_EXTI_Callback
 1088              		.syntax unified
 1089              		.code	16
 1090              		.thumb_func
 1091              		.fpu softvfp
 1093              	HAL_GPIO_EXTI_Callback:
 1094              	.LFB44:
 509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  EXTI line detection callback.
 512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
 513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
ARM GAS  /tmp/cc2KpHu1.s 			page 29


 514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** __weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 1095              		.loc 1 516 0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 8
 1098              		@ frame_needed = 1, uses_anonymous_args = 0
 1099 0000 80B5     		push	{r7, lr}
 1100              		.cfi_def_cfa_offset 8
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 1103 0002 82B0     		sub	sp, sp, #8
 1104              		.cfi_def_cfa_offset 16
 1105 0004 00AF     		add	r7, sp, #0
 1106              		.cfi_def_cfa_register 7
 1107 0006 0200     		movs	r2, r0
 1108 0008 BB1D     		adds	r3, r7, #6
 1109 000a 1A80     		strh	r2, [r3]
 517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Prevent unused argument(s) compilation warning */
 518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   UNUSED(GPIO_Pin);
 519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             the HAL_GPIO_EXTI_Callback could be implemented in the user file
 522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    */ 
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 1110              		.loc 1 523 0
 1111 000c C046     		nop
 1112 000e BD46     		mov	sp, r7
 1113 0010 02B0     		add	sp, sp, #8
 1114              		@ sp needed
 1115 0012 80BD     		pop	{r7, pc}
 1116              		.cfi_endproc
 1117              	.LFE44:
 1119              		.text
 1120              	.Letext0:
 1121              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 1122              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 1123              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1124              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1125              		.file 6 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 1126              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 1127              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 1128              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/ree
 1129              		.file 10 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1130              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1131              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
ARM GAS  /tmp/cc2KpHu1.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_gpio.c
     /tmp/cc2KpHu1.s:16     .text.HAL_GPIO_Init:0000000000000000 $t
     /tmp/cc2KpHu1.s:23     .text.HAL_GPIO_Init:0000000000000000 HAL_GPIO_Init
     /tmp/cc2KpHu1.s:499    .text.HAL_GPIO_Init:00000000000002dc $d
     /tmp/cc2KpHu1.s:510    .text.HAL_GPIO_DeInit:0000000000000000 $t
     /tmp/cc2KpHu1.s:517    .text.HAL_GPIO_DeInit:0000000000000000 HAL_GPIO_DeInit
     /tmp/cc2KpHu1.s:783    .text.HAL_GPIO_DeInit:000000000000019c $d
     /tmp/cc2KpHu1.s:793    .text.HAL_GPIO_ReadPin:0000000000000000 $t
     /tmp/cc2KpHu1.s:800    .text.HAL_GPIO_ReadPin:0000000000000000 HAL_GPIO_ReadPin
     /tmp/cc2KpHu1.s:852    .text.HAL_GPIO_WritePin:0000000000000000 $t
     /tmp/cc2KpHu1.s:859    .text.HAL_GPIO_WritePin:0000000000000000 HAL_GPIO_WritePin
     /tmp/cc2KpHu1.s:911    .text.HAL_GPIO_TogglePin:0000000000000000 $t
     /tmp/cc2KpHu1.s:918    .text.HAL_GPIO_TogglePin:0000000000000000 HAL_GPIO_TogglePin
     /tmp/cc2KpHu1.s:954    .text.HAL_GPIO_LockPin:0000000000000000 $t
     /tmp/cc2KpHu1.s:961    .text.HAL_GPIO_LockPin:0000000000000000 HAL_GPIO_LockPin
     /tmp/cc2KpHu1.s:1030   .text.HAL_GPIO_EXTI_IRQHandler:0000000000000000 $t
     /tmp/cc2KpHu1.s:1037   .text.HAL_GPIO_EXTI_IRQHandler:0000000000000000 HAL_GPIO_EXTI_IRQHandler
     /tmp/cc2KpHu1.s:1093   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/cc2KpHu1.s:1081   .text.HAL_GPIO_EXTI_IRQHandler:0000000000000034 $d
     /tmp/cc2KpHu1.s:1086   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
                           .group:0000000000000000 wm4.0.b7c3d577b02d87ac381ee43eef398462
                           .group:0000000000000000 wm4.main.h.42.3939338cba6ab0a8b761d08be8206d51
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.b0c07d2233f75e3b04f03d95093d88ca
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
ARM GAS  /tmp/cc2KpHu1.s 			page 31


                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart.h.38.e5eada3cdf37ca88de33bd21ddd21a5e
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart_ex.h.38.9430c2ca5ec832677dbe7308c46115fd
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

NO UNDEFINED SYMBOLS
