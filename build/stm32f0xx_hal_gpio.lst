ARM GAS  /tmp/ccn52PRT.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_gpio.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_GPIO_Init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_GPIO_Init:
  24              	.LFB37:
  25              		.file 1 "cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c"
   1:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
   2:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ******************************************************************************
   3:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @file    stm32f0xx_hal_gpio.c
   4:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @author  MCD Application Team
   5:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief   GPIO HAL module driver.
   6:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *          This file provides firmware functions to manage the following 
   7:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *          functionalities of the General Purpose Input/Output (GPIO) peripheral:
   8:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *           + Initialization and de-initialization functions
   9:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *           + IO operation functions
  10:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         
  11:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   @verbatim
  12:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ==============================================================================
  13:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                     ##### GPIO Peripheral features #####
  14:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ==============================================================================         
  15:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   [..] 
  16:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) Each port bit of the general-purpose I/O (GPIO) ports can be individually
  17:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   configured by software in several modes:
  18:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) Input mode
  19:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) Analog mode
  20:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) Output mode
  21:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) Alternate function mode
  22:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) External interrupt/event lines
  23:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  
  24:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) During and just after reset, the alternate functions and external interrupt
  25:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   lines are not active and the I/O ports are configured in input floating mode.
  26:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  27:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) All GPIO pins have weak internal pull-up and pull-down resistors, which can be
  28:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   activated or not.
  29:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****            
  30:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) In Output or Alternate mode, each IO can be configured on open-drain or push-pull
  31:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   type and the IO speed can be selected depending on the VDD value.
  32:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        
  33:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) The microcontroller IO pins are connected to onboard peripherals/modules through a
ARM GAS  /tmp/ccn52PRT.s 			page 2


  34:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         multiplexer that allows only one peripheral alternate function (AF) connected
  35:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   to an IO pin at a time. In this way, there can be no conflict between peripherals 
  36:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   sharing the same IO pin. 
  37:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  38:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) All ports have external interrupt/event capability. To use external interrupt
  39:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   lines, the port must be configured in input mode. All available GPIO pins are 
  40:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   connected to the 16 external interrupt/event lines from EXTI0 to EXTI15.
  41:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  42:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     (+) The external interrupt/event controller consists of up to 28 edge detectors
  43:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (16 lines are connected to GPIO) for generating event/interrupt requests (each
  44:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         input line can be independently configured to select the type (interrupt or event)
  45:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         and the corresponding trigger event (rising or falling or both). Each line can
  46:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         also be masked independently.
  47:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    
  48:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             ##### How to use this driver #####
  49:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ==============================================================================  
  50:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   [..]
  51:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) Enable the GPIO AHB clock using the following function : __HAL_RCC_GPIOx_CLK_ENABLE(). 
  52:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                                     
  53:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) Configure the GPIO pin(s) using HAL_GPIO_Init().
  54:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (++) Configure the IO mode using "Mode" member from GPIO_InitTypeDef structure
  55:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (++) Activate Pull-up, Pull-down resistor using "Pull" member from GPIO_InitTypeDef 
  56:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             structure.
  57:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (++) In case of Output or alternate function mode selection: the speed is 
  58:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****              configured through "Speed" member from GPIO_InitTypeDef structure.
  59:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         (++) In alternate mode is selection, the alternate function connected to the IO
  60:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****              is configured through "Alternate" member from GPIO_InitTypeDef structure.
  61:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (++) Analog mode is required when a pin is to be used as ADC channel 
  62:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             or DAC output.
  63:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (++) In case of external interrupt/event selection the "Mode" member from 
  64:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             GPIO_InitTypeDef structure select the type (interrupt or event) and 
  65:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             the corresponding trigger event (rising or falling or both).
  66:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  67:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) In case of external interrupt/event mode selection, configure NVIC IRQ priority 
  68:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        mapped to the EXTI line using HAL_NVIC_SetPriority() and enable it using
  69:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        HAL_NVIC_EnableIRQ().
  70:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  71:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) HAL_GPIO_DeInit allows to set register values to their reset value. It's also 
  72:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        recommended to use it to unconfigure pin which was used as an external interrupt 
  73:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        or in event mode. That's the only way to reset corresponding bit in EXTI & SYSCFG 
  74:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        registers.
  75:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  76:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) To get the level of a pin configured in input mode use HAL_GPIO_ReadPin().
  77:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  78:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) To set/reset the level of a pin configured in output mode use 
  79:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        HAL_GPIO_WritePin()/HAL_GPIO_TogglePin().
  80:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  81:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) To lock pin configuration until next reset use HAL_GPIO_LockPin().
  82:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  83:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) During and just after reset, the alternate functions are not 
  84:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        active and the GPIO pins are configured in input floating mode (except JTAG
  85:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        pins).
  86:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  87:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as general purpose 
  88:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        (PC14 and PC15, respectively) when the LSE oscillator is off. The LSE has 
  89:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        priority over the GPIO function.
  90:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
ARM GAS  /tmp/ccn52PRT.s 			page 3


  91:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    (#) The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  92:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         general purpose PF0 and PF1, respectively, when the HSE oscillator is off.
  93:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****        The HSE has priority over the GPIO function.
  94:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
  95:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   @endverbatim
  96:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ******************************************************************************
  97:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @attention
  98:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *
  99:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *
 101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * Redistribution and use in source and binary forms, with or without modification,
 102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * are permitted provided that the following conditions are met:
 103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *      this list of conditions and the following disclaimer.
 105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *      this list of conditions and the following disclaimer in the documentation
 107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *      and/or other materials provided with the distribution.
 108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *      may be used to endorse or promote products derived from this software
 110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *      without specific prior written permission.
 111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *
 112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *
 123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   ******************************************************************************  
 124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Includes ------------------------------------------------------------------*/
 127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #include "stm32f0xx_hal.h"
 128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @addtogroup STM32F0xx_HAL_Driver
 130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @defgroup GPIO GPIO
 134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief GPIO HAL module driver
 135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #ifdef HAL_GPIO_MODULE_ENABLED
 139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Private typedef -----------------------------------------------------------*/
 141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Private defines -----------------------------------------------------------*/
 142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @defgroup GPIO_Private_Defines GPIO Private Defines
 143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define GPIO_MODE             (0x00000003U)
 146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define EXTI_MODE             (0x10000000U)
 147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define GPIO_MODE_IT          (0x00010000U)
ARM GAS  /tmp/ccn52PRT.s 			page 4


 148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define GPIO_MODE_EVT         (0x00020000U)
 149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define RISING_EDGE           (0x00100000U)
 150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define FALLING_EDGE          (0x00200000U)
 151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define GPIO_OUTPUT_TYPE      (0x00000010U)
 152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** #define GPIO_NUMBER           (16U)
 154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @}
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Private macros ------------------------------------------------------------*/
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Private variables ---------------------------------------------------------*/
 160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Private function prototypes -----------------------------------------------*/
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /* Exported functions --------------------------------------------------------*/
 162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @defgroup GPIO_Exported_Functions GPIO Exported Functions
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @defgroup GPIO_Exported_Functions_Group1 Initialization/de-initialization functions 
 168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  *  @brief    Initialization and Configuration functions 
 169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  *
 170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** @verbatim    
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  ===============================================================================
 172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****               ##### Initialization and de-initialization functions #####
 173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  ===============================================================================
 174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** @endverbatim
 176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  Initialize the GPIOx peripheral according to the specified parameters in the GPIO_Init.
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** { 
  26              		.loc 1 187 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 C646     		mov	lr, r8
  39 0004 00B5     		push	{lr}
  40              		.cfi_def_cfa_offset 24
  41              		.cfi_offset 8, -24
  42 0006 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccn52PRT.s 			page 5


  43              		.cfi_def_cfa_offset 32
  44              	.LVL1:
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t position = 0x00U;
  45              		.loc 1 188 0
  46 0008 0023     		movs	r3, #0
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t iocurrent = 0x00U;
 190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t temp = 0x00U;
 191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull)); 
 197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Configure the port pins */
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   while (((GPIO_Init->Pin) >> position) != RESET)
  47              		.loc 1 199 0
  48 000a 38E0     		b	.L2
  49              	.LVL2:
  50              	.L20:
 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     /* Get current io position */
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     iocurrent = (GPIO_Init->Pin) & (1U << position);
 203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     if(iocurrent)
 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     {
 206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* In case of Alternate function mode selection */
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) 
 209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Check the Alternate function parameters */
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
 212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Configure Alternate function mapped with the current IO */ 
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = GPIOx->AFR[position >> 3];
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         GPIOx->AFR[position >> 3U] = temp;
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       temp = GPIOx->MODER;
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       GPIOx->MODER = temp;
 226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* In case of Output or Alternate function mode selection */
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Check the Speed parameter */
 232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Configure the IO Speed */
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = GPIOx->OSPEEDR; 
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
ARM GAS  /tmp/ccn52PRT.s 			page 6


 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         GPIOx->OSPEEDR = temp;
 238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Configure the IO Output Type */
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = GPIOx->OTYPER;
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         GPIOx->OTYPER = temp;
 244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       temp = GPIOx->PUPDR;
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       GPIOx->PUPDR = temp;
 251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure the External Interrupt or event for the current IO */
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE) 
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Enable SYSCFG Clock */
 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = SYSCFG->EXTICR[position >> 2];
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
  51              		.loc 1 261 0
  52 000c 0426     		movs	r6, #4
  53 000e 00E0     		b	.L8
  54              	.L14:
  55 0010 0026     		movs	r6, #0
  56              	.L8:
  57              		.loc 1 261 0 is_stmt 0 discriminator 20
  58 0012 AE40     		lsls	r6, r6, r5
  59 0014 3500     		movs	r5, r6
  60 0016 3D43     		orrs	r5, r7
  61              	.LVL3:
 262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2] = temp;
  62              		.loc 1 262 0 is_stmt 1 discriminator 20
  63 0018 0234     		adds	r4, r4, #2
  64 001a A400     		lsls	r4, r4, #2
  65 001c 574E     		ldr	r6, .L21
  66 001e A551     		str	r5, [r4, r6]
 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                   
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Clear EXTI line configuration */
 265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = EXTI->IMR;
  67              		.loc 1 265 0 discriminator 20
  68 0020 574C     		ldr	r4, .L21+4
  69 0022 2568     		ldr	r5, [r4]
  70              	.LVL4:
 266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
  71              		.loc 1 266 0 discriminator 20
  72 0024 4246     		mov	r2, r8
  73 0026 D443     		mvns	r4, r2
  74 0028 2E00     		movs	r6, r5
  75 002a 2640     		ands	r6, r4
  76              	.LVL5:
 267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
ARM GAS  /tmp/ccn52PRT.s 			page 7


  77              		.loc 1 267 0 discriminator 20
  78 002c 4A68     		ldr	r2, [r1, #4]
  79 002e D203     		lsls	r2, r2, #15
  80 0030 02D5     		bpl	.L9
 268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         {
 269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           SET_BIT(temp, iocurrent); 
  81              		.loc 1 269 0
  82 0032 4246     		mov	r2, r8
  83 0034 1543     		orrs	r5, r2
  84 0036 2E00     		movs	r6, r5
  85              	.LVL6:
  86              	.L9:
 270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         }
 271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         EXTI->IMR = temp;
  87              		.loc 1 271 0
  88 0038 514D     		ldr	r5, .L21+4
  89 003a 2E60     		str	r6, [r5]
 272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = EXTI->EMR;
  90              		.loc 1 273 0
  91 003c 6D68     		ldr	r5, [r5, #4]
  92              	.LVL7:
 274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
  93              		.loc 1 274 0
  94 003e 2E00     		movs	r6, r5
  95 0040 2640     		ands	r6, r4
  96              	.LVL8:
 275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
  97              		.loc 1 275 0
  98 0042 4A68     		ldr	r2, [r1, #4]
  99 0044 9203     		lsls	r2, r2, #14
 100 0046 02D5     		bpl	.L10
 276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         { 
 277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           SET_BIT(temp, iocurrent); 
 101              		.loc 1 277 0
 102 0048 4246     		mov	r2, r8
 103 004a 1543     		orrs	r5, r2
 104 004c 2E00     		movs	r6, r5
 105              	.LVL9:
 106              	.L10:
 278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         }
 279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         EXTI->EMR = temp;
 107              		.loc 1 279 0
 108 004e 4C4D     		ldr	r5, .L21+4
 109 0050 6E60     		str	r6, [r5, #4]
 280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Clear Rising Falling edge configuration */
 282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = EXTI->RTSR;
 110              		.loc 1 282 0
 111 0052 AD68     		ldr	r5, [r5, #8]
 112              	.LVL10:
 283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 113              		.loc 1 283 0
 114 0054 2E00     		movs	r6, r5
 115 0056 2640     		ands	r6, r4
 116              	.LVL11:
 284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
ARM GAS  /tmp/ccn52PRT.s 			page 8


 117              		.loc 1 284 0
 118 0058 4A68     		ldr	r2, [r1, #4]
 119 005a D202     		lsls	r2, r2, #11
 120 005c 02D5     		bpl	.L11
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         {
 286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           SET_BIT(temp, iocurrent); 
 121              		.loc 1 286 0
 122 005e 4246     		mov	r2, r8
 123 0060 1543     		orrs	r5, r2
 124 0062 2E00     		movs	r6, r5
 125              	.LVL12:
 126              	.L11:
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         }
 288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         EXTI->RTSR = temp;
 127              		.loc 1 288 0
 128 0064 464D     		ldr	r5, .L21+4
 129 0066 AE60     		str	r6, [r5, #8]
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         temp = EXTI->FTSR;
 130              		.loc 1 290 0
 131 0068 ED68     		ldr	r5, [r5, #12]
 132              	.LVL13:
 291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 133              		.loc 1 291 0
 134 006a 2C40     		ands	r4, r5
 135              	.LVL14:
 292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 136              		.loc 1 292 0
 137 006c 4A68     		ldr	r2, [r1, #4]
 138 006e 9202     		lsls	r2, r2, #10
 139 0070 02D5     		bpl	.L12
 293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         {
 294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           SET_BIT(temp, iocurrent); 
 140              		.loc 1 294 0
 141 0072 4246     		mov	r2, r8
 142 0074 2A43     		orrs	r2, r5
 143 0076 1400     		movs	r4, r2
 144              	.LVL15:
 145              	.L12:
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         }
 296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         EXTI->FTSR = temp;
 146              		.loc 1 296 0
 147 0078 414A     		ldr	r2, .L21+4
 148 007a D460     		str	r4, [r2, #12]
 149              	.LVL16:
 150              	.L3:
 297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     }
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     position++;
 151              		.loc 1 300 0
 152 007c 0133     		adds	r3, r3, #1
 153              	.LVL17:
 154              	.L2:
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 155              		.loc 1 199 0
 156 007e 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccn52PRT.s 			page 9


 157 0080 1400     		movs	r4, r2
 158 0082 DC40     		lsrs	r4, r4, r3
 159 0084 76D0     		beq	.L19
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     
 160              		.loc 1 202 0
 161 0086 0125     		movs	r5, #1
 162 0088 9D40     		lsls	r5, r5, r3
 163 008a 2A40     		ands	r2, r5
 164 008c 9046     		mov	r8, r2
 165              	.LVL18:
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     {
 166              		.loc 1 204 0
 167 008e F5D0     		beq	.L3
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 168              		.loc 1 208 0
 169 0090 4C68     		ldr	r4, [r1, #4]
 170 0092 022C     		cmp	r4, #2
 171 0094 01D0     		beq	.L4
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 172              		.loc 1 208 0 is_stmt 0 discriminator 1
 173 0096 122C     		cmp	r4, #18
 174 0098 0ED1     		bne	.L5
 175              	.L4:
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 176              		.loc 1 215 0 is_stmt 1
 177 009a DC08     		lsrs	r4, r3, #3
 178 009c 0834     		adds	r4, r4, #8
 179 009e A400     		lsls	r4, r4, #2
 180 00a0 2758     		ldr	r7, [r4, r0]
 181              	.LVL19:
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 182              		.loc 1 216 0
 183 00a2 0726     		movs	r6, #7
 184 00a4 1E40     		ands	r6, r3
 185 00a6 B600     		lsls	r6, r6, #2
 186 00a8 0F22     		movs	r2, #15
 187              	.LVL20:
 188 00aa B240     		lsls	r2, r2, r6
 189 00ac 9743     		bics	r7, r2
 190              	.LVL21:
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         GPIOx->AFR[position >> 3U] = temp;
 191              		.loc 1 217 0
 192 00ae 0A69     		ldr	r2, [r1, #16]
 193 00b0 B240     		lsls	r2, r2, r6
 194 00b2 1600     		movs	r6, r2
 195 00b4 3E43     		orrs	r6, r7
 196              	.LVL22:
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 197              		.loc 1 218 0
 198 00b6 2650     		str	r6, [r4, r0]
 199              	.LVL23:
 200              	.L5:
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 201              		.loc 1 222 0
 202 00b8 0268     		ldr	r2, [r0]
 203              	.LVL24:
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
ARM GAS  /tmp/ccn52PRT.s 			page 10


 204              		.loc 1 223 0
 205 00ba 5F00     		lsls	r7, r3, #1
 206 00bc 0324     		movs	r4, #3
 207 00be 2600     		movs	r6, r4
 208 00c0 BE40     		lsls	r6, r6, r7
 209 00c2 F643     		mvns	r6, r6
 210 00c4 3240     		ands	r2, r6
 211              	.LVL25:
 212 00c6 9446     		mov	ip, r2
 213              	.LVL26:
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       GPIOx->MODER = temp;
 214              		.loc 1 224 0
 215 00c8 4A68     		ldr	r2, [r1, #4]
 216              	.LVL27:
 217 00ca 1440     		ands	r4, r2
 218 00cc BC40     		lsls	r4, r4, r7
 219 00ce 6246     		mov	r2, ip
 220 00d0 1443     		orrs	r4, r2
 221              	.LVL28:
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 222              		.loc 1 225 0
 223 00d2 0460     		str	r4, [r0]
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 224              		.loc 1 228 0
 225 00d4 4C68     		ldr	r4, [r1, #4]
 226              	.LVL29:
 227 00d6 621E     		subs	r2, r4, #1
 228 00d8 012A     		cmp	r2, #1
 229 00da 03D9     		bls	.L6
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 230              		.loc 1 228 0 is_stmt 0 discriminator 1
 231 00dc 112C     		cmp	r4, #17
 232 00de 01D0     		beq	.L6
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 233              		.loc 1 229 0 is_stmt 1
 234 00e0 122C     		cmp	r4, #18
 235 00e2 10D1     		bne	.L7
 236              	.L6:
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 237              		.loc 1 234 0
 238 00e4 8468     		ldr	r4, [r0, #8]
 239              	.LVL30:
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 240              		.loc 1 235 0
 241 00e6 3440     		ands	r4, r6
 242              	.LVL31:
 243 00e8 A446     		mov	ip, r4
 244              	.LVL32:
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         GPIOx->OSPEEDR = temp;
 245              		.loc 1 236 0
 246 00ea CC68     		ldr	r4, [r1, #12]
 247              	.LVL33:
 248 00ec BC40     		lsls	r4, r4, r7
 249 00ee 6246     		mov	r2, ip
 250 00f0 1443     		orrs	r4, r2
 251              	.LVL34:
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
ARM GAS  /tmp/ccn52PRT.s 			page 11


 252              		.loc 1 237 0
 253 00f2 8460     		str	r4, [r0, #8]
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 254              		.loc 1 240 0
 255 00f4 4468     		ldr	r4, [r0, #4]
 256              	.LVL35:
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 257              		.loc 1 241 0
 258 00f6 AC43     		bics	r4, r5
 259              	.LVL36:
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         GPIOx->OTYPER = temp;
 260              		.loc 1 242 0
 261 00f8 4A68     		ldr	r2, [r1, #4]
 262 00fa 1209     		lsrs	r2, r2, #4
 263 00fc 0125     		movs	r5, #1
 264 00fe 1540     		ands	r5, r2
 265 0100 9D40     		lsls	r5, r5, r3
 266 0102 2543     		orrs	r5, r4
 267              	.LVL37:
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 268              		.loc 1 243 0
 269 0104 4560     		str	r5, [r0, #4]
 270              	.LVL38:
 271              	.L7:
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 272              		.loc 1 247 0
 273 0106 C468     		ldr	r4, [r0, #12]
 274              	.LVL39:
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 275              		.loc 1 248 0
 276 0108 2640     		ands	r6, r4
 277              	.LVL40:
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       GPIOx->PUPDR = temp;
 278              		.loc 1 249 0
 279 010a 8C68     		ldr	r4, [r1, #8]
 280 010c BC40     		lsls	r4, r4, r7
 281 010e 3443     		orrs	r4, r6
 282              	.LVL41:
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 283              		.loc 1 250 0
 284 0110 C460     		str	r4, [r0, #12]
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 285              		.loc 1 254 0
 286 0112 4A68     		ldr	r2, [r1, #4]
 287 0114 D200     		lsls	r2, r2, #3
 288 0116 B1D5     		bpl	.L3
 289              	.LBB2:
 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 290              		.loc 1 257 0
 291 0118 1A4D     		ldr	r5, .L21+8
 292 011a AE69     		ldr	r6, [r5, #24]
 293 011c 0124     		movs	r4, #1
 294              	.LVL42:
 295 011e 2643     		orrs	r6, r4
 296 0120 AE61     		str	r6, [r5, #24]
 297              	.LVL43:
 298 0122 AD69     		ldr	r5, [r5, #24]
ARM GAS  /tmp/ccn52PRT.s 			page 12


 299 0124 2C40     		ands	r4, r5
 300 0126 0194     		str	r4, [sp, #4]
 301 0128 019C     		ldr	r4, [sp, #4]
 302              	.LBE2:
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 303              		.loc 1 259 0
 304 012a 9C08     		lsrs	r4, r3, #2
 305 012c A51C     		adds	r5, r4, #2
 306 012e AD00     		lsls	r5, r5, #2
 307 0130 124E     		ldr	r6, .L21
 308 0132 AF59     		ldr	r7, [r5, r6]
 309              	.LVL44:
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 310              		.loc 1 260 0
 311 0134 0326     		movs	r6, #3
 312 0136 1E40     		ands	r6, r3
 313 0138 B500     		lsls	r5, r6, #2
 314 013a 0F26     		movs	r6, #15
 315 013c AE40     		lsls	r6, r6, r5
 316 013e B743     		bics	r7, r6
 317              	.LVL45:
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 318              		.loc 1 261 0
 319 0140 9026     		movs	r6, #144
 320 0142 F605     		lsls	r6, r6, #23
 321 0144 B042     		cmp	r0, r6
 322 0146 00D1     		bne	.LCB324
 323 0148 62E7     		b	.L14	@long jump
 324              	.LCB324:
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 325              		.loc 1 261 0 is_stmt 0 discriminator 1
 326 014a 0F4E     		ldr	r6, .L21+12
 327 014c B042     		cmp	r0, r6
 328 014e 0BD0     		beq	.L15
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 329              		.loc 1 261 0 discriminator 3
 330 0150 0E4E     		ldr	r6, .L21+16
 331 0152 B042     		cmp	r0, r6
 332 0154 0AD0     		beq	.L16
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 333              		.loc 1 261 0 discriminator 5
 334 0156 0E4E     		ldr	r6, .L21+20
 335 0158 B042     		cmp	r0, r6
 336 015a 09D0     		beq	.L17
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 337              		.loc 1 261 0 discriminator 7
 338 015c 0D4E     		ldr	r6, .L21+24
 339 015e B042     		cmp	r0, r6
 340 0160 00D1     		bne	.LCB336
 341 0162 53E7     		b	.L20	@long jump
 342              	.LCB336:
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 343              		.loc 1 261 0
 344 0164 0526     		movs	r6, #5
 345 0166 54E7     		b	.L8
 346              	.L15:
 347 0168 0126     		movs	r6, #1
ARM GAS  /tmp/ccn52PRT.s 			page 13


 348 016a 52E7     		b	.L8
 349              	.L16:
 350 016c 0226     		movs	r6, #2
 351 016e 50E7     		b	.L8
 352              	.L17:
 353 0170 0326     		movs	r6, #3
 354 0172 4EE7     		b	.L8
 355              	.LVL46:
 356              	.L19:
 301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   } 
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 357              		.loc 1 302 0 is_stmt 1
 358 0174 02B0     		add	sp, sp, #8
 359              		@ sp needed
 360 0176 04BC     		pop	{r2}
 361 0178 9046     		mov	r8, r2
 362 017a F0BD     		pop	{r4, r5, r6, r7, pc}
 363              	.L22:
 364              		.align	2
 365              	.L21:
 366 017c 00000140 		.word	1073807360
 367 0180 00040140 		.word	1073808384
 368 0184 00100240 		.word	1073876992
 369 0188 00040048 		.word	1207960576
 370 018c 00080048 		.word	1207961600
 371 0190 000C0048 		.word	1207962624
 372 0194 00100048 		.word	1207963648
 373              		.cfi_endproc
 374              	.LFE37:
 376              		.section	.text.HAL_GPIO_DeInit,"ax",%progbits
 377              		.align	1
 378              		.global	HAL_GPIO_DeInit
 379              		.syntax unified
 380              		.code	16
 381              		.thumb_func
 382              		.fpu softvfp
 384              	HAL_GPIO_DeInit:
 385              	.LFB38:
 303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  De-initialize the GPIOx peripheral registers to their default reset values.
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bit to be written.
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         This parameter can be one of GPIO_PIN_x where x can be (0..15).
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
 312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 386              		.loc 1 312 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              	.LVL47:
 391 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 392              		.cfi_def_cfa_offset 20
 393              		.cfi_offset 4, -20
 394              		.cfi_offset 5, -16
ARM GAS  /tmp/ccn52PRT.s 			page 14


 395              		.cfi_offset 6, -12
 396              		.cfi_offset 7, -8
 397              		.cfi_offset 14, -4
 398 0002 D646     		mov	lr, r10
 399 0004 4F46     		mov	r7, r9
 400 0006 4646     		mov	r6, r8
 401 0008 C0B5     		push	{r6, r7, lr}
 402              		.cfi_def_cfa_offset 32
 403              		.cfi_offset 8, -32
 404              		.cfi_offset 9, -28
 405              		.cfi_offset 10, -24
 406              	.LVL48:
 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t position = 0x00U;
 407              		.loc 1 313 0
 408 000a 0023     		movs	r3, #0
 314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t iocurrent = 0x00U;
 315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   uint32_t tmp = 0x00U;
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Configure the port pins */
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   while ((GPIO_Pin >> position) != RESET)
 409              		.loc 1 322 0
 410 000c 06E0     		b	.L24
 411              	.LVL49:
 412              	.L35:
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     /* Get current io position */
 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     iocurrent = GPIO_Pin & (1U << position);
 326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     if (iocurrent)
 328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     {
 329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /*------------------------- GPIO Mode Configuration --------------------*/
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure IO Direction in Input Floting Mode */
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(GPIOx->MODER, GPIO_MODER_MODER0 << (position * 2U)); 
 332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure the default Alternate Function in current IO */ 
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(GPIOx->AFR[position >> 3U], 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure the default value for IO Speed */
 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(GPIOx->OSPEEDR, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                   
 339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Configure the default value IO Output Type */
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(GPIOx->OTYPER, GPIO_OTYPER_OT_0 << position) ;
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Deactivate the Pull-up oand Pull-down resistor for the current IO */
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       CLEAR_BIT(GPIOx->PUPDR, GPIO_PUPDR_PUPDR0 << (position * 2U));
 344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /*------------------------- EXTI Mode Configuration --------------------*/
 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       /* Clear the External Interrupt or Event for the current IO */
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       tmp = SYSCFG->EXTICR[position >> 2U];
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       tmp &= ((0x0FU) << (4U * (position & 0x03U)));
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       if(tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 413              		.loc 1 350 0
ARM GAS  /tmp/ccn52PRT.s 			page 15


 414 000e 0425     		movs	r5, #4
 415 0010 00E0     		b	.L26
 416              	.L28:
 417 0012 0025     		movs	r5, #0
 418              	.L26:
 419              		.loc 1 350 0 is_stmt 0 discriminator 20
 420 0014 9540     		lsls	r5, r5, r2
 421 0016 A542     		cmp	r5, r4
 422 0018 4FD0     		beq	.L33
 423              	.LVL50:
 424              	.L25:
 351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         tmp = (0x0FU) << (4U * (position & 0x03U));
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(SYSCFG->EXTICR[position >> 2U], tmp);
 354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Clear EXTI line configuration */
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(EXTI->IMR, (uint32_t)iocurrent);
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(EXTI->EMR, (uint32_t)iocurrent);
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         
 359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         /* Clear Rising Falling edge configuration */
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(EXTI->RTSR, (uint32_t)iocurrent);
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(EXTI->FTSR, (uint32_t)iocurrent);
 362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     }
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     
 365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     position++;
 425              		.loc 1 365 0 is_stmt 1
 426 001a 0133     		adds	r3, r3, #1
 427              	.LVL51:
 428              	.L24:
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 429              		.loc 1 322 0
 430 001c 0A00     		movs	r2, r1
 431 001e DA40     		lsrs	r2, r2, r3
 432 0020 62D0     		beq	.L34
 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 433              		.loc 1 325 0
 434 0022 0122     		movs	r2, #1
 435 0024 9A40     		lsls	r2, r2, r3
 436 0026 0F00     		movs	r7, r1
 437 0028 1740     		ands	r7, r2
 438 002a BA46     		mov	r10, r7
 439              	.LVL52:
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     {
 440              		.loc 1 327 0
 441 002c F5D0     		beq	.L25
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 442              		.loc 1 331 0
 443 002e 0568     		ldr	r5, [r0]
 444 0030 5E00     		lsls	r6, r3, #1
 445 0032 0324     		movs	r4, #3
 446 0034 2700     		movs	r7, r4
 447              	.LVL53:
 448 0036 B740     		lsls	r7, r7, r6
 449 0038 FE43     		mvns	r6, r7
 450 003a B446     		mov	ip, r6
 451 003c 3540     		ands	r5, r6
ARM GAS  /tmp/ccn52PRT.s 			page 16


 452 003e 0560     		str	r5, [r0]
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 453              		.loc 1 334 0
 454 0040 DE08     		lsrs	r6, r3, #3
 455 0042 0836     		adds	r6, r6, #8
 456 0044 B600     		lsls	r6, r6, #2
 457 0046 3558     		ldr	r5, [r6, r0]
 458 0048 A946     		mov	r9, r5
 459 004a 0725     		movs	r5, #7
 460 004c 1D40     		ands	r5, r3
 461 004e AD00     		lsls	r5, r5, #2
 462 0050 0F27     		movs	r7, #15
 463 0052 B846     		mov	r8, r7
 464 0054 AF40     		lsls	r7, r7, r5
 465 0056 3D00     		movs	r5, r7
 466 0058 4F46     		mov	r7, r9
 467 005a AF43     		bics	r7, r5
 468 005c 3750     		str	r7, [r6, r0]
 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                   
 469              		.loc 1 337 0
 470 005e 8568     		ldr	r5, [r0, #8]
 471 0060 6646     		mov	r6, ip
 472 0062 3540     		ands	r5, r6
 473 0064 8560     		str	r5, [r0, #8]
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 474              		.loc 1 340 0
 475 0066 4568     		ldr	r5, [r0, #4]
 476 0068 9543     		bics	r5, r2
 477 006a 4560     		str	r5, [r0, #4]
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 478              		.loc 1 343 0
 479 006c C268     		ldr	r2, [r0, #12]
 480 006e 3240     		ands	r2, r6
 481 0070 C260     		str	r2, [r0, #12]
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       tmp &= ((0x0FU) << (4U * (position & 0x03U)));
 482              		.loc 1 348 0
 483 0072 9E08     		lsrs	r6, r3, #2
 484 0074 B51C     		adds	r5, r6, #2
 485 0076 AD00     		lsls	r5, r5, #2
 486 0078 1E4A     		ldr	r2, .L36
 487 007a AD58     		ldr	r5, [r5, r2]
 488              	.LVL54:
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       if(tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 489              		.loc 1 349 0
 490 007c 2200     		movs	r2, r4
 491 007e 1A40     		ands	r2, r3
 492 0080 9200     		lsls	r2, r2, #2
 493 0082 4446     		mov	r4, r8
 494 0084 9440     		lsls	r4, r4, r2
 495 0086 A046     		mov	r8, r4
 496 0088 2C40     		ands	r4, r5
 497              	.LVL55:
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 498              		.loc 1 350 0
 499 008a 9025     		movs	r5, #144
 500 008c ED05     		lsls	r5, r5, #23
 501 008e A842     		cmp	r0, r5
ARM GAS  /tmp/ccn52PRT.s 			page 17


 502 0090 BFD0     		beq	.L28
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 503              		.loc 1 350 0 is_stmt 0 discriminator 1
 504 0092 194D     		ldr	r5, .L36+4
 505 0094 A842     		cmp	r0, r5
 506 0096 0AD0     		beq	.L29
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 507              		.loc 1 350 0 discriminator 3
 508 0098 184D     		ldr	r5, .L36+8
 509 009a A842     		cmp	r0, r5
 510 009c 09D0     		beq	.L30
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 511              		.loc 1 350 0 discriminator 5
 512 009e 184D     		ldr	r5, .L36+12
 513 00a0 A842     		cmp	r0, r5
 514 00a2 08D0     		beq	.L31
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 515              		.loc 1 350 0 discriminator 7
 516 00a4 174D     		ldr	r5, .L36+16
 517 00a6 A842     		cmp	r0, r5
 518 00a8 B1D0     		beq	.L35
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       {
 519              		.loc 1 350 0
 520 00aa 0525     		movs	r5, #5
 521 00ac B2E7     		b	.L26
 522              	.L29:
 523 00ae 0125     		movs	r5, #1
 524 00b0 B0E7     		b	.L26
 525              	.L30:
 526 00b2 0225     		movs	r5, #2
 527 00b4 AEE7     		b	.L26
 528              	.L31:
 529 00b6 0325     		movs	r5, #3
 530 00b8 ACE7     		b	.L26
 531              	.L33:
 532              	.LVL56:
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         
 533              		.loc 1 353 0 is_stmt 1
 534 00ba 0E4D     		ldr	r5, .L36
 535 00bc B21C     		adds	r2, r6, #2
 536 00be 9200     		lsls	r2, r2, #2
 537 00c0 5459     		ldr	r4, [r2, r5]
 538 00c2 4646     		mov	r6, r8
 539 00c4 B443     		bics	r4, r6
 540 00c6 5451     		str	r4, [r2, r5]
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(EXTI->EMR, (uint32_t)iocurrent);
 541              		.loc 1 356 0
 542 00c8 0F4C     		ldr	r4, .L36+20
 543 00ca 2568     		ldr	r5, [r4]
 544 00cc 5246     		mov	r2, r10
 545 00ce D243     		mvns	r2, r2
 546 00d0 1540     		ands	r5, r2
 547 00d2 2560     		str	r5, [r4]
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         
 548              		.loc 1 357 0
 549 00d4 6568     		ldr	r5, [r4, #4]
 550 00d6 1540     		ands	r5, r2
ARM GAS  /tmp/ccn52PRT.s 			page 18


 551 00d8 6560     		str	r5, [r4, #4]
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****         CLEAR_BIT(EXTI->FTSR, (uint32_t)iocurrent);
 552              		.loc 1 360 0
 553 00da A568     		ldr	r5, [r4, #8]
 554 00dc 1540     		ands	r5, r2
 555 00de A560     		str	r5, [r4, #8]
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****       }
 556              		.loc 1 361 0
 557 00e0 E568     		ldr	r5, [r4, #12]
 558 00e2 2A40     		ands	r2, r5
 559 00e4 E260     		str	r2, [r4, #12]
 560 00e6 98E7     		b	.L25
 561              	.LVL57:
 562              	.L34:
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 563              		.loc 1 367 0
 564              		@ sp needed
 565 00e8 1CBC     		pop	{r2, r3, r4}
 566 00ea 9046     		mov	r8, r2
 567 00ec 9946     		mov	r9, r3
 568 00ee A246     		mov	r10, r4
 569 00f0 F0BD     		pop	{r4, r5, r6, r7, pc}
 570              	.L37:
 571 00f2 C046     		.align	2
 572              	.L36:
 573 00f4 00000140 		.word	1073807360
 574 00f8 00040048 		.word	1207960576
 575 00fc 00080048 		.word	1207961600
 576 0100 000C0048 		.word	1207962624
 577 0104 00100048 		.word	1207963648
 578 0108 00040140 		.word	1073808384
 579              		.cfi_endproc
 580              	.LFE38:
 582              		.section	.text.HAL_GPIO_ReadPin,"ax",%progbits
 583              		.align	1
 584              		.global	HAL_GPIO_ReadPin
 585              		.syntax unified
 586              		.code	16
 587              		.thumb_func
 588              		.fpu softvfp
 590              	HAL_GPIO_ReadPin:
 591              	.LFB39:
 368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @}
 371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /** @defgroup GPIO_Exported_Functions_Group2 IO operation functions 
 374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  *  @brief GPIO Read, Write, Toggle, Lock and EXTI management functions.
 375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  *
 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** @verbatim   
 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  ===============================================================================
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****                        ##### IO operation functions #####
 379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****  ===============================================================================  
 380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** @endverbatim
ARM GAS  /tmp/ccn52PRT.s 			page 19


 382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @{
 383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  Read the specified input port pin.
 387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bit to read.
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         This parameter can be GPIO_PIN_x where x can be (0..15).
 390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval The input port pin value.
 391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 592              		.loc 1 393 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597              	.LVL58:
 394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   GPIO_PinState bitstatus;
 395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 598              		.loc 1 399 0
 599 0000 0369     		ldr	r3, [r0, #16]
 600 0002 0B42     		tst	r3, r1
 601 0004 01D1     		bne	.L41
 400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     bitstatus = GPIO_PIN_SET;
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   else
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     bitstatus = GPIO_PIN_RESET;
 602              		.loc 1 405 0
 603 0006 0020     		movs	r0, #0
 604              	.LVL59:
 605              	.L39:
 406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   return bitstatus;
 408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 606              		.loc 1 408 0
 607              		@ sp needed
 608 0008 7047     		bx	lr
 609              	.LVL60:
 610              	.L41:
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 611              		.loc 1 401 0
 612 000a 0120     		movs	r0, #1
 613              	.LVL61:
 614 000c FCE7     		b	.L39
 615              		.cfi_endproc
 616              	.LFE39:
 618              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 619              		.align	1
 620              		.global	HAL_GPIO_WritePin
 621              		.syntax unified
ARM GAS  /tmp/ccn52PRT.s 			page 20


 622              		.code	16
 623              		.thumb_func
 624              		.fpu softvfp
 626              	HAL_GPIO_WritePin:
 627              	.LFB40:
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  Set or clear the selected data port bit.
 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @note   This function uses GPIOx_BSRR and GPIOx_BRR registers to allow atomic read/modify
 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *         the read and the modify access.
 415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..H) to select the GPIO peripheral for STM32F0 family
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bit to be written.
 418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  PinState specifies the value to be written to the selected bit.
 420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *          This parameter can be one of the GPIO_PinState enum values:
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
 422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   *            @arg GPIO_PIN_SET: to set the port pin
 423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 628              		.loc 1 426 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633              	.LVL62:
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   if (PinState != GPIO_PIN_RESET)
 634              		.loc 1 431 0
 635 0000 002A     		cmp	r2, #0
 636 0002 01D1     		bne	.L45
 432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin;
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   else
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     GPIOx->BRR = (uint32_t)GPIO_Pin;
 637              		.loc 1 437 0
 638 0004 8162     		str	r1, [r0, #40]
 639              	.L42:
 438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 640              		.loc 1 439 0
 641              		@ sp needed
 642 0006 7047     		bx	lr
 643              	.L45:
 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 644              		.loc 1 433 0
 645 0008 8161     		str	r1, [r0, #24]
 646 000a FCE7     		b	.L42
 647              		.cfi_endproc
ARM GAS  /tmp/ccn52PRT.s 			page 21


 648              	.LFE40:
 650              		.section	.text.HAL_GPIO_TogglePin,"ax",%progbits
 651              		.align	1
 652              		.global	HAL_GPIO_TogglePin
 653              		.syntax unified
 654              		.code	16
 655              		.thumb_func
 656              		.fpu softvfp
 658              	HAL_GPIO_TogglePin:
 659              	.LFB41:
 440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   
 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  Toggle the specified GPIO pin.
 443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the pin to be toggled.
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 660              		.loc 1 448 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665              	.LVL63:
 449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 666              		.loc 1 452 0
 667 0000 4369     		ldr	r3, [r0, #20]
 668 0002 5940     		eors	r1, r3
 669              	.LVL64:
 670 0004 4161     		str	r1, [r0, #20]
 453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 671              		.loc 1 453 0
 672              		@ sp needed
 673 0006 7047     		bx	lr
 674              		.cfi_endproc
 675              	.LFE41:
 677              		.section	.text.HAL_GPIO_LockPin,"ax",%progbits
 678              		.align	1
 679              		.global	HAL_GPIO_LockPin
 680              		.syntax unified
 681              		.code	16
 682              		.thumb_func
 683              		.fpu softvfp
 685              	HAL_GPIO_LockPin:
 686              	.LFB42:
 454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** * @brief  Locks GPIO Pins configuration registers.
 457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** * @note   The configuration of the locked GPIO pins can no longer be modified
 460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** *         until the next reset.
 461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIOx where x can be (A..F) to select the GPIO peripheral for STM32F0 family
ARM GAS  /tmp/ccn52PRT.s 			page 22


 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin specifies the port bits to be locked.
 463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** *         This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** * @retval None
 465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** */
 466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** HAL_StatusTypeDef HAL_GPIO_LockPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 687              		.loc 1 467 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 8
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692              	.LVL65:
 693 0000 82B0     		sub	sp, sp, #8
 694              		.cfi_def_cfa_offset 8
 468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   __IO uint32_t tmp = GPIO_LCKR_LCKK;
 695              		.loc 1 468 0
 696 0002 8022     		movs	r2, #128
 697 0004 5202     		lsls	r2, r2, #9
 698 0006 0192     		str	r2, [sp, #4]
 469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Check the parameters */
 471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_LOCK_INSTANCE(GPIOx));
 472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Apply lock key write sequence */
 475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   SET_BIT(tmp, GPIO_Pin);
 699              		.loc 1 475 0
 700 0008 019B     		ldr	r3, [sp, #4]
 701 000a 0B43     		orrs	r3, r1
 702 000c 0193     		str	r3, [sp, #4]
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Set LCKx bit(s): LCKK='1' + LCK[15-0] */
 477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   GPIOx->LCKR = tmp;
 703              		.loc 1 477 0
 704 000e 019B     		ldr	r3, [sp, #4]
 705 0010 C361     		str	r3, [r0, #28]
 478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Reset LCKx bit(s): LCKK='0' + LCK[15-0] */
 479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   GPIOx->LCKR = GPIO_Pin;
 706              		.loc 1 479 0
 707 0012 C161     		str	r1, [r0, #28]
 480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Set LCKx bit(s): LCKK='1' + LCK[15-0] */
 481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   GPIOx->LCKR = tmp;
 708              		.loc 1 481 0
 709 0014 019B     		ldr	r3, [sp, #4]
 710 0016 C361     		str	r3, [r0, #28]
 482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Read LCKK bit*/
 483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   tmp = GPIOx->LCKR;
 711              		.loc 1 483 0
 712 0018 C369     		ldr	r3, [r0, #28]
 713 001a 0193     		str	r3, [sp, #4]
 484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   if((GPIOx->LCKR & GPIO_LCKR_LCKK) != RESET)
 714              		.loc 1 485 0
 715 001c C369     		ldr	r3, [r0, #28]
 716 001e 1342     		tst	r3, r2
 717 0020 02D1     		bne	.L50
 486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     return HAL_OK;
ARM GAS  /tmp/ccn52PRT.s 			page 23


 488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   else
 490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   {
 491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     return HAL_ERROR;
 718              		.loc 1 491 0
 719 0022 0120     		movs	r0, #1
 720              	.LVL66:
 721              	.L48:
 492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 722              		.loc 1 493 0
 723 0024 02B0     		add	sp, sp, #8
 724              		@ sp needed
 725 0026 7047     		bx	lr
 726              	.LVL67:
 727              	.L50:
 487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 728              		.loc 1 487 0
 729 0028 0020     		movs	r0, #0
 730              	.LVL68:
 731 002a FBE7     		b	.L48
 732              		.cfi_endproc
 733              	.LFE42:
 735              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 736              		.align	1
 737              		.weak	HAL_GPIO_EXTI_Callback
 738              		.syntax unified
 739              		.code	16
 740              		.thumb_func
 741              		.fpu softvfp
 743              	HAL_GPIO_EXTI_Callback:
 744              	.LFB44:
 494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  Handle EXTI interrupt request.
 497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
 498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
 501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* EXTI line interrupt detected */
 503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET) 
 504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   { 
 505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     HAL_GPIO_EXTI_Callback(GPIO_Pin);
 507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** /**
 511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @brief  EXTI line detection callback.
 512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
 513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   * @retval None
 514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   */
 515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** __weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** {
 745              		.loc 1 516 0
 746              		.cfi_startproc
ARM GAS  /tmp/ccn52PRT.s 			page 24


 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              		@ link register save eliminated.
 750              	.LVL69:
 517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* Prevent unused argument(s) compilation warning */
 518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   UNUSED(GPIO_Pin);
 519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****             the HAL_GPIO_EXTI_Callback could be implemented in the user file
 522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****    */ 
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** }
 751              		.loc 1 523 0
 752              		@ sp needed
 753 0000 7047     		bx	lr
 754              		.cfi_endproc
 755              	.LFE44:
 757              		.section	.text.HAL_GPIO_EXTI_IRQHandler,"ax",%progbits
 758              		.align	1
 759              		.global	HAL_GPIO_EXTI_IRQHandler
 760              		.syntax unified
 761              		.code	16
 762              		.thumb_func
 763              		.fpu softvfp
 765              	HAL_GPIO_EXTI_IRQHandler:
 766              	.LFB43:
 501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   /* EXTI line interrupt detected */
 767              		.loc 1 501 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              	.LVL70:
 772 0000 10B5     		push	{r4, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 4, -8
 775              		.cfi_offset 14, -4
 503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   { 
 776              		.loc 1 503 0
 777 0002 054B     		ldr	r3, .L55
 778 0004 5B69     		ldr	r3, [r3, #20]
 779 0006 1842     		tst	r0, r3
 780 0008 00D1     		bne	.L54
 781              	.LVL71:
 782              	.L52:
 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 783              		.loc 1 508 0
 784              		@ sp needed
 785 000a 10BD     		pop	{r4, pc}
 786              	.LVL72:
 787              	.L54:
 505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****     HAL_GPIO_EXTI_Callback(GPIO_Pin);
 788              		.loc 1 505 0
 789 000c 024B     		ldr	r3, .L55
 790 000e 5861     		str	r0, [r3, #20]
 506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c ****   }
 791              		.loc 1 506 0
 792 0010 FFF7FEFF 		bl	HAL_GPIO_EXTI_Callback
 793              	.LVL73:
ARM GAS  /tmp/ccn52PRT.s 			page 25


 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_gpio.c **** 
 794              		.loc 1 508 0
 795 0014 F9E7     		b	.L52
 796              	.L56:
 797 0016 C046     		.align	2
 798              	.L55:
 799 0018 00040140 		.word	1073808384
 800              		.cfi_endproc
 801              	.LFE43:
 803              		.text
 804              	.Letext0:
 805              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 806              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 807              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 808              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 809              		.file 6 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 810              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 811              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 812              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/ree
 813              		.file 10 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 814              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 815              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
ARM GAS  /tmp/ccn52PRT.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_gpio.c
     /tmp/ccn52PRT.s:16     .text.HAL_GPIO_Init:0000000000000000 $t
     /tmp/ccn52PRT.s:23     .text.HAL_GPIO_Init:0000000000000000 HAL_GPIO_Init
     /tmp/ccn52PRT.s:366    .text.HAL_GPIO_Init:000000000000017c $d
     /tmp/ccn52PRT.s:377    .text.HAL_GPIO_DeInit:0000000000000000 $t
     /tmp/ccn52PRT.s:384    .text.HAL_GPIO_DeInit:0000000000000000 HAL_GPIO_DeInit
     /tmp/ccn52PRT.s:573    .text.HAL_GPIO_DeInit:00000000000000f4 $d
     /tmp/ccn52PRT.s:583    .text.HAL_GPIO_ReadPin:0000000000000000 $t
     /tmp/ccn52PRT.s:590    .text.HAL_GPIO_ReadPin:0000000000000000 HAL_GPIO_ReadPin
     /tmp/ccn52PRT.s:619    .text.HAL_GPIO_WritePin:0000000000000000 $t
     /tmp/ccn52PRT.s:626    .text.HAL_GPIO_WritePin:0000000000000000 HAL_GPIO_WritePin
     /tmp/ccn52PRT.s:651    .text.HAL_GPIO_TogglePin:0000000000000000 $t
     /tmp/ccn52PRT.s:658    .text.HAL_GPIO_TogglePin:0000000000000000 HAL_GPIO_TogglePin
     /tmp/ccn52PRT.s:678    .text.HAL_GPIO_LockPin:0000000000000000 $t
     /tmp/ccn52PRT.s:685    .text.HAL_GPIO_LockPin:0000000000000000 HAL_GPIO_LockPin
     /tmp/ccn52PRT.s:736    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccn52PRT.s:743    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccn52PRT.s:758    .text.HAL_GPIO_EXTI_IRQHandler:0000000000000000 $t
     /tmp/ccn52PRT.s:765    .text.HAL_GPIO_EXTI_IRQHandler:0000000000000000 HAL_GPIO_EXTI_IRQHandler
     /tmp/ccn52PRT.s:799    .text.HAL_GPIO_EXTI_IRQHandler:0000000000000018 $d
                           .group:0000000000000000 wm4.0.f4162676b8f623651f7a1199aa7e48f7
                           .group:0000000000000000 wm4.main.h.42.f591c98852cf8b31b9d28a7417223f7f
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.e02fa95cc55e74dee1039d0a6f374aae
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
ARM GAS  /tmp/ccn52PRT.s 			page 27


                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

NO UNDEFINED SYMBOLS
