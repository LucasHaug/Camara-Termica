ARM GAS  /tmp/ccqg4Whx.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_i2c.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_I2C_Init,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_I2C_Init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_I2C_Init:
  24              	.LFB37:
  25              		.file 1 "cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c"
   1:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
   2:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   ******************************************************************************
   3:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @file    stm32f0xx_hal_i2c.c
   4:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @author  MCD Application Team
   5:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *           + IO operation functions
  10:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  11:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
  12:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   @verbatim
  13:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   ==============================================================================
  14:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                         ##### How to use this driver #####
  15:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   ==============================================================================
  16:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
  17:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  18:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  19:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  20:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  21:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  22:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the HAL_I2C_MspInit() API:
  23:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  24:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (##) I2C pins configuration
  25:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  26:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  27:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  28:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  29:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  30:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  31:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive channel
  32:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
  33:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
ARM GAS  /tmp/ccqg4Whx.s 			page 2


  34:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx channel
  35:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  36:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  37:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                   the DMA Tx or Rx channel
  38:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  39:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  40:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  41:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  42:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the HAL_I2C_Init(), configures also the low level H
  43:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized HAL_I2C_MspInit(&hi2c) API.
  44:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  45:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function HAL_I2C_IsDeviceRead
  46:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  47:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  48:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  49:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** Polling mode IO operation ***
  50:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     =================================
  51:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
  52:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using HAL_I2C_Master_Transmit(
  53:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using HAL_I2C_Master_Receive()
  54:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Transmit()
  55:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Receive()
  56:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  57:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  58:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     =====================================
  59:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
  60:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using HAL_I2C_Mem_W
  61:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using HAL_I2C_Mem_
  62:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  63:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  64:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  65:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     ===================================
  66:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
  67:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Trans
  68:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and user can
  69:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
  70:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Receiv
  71:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and user can
  72:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
  73:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Transmi
  74:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and user can
  75:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
  76:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Receive_
  77:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and user can
  78:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
  79:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
  80:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
  81:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
  82:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
  83:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
  84:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
  85:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  86:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  87:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
  88:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** Interrupt mode IO sequential operation ***
  89:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     ==============================================
  90:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
ARM GAS  /tmp/ccqg4Whx.s 			page 3


  91:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  92:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           when a direction change during transfer
  93:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
  94:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  95:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  96:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functionnal is same as associated interfa
  97:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
  98:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             and data to transfer without a final stop condition
  99:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             several times (like HAL_I2C_Master_Sequential_Transmit_IT() then HAL_I2
 102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Differents sequential I2C interfaces are listed below:
 110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using HAL_
 111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_MasterTxCpltCallback() is execut
 112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using HAL_I
 114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_MasterRxCpltCallback() is executed 
 115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using HAL_I2C_EnableListen_IT()
 120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) When address slave I2C match, HAL_I2C_AddrCallback() is executed and user can
 121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) At Listen mode end HAL_I2C_ListenCpltCallback() is executed and user can
 123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ListenCpltCallback()
 124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using HAL_I
 125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_SlaveTxCpltCallback() is execute
 126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using HAL_I2
 128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_SlaveRxCpltCallback() is executed a
 129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
 136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     =======================================
 140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Mem_Write_IT()
 143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and user can
 144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Mem_Read_IT()
 147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and user can
ARM GAS  /tmp/ccqg4Whx.s 			page 4


 148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** DMA mode IO operation ***
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     ==============================
 154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Master_Transmit_DMA()
 157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and user can
 158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Master_Receive_DMA()
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and user can
 162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Slave_Transmit_DMA()
 165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and user can
 166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Slave_Receive_DMA()
 169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and user can
 170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
 177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     =================================
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Mem_Write_DMA()
 184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and user can
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_Mem_Read_DMA()
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and user can
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      ==================================
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      [..]
 197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE: Enable the I2C peripheral
 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE: Disable the I2C peripheral
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
ARM GAS  /tmp/ccqg4Whx.s 			page 5


 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****      [..]
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   @endverbatim
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   ******************************************************************************
 212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @attention
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * Redistribution and use in source and binary forms, with or without modification,
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * are permitted provided that the following conditions are met:
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *      this list of conditions and the following disclaimer.
 220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *      this list of conditions and the following disclaimer in the documentation
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *      and/or other materials provided with the distribution.
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *      may be used to endorse or promote products derived from this software
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *      without specific prior written permission.
 226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *
 238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   ******************************************************************************
 239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #include "stm32f0xx_hal.h"
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @addtogroup STM32F0xx_HAL_Driver
 245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C I2C
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief I2C HAL module driver
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
ARM GAS  /tmp/ccqg4Whx.s 			page 6


 262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((HAL_I2C_STATE_BUSY_TX | HAL_I2C_STATE_BUSY_RX) & (~(
 278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (0x00000001U)
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (0x00000002U)
 290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (0x00000004U)
 291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (0x00000011U)
 293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (0x00000012U)
 294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (0x00000012U)
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** #define I2C_GET_DMA_REMAIN_DATA(__HANDLE__) ((((__HANDLE__)->State) == HAL_I2C_STATE_BUSY_TX)   ? \
 304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                             ((uint32_t)((__HANDLE__)->hdmatx->Instance->CNDTR)) : \
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                                             ((uint32_t)((__HANDLE__)->hdmarx->Instance->CNDTR)))
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccqg4Whx.s 			page 7


 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITMasterSequentialCplt(I2C_HandleTypeDef *hi2c);
 324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITSlaveSequentialCplt(I2C_HandleTypeDef *hi2c);
 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to flush TXDR register */
 352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Private functions to handle  start, restart or stop a transfer */
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c,  uint16_t DevAddress, uint8_t Size, uint32_
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  *  @brief    Initialization and Configuration functions
 368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  *
 369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @verbatim
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
 371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 8


 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           the selected configuration:
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Clock Timing
 382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Own Address 1
 383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Dual Addressing mode
 385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Own Address 2
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Own Address 2 Mask
 387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) General call mode
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) Nostretch mode
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @endverbatim
 394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
 403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
  26              		.loc 1 405 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 82B0     		sub	sp, sp, #8
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 7860     		str	r0, [r7, #4]
 406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c == NULL)
  39              		.loc 1 407 0
  40 0008 7B68     		ldr	r3, [r7, #4]
  41 000a 002B     		cmp	r3, #0
  42 000c 01D1     		bne	.L2
 408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
  43              		.loc 1 409 0
  44 000e 0123     		movs	r3, #1
  45 0010 82E0     		b	.L3
  46              	.L2:
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 9


 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
  47              		.loc 1 422 0
  48 0012 7B68     		ldr	r3, [r7, #4]
  49 0014 4122     		movs	r2, #65
  50 0016 9B5C     		ldrb	r3, [r3, r2]
  51 0018 DBB2     		uxtb	r3, r3
  52 001a 002B     		cmp	r3, #0
  53 001c 07D1     		bne	.L4
 423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
  54              		.loc 1 425 0
  55 001e 7B68     		ldr	r3, [r7, #4]
  56 0020 4022     		movs	r2, #64
  57 0022 0021     		movs	r1, #0
  58 0024 9954     		strb	r1, [r3, r2]
 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
  59              		.loc 1 428 0
  60 0026 7B68     		ldr	r3, [r7, #4]
  61 0028 1800     		movs	r0, r3
  62 002a FFF7FEFF 		bl	HAL_I2C_MspInit
  63              	.L4:
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
  64              		.loc 1 431 0
  65 002e 7B68     		ldr	r3, [r7, #4]
  66 0030 4122     		movs	r2, #65
  67 0032 2421     		movs	r1, #36
  68 0034 9954     		strb	r1, [r3, r2]
 432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
  69              		.loc 1 434 0
  70 0036 7B68     		ldr	r3, [r7, #4]
  71 0038 1B68     		ldr	r3, [r3]
  72 003a 1A68     		ldr	r2, [r3]
  73 003c 7B68     		ldr	r3, [r7, #4]
  74 003e 1B68     		ldr	r3, [r3]
  75 0040 0121     		movs	r1, #1
  76 0042 8A43     		bics	r2, r1
  77 0044 1A60     		str	r2, [r3]
 435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
ARM GAS  /tmp/ccqg4Whx.s 			page 10


 438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
  78              		.loc 1 438 0
  79 0046 7B68     		ldr	r3, [r7, #4]
  80 0048 5A68     		ldr	r2, [r3, #4]
  81 004a 7B68     		ldr	r3, [r7, #4]
  82 004c 1B68     		ldr	r3, [r3]
  83 004e 3449     		ldr	r1, .L8
  84 0050 0A40     		ands	r2, r1
  85 0052 1A61     		str	r2, [r3, #16]
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
  86              		.loc 1 442 0
  87 0054 7B68     		ldr	r3, [r7, #4]
  88 0056 1B68     		ldr	r3, [r3]
  89 0058 9A68     		ldr	r2, [r3, #8]
  90 005a 7B68     		ldr	r3, [r7, #4]
  91 005c 1B68     		ldr	r3, [r3]
  92 005e 3149     		ldr	r1, .L8+4
  93 0060 0A40     		ands	r2, r1
  94 0062 9A60     		str	r2, [r3, #8]
 443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
  95              		.loc 1 445 0
  96 0064 7B68     		ldr	r3, [r7, #4]
  97 0066 DB68     		ldr	r3, [r3, #12]
  98 0068 012B     		cmp	r3, #1
  99 006a 08D1     		bne	.L5
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 100              		.loc 1 447 0
 101 006c 7B68     		ldr	r3, [r7, #4]
 102 006e 9A68     		ldr	r2, [r3, #8]
 103 0070 7B68     		ldr	r3, [r7, #4]
 104 0072 1B68     		ldr	r3, [r3]
 105 0074 8021     		movs	r1, #128
 106 0076 0902     		lsls	r1, r1, #8
 107 0078 0A43     		orrs	r2, r1
 108 007a 9A60     		str	r2, [r3, #8]
 109 007c 07E0     		b	.L6
 110              	.L5:
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 111              		.loc 1 451 0
 112 007e 7B68     		ldr	r3, [r7, #4]
 113 0080 9A68     		ldr	r2, [r3, #8]
 114 0082 7B68     		ldr	r3, [r7, #4]
 115 0084 1B68     		ldr	r3, [r3]
 116 0086 8421     		movs	r1, #132
 117 0088 0902     		lsls	r1, r1, #8
 118 008a 0A43     		orrs	r2, r1
 119 008c 9A60     		str	r2, [r3, #8]
 120              	.L6:
ARM GAS  /tmp/ccqg4Whx.s 			page 11


 452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 121              		.loc 1 456 0
 122 008e 7B68     		ldr	r3, [r7, #4]
 123 0090 DB68     		ldr	r3, [r3, #12]
 124 0092 022B     		cmp	r3, #2
 125 0094 04D1     		bne	.L7
 457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 126              		.loc 1 458 0
 127 0096 7B68     		ldr	r3, [r7, #4]
 128 0098 1B68     		ldr	r3, [r3]
 129 009a 8022     		movs	r2, #128
 130 009c 1201     		lsls	r2, r2, #4
 131 009e 5A60     		str	r2, [r3, #4]
 132              	.L7:
 459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 133              		.loc 1 461 0
 134 00a0 7B68     		ldr	r3, [r7, #4]
 135 00a2 1B68     		ldr	r3, [r3]
 136 00a4 5A68     		ldr	r2, [r3, #4]
 137 00a6 7B68     		ldr	r3, [r7, #4]
 138 00a8 1B68     		ldr	r3, [r3]
 139 00aa 1F49     		ldr	r1, .L8+8
 140 00ac 0A43     		orrs	r2, r1
 141 00ae 5A60     		str	r2, [r3, #4]
 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 142              		.loc 1 465 0
 143 00b0 7B68     		ldr	r3, [r7, #4]
 144 00b2 1B68     		ldr	r3, [r3]
 145 00b4 DA68     		ldr	r2, [r3, #12]
 146 00b6 7B68     		ldr	r3, [r7, #4]
 147 00b8 1B68     		ldr	r3, [r3]
 148 00ba 1A49     		ldr	r1, .L8+4
 149 00bc 0A40     		ands	r2, r1
 150 00be DA60     		str	r2, [r3, #12]
 466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 151              		.loc 1 468 0
 152 00c0 7B68     		ldr	r3, [r7, #4]
 153 00c2 1A69     		ldr	r2, [r3, #16]
 154 00c4 7B68     		ldr	r3, [r7, #4]
 155 00c6 5B69     		ldr	r3, [r3, #20]
 156 00c8 1A43     		orrs	r2, r3
 157 00ca 1100     		movs	r1, r2
 158 00cc 7B68     		ldr	r3, [r7, #4]
 159 00ce 9B69     		ldr	r3, [r3, #24]
 160 00d0 1A02     		lsls	r2, r3, #8
ARM GAS  /tmp/ccqg4Whx.s 			page 12


 161 00d2 7B68     		ldr	r3, [r7, #4]
 162 00d4 1B68     		ldr	r3, [r3]
 163 00d6 0A43     		orrs	r2, r1
 164 00d8 DA60     		str	r2, [r3, #12]
 469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 165              		.loc 1 472 0
 166 00da 7B68     		ldr	r3, [r7, #4]
 167 00dc D969     		ldr	r1, [r3, #28]
 168 00de 7B68     		ldr	r3, [r7, #4]
 169 00e0 1A6A     		ldr	r2, [r3, #32]
 170 00e2 7B68     		ldr	r3, [r7, #4]
 171 00e4 1B68     		ldr	r3, [r3]
 172 00e6 0A43     		orrs	r2, r1
 173 00e8 1A60     		str	r2, [r3]
 473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 174              		.loc 1 475 0
 175 00ea 7B68     		ldr	r3, [r7, #4]
 176 00ec 1B68     		ldr	r3, [r3]
 177 00ee 1A68     		ldr	r2, [r3]
 178 00f0 7B68     		ldr	r3, [r7, #4]
 179 00f2 1B68     		ldr	r3, [r3]
 180 00f4 0121     		movs	r1, #1
 181 00f6 0A43     		orrs	r2, r1
 182 00f8 1A60     		str	r2, [r3]
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 183              		.loc 1 477 0
 184 00fa 7B68     		ldr	r3, [r7, #4]
 185 00fc 0022     		movs	r2, #0
 186 00fe 5A64     		str	r2, [r3, #68]
 478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 187              		.loc 1 478 0
 188 0100 7B68     		ldr	r3, [r7, #4]
 189 0102 4122     		movs	r2, #65
 190 0104 2021     		movs	r1, #32
 191 0106 9954     		strb	r1, [r3, r2]
 479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 192              		.loc 1 479 0
 193 0108 7B68     		ldr	r3, [r7, #4]
 194 010a 0022     		movs	r2, #0
 195 010c 1A63     		str	r2, [r3, #48]
 480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 196              		.loc 1 480 0
 197 010e 7B68     		ldr	r3, [r7, #4]
 198 0110 4222     		movs	r2, #66
 199 0112 0021     		movs	r1, #0
 200 0114 9954     		strb	r1, [r3, r2]
 481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 201              		.loc 1 482 0
 202 0116 0023     		movs	r3, #0
 203              	.L3:
ARM GAS  /tmp/ccqg4Whx.s 			page 13


 483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 204              		.loc 1 483 0
 205 0118 1800     		movs	r0, r3
 206 011a BD46     		mov	sp, r7
 207 011c 02B0     		add	sp, sp, #8
 208              		@ sp needed
 209 011e 80BD     		pop	{r7, pc}
 210              	.L9:
 211              		.align	2
 212              	.L8:
 213 0120 FFFFFFF0 		.word	-251658241
 214 0124 FF7FFFFF 		.word	-32769
 215 0128 00800002 		.word	33587200
 216              		.cfi_endproc
 217              	.LFE37:
 219              		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 220              		.align	1
 221              		.global	HAL_I2C_DeInit
 222              		.syntax unified
 223              		.code	16
 224              		.thumb_func
 225              		.fpu softvfp
 227              	HAL_I2C_DeInit:
 228              	.LFB38:
 484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
 490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 229              		.loc 1 492 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              		.cfi_def_cfa_offset 16
 239 0004 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
 241 0006 7860     		str	r0, [r7, #4]
 493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c == NULL)
 242              		.loc 1 494 0
 243 0008 7B68     		ldr	r3, [r7, #4]
 244 000a 002B     		cmp	r3, #0
 245 000c 01D1     		bne	.L11
 495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
 246              		.loc 1 496 0
 247 000e 0123     		movs	r3, #1
 248 0010 22E0     		b	.L12
ARM GAS  /tmp/ccqg4Whx.s 			page 14


 249              	.L11:
 497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
 500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 250              		.loc 1 502 0
 251 0012 7B68     		ldr	r3, [r7, #4]
 252 0014 4122     		movs	r2, #65
 253 0016 2421     		movs	r1, #36
 254 0018 9954     		strb	r1, [r3, r2]
 503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 255              		.loc 1 505 0
 256 001a 7B68     		ldr	r3, [r7, #4]
 257 001c 1B68     		ldr	r3, [r3]
 258 001e 1A68     		ldr	r2, [r3]
 259 0020 7B68     		ldr	r3, [r7, #4]
 260 0022 1B68     		ldr	r3, [r3]
 261 0024 0121     		movs	r1, #1
 262 0026 8A43     		bics	r2, r1
 263 0028 1A60     		str	r2, [r3]
 506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 264              		.loc 1 508 0
 265 002a 7B68     		ldr	r3, [r7, #4]
 266 002c 1800     		movs	r0, r3
 267 002e FFF7FEFF 		bl	HAL_I2C_MspDeInit
 509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 268              		.loc 1 510 0
 269 0032 7B68     		ldr	r3, [r7, #4]
 270 0034 0022     		movs	r2, #0
 271 0036 5A64     		str	r2, [r3, #68]
 511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 272              		.loc 1 511 0
 273 0038 7B68     		ldr	r3, [r7, #4]
 274 003a 4122     		movs	r2, #65
 275 003c 0021     		movs	r1, #0
 276 003e 9954     		strb	r1, [r3, r2]
 512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 277              		.loc 1 512 0
 278 0040 7B68     		ldr	r3, [r7, #4]
 279 0042 0022     		movs	r2, #0
 280 0044 1A63     		str	r2, [r3, #48]
 513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 281              		.loc 1 513 0
 282 0046 7B68     		ldr	r3, [r7, #4]
 283 0048 4222     		movs	r2, #66
 284 004a 0021     		movs	r1, #0
 285 004c 9954     		strb	r1, [r3, r2]
 514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Release Lock */
 516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/ccqg4Whx.s 			page 15


 286              		.loc 1 516 0
 287 004e 7B68     		ldr	r3, [r7, #4]
 288 0050 4022     		movs	r2, #64
 289 0052 0021     		movs	r1, #0
 290 0054 9954     		strb	r1, [r3, r2]
 517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 291              		.loc 1 518 0
 292 0056 0023     		movs	r3, #0
 293              	.L12:
 519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 294              		.loc 1 519 0
 295 0058 1800     		movs	r0, r3
 296 005a BD46     		mov	sp, r7
 297 005c 02B0     		add	sp, sp, #8
 298              		@ sp needed
 299 005e 80BD     		pop	{r7, pc}
 300              		.cfi_endproc
 301              	.LFE38:
 303              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 304              		.align	1
 305              		.weak	HAL_I2C_MspInit
 306              		.syntax unified
 307              		.code	16
 308              		.thumb_func
 309              		.fpu softvfp
 311              	HAL_I2C_MspInit:
 312              	.LFB39:
 520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
 526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 313              		.loc 1 528 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 8
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317 0000 80B5     		push	{r7, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 82B0     		sub	sp, sp, #8
 322              		.cfi_def_cfa_offset 16
 323 0004 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
 325 0006 7860     		str	r0, [r7, #4]
 529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
 531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 533:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
 535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
ARM GAS  /tmp/ccqg4Whx.s 			page 16


 326              		.loc 1 535 0
 327 0008 C046     		nop
 328 000a BD46     		mov	sp, r7
 329 000c 02B0     		add	sp, sp, #8
 330              		@ sp needed
 331 000e 80BD     		pop	{r7, pc}
 332              		.cfi_endproc
 333              	.LFE39:
 335              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 336              		.align	1
 337              		.weak	HAL_I2C_MspDeInit
 338              		.syntax unified
 339              		.code	16
 340              		.thumb_func
 341              		.fpu softvfp
 343              	HAL_I2C_MspDeInit:
 344              	.LFB40:
 536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 539:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 541:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
 542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 544:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 345              		.loc 1 544 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349 0000 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 82B0     		sub	sp, sp, #8
 354              		.cfi_def_cfa_offset 16
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 357 0006 7860     		str	r0, [r7, #4]
 545:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
 547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 548:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
 551:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 358              		.loc 1 551 0
 359 0008 C046     		nop
 360 000a BD46     		mov	sp, r7
 361 000c 02B0     		add	sp, sp, #8
 362              		@ sp needed
 363 000e 80BD     		pop	{r7, pc}
 364              		.cfi_endproc
 365              	.LFE40:
 367              		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 368              		.align	1
 369              		.global	HAL_I2C_Master_Transmit
ARM GAS  /tmp/ccqg4Whx.s 			page 17


 370              		.syntax unified
 371              		.code	16
 372              		.thumb_func
 373              		.fpu softvfp
 375              	HAL_I2C_Master_Transmit:
 376              	.LFB41:
 552:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
 555:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 557:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 558:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  *  @brief   Data transfers functions
 559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  *
 560:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @verbatim
 561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
 562:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                       ##### IO operation functions #####
 563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
 564:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
 565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     transfers.
 567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 568:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) There are two modes of transfer:
 569:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             The status of all data processing is returned by the same function
 571:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             after finishing transfer.
 572:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
 573:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
 574:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             The end of the data processing will be indicated through the
 575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
 576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             using DMA mode.
 577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) Blocking mode functions are :
 579:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
 581:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
 582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
 583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
 584:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
 585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
 586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
 588:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
 589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
 590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
 591:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
 592:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
 593:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
 594:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
 596:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
 597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
 598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
 599:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
 600:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
 601:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
 602:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 18


 603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
 604:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
 605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
 606:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
 607:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
 608:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
 609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
 610:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
 611:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @endverbatim
 613:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
 614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 615:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 617:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
 618:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 620:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
 621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
 622:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 623:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 625:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
 626:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 627:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
 628:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 377              		.loc 1 628 0
 378              		.cfi_startproc
 379              		@ args = 4, pretend = 0, frame = 24
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381 0000 90B5     		push	{r4, r7, lr}
 382              		.cfi_def_cfa_offset 12
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 89B0     		sub	sp, sp, #36
 387              		.cfi_def_cfa_offset 48
 388 0004 02AF     		add	r7, sp, #8
 389              		.cfi_def_cfa 7, 40
 390 0006 F860     		str	r0, [r7, #12]
 391 0008 0800     		movs	r0, r1
 392 000a 7A60     		str	r2, [r7, #4]
 393 000c 1900     		movs	r1, r3
 394 000e 0A23     		movs	r3, #10
 395 0010 FB18     		adds	r3, r7, r3
 396 0012 021C     		adds	r2, r0, #0
 397 0014 1A80     		strh	r2, [r3]
 398 0016 0823     		movs	r3, #8
 399 0018 FB18     		adds	r3, r7, r3
 400 001a 0A1C     		adds	r2, r1, #0
 401 001c 1A80     		strh	r2, [r3]
 629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 402              		.loc 1 629 0
 403 001e 0023     		movs	r3, #0
 404 0020 7B61     		str	r3, [r7, #20]
 630:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 631:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
ARM GAS  /tmp/ccqg4Whx.s 			page 19


 405              		.loc 1 631 0
 406 0022 FB68     		ldr	r3, [r7, #12]
 407 0024 4122     		movs	r2, #65
 408 0026 9B5C     		ldrb	r3, [r3, r2]
 409 0028 DBB2     		uxtb	r3, r3
 410 002a 202B     		cmp	r3, #32
 411 002c 00D0     		beq	.LCB329
 412 002e F3E0     		b	.L16	@long jump
 413              	.LCB329:
 632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 633:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
 634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 414              		.loc 1 634 0
 415 0030 FB68     		ldr	r3, [r7, #12]
 416 0032 4022     		movs	r2, #64
 417 0034 9B5C     		ldrb	r3, [r3, r2]
 418 0036 012B     		cmp	r3, #1
 419 0038 01D1     		bne	.L17
 420              		.loc 1 634 0 is_stmt 0 discriminator 1
 421 003a 0223     		movs	r3, #2
 422 003c EDE0     		b	.L18
 423              	.L17:
 424              		.loc 1 634 0 discriminator 2
 425 003e FB68     		ldr	r3, [r7, #12]
 426 0040 4022     		movs	r2, #64
 427 0042 0121     		movs	r1, #1
 428 0044 9954     		strb	r1, [r3, r2]
 635:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 636:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 429              		.loc 1 637 0 is_stmt 1 discriminator 2
 430 0046 FFF7FEFF 		bl	HAL_GetTick
 431 004a 0300     		movs	r3, r0
 432 004c 7B61     		str	r3, [r7, #20]
 638:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 639:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
 433              		.loc 1 639 0 discriminator 2
 434 004e 8023     		movs	r3, #128
 435 0050 1902     		lsls	r1, r3, #8
 436 0052 F868     		ldr	r0, [r7, #12]
 437 0054 7B69     		ldr	r3, [r7, #20]
 438 0056 0093     		str	r3, [sp]
 439 0058 1923     		movs	r3, #25
 440 005a 0122     		movs	r2, #1
 441 005c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 442 0060 031E     		subs	r3, r0, #0
 443 0062 01D0     		beq	.L19
 640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 641:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 444              		.loc 1 641 0
 445 0064 0323     		movs	r3, #3
 446 0066 D8E0     		b	.L18
 447              	.L19:
 642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 644:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 448              		.loc 1 644 0
ARM GAS  /tmp/ccqg4Whx.s 			page 20


 449 0068 FB68     		ldr	r3, [r7, #12]
 450 006a 4122     		movs	r2, #65
 451 006c 2121     		movs	r1, #33
 452 006e 9954     		strb	r1, [r3, r2]
 645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 453              		.loc 1 645 0
 454 0070 FB68     		ldr	r3, [r7, #12]
 455 0072 4222     		movs	r2, #66
 456 0074 1021     		movs	r1, #16
 457 0076 9954     		strb	r1, [r3, r2]
 646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 458              		.loc 1 646 0
 459 0078 FB68     		ldr	r3, [r7, #12]
 460 007a 0022     		movs	r2, #0
 461 007c 5A64     		str	r2, [r3, #68]
 647:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
 649:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 462              		.loc 1 649 0
 463 007e FB68     		ldr	r3, [r7, #12]
 464 0080 7A68     		ldr	r2, [r7, #4]
 465 0082 5A62     		str	r2, [r3, #36]
 650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 466              		.loc 1 650 0
 467 0084 FB68     		ldr	r3, [r7, #12]
 468 0086 0822     		movs	r2, #8
 469 0088 BA18     		adds	r2, r7, r2
 470 008a 1288     		ldrh	r2, [r2]
 471 008c 5A85     		strh	r2, [r3, #42]
 651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 472              		.loc 1 651 0
 473 008e FB68     		ldr	r3, [r7, #12]
 474 0090 0022     		movs	r2, #0
 475 0092 5A63     		str	r2, [r3, #52]
 652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 653:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
 654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
 655:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 476              		.loc 1 655 0
 477 0094 FB68     		ldr	r3, [r7, #12]
 478 0096 5B8D     		ldrh	r3, [r3, #42]
 479 0098 9BB2     		uxth	r3, r3
 480 009a FF2B     		cmp	r3, #255
 481 009c 12D9     		bls	.L20
 656:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 482              		.loc 1 657 0
 483 009e FB68     		ldr	r3, [r7, #12]
 484 00a0 FF22     		movs	r2, #255
 485 00a2 1A85     		strh	r2, [r3, #40]
 658:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRIT
 486              		.loc 1 658 0
 487 00a4 FB68     		ldr	r3, [r7, #12]
 488 00a6 1B8D     		ldrh	r3, [r3, #40]
 489 00a8 DAB2     		uxtb	r2, r3
 490 00aa 8023     		movs	r3, #128
 491 00ac 5C04     		lsls	r4, r3, #17
ARM GAS  /tmp/ccqg4Whx.s 			page 21


 492 00ae 0A23     		movs	r3, #10
 493 00b0 FB18     		adds	r3, r7, r3
 494 00b2 1988     		ldrh	r1, [r3]
 495 00b4 F868     		ldr	r0, [r7, #12]
 496 00b6 8023     		movs	r3, #128
 497 00b8 9B01     		lsls	r3, r3, #6
 498 00ba 0093     		str	r3, [sp]
 499 00bc 2300     		movs	r3, r4
 500 00be FFF7FEFF 		bl	I2C_TransferConfig
 501 00c2 7AE0     		b	.L22
 502              	.L20:
 659:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 660:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
 661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 662:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 503              		.loc 1 662 0
 504 00c4 FB68     		ldr	r3, [r7, #12]
 505 00c6 5B8D     		ldrh	r3, [r3, #42]
 506 00c8 9AB2     		uxth	r2, r3
 507 00ca FB68     		ldr	r3, [r7, #12]
 508 00cc 1A85     		strh	r2, [r3, #40]
 663:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
 509              		.loc 1 663 0
 510 00ce FB68     		ldr	r3, [r7, #12]
 511 00d0 1B8D     		ldrh	r3, [r3, #40]
 512 00d2 DAB2     		uxtb	r2, r3
 513 00d4 8023     		movs	r3, #128
 514 00d6 9C04     		lsls	r4, r3, #18
 515 00d8 0A23     		movs	r3, #10
 516 00da FB18     		adds	r3, r7, r3
 517 00dc 1988     		ldrh	r1, [r3]
 518 00de F868     		ldr	r0, [r7, #12]
 519 00e0 8023     		movs	r3, #128
 520 00e2 9B01     		lsls	r3, r3, #6
 521 00e4 0093     		str	r3, [sp]
 522 00e6 2300     		movs	r3, r4
 523 00e8 FFF7FEFF 		bl	I2C_TransferConfig
 664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 665:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
 524              		.loc 1 666 0
 525 00ec 65E0     		b	.L22
 526              	.L27:
 667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
 669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 527              		.loc 1 669 0
 528 00ee 7A69     		ldr	r2, [r7, #20]
 529 00f0 B96A     		ldr	r1, [r7, #40]
 530 00f2 FB68     		ldr	r3, [r7, #12]
 531 00f4 1800     		movs	r0, r3
 532 00f6 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 533 00fa 031E     		subs	r3, r0, #0
 534 00fc 07D0     		beq	.L23
 670:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 535              		.loc 1 671 0
ARM GAS  /tmp/ccqg4Whx.s 			page 22


 536 00fe FB68     		ldr	r3, [r7, #12]
 537 0100 5B6C     		ldr	r3, [r3, #68]
 538 0102 042B     		cmp	r3, #4
 539 0104 01D1     		bne	.L24
 672:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
 540              		.loc 1 673 0
 541 0106 0123     		movs	r3, #1
 542 0108 87E0     		b	.L18
 543              	.L24:
 674:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
 676:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 677:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 544              		.loc 1 677 0
 545 010a 0323     		movs	r3, #3
 546 010c 85E0     		b	.L18
 547              	.L23:
 678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 680:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
 681:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 548              		.loc 1 681 0
 549 010e FB68     		ldr	r3, [r7, #12]
 550 0110 5B6A     		ldr	r3, [r3, #36]
 551 0112 591C     		adds	r1, r3, #1
 552 0114 FA68     		ldr	r2, [r7, #12]
 553 0116 5162     		str	r1, [r2, #36]
 554 0118 1A78     		ldrb	r2, [r3]
 555 011a FB68     		ldr	r3, [r7, #12]
 556 011c 1B68     		ldr	r3, [r3]
 557 011e 9A62     		str	r2, [r3, #40]
 682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 558              		.loc 1 682 0
 559 0120 FB68     		ldr	r3, [r7, #12]
 560 0122 5B8D     		ldrh	r3, [r3, #42]
 561 0124 9BB2     		uxth	r3, r3
 562 0126 013B     		subs	r3, r3, #1
 563 0128 9AB2     		uxth	r2, r3
 564 012a FB68     		ldr	r3, [r7, #12]
 565 012c 5A85     		strh	r2, [r3, #42]
 683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 566              		.loc 1 683 0
 567 012e FB68     		ldr	r3, [r7, #12]
 568 0130 1B8D     		ldrh	r3, [r3, #40]
 569 0132 013B     		subs	r3, r3, #1
 570 0134 9AB2     		uxth	r2, r3
 571 0136 FB68     		ldr	r3, [r7, #12]
 572 0138 1A85     		strh	r2, [r3, #40]
 684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 685:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 573              		.loc 1 685 0
 574 013a FB68     		ldr	r3, [r7, #12]
 575 013c 1B8D     		ldrh	r3, [r3, #40]
 576 013e 002B     		cmp	r3, #0
 577 0140 3BD1     		bne	.L22
 578              		.loc 1 685 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccqg4Whx.s 			page 23


 579 0142 FB68     		ldr	r3, [r7, #12]
 580 0144 5B8D     		ldrh	r3, [r3, #42]
 581 0146 9BB2     		uxth	r3, r3
 582 0148 002B     		cmp	r3, #0
 583 014a 36D0     		beq	.L22
 686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
 688:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 584              		.loc 1 688 0 is_stmt 1
 585 014c BA6A     		ldr	r2, [r7, #40]
 586 014e F868     		ldr	r0, [r7, #12]
 587 0150 7B69     		ldr	r3, [r7, #20]
 588 0152 0093     		str	r3, [sp]
 589 0154 1300     		movs	r3, r2
 590 0156 0022     		movs	r2, #0
 591 0158 8021     		movs	r1, #128
 592 015a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 593 015e 031E     		subs	r3, r0, #0
 594 0160 01D0     		beq	.L25
 689:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 595              		.loc 1 690 0
 596 0162 0323     		movs	r3, #3
 597 0164 59E0     		b	.L18
 598              	.L25:
 691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 692:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 693:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
 599              		.loc 1 693 0
 600 0166 FB68     		ldr	r3, [r7, #12]
 601 0168 5B8D     		ldrh	r3, [r3, #42]
 602 016a 9BB2     		uxth	r3, r3
 603 016c FF2B     		cmp	r3, #255
 604 016e 11D9     		bls	.L26
 694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 605              		.loc 1 695 0
 606 0170 FB68     		ldr	r3, [r7, #12]
 607 0172 FF22     		movs	r2, #255
 608 0174 1A85     		strh	r2, [r3, #40]
 696:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 609              		.loc 1 696 0
 610 0176 FB68     		ldr	r3, [r7, #12]
 611 0178 1B8D     		ldrh	r3, [r3, #40]
 612 017a DAB2     		uxtb	r2, r3
 613 017c 8023     		movs	r3, #128
 614 017e 5C04     		lsls	r4, r3, #17
 615 0180 0A23     		movs	r3, #10
 616 0182 FB18     		adds	r3, r7, r3
 617 0184 1988     		ldrh	r1, [r3]
 618 0186 F868     		ldr	r0, [r7, #12]
 619 0188 0023     		movs	r3, #0
 620 018a 0093     		str	r3, [sp]
 621 018c 2300     		movs	r3, r4
 622 018e FFF7FEFF 		bl	I2C_TransferConfig
 623 0192 12E0     		b	.L22
 624              	.L26:
ARM GAS  /tmp/ccqg4Whx.s 			page 24


 697:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 698:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
 699:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 625              		.loc 1 700 0
 626 0194 FB68     		ldr	r3, [r7, #12]
 627 0196 5B8D     		ldrh	r3, [r3, #42]
 628 0198 9AB2     		uxth	r2, r3
 629 019a FB68     		ldr	r3, [r7, #12]
 630 019c 1A85     		strh	r2, [r3, #40]
 701:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 631              		.loc 1 701 0
 632 019e FB68     		ldr	r3, [r7, #12]
 633 01a0 1B8D     		ldrh	r3, [r3, #40]
 634 01a2 DAB2     		uxtb	r2, r3
 635 01a4 8023     		movs	r3, #128
 636 01a6 9C04     		lsls	r4, r3, #18
 637 01a8 0A23     		movs	r3, #10
 638 01aa FB18     		adds	r3, r7, r3
 639 01ac 1988     		ldrh	r1, [r3]
 640 01ae F868     		ldr	r0, [r7, #12]
 641 01b0 0023     		movs	r3, #0
 642 01b2 0093     		str	r3, [sp]
 643 01b4 2300     		movs	r3, r4
 644 01b6 FFF7FEFF 		bl	I2C_TransferConfig
 645              	.L22:
 666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 646              		.loc 1 666 0
 647 01ba FB68     		ldr	r3, [r7, #12]
 648 01bc 5B8D     		ldrh	r3, [r3, #42]
 649 01be 9BB2     		uxth	r3, r3
 650 01c0 002B     		cmp	r3, #0
 651 01c2 94D1     		bne	.L27
 702:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 703:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 705:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 706:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
 707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
 708:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 652              		.loc 1 708 0
 653 01c4 7A69     		ldr	r2, [r7, #20]
 654 01c6 B96A     		ldr	r1, [r7, #40]
 655 01c8 FB68     		ldr	r3, [r7, #12]
 656 01ca 1800     		movs	r0, r3
 657 01cc FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 658 01d0 031E     		subs	r3, r0, #0
 659 01d2 07D0     		beq	.L28
 709:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 710:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 660              		.loc 1 710 0
 661 01d4 FB68     		ldr	r3, [r7, #12]
 662 01d6 5B6C     		ldr	r3, [r3, #68]
 663 01d8 042B     		cmp	r3, #4
 664 01da 01D1     		bne	.L29
 711:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 712:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
ARM GAS  /tmp/ccqg4Whx.s 			page 25


 665              		.loc 1 712 0
 666 01dc 0123     		movs	r3, #1
 667 01de 1CE0     		b	.L18
 668              	.L29:
 713:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 714:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
 715:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 716:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 669              		.loc 1 716 0
 670 01e0 0323     		movs	r3, #3
 671 01e2 1AE0     		b	.L18
 672              	.L28:
 717:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 719:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 720:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP Flag */
 721:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 673              		.loc 1 721 0
 674 01e4 FB68     		ldr	r3, [r7, #12]
 675 01e6 1B68     		ldr	r3, [r3]
 676 01e8 2022     		movs	r2, #32
 677 01ea DA61     		str	r2, [r3, #28]
 722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 723:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
 724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 678              		.loc 1 724 0
 679 01ec FB68     		ldr	r3, [r7, #12]
 680 01ee 1B68     		ldr	r3, [r3]
 681 01f0 5A68     		ldr	r2, [r3, #4]
 682 01f2 FB68     		ldr	r3, [r7, #12]
 683 01f4 1B68     		ldr	r3, [r3]
 684 01f6 0B49     		ldr	r1, .L30
 685 01f8 0A40     		ands	r2, r1
 686 01fa 5A60     		str	r2, [r3, #4]
 725:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 687              		.loc 1 726 0
 688 01fc FB68     		ldr	r3, [r7, #12]
 689 01fe 4122     		movs	r2, #65
 690 0200 2021     		movs	r1, #32
 691 0202 9954     		strb	r1, [r3, r2]
 727:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 692              		.loc 1 727 0
 693 0204 FB68     		ldr	r3, [r7, #12]
 694 0206 4222     		movs	r2, #66
 695 0208 0021     		movs	r1, #0
 696 020a 9954     		strb	r1, [r3, r2]
 728:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
 730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 697              		.loc 1 730 0
 698 020c FB68     		ldr	r3, [r7, #12]
 699 020e 4022     		movs	r2, #64
 700 0210 0021     		movs	r1, #0
 701 0212 9954     		strb	r1, [r3, r2]
 731:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 732:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
ARM GAS  /tmp/ccqg4Whx.s 			page 26


 702              		.loc 1 732 0
 703 0214 0023     		movs	r3, #0
 704 0216 00E0     		b	.L18
 705              	.L16:
 733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
 735:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 736:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 706              		.loc 1 736 0
 707 0218 0223     		movs	r3, #2
 708              	.L18:
 737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 709              		.loc 1 738 0
 710 021a 1800     		movs	r0, r3
 711 021c BD46     		mov	sp, r7
 712 021e 07B0     		add	sp, sp, #28
 713              		@ sp needed
 714 0220 90BD     		pop	{r4, r7, pc}
 715              	.L31:
 716 0222 C046     		.align	2
 717              	.L30:
 718 0224 00E800FE 		.word	-33495040
 719              		.cfi_endproc
 720              	.LFE41:
 722              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 723              		.align	1
 724              		.global	HAL_I2C_Master_Receive
 725              		.syntax unified
 726              		.code	16
 727              		.thumb_func
 728              		.fpu softvfp
 730              	HAL_I2C_Master_Receive:
 731              	.LFB42:
 739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 740:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
 742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 743:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 744:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
 745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
 746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
 750:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 751:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
 752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 732              		.loc 1 752 0
 733              		.cfi_startproc
 734              		@ args = 4, pretend = 0, frame = 24
 735              		@ frame_needed = 1, uses_anonymous_args = 0
 736 0000 90B5     		push	{r4, r7, lr}
 737              		.cfi_def_cfa_offset 12
 738              		.cfi_offset 4, -12
 739              		.cfi_offset 7, -8
 740              		.cfi_offset 14, -4
ARM GAS  /tmp/ccqg4Whx.s 			page 27


 741 0002 89B0     		sub	sp, sp, #36
 742              		.cfi_def_cfa_offset 48
 743 0004 02AF     		add	r7, sp, #8
 744              		.cfi_def_cfa 7, 40
 745 0006 F860     		str	r0, [r7, #12]
 746 0008 0800     		movs	r0, r1
 747 000a 7A60     		str	r2, [r7, #4]
 748 000c 1900     		movs	r1, r3
 749 000e 0A23     		movs	r3, #10
 750 0010 FB18     		adds	r3, r7, r3
 751 0012 021C     		adds	r2, r0, #0
 752 0014 1A80     		strh	r2, [r3]
 753 0016 0823     		movs	r3, #8
 754 0018 FB18     		adds	r3, r7, r3
 755 001a 0A1C     		adds	r2, r1, #0
 756 001c 1A80     		strh	r2, [r3]
 753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 757              		.loc 1 753 0
 758 001e 0023     		movs	r3, #0
 759 0020 7B61     		str	r3, [r7, #20]
 754:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 755:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 760              		.loc 1 755 0
 761 0022 FB68     		ldr	r3, [r7, #12]
 762 0024 4122     		movs	r2, #65
 763 0026 9B5C     		ldrb	r3, [r3, r2]
 764 0028 DBB2     		uxtb	r3, r3
 765 002a 202B     		cmp	r3, #32
 766 002c 00D0     		beq	.LCB657
 767 002e F4E0     		b	.L33	@long jump
 768              	.LCB657:
 756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 757:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
 758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 769              		.loc 1 758 0
 770 0030 FB68     		ldr	r3, [r7, #12]
 771 0032 4022     		movs	r2, #64
 772 0034 9B5C     		ldrb	r3, [r3, r2]
 773 0036 012B     		cmp	r3, #1
 774 0038 01D1     		bne	.L34
 775              		.loc 1 758 0 is_stmt 0 discriminator 1
 776 003a 0223     		movs	r3, #2
 777 003c EEE0     		b	.L35
 778              	.L34:
 779              		.loc 1 758 0 discriminator 2
 780 003e FB68     		ldr	r3, [r7, #12]
 781 0040 4022     		movs	r2, #64
 782 0042 0121     		movs	r1, #1
 783 0044 9954     		strb	r1, [r3, r2]
 759:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 761:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 784              		.loc 1 761 0 is_stmt 1 discriminator 2
 785 0046 FFF7FEFF 		bl	HAL_GetTick
 786 004a 0300     		movs	r3, r0
 787 004c 7B61     		str	r3, [r7, #20]
 762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 28


 763:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
 788              		.loc 1 763 0 discriminator 2
 789 004e 8023     		movs	r3, #128
 790 0050 1902     		lsls	r1, r3, #8
 791 0052 F868     		ldr	r0, [r7, #12]
 792 0054 7B69     		ldr	r3, [r7, #20]
 793 0056 0093     		str	r3, [sp]
 794 0058 1923     		movs	r3, #25
 795 005a 0122     		movs	r2, #1
 796 005c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 797 0060 031E     		subs	r3, r0, #0
 798 0062 01D0     		beq	.L36
 764:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 799              		.loc 1 765 0
 800 0064 0323     		movs	r3, #3
 801 0066 D9E0     		b	.L35
 802              	.L36:
 766:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 767:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 803              		.loc 1 768 0
 804 0068 FB68     		ldr	r3, [r7, #12]
 805 006a 4122     		movs	r2, #65
 806 006c 2221     		movs	r1, #34
 807 006e 9954     		strb	r1, [r3, r2]
 769:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 808              		.loc 1 769 0
 809 0070 FB68     		ldr	r3, [r7, #12]
 810 0072 4222     		movs	r2, #66
 811 0074 1021     		movs	r1, #16
 812 0076 9954     		strb	r1, [r3, r2]
 770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 813              		.loc 1 770 0
 814 0078 FB68     		ldr	r3, [r7, #12]
 815 007a 0022     		movs	r2, #0
 816 007c 5A64     		str	r2, [r3, #68]
 771:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 772:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
 773:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 817              		.loc 1 773 0
 818 007e FB68     		ldr	r3, [r7, #12]
 819 0080 7A68     		ldr	r2, [r7, #4]
 820 0082 5A62     		str	r2, [r3, #36]
 774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 821              		.loc 1 774 0
 822 0084 FB68     		ldr	r3, [r7, #12]
 823 0086 0822     		movs	r2, #8
 824 0088 BA18     		adds	r2, r7, r2
 825 008a 1288     		ldrh	r2, [r2]
 826 008c 5A85     		strh	r2, [r3, #42]
 775:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 827              		.loc 1 775 0
 828 008e FB68     		ldr	r3, [r7, #12]
 829 0090 0022     		movs	r2, #0
 830 0092 5A63     		str	r2, [r3, #52]
 776:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 29


 777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
 778:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
 779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 831              		.loc 1 779 0
 832 0094 FB68     		ldr	r3, [r7, #12]
 833 0096 5B8D     		ldrh	r3, [r3, #42]
 834 0098 9BB2     		uxth	r3, r3
 835 009a FF2B     		cmp	r3, #255
 836 009c 12D9     		bls	.L37
 780:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 781:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 837              		.loc 1 781 0
 838 009e FB68     		ldr	r3, [r7, #12]
 839 00a0 FF22     		movs	r2, #255
 840 00a2 1A85     		strh	r2, [r3, #40]
 782:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 841              		.loc 1 782 0
 842 00a4 FB68     		ldr	r3, [r7, #12]
 843 00a6 1B8D     		ldrh	r3, [r3, #40]
 844 00a8 DAB2     		uxtb	r2, r3
 845 00aa 8023     		movs	r3, #128
 846 00ac 5C04     		lsls	r4, r3, #17
 847 00ae 0A23     		movs	r3, #10
 848 00b0 FB18     		adds	r3, r7, r3
 849 00b2 1988     		ldrh	r1, [r3]
 850 00b4 F868     		ldr	r0, [r7, #12]
 851 00b6 9023     		movs	r3, #144
 852 00b8 9B01     		lsls	r3, r3, #6
 853 00ba 0093     		str	r3, [sp]
 854 00bc 2300     		movs	r3, r4
 855 00be FFF7FEFF 		bl	I2C_TransferConfig
 856 00c2 7BE0     		b	.L39
 857              	.L37:
 783:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
 785:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 786:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 858              		.loc 1 786 0
 859 00c4 FB68     		ldr	r3, [r7, #12]
 860 00c6 5B8D     		ldrh	r3, [r3, #42]
 861 00c8 9AB2     		uxth	r2, r3
 862 00ca FB68     		ldr	r3, [r7, #12]
 863 00cc 1A85     		strh	r2, [r3, #40]
 787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 864              		.loc 1 787 0
 865 00ce FB68     		ldr	r3, [r7, #12]
 866 00d0 1B8D     		ldrh	r3, [r3, #40]
 867 00d2 DAB2     		uxtb	r2, r3
 868 00d4 8023     		movs	r3, #128
 869 00d6 9C04     		lsls	r4, r3, #18
 870 00d8 0A23     		movs	r3, #10
 871 00da FB18     		adds	r3, r7, r3
 872 00dc 1988     		ldrh	r1, [r3]
 873 00de F868     		ldr	r0, [r7, #12]
 874 00e0 9023     		movs	r3, #144
 875 00e2 9B01     		lsls	r3, r3, #6
 876 00e4 0093     		str	r3, [sp]
ARM GAS  /tmp/ccqg4Whx.s 			page 30


 877 00e6 2300     		movs	r3, r4
 878 00e8 FFF7FEFF 		bl	I2C_TransferConfig
 788:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
 879              		.loc 1 790 0
 880 00ec 66E0     		b	.L39
 881              	.L44:
 791:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 792:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
 793:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 882              		.loc 1 793 0
 883 00ee 7A69     		ldr	r2, [r7, #20]
 884 00f0 B96A     		ldr	r1, [r7, #40]
 885 00f2 FB68     		ldr	r3, [r7, #12]
 886 00f4 1800     		movs	r0, r3
 887 00f6 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 888 00fa 031E     		subs	r3, r0, #0
 889 00fc 07D0     		beq	.L40
 794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 890              		.loc 1 795 0
 891 00fe FB68     		ldr	r3, [r7, #12]
 892 0100 5B6C     		ldr	r3, [r3, #68]
 893 0102 042B     		cmp	r3, #4
 894 0104 01D1     		bne	.L41
 796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
 895              		.loc 1 797 0
 896 0106 0123     		movs	r3, #1
 897 0108 88E0     		b	.L35
 898              	.L41:
 798:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
 800:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 801:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 899              		.loc 1 801 0
 900 010a 0323     		movs	r3, #3
 901 010c 86E0     		b	.L35
 902              	.L40:
 802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 803:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 804:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Read data from RXDR */
 806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 903              		.loc 1 806 0
 904 010e FB68     		ldr	r3, [r7, #12]
 905 0110 1B68     		ldr	r3, [r3]
 906 0112 586A     		ldr	r0, [r3, #36]
 907 0114 FB68     		ldr	r3, [r7, #12]
 908 0116 5B6A     		ldr	r3, [r3, #36]
 909 0118 591C     		adds	r1, r3, #1
 910 011a FA68     		ldr	r2, [r7, #12]
 911 011c 5162     		str	r1, [r2, #36]
 912 011e C2B2     		uxtb	r2, r0
 913 0120 1A70     		strb	r2, [r3]
 807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
ARM GAS  /tmp/ccqg4Whx.s 			page 31


 914              		.loc 1 807 0
 915 0122 FB68     		ldr	r3, [r7, #12]
 916 0124 1B8D     		ldrh	r3, [r3, #40]
 917 0126 013B     		subs	r3, r3, #1
 918 0128 9AB2     		uxth	r2, r3
 919 012a FB68     		ldr	r3, [r7, #12]
 920 012c 1A85     		strh	r2, [r3, #40]
 808:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 921              		.loc 1 808 0
 922 012e FB68     		ldr	r3, [r7, #12]
 923 0130 5B8D     		ldrh	r3, [r3, #42]
 924 0132 9BB2     		uxth	r3, r3
 925 0134 013B     		subs	r3, r3, #1
 926 0136 9AB2     		uxth	r2, r3
 927 0138 FB68     		ldr	r3, [r7, #12]
 928 013a 5A85     		strh	r2, [r3, #42]
 809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 810:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 929              		.loc 1 810 0
 930 013c FB68     		ldr	r3, [r7, #12]
 931 013e 1B8D     		ldrh	r3, [r3, #40]
 932 0140 002B     		cmp	r3, #0
 933 0142 3BD1     		bne	.L39
 934              		.loc 1 810 0 is_stmt 0 discriminator 1
 935 0144 FB68     		ldr	r3, [r7, #12]
 936 0146 5B8D     		ldrh	r3, [r3, #42]
 937 0148 9BB2     		uxth	r3, r3
 938 014a 002B     		cmp	r3, #0
 939 014c 36D0     		beq	.L39
 811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
 813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 940              		.loc 1 813 0 is_stmt 1
 941 014e BA6A     		ldr	r2, [r7, #40]
 942 0150 F868     		ldr	r0, [r7, #12]
 943 0152 7B69     		ldr	r3, [r7, #20]
 944 0154 0093     		str	r3, [sp]
 945 0156 1300     		movs	r3, r2
 946 0158 0022     		movs	r2, #0
 947 015a 8021     		movs	r1, #128
 948 015c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 949 0160 031E     		subs	r3, r0, #0
 950 0162 01D0     		beq	.L42
 814:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 951              		.loc 1 815 0
 952 0164 0323     		movs	r3, #3
 953 0166 59E0     		b	.L35
 954              	.L42:
 816:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
 955              		.loc 1 818 0
 956 0168 FB68     		ldr	r3, [r7, #12]
 957 016a 5B8D     		ldrh	r3, [r3, #42]
 958 016c 9BB2     		uxth	r3, r3
 959 016e FF2B     		cmp	r3, #255
ARM GAS  /tmp/ccqg4Whx.s 			page 32


 960 0170 11D9     		bls	.L43
 819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 820:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 961              		.loc 1 820 0
 962 0172 FB68     		ldr	r3, [r7, #12]
 963 0174 FF22     		movs	r2, #255
 964 0176 1A85     		strh	r2, [r3, #40]
 821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 965              		.loc 1 821 0
 966 0178 FB68     		ldr	r3, [r7, #12]
 967 017a 1B8D     		ldrh	r3, [r3, #40]
 968 017c DAB2     		uxtb	r2, r3
 969 017e 8023     		movs	r3, #128
 970 0180 5C04     		lsls	r4, r3, #17
 971 0182 0A23     		movs	r3, #10
 972 0184 FB18     		adds	r3, r7, r3
 973 0186 1988     		ldrh	r1, [r3]
 974 0188 F868     		ldr	r0, [r7, #12]
 975 018a 0023     		movs	r3, #0
 976 018c 0093     		str	r3, [sp]
 977 018e 2300     		movs	r3, r4
 978 0190 FFF7FEFF 		bl	I2C_TransferConfig
 979 0194 12E0     		b	.L39
 980              	.L43:
 822:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
 824:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 825:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 981              		.loc 1 825 0
 982 0196 FB68     		ldr	r3, [r7, #12]
 983 0198 5B8D     		ldrh	r3, [r3, #42]
 984 019a 9AB2     		uxth	r2, r3
 985 019c FB68     		ldr	r3, [r7, #12]
 986 019e 1A85     		strh	r2, [r3, #40]
 826:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 987              		.loc 1 826 0
 988 01a0 FB68     		ldr	r3, [r7, #12]
 989 01a2 1B8D     		ldrh	r3, [r3, #40]
 990 01a4 DAB2     		uxtb	r2, r3
 991 01a6 8023     		movs	r3, #128
 992 01a8 9C04     		lsls	r4, r3, #18
 993 01aa 0A23     		movs	r3, #10
 994 01ac FB18     		adds	r3, r7, r3
 995 01ae 1988     		ldrh	r1, [r3]
 996 01b0 F868     		ldr	r0, [r7, #12]
 997 01b2 0023     		movs	r3, #0
 998 01b4 0093     		str	r3, [sp]
 999 01b6 2300     		movs	r3, r4
 1000 01b8 FFF7FEFF 		bl	I2C_TransferConfig
 1001              	.L39:
 790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1002              		.loc 1 790 0
 1003 01bc FB68     		ldr	r3, [r7, #12]
 1004 01be 5B8D     		ldrh	r3, [r3, #42]
 1005 01c0 9BB2     		uxth	r3, r3
 1006 01c2 002B     		cmp	r3, #0
 1007 01c4 93D1     		bne	.L44
ARM GAS  /tmp/ccqg4Whx.s 			page 33


 827:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 829:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
 832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
 833:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1008              		.loc 1 833 0
 1009 01c6 7A69     		ldr	r2, [r7, #20]
 1010 01c8 B96A     		ldr	r1, [r7, #40]
 1011 01ca FB68     		ldr	r3, [r7, #12]
 1012 01cc 1800     		movs	r0, r3
 1013 01ce FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1014 01d2 031E     		subs	r3, r0, #0
 1015 01d4 07D0     		beq	.L45
 834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 835:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1016              		.loc 1 835 0
 1017 01d6 FB68     		ldr	r3, [r7, #12]
 1018 01d8 5B6C     		ldr	r3, [r3, #68]
 1019 01da 042B     		cmp	r3, #4
 1020 01dc 01D1     		bne	.L46
 836:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 837:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 1021              		.loc 1 837 0
 1022 01de 0123     		movs	r3, #1
 1023 01e0 1CE0     		b	.L35
 1024              	.L46:
 838:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 839:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
 840:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 1025              		.loc 1 841 0
 1026 01e2 0323     		movs	r3, #3
 1027 01e4 1AE0     		b	.L35
 1028              	.L45:
 842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP Flag */
 846:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 1029              		.loc 1 846 0
 1030 01e6 FB68     		ldr	r3, [r7, #12]
 1031 01e8 1B68     		ldr	r3, [r3]
 1032 01ea 2022     		movs	r2, #32
 1033 01ec DA61     		str	r2, [r3, #28]
 847:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 848:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
 849:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 1034              		.loc 1 849 0
 1035 01ee FB68     		ldr	r3, [r7, #12]
 1036 01f0 1B68     		ldr	r3, [r3]
 1037 01f2 5A68     		ldr	r2, [r3, #4]
 1038 01f4 FB68     		ldr	r3, [r7, #12]
 1039 01f6 1B68     		ldr	r3, [r3]
 1040 01f8 0A49     		ldr	r1, .L47
 1041 01fa 0A40     		ands	r2, r1
ARM GAS  /tmp/ccqg4Whx.s 			page 34


 1042 01fc 5A60     		str	r2, [r3, #4]
 850:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 1043              		.loc 1 851 0
 1044 01fe FB68     		ldr	r3, [r7, #12]
 1045 0200 4122     		movs	r2, #65
 1046 0202 2021     		movs	r1, #32
 1047 0204 9954     		strb	r1, [r3, r2]
 852:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1048              		.loc 1 852 0
 1049 0206 FB68     		ldr	r3, [r7, #12]
 1050 0208 4222     		movs	r2, #66
 1051 020a 0021     		movs	r1, #0
 1052 020c 9954     		strb	r1, [r3, r2]
 853:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 854:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
 855:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 1053              		.loc 1 855 0
 1054 020e FB68     		ldr	r3, [r7, #12]
 1055 0210 4022     		movs	r2, #64
 1056 0212 0021     		movs	r1, #0
 1057 0214 9954     		strb	r1, [r3, r2]
 856:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 857:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 1058              		.loc 1 857 0
 1059 0216 0023     		movs	r3, #0
 1060 0218 00E0     		b	.L35
 1061              	.L33:
 858:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 859:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
 860:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 861:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 1062              		.loc 1 861 0
 1063 021a 0223     		movs	r3, #2
 1064              	.L35:
 862:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 863:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1065              		.loc 1 863 0
 1066 021c 1800     		movs	r0, r3
 1067 021e BD46     		mov	sp, r7
 1068 0220 07B0     		add	sp, sp, #28
 1069              		@ sp needed
 1070 0222 90BD     		pop	{r4, r7, pc}
 1071              	.L48:
 1072              		.align	2
 1073              	.L47:
 1074 0224 00E800FE 		.word	-33495040
 1075              		.cfi_endproc
 1076              	.LFE42:
 1078              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 1079              		.align	1
 1080              		.global	HAL_I2C_Slave_Transmit
 1081              		.syntax unified
 1082              		.code	16
 1083              		.thumb_func
 1084              		.fpu softvfp
 1086              	HAL_I2C_Slave_Transmit:
ARM GAS  /tmp/ccqg4Whx.s 			page 35


 1087              	.LFB43:
 864:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 865:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
 866:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
 867:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 868:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 869:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 870:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 871:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 872:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
 873:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
 874:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
 875:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 1088              		.loc 1 875 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 24
 1091              		@ frame_needed = 1, uses_anonymous_args = 0
 1092 0000 80B5     		push	{r7, lr}
 1093              		.cfi_def_cfa_offset 8
 1094              		.cfi_offset 7, -8
 1095              		.cfi_offset 14, -4
 1096 0002 88B0     		sub	sp, sp, #32
 1097              		.cfi_def_cfa_offset 40
 1098 0004 02AF     		add	r7, sp, #8
 1099              		.cfi_def_cfa 7, 32
 1100 0006 F860     		str	r0, [r7, #12]
 1101 0008 B960     		str	r1, [r7, #8]
 1102 000a 3B60     		str	r3, [r7]
 1103 000c BB1D     		adds	r3, r7, #6
 1104 000e 1A80     		strh	r2, [r3]
 876:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 1105              		.loc 1 876 0
 1106 0010 0023     		movs	r3, #0
 1107 0012 7B61     		str	r3, [r7, #20]
 877:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 1108              		.loc 1 878 0
 1109 0014 FB68     		ldr	r3, [r7, #12]
 1110 0016 4122     		movs	r2, #65
 1111 0018 9B5C     		ldrb	r3, [r3, r2]
 1112 001a DBB2     		uxtb	r3, r3
 1113 001c 202B     		cmp	r3, #32
 1114 001e 00D0     		beq	.LCB978
 1115 0020 FEE0     		b	.L50	@long jump
 1116              	.LCB978:
 879:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 880:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 1117              		.loc 1 880 0
 1118 0022 BB68     		ldr	r3, [r7, #8]
 1119 0024 002B     		cmp	r3, #0
 1120 0026 03D0     		beq	.L51
 1121              		.loc 1 880 0 is_stmt 0 discriminator 1
 1122 0028 BB1D     		adds	r3, r7, #6
 1123 002a 1B88     		ldrh	r3, [r3]
 1124 002c 002B     		cmp	r3, #0
 1125 002e 01D1     		bne	.L52
 1126              	.L51:
ARM GAS  /tmp/ccqg4Whx.s 			page 36


 881:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 882:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 1127              		.loc 1 882 0 is_stmt 1
 1128 0030 0123     		movs	r3, #1
 1129 0032 F6E0     		b	.L53
 1130              	.L52:
 883:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 884:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
 885:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1131              		.loc 1 885 0
 1132 0034 FB68     		ldr	r3, [r7, #12]
 1133 0036 4022     		movs	r2, #64
 1134 0038 9B5C     		ldrb	r3, [r3, r2]
 1135 003a 012B     		cmp	r3, #1
 1136 003c 01D1     		bne	.L54
 1137              		.loc 1 885 0 is_stmt 0 discriminator 1
 1138 003e 0223     		movs	r3, #2
 1139 0040 EFE0     		b	.L53
 1140              	.L54:
 1141              		.loc 1 885 0 discriminator 2
 1142 0042 FB68     		ldr	r3, [r7, #12]
 1143 0044 4022     		movs	r2, #64
 1144 0046 0121     		movs	r1, #1
 1145 0048 9954     		strb	r1, [r3, r2]
 886:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 887:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 888:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 1146              		.loc 1 888 0 is_stmt 1 discriminator 2
 1147 004a FFF7FEFF 		bl	HAL_GetTick
 1148 004e 0300     		movs	r3, r0
 1149 0050 7B61     		str	r3, [r7, #20]
 889:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 890:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 1150              		.loc 1 890 0 discriminator 2
 1151 0052 FB68     		ldr	r3, [r7, #12]
 1152 0054 4122     		movs	r2, #65
 1153 0056 2121     		movs	r1, #33
 1154 0058 9954     		strb	r1, [r3, r2]
 891:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 1155              		.loc 1 891 0 discriminator 2
 1156 005a FB68     		ldr	r3, [r7, #12]
 1157 005c 4222     		movs	r2, #66
 1158 005e 2021     		movs	r1, #32
 1159 0060 9954     		strb	r1, [r3, r2]
 892:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1160              		.loc 1 892 0 discriminator 2
 1161 0062 FB68     		ldr	r3, [r7, #12]
 1162 0064 0022     		movs	r2, #0
 1163 0066 5A64     		str	r2, [r3, #68]
 893:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 894:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
 895:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 1164              		.loc 1 895 0 discriminator 2
 1165 0068 FB68     		ldr	r3, [r7, #12]
 1166 006a BA68     		ldr	r2, [r7, #8]
 1167 006c 5A62     		str	r2, [r3, #36]
 896:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
ARM GAS  /tmp/ccqg4Whx.s 			page 37


 1168              		.loc 1 896 0 discriminator 2
 1169 006e FB68     		ldr	r3, [r7, #12]
 1170 0070 BA1D     		adds	r2, r7, #6
 1171 0072 1288     		ldrh	r2, [r2]
 1172 0074 5A85     		strh	r2, [r3, #42]
 897:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1173              		.loc 1 897 0 discriminator 2
 1174 0076 FB68     		ldr	r3, [r7, #12]
 1175 0078 0022     		movs	r2, #0
 1176 007a 5A63     		str	r2, [r3, #52]
 898:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 899:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
 900:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 1177              		.loc 1 900 0 discriminator 2
 1178 007c FB68     		ldr	r3, [r7, #12]
 1179 007e 1B68     		ldr	r3, [r3]
 1180 0080 5A68     		ldr	r2, [r3, #4]
 1181 0082 FB68     		ldr	r3, [r7, #12]
 1182 0084 1B68     		ldr	r3, [r3]
 1183 0086 6949     		ldr	r1, .L66
 1184 0088 0A40     		ands	r2, r1
 1185 008a 5A60     		str	r2, [r3, #4]
 901:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 902:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
 903:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 1186              		.loc 1 903 0 discriminator 2
 1187 008c 3A68     		ldr	r2, [r7]
 1188 008e F868     		ldr	r0, [r7, #12]
 1189 0090 7B69     		ldr	r3, [r7, #20]
 1190 0092 0093     		str	r3, [sp]
 1191 0094 1300     		movs	r3, r2
 1192 0096 0022     		movs	r2, #0
 1193 0098 0821     		movs	r1, #8
 1194 009a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1195 009e 031E     		subs	r3, r0, #0
 1196 00a0 0AD0     		beq	.L55
 904:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 905:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 906:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1197              		.loc 1 906 0
 1198 00a2 FB68     		ldr	r3, [r7, #12]
 1199 00a4 1B68     		ldr	r3, [r3]
 1200 00a6 5A68     		ldr	r2, [r3, #4]
 1201 00a8 FB68     		ldr	r3, [r7, #12]
 1202 00aa 1B68     		ldr	r3, [r3]
 1203 00ac 8021     		movs	r1, #128
 1204 00ae 0902     		lsls	r1, r1, #8
 1205 00b0 0A43     		orrs	r2, r1
 1206 00b2 5A60     		str	r2, [r3, #4]
 907:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 1207              		.loc 1 907 0
 1208 00b4 0323     		movs	r3, #3
 1209 00b6 B4E0     		b	.L53
 1210              	.L55:
 908:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 909:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 910:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear ADDR flag */
ARM GAS  /tmp/ccqg4Whx.s 			page 38


 911:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 1211              		.loc 1 911 0
 1212 00b8 FB68     		ldr	r3, [r7, #12]
 1213 00ba 1B68     		ldr	r3, [r3]
 1214 00bc 0822     		movs	r2, #8
 1215 00be DA61     		str	r2, [r3, #28]
 912:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 913:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
 914:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 1216              		.loc 1 914 0
 1217 00c0 FB68     		ldr	r3, [r7, #12]
 1218 00c2 DB68     		ldr	r3, [r3, #12]
 1219 00c4 022B     		cmp	r3, #2
 1220 00c6 19D1     		bne	.L56
 915:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 916:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
 917:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 1221              		.loc 1 917 0
 1222 00c8 3A68     		ldr	r2, [r7]
 1223 00ca F868     		ldr	r0, [r7, #12]
 1224 00cc 7B69     		ldr	r3, [r7, #20]
 1225 00ce 0093     		str	r3, [sp]
 1226 00d0 1300     		movs	r3, r2
 1227 00d2 0022     		movs	r2, #0
 1228 00d4 0821     		movs	r1, #8
 1229 00d6 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1230 00da 031E     		subs	r3, r0, #0
 1231 00dc 0AD0     		beq	.L57
 918:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 919:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Disable Address Acknowledge */
 920:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1232              		.loc 1 920 0
 1233 00de FB68     		ldr	r3, [r7, #12]
 1234 00e0 1B68     		ldr	r3, [r3]
 1235 00e2 5A68     		ldr	r2, [r3, #4]
 1236 00e4 FB68     		ldr	r3, [r7, #12]
 1237 00e6 1B68     		ldr	r3, [r3]
 1238 00e8 8021     		movs	r1, #128
 1239 00ea 0902     		lsls	r1, r1, #8
 1240 00ec 0A43     		orrs	r2, r1
 1241 00ee 5A60     		str	r2, [r3, #4]
 921:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 1242              		.loc 1 921 0
 1243 00f0 0323     		movs	r3, #3
 1244 00f2 96E0     		b	.L53
 1245              	.L57:
 922:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 923:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 924:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear ADDR flag */
 925:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 1246              		.loc 1 925 0
 1247 00f4 FB68     		ldr	r3, [r7, #12]
 1248 00f6 1B68     		ldr	r3, [r3]
 1249 00f8 0822     		movs	r2, #8
 1250 00fa DA61     		str	r2, [r3, #28]
 1251              	.L56:
 926:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccqg4Whx.s 			page 39


 927:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 928:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
 929:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
 1252              		.loc 1 929 0
 1253 00fc 3A68     		ldr	r2, [r7]
 1254 00fe 8023     		movs	r3, #128
 1255 0100 5902     		lsls	r1, r3, #9
 1256 0102 F868     		ldr	r0, [r7, #12]
 1257 0104 7B69     		ldr	r3, [r7, #20]
 1258 0106 0093     		str	r3, [sp]
 1259 0108 1300     		movs	r3, r2
 1260 010a 0022     		movs	r2, #0
 1261 010c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1262 0110 031E     		subs	r3, r0, #0
 1263 0112 33D0     		beq	.L59
 930:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 931:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 932:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1264              		.loc 1 932 0
 1265 0114 FB68     		ldr	r3, [r7, #12]
 1266 0116 1B68     		ldr	r3, [r3]
 1267 0118 5A68     		ldr	r2, [r3, #4]
 1268 011a FB68     		ldr	r3, [r7, #12]
 1269 011c 1B68     		ldr	r3, [r3]
 1270 011e 8021     		movs	r1, #128
 1271 0120 0902     		lsls	r1, r1, #8
 1272 0122 0A43     		orrs	r2, r1
 1273 0124 5A60     		str	r2, [r3, #4]
 933:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 1274              		.loc 1 933 0
 1275 0126 0323     		movs	r3, #3
 1276 0128 7BE0     		b	.L53
 1277              	.L62:
 934:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 935:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 936:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
 937:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 938:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
 939:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1278              		.loc 1 939 0
 1279 012a 7A69     		ldr	r2, [r7, #20]
 1280 012c 3968     		ldr	r1, [r7]
 1281 012e FB68     		ldr	r3, [r7, #12]
 1282 0130 1800     		movs	r0, r3
 1283 0132 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1284 0136 031E     		subs	r3, r0, #0
 1285 0138 10D0     		beq	.L60
 940:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 941:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Disable Address Acknowledge */
 942:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1286              		.loc 1 942 0
 1287 013a FB68     		ldr	r3, [r7, #12]
 1288 013c 1B68     		ldr	r3, [r3]
 1289 013e 5A68     		ldr	r2, [r3, #4]
 1290 0140 FB68     		ldr	r3, [r7, #12]
 1291 0142 1B68     		ldr	r3, [r3]
 1292 0144 8021     		movs	r1, #128
ARM GAS  /tmp/ccqg4Whx.s 			page 40


 1293 0146 0902     		lsls	r1, r1, #8
 1294 0148 0A43     		orrs	r2, r1
 1295 014a 5A60     		str	r2, [r3, #4]
 943:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 944:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1296              		.loc 1 944 0
 1297 014c FB68     		ldr	r3, [r7, #12]
 1298 014e 5B6C     		ldr	r3, [r3, #68]
 1299 0150 042B     		cmp	r3, #4
 1300 0152 01D1     		bne	.L61
 945:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 946:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
 1301              		.loc 1 946 0
 1302 0154 0123     		movs	r3, #1
 1303 0156 64E0     		b	.L53
 1304              	.L61:
 947:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 948:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
 949:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
 950:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 1305              		.loc 1 950 0
 1306 0158 0323     		movs	r3, #3
 1307 015a 62E0     		b	.L53
 1308              	.L60:
 951:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
 952:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 953:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 954:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
 955:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 1309              		.loc 1 955 0
 1310 015c FB68     		ldr	r3, [r7, #12]
 1311 015e 5B6A     		ldr	r3, [r3, #36]
 1312 0160 591C     		adds	r1, r3, #1
 1313 0162 FA68     		ldr	r2, [r7, #12]
 1314 0164 5162     		str	r1, [r2, #36]
 1315 0166 1A78     		ldrb	r2, [r3]
 1316 0168 FB68     		ldr	r3, [r7, #12]
 1317 016a 1B68     		ldr	r3, [r3]
 1318 016c 9A62     		str	r2, [r3, #40]
 956:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 1319              		.loc 1 956 0
 1320 016e FB68     		ldr	r3, [r7, #12]
 1321 0170 5B8D     		ldrh	r3, [r3, #42]
 1322 0172 9BB2     		uxth	r3, r3
 1323 0174 013B     		subs	r3, r3, #1
 1324 0176 9AB2     		uxth	r2, r3
 1325 0178 FB68     		ldr	r3, [r7, #12]
 1326 017a 5A85     		strh	r2, [r3, #42]
 1327              	.L59:
 936:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1328              		.loc 1 936 0
 1329 017c FB68     		ldr	r3, [r7, #12]
 1330 017e 5B8D     		ldrh	r3, [r3, #42]
 1331 0180 9BB2     		uxth	r3, r3
 1332 0182 002B     		cmp	r3, #0
 1333 0184 D1D1     		bne	.L62
 957:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccqg4Whx.s 			page 41


 958:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 959:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOP flag is set */
 960:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1334              		.loc 1 960 0
 1335 0186 7A69     		ldr	r2, [r7, #20]
 1336 0188 3968     		ldr	r1, [r7]
 1337 018a FB68     		ldr	r3, [r7, #12]
 1338 018c 1800     		movs	r0, r3
 1339 018e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1340 0192 031E     		subs	r3, r0, #0
 1341 0194 12D0     		beq	.L63
 961:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 962:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 963:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1342              		.loc 1 963 0
 1343 0196 FB68     		ldr	r3, [r7, #12]
 1344 0198 1B68     		ldr	r3, [r3]
 1345 019a 5A68     		ldr	r2, [r3, #4]
 1346 019c FB68     		ldr	r3, [r7, #12]
 1347 019e 1B68     		ldr	r3, [r3]
 1348 01a0 8021     		movs	r1, #128
 1349 01a2 0902     		lsls	r1, r1, #8
 1350 01a4 0A43     		orrs	r2, r1
 1351 01a6 5A60     		str	r2, [r3, #4]
 964:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 965:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1352              		.loc 1 965 0
 1353 01a8 FB68     		ldr	r3, [r7, #12]
 1354 01aa 5B6C     		ldr	r3, [r3, #68]
 1355 01ac 042B     		cmp	r3, #4
 1356 01ae 03D1     		bne	.L64
 966:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 967:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Normal use case for Transmitter mode */
 968:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* A NACK is generated to confirm the end of transfer */
 969:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1357              		.loc 1 969 0
 1358 01b0 FB68     		ldr	r3, [r7, #12]
 1359 01b2 0022     		movs	r2, #0
 1360 01b4 5A64     		str	r2, [r3, #68]
 1361 01b6 01E0     		b	.L63
 1362              	.L64:
 970:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 971:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
 972:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 973:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 1363              		.loc 1 973 0
 1364 01b8 0323     		movs	r3, #3
 1365 01ba 32E0     		b	.L53
 1366              	.L63:
 974:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 975:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 976:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 977:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP flag */
 978:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 1367              		.loc 1 978 0
 1368 01bc FB68     		ldr	r3, [r7, #12]
 1369 01be 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccqg4Whx.s 			page 42


 1370 01c0 2022     		movs	r2, #32
 1371 01c2 DA61     		str	r2, [r3, #28]
 979:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 980:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
 981:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
 1372              		.loc 1 981 0
 1373 01c4 3A68     		ldr	r2, [r7]
 1374 01c6 8023     		movs	r3, #128
 1375 01c8 1902     		lsls	r1, r3, #8
 1376 01ca F868     		ldr	r0, [r7, #12]
 1377 01cc 7B69     		ldr	r3, [r7, #20]
 1378 01ce 0093     		str	r3, [sp]
 1379 01d0 1300     		movs	r3, r2
 1380 01d2 0122     		movs	r2, #1
 1381 01d4 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1382 01d8 031E     		subs	r3, r0, #0
 1383 01da 0AD0     		beq	.L65
 982:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 983:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 984:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1384              		.loc 1 984 0
 1385 01dc FB68     		ldr	r3, [r7, #12]
 1386 01de 1B68     		ldr	r3, [r3]
 1387 01e0 5A68     		ldr	r2, [r3, #4]
 1388 01e2 FB68     		ldr	r3, [r7, #12]
 1389 01e4 1B68     		ldr	r3, [r3]
 1390 01e6 8021     		movs	r1, #128
 1391 01e8 0902     		lsls	r1, r1, #8
 1392 01ea 0A43     		orrs	r2, r1
 1393 01ec 5A60     		str	r2, [r3, #4]
 985:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 1394              		.loc 1 985 0
 1395 01ee 0323     		movs	r3, #3
 1396 01f0 17E0     		b	.L53
 1397              	.L65:
 986:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 987:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 988:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Address Acknowledge */
 989:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1398              		.loc 1 989 0
 1399 01f2 FB68     		ldr	r3, [r7, #12]
 1400 01f4 1B68     		ldr	r3, [r3]
 1401 01f6 5A68     		ldr	r2, [r3, #4]
 1402 01f8 FB68     		ldr	r3, [r7, #12]
 1403 01fa 1B68     		ldr	r3, [r3]
 1404 01fc 8021     		movs	r1, #128
 1405 01fe 0902     		lsls	r1, r1, #8
 1406 0200 0A43     		orrs	r2, r1
 1407 0202 5A60     		str	r2, [r3, #4]
 990:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 991:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 1408              		.loc 1 991 0
 1409 0204 FB68     		ldr	r3, [r7, #12]
 1410 0206 4122     		movs	r2, #65
 1411 0208 2021     		movs	r1, #32
 1412 020a 9954     		strb	r1, [r3, r2]
 992:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
ARM GAS  /tmp/ccqg4Whx.s 			page 43


 1413              		.loc 1 992 0
 1414 020c FB68     		ldr	r3, [r7, #12]
 1415 020e 4222     		movs	r2, #66
 1416 0210 0021     		movs	r1, #0
 1417 0212 9954     		strb	r1, [r3, r2]
 993:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 994:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
 995:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 1418              		.loc 1 995 0
 1419 0214 FB68     		ldr	r3, [r7, #12]
 1420 0216 4022     		movs	r2, #64
 1421 0218 0021     		movs	r1, #0
 1422 021a 9954     		strb	r1, [r3, r2]
 996:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 997:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 1423              		.loc 1 997 0
 1424 021c 0023     		movs	r3, #0
 1425 021e 00E0     		b	.L53
 1426              	.L50:
 998:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 999:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1000:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1001:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 1427              		.loc 1 1001 0
 1428 0220 0223     		movs	r3, #2
 1429              	.L53:
1002:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1003:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1430              		.loc 1 1003 0
 1431 0222 1800     		movs	r0, r3
 1432 0224 BD46     		mov	sp, r7
 1433 0226 06B0     		add	sp, sp, #24
 1434              		@ sp needed
 1435 0228 80BD     		pop	{r7, pc}
 1436              	.L67:
 1437 022a C046     		.align	2
 1438              	.L66:
 1439 022c FF7FFFFF 		.word	-32769
 1440              		.cfi_endproc
 1441              	.LFE43:
 1443              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 1444              		.align	1
 1445              		.global	HAL_I2C_Slave_Receive
 1446              		.syntax unified
 1447              		.code	16
 1448              		.thumb_func
 1449              		.fpu softvfp
 1451              	HAL_I2C_Slave_Receive:
 1452              	.LFB44:
1004:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1005:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1006:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1007:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1008:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1009:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1010:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1011:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
ARM GAS  /tmp/ccqg4Whx.s 			page 44


1012:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1013:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1014:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1015:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 1453              		.loc 1 1015 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 24
 1456              		@ frame_needed = 1, uses_anonymous_args = 0
 1457 0000 80B5     		push	{r7, lr}
 1458              		.cfi_def_cfa_offset 8
 1459              		.cfi_offset 7, -8
 1460              		.cfi_offset 14, -4
 1461 0002 88B0     		sub	sp, sp, #32
 1462              		.cfi_def_cfa_offset 40
 1463 0004 02AF     		add	r7, sp, #8
 1464              		.cfi_def_cfa 7, 32
 1465 0006 F860     		str	r0, [r7, #12]
 1466 0008 B960     		str	r1, [r7, #8]
 1467 000a 3B60     		str	r3, [r7]
 1468 000c BB1D     		adds	r3, r7, #6
 1469 000e 1A80     		strh	r2, [r3]
1016:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 1470              		.loc 1 1016 0
 1471 0010 0023     		movs	r3, #0
 1472 0012 7B61     		str	r3, [r7, #20]
1017:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1018:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 1473              		.loc 1 1018 0
 1474 0014 FB68     		ldr	r3, [r7, #12]
 1475 0016 4122     		movs	r2, #65
 1476 0018 9B5C     		ldrb	r3, [r3, r2]
 1477 001a DBB2     		uxtb	r3, r3
 1478 001c 202B     		cmp	r3, #32
 1479 001e 00D0     		beq	.LCB1315
 1480 0020 F7E0     		b	.L69	@long jump
 1481              	.LCB1315:
1019:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1020:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 1482              		.loc 1 1020 0
 1483 0022 BB68     		ldr	r3, [r7, #8]
 1484 0024 002B     		cmp	r3, #0
 1485 0026 03D0     		beq	.L70
 1486              		.loc 1 1020 0 is_stmt 0 discriminator 1
 1487 0028 BB1D     		adds	r3, r7, #6
 1488 002a 1B88     		ldrh	r3, [r3]
 1489 002c 002B     		cmp	r3, #0
 1490 002e 01D1     		bne	.L71
 1491              	.L70:
1021:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1022:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 1492              		.loc 1 1022 0 is_stmt 1
 1493 0030 0123     		movs	r3, #1
 1494 0032 EFE0     		b	.L72
 1495              	.L71:
1023:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1024:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1025:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/ccqg4Whx.s 			page 45


 1496              		.loc 1 1025 0
 1497 0034 FB68     		ldr	r3, [r7, #12]
 1498 0036 4022     		movs	r2, #64
 1499 0038 9B5C     		ldrb	r3, [r3, r2]
 1500 003a 012B     		cmp	r3, #1
 1501 003c 01D1     		bne	.L73
 1502              		.loc 1 1025 0 is_stmt 0 discriminator 1
 1503 003e 0223     		movs	r3, #2
 1504 0040 E8E0     		b	.L72
 1505              	.L73:
 1506              		.loc 1 1025 0 discriminator 2
 1507 0042 FB68     		ldr	r3, [r7, #12]
 1508 0044 4022     		movs	r2, #64
 1509 0046 0121     		movs	r1, #1
 1510 0048 9954     		strb	r1, [r3, r2]
1026:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1027:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1028:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 1511              		.loc 1 1028 0 is_stmt 1 discriminator 2
 1512 004a FFF7FEFF 		bl	HAL_GetTick
 1513 004e 0300     		movs	r3, r0
 1514 0050 7B61     		str	r3, [r7, #20]
1029:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1030:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 1515              		.loc 1 1030 0 discriminator 2
 1516 0052 FB68     		ldr	r3, [r7, #12]
 1517 0054 4122     		movs	r2, #65
 1518 0056 2221     		movs	r1, #34
 1519 0058 9954     		strb	r1, [r3, r2]
1031:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 1520              		.loc 1 1031 0 discriminator 2
 1521 005a FB68     		ldr	r3, [r7, #12]
 1522 005c 4222     		movs	r2, #66
 1523 005e 2021     		movs	r1, #32
 1524 0060 9954     		strb	r1, [r3, r2]
1032:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1525              		.loc 1 1032 0 discriminator 2
 1526 0062 FB68     		ldr	r3, [r7, #12]
 1527 0064 0022     		movs	r2, #0
 1528 0066 5A64     		str	r2, [r3, #68]
1033:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1034:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1035:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 1529              		.loc 1 1035 0 discriminator 2
 1530 0068 FB68     		ldr	r3, [r7, #12]
 1531 006a BA68     		ldr	r2, [r7, #8]
 1532 006c 5A62     		str	r2, [r3, #36]
1036:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1533              		.loc 1 1036 0 discriminator 2
 1534 006e FB68     		ldr	r3, [r7, #12]
 1535 0070 BA1D     		adds	r2, r7, #6
 1536 0072 1288     		ldrh	r2, [r2]
 1537 0074 5A85     		strh	r2, [r3, #42]
1037:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1538              		.loc 1 1037 0 discriminator 2
 1539 0076 FB68     		ldr	r3, [r7, #12]
 1540 0078 0022     		movs	r2, #0
ARM GAS  /tmp/ccqg4Whx.s 			page 46


 1541 007a 5A63     		str	r2, [r3, #52]
1038:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1039:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1040:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 1542              		.loc 1 1040 0 discriminator 2
 1543 007c FB68     		ldr	r3, [r7, #12]
 1544 007e 1B68     		ldr	r3, [r3]
 1545 0080 5A68     		ldr	r2, [r3, #4]
 1546 0082 FB68     		ldr	r3, [r7, #12]
 1547 0084 1B68     		ldr	r3, [r3]
 1548 0086 6549     		ldr	r1, .L84
 1549 0088 0A40     		ands	r2, r1
 1550 008a 5A60     		str	r2, [r3, #4]
1041:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1042:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1043:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 1551              		.loc 1 1043 0 discriminator 2
 1552 008c 3A68     		ldr	r2, [r7]
 1553 008e F868     		ldr	r0, [r7, #12]
 1554 0090 7B69     		ldr	r3, [r7, #20]
 1555 0092 0093     		str	r3, [sp]
 1556 0094 1300     		movs	r3, r2
 1557 0096 0022     		movs	r2, #0
 1558 0098 0821     		movs	r1, #8
 1559 009a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1560 009e 031E     		subs	r3, r0, #0
 1561 00a0 0AD0     		beq	.L74
1044:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1045:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1046:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1562              		.loc 1 1046 0
 1563 00a2 FB68     		ldr	r3, [r7, #12]
 1564 00a4 1B68     		ldr	r3, [r3]
 1565 00a6 5A68     		ldr	r2, [r3, #4]
 1566 00a8 FB68     		ldr	r3, [r7, #12]
 1567 00aa 1B68     		ldr	r3, [r3]
 1568 00ac 8021     		movs	r1, #128
 1569 00ae 0902     		lsls	r1, r1, #8
 1570 00b0 0A43     		orrs	r2, r1
 1571 00b2 5A60     		str	r2, [r3, #4]
1047:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 1572              		.loc 1 1047 0
 1573 00b4 0323     		movs	r3, #3
 1574 00b6 ADE0     		b	.L72
 1575              	.L74:
1048:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1049:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1050:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear ADDR flag */
1051:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 1576              		.loc 1 1051 0
 1577 00b8 FB68     		ldr	r3, [r7, #12]
 1578 00ba 1B68     		ldr	r3, [r3]
 1579 00bc 0822     		movs	r2, #8
 1580 00be DA61     		str	r2, [r3, #28]
1052:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1053:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1054:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/ccqg4Whx.s 			page 47


 1581              		.loc 1 1054 0
 1582 00c0 3A68     		ldr	r2, [r7]
 1583 00c2 8023     		movs	r3, #128
 1584 00c4 5902     		lsls	r1, r3, #9
 1585 00c6 F868     		ldr	r0, [r7, #12]
 1586 00c8 7B69     		ldr	r3, [r7, #20]
 1587 00ca 0093     		str	r3, [sp]
 1588 00cc 1300     		movs	r3, r2
 1589 00ce 0122     		movs	r2, #1
 1590 00d0 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1591 00d4 031E     		subs	r3, r0, #0
 1592 00d6 4CD0     		beq	.L76
1055:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1056:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1057:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1593              		.loc 1 1057 0
 1594 00d8 FB68     		ldr	r3, [r7, #12]
 1595 00da 1B68     		ldr	r3, [r3]
 1596 00dc 5A68     		ldr	r2, [r3, #4]
 1597 00de FB68     		ldr	r3, [r7, #12]
 1598 00e0 1B68     		ldr	r3, [r3]
 1599 00e2 8021     		movs	r1, #128
 1600 00e4 0902     		lsls	r1, r1, #8
 1601 00e6 0A43     		orrs	r2, r1
 1602 00e8 5A60     		str	r2, [r3, #4]
1058:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 1603              		.loc 1 1058 0
 1604 00ea 0323     		movs	r3, #3
 1605 00ec 92E0     		b	.L72
 1606              	.L80:
1059:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1060:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1061:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1062:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1063:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1064:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1607              		.loc 1 1064 0
 1608 00ee 7A69     		ldr	r2, [r7, #20]
 1609 00f0 3968     		ldr	r1, [r7]
 1610 00f2 FB68     		ldr	r3, [r7, #12]
 1611 00f4 1800     		movs	r0, r3
 1612 00f6 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1613 00fa 031E     		subs	r3, r0, #0
 1614 00fc 28D0     		beq	.L77
1065:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1066:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1067:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1615              		.loc 1 1067 0
 1616 00fe FB68     		ldr	r3, [r7, #12]
 1617 0100 1B68     		ldr	r3, [r3]
 1618 0102 5A68     		ldr	r2, [r3, #4]
 1619 0104 FB68     		ldr	r3, [r7, #12]
 1620 0106 1B68     		ldr	r3, [r3]
 1621 0108 8021     		movs	r1, #128
 1622 010a 0902     		lsls	r1, r1, #8
 1623 010c 0A43     		orrs	r2, r1
 1624 010e 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccqg4Whx.s 			page 48


1068:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1069:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Store Last receive data if any */
1070:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 1625              		.loc 1 1070 0
 1626 0110 FB68     		ldr	r3, [r7, #12]
 1627 0112 1B68     		ldr	r3, [r3]
 1628 0114 9B69     		ldr	r3, [r3, #24]
 1629 0116 0422     		movs	r2, #4
 1630 0118 1340     		ands	r3, r2
 1631 011a 042B     		cmp	r3, #4
 1632 011c 10D1     		bne	.L78
1071:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1072:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Read data from RXDR */
1073:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 1633              		.loc 1 1073 0
 1634 011e FB68     		ldr	r3, [r7, #12]
 1635 0120 1B68     		ldr	r3, [r3]
 1636 0122 586A     		ldr	r0, [r3, #36]
 1637 0124 FB68     		ldr	r3, [r7, #12]
 1638 0126 5B6A     		ldr	r3, [r3, #36]
 1639 0128 591C     		adds	r1, r3, #1
 1640 012a FA68     		ldr	r2, [r7, #12]
 1641 012c 5162     		str	r1, [r2, #36]
 1642 012e C2B2     		uxtb	r2, r0
 1643 0130 1A70     		strb	r2, [r3]
1074:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferCount--;
 1644              		.loc 1 1074 0
 1645 0132 FB68     		ldr	r3, [r7, #12]
 1646 0134 5B8D     		ldrh	r3, [r3, #42]
 1647 0136 9BB2     		uxth	r3, r3
 1648 0138 013B     		subs	r3, r3, #1
 1649 013a 9AB2     		uxth	r2, r3
 1650 013c FB68     		ldr	r3, [r7, #12]
 1651 013e 5A85     		strh	r2, [r3, #42]
 1652              	.L78:
1075:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1076:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1077:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_TIMEOUT)
 1653              		.loc 1 1077 0
 1654 0140 FB68     		ldr	r3, [r7, #12]
 1655 0142 5B6C     		ldr	r3, [r3, #68]
 1656 0144 202B     		cmp	r3, #32
 1657 0146 01D1     		bne	.L79
1078:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1079:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 1658              		.loc 1 1079 0
 1659 0148 0323     		movs	r3, #3
 1660 014a 63E0     		b	.L72
 1661              	.L79:
1080:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1081:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
1082:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1083:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
 1662              		.loc 1 1083 0
 1663 014c 0123     		movs	r3, #1
 1664 014e 61E0     		b	.L72
 1665              	.L77:
ARM GAS  /tmp/ccqg4Whx.s 			page 49


1084:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1085:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1086:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1087:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Read data from RXDR */
1088:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 1666              		.loc 1 1088 0
 1667 0150 FB68     		ldr	r3, [r7, #12]
 1668 0152 1B68     		ldr	r3, [r3]
 1669 0154 586A     		ldr	r0, [r3, #36]
 1670 0156 FB68     		ldr	r3, [r7, #12]
 1671 0158 5B6A     		ldr	r3, [r3, #36]
 1672 015a 591C     		adds	r1, r3, #1
 1673 015c FA68     		ldr	r2, [r7, #12]
 1674 015e 5162     		str	r1, [r2, #36]
 1675 0160 C2B2     		uxtb	r2, r0
 1676 0162 1A70     		strb	r2, [r3]
1089:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 1677              		.loc 1 1089 0
 1678 0164 FB68     		ldr	r3, [r7, #12]
 1679 0166 5B8D     		ldrh	r3, [r3, #42]
 1680 0168 9BB2     		uxth	r3, r3
 1681 016a 013B     		subs	r3, r3, #1
 1682 016c 9AB2     		uxth	r2, r3
 1683 016e FB68     		ldr	r3, [r7, #12]
 1684 0170 5A85     		strh	r2, [r3, #42]
 1685              	.L76:
1061:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 1686              		.loc 1 1061 0
 1687 0172 FB68     		ldr	r3, [r7, #12]
 1688 0174 5B8D     		ldrh	r3, [r3, #42]
 1689 0176 9BB2     		uxth	r3, r3
 1690 0178 002B     		cmp	r3, #0
 1691 017a B8D1     		bne	.L80
1090:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1091:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1092:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1093:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1692              		.loc 1 1093 0
 1693 017c 7A69     		ldr	r2, [r7, #20]
 1694 017e 3968     		ldr	r1, [r7]
 1695 0180 FB68     		ldr	r3, [r7, #12]
 1696 0182 1800     		movs	r0, r3
 1697 0184 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1698 0188 031E     		subs	r3, r0, #0
 1699 018a 10D0     		beq	.L81
1094:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1095:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1096:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1700              		.loc 1 1096 0
 1701 018c FB68     		ldr	r3, [r7, #12]
 1702 018e 1B68     		ldr	r3, [r3]
 1703 0190 5A68     		ldr	r2, [r3, #4]
 1704 0192 FB68     		ldr	r3, [r7, #12]
 1705 0194 1B68     		ldr	r3, [r3]
 1706 0196 8021     		movs	r1, #128
 1707 0198 0902     		lsls	r1, r1, #8
 1708 019a 0A43     		orrs	r2, r1
ARM GAS  /tmp/ccqg4Whx.s 			page 50


 1709 019c 5A60     		str	r2, [r3, #4]
1097:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1098:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1710              		.loc 1 1098 0
 1711 019e FB68     		ldr	r3, [r7, #12]
 1712 01a0 5B6C     		ldr	r3, [r3, #68]
 1713 01a2 042B     		cmp	r3, #4
 1714 01a4 01D1     		bne	.L82
1099:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 1715              		.loc 1 1100 0
 1716 01a6 0123     		movs	r3, #1
 1717 01a8 34E0     		b	.L72
 1718              	.L82:
1101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
1103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 1719              		.loc 1 1104 0
 1720 01aa 0323     		movs	r3, #3
 1721 01ac 32E0     		b	.L72
 1722              	.L81:
1105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP flag */
1109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 1723              		.loc 1 1109 0
 1724 01ae FB68     		ldr	r3, [r7, #12]
 1725 01b0 1B68     		ldr	r3, [r3]
 1726 01b2 2022     		movs	r2, #32
 1727 01b4 DA61     		str	r2, [r3, #28]
1110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
 1728              		.loc 1 1112 0
 1729 01b6 3A68     		ldr	r2, [r7]
 1730 01b8 8023     		movs	r3, #128
 1731 01ba 1902     		lsls	r1, r3, #8
 1732 01bc F868     		ldr	r0, [r7, #12]
 1733 01be 7B69     		ldr	r3, [r7, #20]
 1734 01c0 0093     		str	r3, [sp]
 1735 01c2 1300     		movs	r3, r2
 1736 01c4 0122     		movs	r2, #1
 1737 01c6 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1738 01ca 031E     		subs	r3, r0, #0
 1739 01cc 0AD0     		beq	.L83
1113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1740              		.loc 1 1115 0
 1741 01ce FB68     		ldr	r3, [r7, #12]
 1742 01d0 1B68     		ldr	r3, [r3]
 1743 01d2 5A68     		ldr	r2, [r3, #4]
 1744 01d4 FB68     		ldr	r3, [r7, #12]
 1745 01d6 1B68     		ldr	r3, [r3]
 1746 01d8 8021     		movs	r1, #128
ARM GAS  /tmp/ccqg4Whx.s 			page 51


 1747 01da 0902     		lsls	r1, r1, #8
 1748 01dc 0A43     		orrs	r2, r1
 1749 01de 5A60     		str	r2, [r3, #4]
1116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 1750              		.loc 1 1116 0
 1751 01e0 0323     		movs	r3, #3
 1752 01e2 17E0     		b	.L72
 1753              	.L83:
1117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
 1754              		.loc 1 1120 0
 1755 01e4 FB68     		ldr	r3, [r7, #12]
 1756 01e6 1B68     		ldr	r3, [r3]
 1757 01e8 5A68     		ldr	r2, [r3, #4]
 1758 01ea FB68     		ldr	r3, [r7, #12]
 1759 01ec 1B68     		ldr	r3, [r3]
 1760 01ee 8021     		movs	r1, #128
 1761 01f0 0902     		lsls	r1, r1, #8
 1762 01f2 0A43     		orrs	r2, r1
 1763 01f4 5A60     		str	r2, [r3, #4]
1121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 1764              		.loc 1 1122 0
 1765 01f6 FB68     		ldr	r3, [r7, #12]
 1766 01f8 4122     		movs	r2, #65
 1767 01fa 2021     		movs	r1, #32
 1768 01fc 9954     		strb	r1, [r3, r2]
1123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1769              		.loc 1 1123 0
 1770 01fe FB68     		ldr	r3, [r7, #12]
 1771 0200 4222     		movs	r2, #66
 1772 0202 0021     		movs	r1, #0
 1773 0204 9954     		strb	r1, [r3, r2]
1124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 1774              		.loc 1 1126 0
 1775 0206 FB68     		ldr	r3, [r7, #12]
 1776 0208 4022     		movs	r2, #64
 1777 020a 0021     		movs	r1, #0
 1778 020c 9954     		strb	r1, [r3, r2]
1127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 1779              		.loc 1 1128 0
 1780 020e 0023     		movs	r3, #0
 1781 0210 00E0     		b	.L72
 1782              	.L69:
1129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 1783              		.loc 1 1132 0
 1784 0212 0223     		movs	r3, #2
 1785              	.L72:
1133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccqg4Whx.s 			page 52


1134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1786              		.loc 1 1134 0
 1787 0214 1800     		movs	r0, r3
 1788 0216 BD46     		mov	sp, r7
 1789 0218 06B0     		add	sp, sp, #24
 1790              		@ sp needed
 1791 021a 80BD     		pop	{r7, pc}
 1792              	.L85:
 1793              		.align	2
 1794              	.L84:
 1795 021c FF7FFFFF 		.word	-32769
 1796              		.cfi_endproc
 1797              	.LFE44:
 1799              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 1800              		.align	1
 1801              		.global	HAL_I2C_Master_Transmit_IT
 1802              		.syntax unified
 1803              		.code	16
 1804              		.thumb_func
 1805              		.fpu softvfp
 1807              	HAL_I2C_Master_Transmit_IT:
 1808              	.LFB45:
1135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 1809              		.loc 1 1147 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 24
 1812              		@ frame_needed = 1, uses_anonymous_args = 0
 1813 0000 90B5     		push	{r4, r7, lr}
 1814              		.cfi_def_cfa_offset 12
 1815              		.cfi_offset 4, -12
 1816              		.cfi_offset 7, -8
 1817              		.cfi_offset 14, -4
 1818 0002 89B0     		sub	sp, sp, #36
 1819              		.cfi_def_cfa_offset 48
 1820 0004 02AF     		add	r7, sp, #8
 1821              		.cfi_def_cfa 7, 40
 1822 0006 F860     		str	r0, [r7, #12]
 1823 0008 0800     		movs	r0, r1
 1824 000a 7A60     		str	r2, [r7, #4]
 1825 000c 1900     		movs	r1, r3
 1826 000e 0A23     		movs	r3, #10
 1827 0010 FB18     		adds	r3, r7, r3
 1828 0012 021C     		adds	r2, r0, #0
 1829 0014 1A80     		strh	r2, [r3]
 1830 0016 0823     		movs	r3, #8
ARM GAS  /tmp/ccqg4Whx.s 			page 53


 1831 0018 FB18     		adds	r3, r7, r3
 1832 001a 0A1C     		adds	r2, r1, #0
 1833 001c 1A80     		strh	r2, [r3]
1148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 1834              		.loc 1 1148 0
 1835 001e 0023     		movs	r3, #0
 1836 0020 7B61     		str	r3, [r7, #20]
1149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 1837              		.loc 1 1150 0
 1838 0022 FB68     		ldr	r3, [r7, #12]
 1839 0024 4122     		movs	r2, #65
 1840 0026 9B5C     		ldrb	r3, [r3, r2]
 1841 0028 DBB2     		uxtb	r3, r3
 1842 002a 202B     		cmp	r3, #32
 1843 002c 5CD1     		bne	.L87
1151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 1844              		.loc 1 1152 0
 1845 002e FB68     		ldr	r3, [r7, #12]
 1846 0030 1B68     		ldr	r3, [r3]
 1847 0032 9A69     		ldr	r2, [r3, #24]
 1848 0034 8023     		movs	r3, #128
 1849 0036 1B02     		lsls	r3, r3, #8
 1850 0038 1A40     		ands	r2, r3
 1851 003a 8023     		movs	r3, #128
 1852 003c 1B02     		lsls	r3, r3, #8
 1853 003e 9A42     		cmp	r2, r3
 1854 0040 01D1     		bne	.L88
1153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
 1855              		.loc 1 1154 0
 1856 0042 0223     		movs	r3, #2
 1857 0044 51E0     		b	.L89
 1858              	.L88:
1155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1859              		.loc 1 1158 0
 1860 0046 FB68     		ldr	r3, [r7, #12]
 1861 0048 4022     		movs	r2, #64
 1862 004a 9B5C     		ldrb	r3, [r3, r2]
 1863 004c 012B     		cmp	r3, #1
 1864 004e 01D1     		bne	.L90
 1865              		.loc 1 1158 0 is_stmt 0 discriminator 1
 1866 0050 0223     		movs	r3, #2
 1867 0052 4AE0     		b	.L89
 1868              	.L90:
 1869              		.loc 1 1158 0 discriminator 2
 1870 0054 FB68     		ldr	r3, [r7, #12]
 1871 0056 4022     		movs	r2, #64
 1872 0058 0121     		movs	r1, #1
 1873 005a 9954     		strb	r1, [r3, r2]
1159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 1874              		.loc 1 1160 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccqg4Whx.s 			page 54


 1875 005c FB68     		ldr	r3, [r7, #12]
 1876 005e 4122     		movs	r2, #65
 1877 0060 2121     		movs	r1, #33
 1878 0062 9954     		strb	r1, [r3, r2]
1161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 1879              		.loc 1 1161 0 discriminator 2
 1880 0064 FB68     		ldr	r3, [r7, #12]
 1881 0066 4222     		movs	r2, #66
 1882 0068 1021     		movs	r1, #16
 1883 006a 9954     		strb	r1, [r3, r2]
1162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 1884              		.loc 1 1162 0 discriminator 2
 1885 006c FB68     		ldr	r3, [r7, #12]
 1886 006e 0022     		movs	r2, #0
 1887 0070 5A64     		str	r2, [r3, #68]
1163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 1888              		.loc 1 1165 0 discriminator 2
 1889 0072 FB68     		ldr	r3, [r7, #12]
 1890 0074 7A68     		ldr	r2, [r7, #4]
 1891 0076 5A62     		str	r2, [r3, #36]
1166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 1892              		.loc 1 1166 0 discriminator 2
 1893 0078 FB68     		ldr	r3, [r7, #12]
 1894 007a 0822     		movs	r2, #8
 1895 007c BA18     		adds	r2, r7, r2
 1896 007e 1288     		ldrh	r2, [r2]
 1897 0080 5A85     		strh	r2, [r3, #42]
1167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 1898              		.loc 1 1167 0 discriminator 2
 1899 0082 FB68     		ldr	r3, [r7, #12]
 1900 0084 1B4A     		ldr	r2, .L93
 1901 0086 DA62     		str	r2, [r3, #44]
1168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 1902              		.loc 1 1168 0 discriminator 2
 1903 0088 FB68     		ldr	r3, [r7, #12]
 1904 008a 1B4A     		ldr	r2, .L93+4
 1905 008c 5A63     		str	r2, [r3, #52]
1169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 1906              		.loc 1 1170 0 discriminator 2
 1907 008e FB68     		ldr	r3, [r7, #12]
 1908 0090 5B8D     		ldrh	r3, [r3, #42]
 1909 0092 9BB2     		uxth	r3, r3
 1910 0094 FF2B     		cmp	r3, #255
 1911 0096 06D9     		bls	.L91
1171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 1912              		.loc 1 1172 0
 1913 0098 FB68     		ldr	r3, [r7, #12]
 1914 009a FF22     		movs	r2, #255
 1915 009c 1A85     		strh	r2, [r3, #40]
1173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 1916              		.loc 1 1173 0
 1917 009e 8023     		movs	r3, #128
 1918 00a0 5B04     		lsls	r3, r3, #17
ARM GAS  /tmp/ccqg4Whx.s 			page 55


 1919 00a2 7B61     		str	r3, [r7, #20]
 1920 00a4 07E0     		b	.L92
 1921              	.L91:
1174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 1922              		.loc 1 1177 0
 1923 00a6 FB68     		ldr	r3, [r7, #12]
 1924 00a8 5B8D     		ldrh	r3, [r3, #42]
 1925 00aa 9AB2     		uxth	r2, r3
 1926 00ac FB68     		ldr	r3, [r7, #12]
 1927 00ae 1A85     		strh	r2, [r3, #40]
1178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 1928              		.loc 1 1178 0
 1929 00b0 8023     		movs	r3, #128
 1930 00b2 9B04     		lsls	r3, r3, #18
 1931 00b4 7B61     		str	r3, [r7, #20]
 1932              	.L92:
1179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
1182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
 1933              		.loc 1 1183 0
 1934 00b6 FB68     		ldr	r3, [r7, #12]
 1935 00b8 1B8D     		ldrh	r3, [r3, #40]
 1936 00ba DAB2     		uxtb	r2, r3
 1937 00bc 7C69     		ldr	r4, [r7, #20]
 1938 00be 0A23     		movs	r3, #10
 1939 00c0 FB18     		adds	r3, r7, r3
 1940 00c2 1988     		ldrh	r1, [r3]
 1941 00c4 F868     		ldr	r0, [r7, #12]
 1942 00c6 8023     		movs	r3, #128
 1943 00c8 9B01     		lsls	r3, r3, #6
 1944 00ca 0093     		str	r3, [sp]
 1945 00cc 2300     		movs	r3, r4
 1946 00ce FFF7FEFF 		bl	I2C_TransferConfig
1184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 1947              		.loc 1 1186 0
 1948 00d2 FB68     		ldr	r3, [r7, #12]
 1949 00d4 4022     		movs	r2, #64
 1950 00d6 0021     		movs	r1, #0
 1951 00d8 9954     		strb	r1, [r3, r2]
1187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
1191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
1194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 1952              		.loc 1 1195 0
 1953 00da FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 56


 1954 00dc 0121     		movs	r1, #1
 1955 00de 1800     		movs	r0, r3
 1956 00e0 FFF7FEFF 		bl	I2C_Enable_IRQ
1196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 1957              		.loc 1 1197 0
 1958 00e4 0023     		movs	r3, #0
 1959 00e6 00E0     		b	.L89
 1960              	.L87:
1198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 1961              		.loc 1 1201 0
 1962 00e8 0223     		movs	r3, #2
 1963              	.L89:
1202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 1964              		.loc 1 1203 0
 1965 00ea 1800     		movs	r0, r3
 1966 00ec BD46     		mov	sp, r7
 1967 00ee 07B0     		add	sp, sp, #28
 1968              		@ sp needed
 1969 00f0 90BD     		pop	{r4, r7, pc}
 1970              	.L94:
 1971 00f2 C046     		.align	2
 1972              	.L93:
 1973 00f4 0000FFFF 		.word	-65536
 1974 00f8 00000000 		.word	I2C_Master_ISR_IT
 1975              		.cfi_endproc
 1976              	.LFE45:
 1978              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 1979              		.align	1
 1980              		.global	HAL_I2C_Master_Receive_IT
 1981              		.syntax unified
 1982              		.code	16
 1983              		.thumb_func
 1984              		.fpu softvfp
 1986              	HAL_I2C_Master_Receive_IT:
 1987              	.LFB46:
1204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 1988              		.loc 1 1216 0
 1989              		.cfi_startproc
 1990              		@ args = 0, pretend = 0, frame = 24
 1991              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccqg4Whx.s 			page 57


 1992 0000 90B5     		push	{r4, r7, lr}
 1993              		.cfi_def_cfa_offset 12
 1994              		.cfi_offset 4, -12
 1995              		.cfi_offset 7, -8
 1996              		.cfi_offset 14, -4
 1997 0002 89B0     		sub	sp, sp, #36
 1998              		.cfi_def_cfa_offset 48
 1999 0004 02AF     		add	r7, sp, #8
 2000              		.cfi_def_cfa 7, 40
 2001 0006 F860     		str	r0, [r7, #12]
 2002 0008 0800     		movs	r0, r1
 2003 000a 7A60     		str	r2, [r7, #4]
 2004 000c 1900     		movs	r1, r3
 2005 000e 0A23     		movs	r3, #10
 2006 0010 FB18     		adds	r3, r7, r3
 2007 0012 021C     		adds	r2, r0, #0
 2008 0014 1A80     		strh	r2, [r3]
 2009 0016 0823     		movs	r3, #8
 2010 0018 FB18     		adds	r3, r7, r3
 2011 001a 0A1C     		adds	r2, r1, #0
 2012 001c 1A80     		strh	r2, [r3]
1217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 2013              		.loc 1 1217 0
 2014 001e 0023     		movs	r3, #0
 2015 0020 7B61     		str	r3, [r7, #20]
1218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2016              		.loc 1 1219 0
 2017 0022 FB68     		ldr	r3, [r7, #12]
 2018 0024 4122     		movs	r2, #65
 2019 0026 9B5C     		ldrb	r3, [r3, r2]
 2020 0028 DBB2     		uxtb	r3, r3
 2021 002a 202B     		cmp	r3, #32
 2022 002c 5CD1     		bne	.L96
1220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 2023              		.loc 1 1221 0
 2024 002e FB68     		ldr	r3, [r7, #12]
 2025 0030 1B68     		ldr	r3, [r3]
 2026 0032 9A69     		ldr	r2, [r3, #24]
 2027 0034 8023     		movs	r3, #128
 2028 0036 1B02     		lsls	r3, r3, #8
 2029 0038 1A40     		ands	r2, r3
 2030 003a 8023     		movs	r3, #128
 2031 003c 1B02     		lsls	r3, r3, #8
 2032 003e 9A42     		cmp	r2, r3
 2033 0040 01D1     		bne	.L97
1222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
 2034              		.loc 1 1223 0
 2035 0042 0223     		movs	r3, #2
 2036 0044 51E0     		b	.L98
 2037              	.L97:
1224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/ccqg4Whx.s 			page 58


 2038              		.loc 1 1227 0
 2039 0046 FB68     		ldr	r3, [r7, #12]
 2040 0048 4022     		movs	r2, #64
 2041 004a 9B5C     		ldrb	r3, [r3, r2]
 2042 004c 012B     		cmp	r3, #1
 2043 004e 01D1     		bne	.L99
 2044              		.loc 1 1227 0 is_stmt 0 discriminator 1
 2045 0050 0223     		movs	r3, #2
 2046 0052 4AE0     		b	.L98
 2047              	.L99:
 2048              		.loc 1 1227 0 discriminator 2
 2049 0054 FB68     		ldr	r3, [r7, #12]
 2050 0056 4022     		movs	r2, #64
 2051 0058 0121     		movs	r1, #1
 2052 005a 9954     		strb	r1, [r3, r2]
1228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 2053              		.loc 1 1229 0 is_stmt 1 discriminator 2
 2054 005c FB68     		ldr	r3, [r7, #12]
 2055 005e 4122     		movs	r2, #65
 2056 0060 2221     		movs	r1, #34
 2057 0062 9954     		strb	r1, [r3, r2]
1230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2058              		.loc 1 1230 0 discriminator 2
 2059 0064 FB68     		ldr	r3, [r7, #12]
 2060 0066 4222     		movs	r2, #66
 2061 0068 1021     		movs	r1, #16
 2062 006a 9954     		strb	r1, [r3, r2]
1231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2063              		.loc 1 1231 0 discriminator 2
 2064 006c FB68     		ldr	r3, [r7, #12]
 2065 006e 0022     		movs	r2, #0
 2066 0070 5A64     		str	r2, [r3, #68]
1232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2067              		.loc 1 1234 0 discriminator 2
 2068 0072 FB68     		ldr	r3, [r7, #12]
 2069 0074 7A68     		ldr	r2, [r7, #4]
 2070 0076 5A62     		str	r2, [r3, #36]
1235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2071              		.loc 1 1235 0 discriminator 2
 2072 0078 FB68     		ldr	r3, [r7, #12]
 2073 007a 0822     		movs	r2, #8
 2074 007c BA18     		adds	r2, r7, r2
 2075 007e 1288     		ldrh	r2, [r2]
 2076 0080 5A85     		strh	r2, [r3, #42]
1236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2077              		.loc 1 1236 0 discriminator 2
 2078 0082 FB68     		ldr	r3, [r7, #12]
 2079 0084 1B4A     		ldr	r2, .L102
 2080 0086 DA62     		str	r2, [r3, #44]
1237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2081              		.loc 1 1237 0 discriminator 2
 2082 0088 FB68     		ldr	r3, [r7, #12]
 2083 008a 1B4A     		ldr	r2, .L102+4
 2084 008c 5A63     		str	r2, [r3, #52]
ARM GAS  /tmp/ccqg4Whx.s 			page 59


1238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 2085              		.loc 1 1239 0 discriminator 2
 2086 008e FB68     		ldr	r3, [r7, #12]
 2087 0090 5B8D     		ldrh	r3, [r3, #42]
 2088 0092 9BB2     		uxth	r3, r3
 2089 0094 FF2B     		cmp	r3, #255
 2090 0096 06D9     		bls	.L100
1240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 2091              		.loc 1 1241 0
 2092 0098 FB68     		ldr	r3, [r7, #12]
 2093 009a FF22     		movs	r2, #255
 2094 009c 1A85     		strh	r2, [r3, #40]
1242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2095              		.loc 1 1242 0
 2096 009e 8023     		movs	r3, #128
 2097 00a0 5B04     		lsls	r3, r3, #17
 2098 00a2 7B61     		str	r3, [r7, #20]
 2099 00a4 07E0     		b	.L101
 2100              	.L100:
1243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 2101              		.loc 1 1246 0
 2102 00a6 FB68     		ldr	r3, [r7, #12]
 2103 00a8 5B8D     		ldrh	r3, [r3, #42]
 2104 00aa 9AB2     		uxth	r2, r3
 2105 00ac FB68     		ldr	r3, [r7, #12]
 2106 00ae 1A85     		strh	r2, [r3, #40]
1247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2107              		.loc 1 1247 0
 2108 00b0 8023     		movs	r3, #128
 2109 00b2 9B04     		lsls	r3, r3, #18
 2110 00b4 7B61     		str	r3, [r7, #20]
 2111              	.L101:
1248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
1251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 2112              		.loc 1 1252 0
 2113 00b6 FB68     		ldr	r3, [r7, #12]
 2114 00b8 1B8D     		ldrh	r3, [r3, #40]
 2115 00ba DAB2     		uxtb	r2, r3
 2116 00bc 7C69     		ldr	r4, [r7, #20]
 2117 00be 0A23     		movs	r3, #10
 2118 00c0 FB18     		adds	r3, r7, r3
 2119 00c2 1988     		ldrh	r1, [r3]
 2120 00c4 F868     		ldr	r0, [r7, #12]
 2121 00c6 9023     		movs	r3, #144
 2122 00c8 9B01     		lsls	r3, r3, #6
 2123 00ca 0093     		str	r3, [sp]
 2124 00cc 2300     		movs	r3, r4
 2125 00ce FFF7FEFF 		bl	I2C_TransferConfig
1253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 60


1254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2126              		.loc 1 1255 0
 2127 00d2 FB68     		ldr	r3, [r7, #12]
 2128 00d4 4022     		movs	r2, #64
 2129 00d6 0021     		movs	r1, #0
 2130 00d8 9954     		strb	r1, [r3, r2]
1256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
1260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
1263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
 2131              		.loc 1 1264 0
 2132 00da FB68     		ldr	r3, [r7, #12]
 2133 00dc 0221     		movs	r1, #2
 2134 00de 1800     		movs	r0, r3
 2135 00e0 FFF7FEFF 		bl	I2C_Enable_IRQ
1265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 2136              		.loc 1 1266 0
 2137 00e4 0023     		movs	r3, #0
 2138 00e6 00E0     		b	.L98
 2139              	.L96:
1267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 2140              		.loc 1 1270 0
 2141 00e8 0223     		movs	r3, #2
 2142              	.L98:
1271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 2143              		.loc 1 1272 0
 2144 00ea 1800     		movs	r0, r3
 2145 00ec BD46     		mov	sp, r7
 2146 00ee 07B0     		add	sp, sp, #28
 2147              		@ sp needed
 2148 00f0 90BD     		pop	{r4, r7, pc}
 2149              	.L103:
 2150 00f2 C046     		.align	2
 2151              	.L102:
 2152 00f4 0000FFFF 		.word	-65536
 2153 00f8 00000000 		.word	I2C_Master_ISR_IT
 2154              		.cfi_endproc
 2155              	.LFE46:
 2157              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 2158              		.align	1
 2159              		.global	HAL_I2C_Slave_Transmit_IT
 2160              		.syntax unified
 2161              		.code	16
 2162              		.thumb_func
 2163              		.fpu softvfp
 2165              	HAL_I2C_Slave_Transmit_IT:
ARM GAS  /tmp/ccqg4Whx.s 			page 61


 2166              	.LFB47:
1273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 2167              		.loc 1 1283 0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 16
 2170              		@ frame_needed = 1, uses_anonymous_args = 0
 2171 0000 80B5     		push	{r7, lr}
 2172              		.cfi_def_cfa_offset 8
 2173              		.cfi_offset 7, -8
 2174              		.cfi_offset 14, -4
 2175 0002 84B0     		sub	sp, sp, #16
 2176              		.cfi_def_cfa_offset 24
 2177 0004 00AF     		add	r7, sp, #0
 2178              		.cfi_def_cfa_register 7
 2179 0006 F860     		str	r0, [r7, #12]
 2180 0008 B960     		str	r1, [r7, #8]
 2181 000a BB1D     		adds	r3, r7, #6
 2182 000c 1A80     		strh	r2, [r3]
1284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2183              		.loc 1 1284 0
 2184 000e FB68     		ldr	r3, [r7, #12]
 2185 0010 4122     		movs	r2, #65
 2186 0012 9B5C     		ldrb	r3, [r3, r2]
 2187 0014 DBB2     		uxtb	r3, r3
 2188 0016 202B     		cmp	r3, #32
 2189 0018 3AD1     		bne	.L105
1285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2190              		.loc 1 1287 0
 2191 001a FB68     		ldr	r3, [r7, #12]
 2192 001c 4022     		movs	r2, #64
 2193 001e 9B5C     		ldrb	r3, [r3, r2]
 2194 0020 012B     		cmp	r3, #1
 2195 0022 01D1     		bne	.L106
 2196              		.loc 1 1287 0 is_stmt 0 discriminator 1
 2197 0024 0223     		movs	r3, #2
 2198 0026 34E0     		b	.L107
 2199              	.L106:
 2200              		.loc 1 1287 0 discriminator 2
 2201 0028 FB68     		ldr	r3, [r7, #12]
 2202 002a 4022     		movs	r2, #64
 2203 002c 0121     		movs	r1, #1
 2204 002e 9954     		strb	r1, [r3, r2]
1288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 2205              		.loc 1 1289 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccqg4Whx.s 			page 62


 2206 0030 FB68     		ldr	r3, [r7, #12]
 2207 0032 4122     		movs	r2, #65
 2208 0034 2121     		movs	r1, #33
 2209 0036 9954     		strb	r1, [r3, r2]
1290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2210              		.loc 1 1290 0 discriminator 2
 2211 0038 FB68     		ldr	r3, [r7, #12]
 2212 003a 4222     		movs	r2, #66
 2213 003c 2021     		movs	r1, #32
 2214 003e 9954     		strb	r1, [r3, r2]
1291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2215              		.loc 1 1291 0 discriminator 2
 2216 0040 FB68     		ldr	r3, [r7, #12]
 2217 0042 0022     		movs	r2, #0
 2218 0044 5A64     		str	r2, [r3, #68]
1292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 2219              		.loc 1 1294 0 discriminator 2
 2220 0046 FB68     		ldr	r3, [r7, #12]
 2221 0048 1B68     		ldr	r3, [r3]
 2222 004a 5A68     		ldr	r2, [r3, #4]
 2223 004c FB68     		ldr	r3, [r7, #12]
 2224 004e 1B68     		ldr	r3, [r3]
 2225 0050 1249     		ldr	r1, .L108
 2226 0052 0A40     		ands	r2, r1
 2227 0054 5A60     		str	r2, [r3, #4]
1295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2228              		.loc 1 1297 0 discriminator 2
 2229 0056 FB68     		ldr	r3, [r7, #12]
 2230 0058 BA68     		ldr	r2, [r7, #8]
 2231 005a 5A62     		str	r2, [r3, #36]
1298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2232              		.loc 1 1298 0 discriminator 2
 2233 005c FB68     		ldr	r3, [r7, #12]
 2234 005e BA1D     		adds	r2, r7, #6
 2235 0060 1288     		ldrh	r2, [r2]
 2236 0062 5A85     		strh	r2, [r3, #42]
1299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2237              		.loc 1 1299 0 discriminator 2
 2238 0064 FB68     		ldr	r3, [r7, #12]
 2239 0066 5B8D     		ldrh	r3, [r3, #42]
 2240 0068 9AB2     		uxth	r2, r3
 2241 006a FB68     		ldr	r3, [r7, #12]
 2242 006c 1A85     		strh	r2, [r3, #40]
1300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2243              		.loc 1 1300 0 discriminator 2
 2244 006e FB68     		ldr	r3, [r7, #12]
 2245 0070 0B4A     		ldr	r2, .L108+4
 2246 0072 DA62     		str	r2, [r3, #44]
1301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2247              		.loc 1 1301 0 discriminator 2
 2248 0074 FB68     		ldr	r3, [r7, #12]
 2249 0076 0B4A     		ldr	r2, .L108+8
 2250 0078 5A63     		str	r2, [r3, #52]
ARM GAS  /tmp/ccqg4Whx.s 			page 63


1302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2251              		.loc 1 1304 0 discriminator 2
 2252 007a FB68     		ldr	r3, [r7, #12]
 2253 007c 4022     		movs	r2, #64
 2254 007e 0021     		movs	r1, #0
 2255 0080 9954     		strb	r1, [r3, r2]
1305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
1309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
1312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
 2256              		.loc 1 1313 0 discriminator 2
 2257 0082 FB68     		ldr	r3, [r7, #12]
 2258 0084 0521     		movs	r1, #5
 2259 0086 1800     		movs	r0, r3
 2260 0088 FFF7FEFF 		bl	I2C_Enable_IRQ
1314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 2261              		.loc 1 1315 0 discriminator 2
 2262 008c 0023     		movs	r3, #0
 2263 008e 00E0     		b	.L107
 2264              	.L105:
1316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 2265              		.loc 1 1319 0
 2266 0090 0223     		movs	r3, #2
 2267              	.L107:
1320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 2268              		.loc 1 1321 0
 2269 0092 1800     		movs	r0, r3
 2270 0094 BD46     		mov	sp, r7
 2271 0096 04B0     		add	sp, sp, #16
 2272              		@ sp needed
 2273 0098 80BD     		pop	{r7, pc}
 2274              	.L109:
 2275 009a C046     		.align	2
 2276              	.L108:
 2277 009c FF7FFFFF 		.word	-32769
 2278 00a0 0000FFFF 		.word	-65536
 2279 00a4 00000000 		.word	I2C_Slave_ISR_IT
 2280              		.cfi_endproc
 2281              	.LFE47:
 2283              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 2284              		.align	1
 2285              		.global	HAL_I2C_Slave_Receive_IT
 2286              		.syntax unified
 2287              		.code	16
 2288              		.thumb_func
ARM GAS  /tmp/ccqg4Whx.s 			page 64


 2289              		.fpu softvfp
 2291              	HAL_I2C_Slave_Receive_IT:
 2292              	.LFB48:
1322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 2293              		.loc 1 1332 0
 2294              		.cfi_startproc
 2295              		@ args = 0, pretend = 0, frame = 16
 2296              		@ frame_needed = 1, uses_anonymous_args = 0
 2297 0000 80B5     		push	{r7, lr}
 2298              		.cfi_def_cfa_offset 8
 2299              		.cfi_offset 7, -8
 2300              		.cfi_offset 14, -4
 2301 0002 84B0     		sub	sp, sp, #16
 2302              		.cfi_def_cfa_offset 24
 2303 0004 00AF     		add	r7, sp, #0
 2304              		.cfi_def_cfa_register 7
 2305 0006 F860     		str	r0, [r7, #12]
 2306 0008 B960     		str	r1, [r7, #8]
 2307 000a BB1D     		adds	r3, r7, #6
 2308 000c 1A80     		strh	r2, [r3]
1333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2309              		.loc 1 1333 0
 2310 000e FB68     		ldr	r3, [r7, #12]
 2311 0010 4122     		movs	r2, #65
 2312 0012 9B5C     		ldrb	r3, [r3, r2]
 2313 0014 DBB2     		uxtb	r3, r3
 2314 0016 202B     		cmp	r3, #32
 2315 0018 3AD1     		bne	.L111
1334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2316              		.loc 1 1336 0
 2317 001a FB68     		ldr	r3, [r7, #12]
 2318 001c 4022     		movs	r2, #64
 2319 001e 9B5C     		ldrb	r3, [r3, r2]
 2320 0020 012B     		cmp	r3, #1
 2321 0022 01D1     		bne	.L112
 2322              		.loc 1 1336 0 is_stmt 0 discriminator 1
 2323 0024 0223     		movs	r3, #2
 2324 0026 34E0     		b	.L113
 2325              	.L112:
 2326              		.loc 1 1336 0 discriminator 2
 2327 0028 FB68     		ldr	r3, [r7, #12]
 2328 002a 4022     		movs	r2, #64
 2329 002c 0121     		movs	r1, #1
 2330 002e 9954     		strb	r1, [r3, r2]
1337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 65


1338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 2331              		.loc 1 1338 0 is_stmt 1 discriminator 2
 2332 0030 FB68     		ldr	r3, [r7, #12]
 2333 0032 4122     		movs	r2, #65
 2334 0034 2221     		movs	r1, #34
 2335 0036 9954     		strb	r1, [r3, r2]
1339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2336              		.loc 1 1339 0 discriminator 2
 2337 0038 FB68     		ldr	r3, [r7, #12]
 2338 003a 4222     		movs	r2, #66
 2339 003c 2021     		movs	r1, #32
 2340 003e 9954     		strb	r1, [r3, r2]
1340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2341              		.loc 1 1340 0 discriminator 2
 2342 0040 FB68     		ldr	r3, [r7, #12]
 2343 0042 0022     		movs	r2, #0
 2344 0044 5A64     		str	r2, [r3, #68]
1341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 2345              		.loc 1 1343 0 discriminator 2
 2346 0046 FB68     		ldr	r3, [r7, #12]
 2347 0048 1B68     		ldr	r3, [r3]
 2348 004a 5A68     		ldr	r2, [r3, #4]
 2349 004c FB68     		ldr	r3, [r7, #12]
 2350 004e 1B68     		ldr	r3, [r3]
 2351 0050 1249     		ldr	r1, .L114
 2352 0052 0A40     		ands	r2, r1
 2353 0054 5A60     		str	r2, [r3, #4]
1344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2354              		.loc 1 1346 0 discriminator 2
 2355 0056 FB68     		ldr	r3, [r7, #12]
 2356 0058 BA68     		ldr	r2, [r7, #8]
 2357 005a 5A62     		str	r2, [r3, #36]
1347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2358              		.loc 1 1347 0 discriminator 2
 2359 005c FB68     		ldr	r3, [r7, #12]
 2360 005e BA1D     		adds	r2, r7, #6
 2361 0060 1288     		ldrh	r2, [r2]
 2362 0062 5A85     		strh	r2, [r3, #42]
1348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2363              		.loc 1 1348 0 discriminator 2
 2364 0064 FB68     		ldr	r3, [r7, #12]
 2365 0066 5B8D     		ldrh	r3, [r3, #42]
 2366 0068 9AB2     		uxth	r2, r3
 2367 006a FB68     		ldr	r3, [r7, #12]
 2368 006c 1A85     		strh	r2, [r3, #40]
1349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2369              		.loc 1 1349 0 discriminator 2
 2370 006e FB68     		ldr	r3, [r7, #12]
 2371 0070 0B4A     		ldr	r2, .L114+4
 2372 0072 DA62     		str	r2, [r3, #44]
1350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2373              		.loc 1 1350 0 discriminator 2
 2374 0074 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 66


 2375 0076 0B4A     		ldr	r2, .L114+8
 2376 0078 5A63     		str	r2, [r3, #52]
1351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2377              		.loc 1 1353 0 discriminator 2
 2378 007a FB68     		ldr	r3, [r7, #12]
 2379 007c 4022     		movs	r2, #64
 2380 007e 0021     		movs	r1, #0
 2381 0080 9954     		strb	r1, [r3, r2]
1354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
1358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
1361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
 2382              		.loc 1 1362 0 discriminator 2
 2383 0082 FB68     		ldr	r3, [r7, #12]
 2384 0084 0621     		movs	r1, #6
 2385 0086 1800     		movs	r0, r3
 2386 0088 FFF7FEFF 		bl	I2C_Enable_IRQ
1363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 2387              		.loc 1 1364 0 discriminator 2
 2388 008c 0023     		movs	r3, #0
 2389 008e 00E0     		b	.L113
 2390              	.L111:
1365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 2391              		.loc 1 1368 0
 2392 0090 0223     		movs	r3, #2
 2393              	.L113:
1369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 2394              		.loc 1 1370 0
 2395 0092 1800     		movs	r0, r3
 2396 0094 BD46     		mov	sp, r7
 2397 0096 04B0     		add	sp, sp, #16
 2398              		@ sp needed
 2399 0098 80BD     		pop	{r7, pc}
 2400              	.L115:
 2401 009a C046     		.align	2
 2402              	.L114:
 2403 009c FF7FFFFF 		.word	-32769
 2404 00a0 0000FFFF 		.word	-65536
 2405 00a4 00000000 		.word	I2C_Slave_ISR_IT
 2406              		.cfi_endproc
 2407              	.LFE48:
 2409              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
 2410              		.align	1
 2411              		.global	HAL_I2C_Master_Transmit_DMA
 2412              		.syntax unified
ARM GAS  /tmp/ccqg4Whx.s 			page 67


 2413              		.code	16
 2414              		.thumb_func
 2415              		.fpu softvfp
 2417              	HAL_I2C_Master_Transmit_DMA:
 2418              	.LFB49:
1371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 2419              		.loc 1 1383 0
 2420              		.cfi_startproc
 2421              		@ args = 0, pretend = 0, frame = 24
 2422              		@ frame_needed = 1, uses_anonymous_args = 0
 2423 0000 90B5     		push	{r4, r7, lr}
 2424              		.cfi_def_cfa_offset 12
 2425              		.cfi_offset 4, -12
 2426              		.cfi_offset 7, -8
 2427              		.cfi_offset 14, -4
 2428 0002 89B0     		sub	sp, sp, #36
 2429              		.cfi_def_cfa_offset 48
 2430 0004 02AF     		add	r7, sp, #8
 2431              		.cfi_def_cfa 7, 40
 2432 0006 F860     		str	r0, [r7, #12]
 2433 0008 0800     		movs	r0, r1
 2434 000a 7A60     		str	r2, [r7, #4]
 2435 000c 1900     		movs	r1, r3
 2436 000e 0A23     		movs	r3, #10
 2437 0010 FB18     		adds	r3, r7, r3
 2438 0012 021C     		adds	r2, r0, #0
 2439 0014 1A80     		strh	r2, [r3]
 2440 0016 0823     		movs	r3, #8
 2441 0018 FB18     		adds	r3, r7, r3
 2442 001a 0A1C     		adds	r2, r1, #0
 2443 001c 1A80     		strh	r2, [r3]
1384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 2444              		.loc 1 1384 0
 2445 001e 0023     		movs	r3, #0
 2446 0020 7B61     		str	r3, [r7, #20]
1385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2447              		.loc 1 1386 0
 2448 0022 FB68     		ldr	r3, [r7, #12]
 2449 0024 4122     		movs	r2, #65
 2450 0026 9B5C     		ldrb	r3, [r3, r2]
 2451 0028 DBB2     		uxtb	r3, r3
 2452 002a 202B     		cmp	r3, #32
 2453 002c 00D0     		beq	.LCB2186
 2454 002e A9E0     		b	.L117	@long jump
ARM GAS  /tmp/ccqg4Whx.s 			page 68


 2455              	.LCB2186:
1387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 2456              		.loc 1 1388 0
 2457 0030 FB68     		ldr	r3, [r7, #12]
 2458 0032 1B68     		ldr	r3, [r3]
 2459 0034 9A69     		ldr	r2, [r3, #24]
 2460 0036 8023     		movs	r3, #128
 2461 0038 1B02     		lsls	r3, r3, #8
 2462 003a 1A40     		ands	r2, r3
 2463 003c 8023     		movs	r3, #128
 2464 003e 1B02     		lsls	r3, r3, #8
 2465 0040 9A42     		cmp	r2, r3
 2466 0042 01D1     		bne	.L118
1389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
 2467              		.loc 1 1390 0
 2468 0044 0223     		movs	r3, #2
 2469 0046 9EE0     		b	.L119
 2470              	.L118:
1391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2471              		.loc 1 1394 0
 2472 0048 FB68     		ldr	r3, [r7, #12]
 2473 004a 4022     		movs	r2, #64
 2474 004c 9B5C     		ldrb	r3, [r3, r2]
 2475 004e 012B     		cmp	r3, #1
 2476 0050 01D1     		bne	.L120
 2477              		.loc 1 1394 0 is_stmt 0 discriminator 1
 2478 0052 0223     		movs	r3, #2
 2479 0054 97E0     		b	.L119
 2480              	.L120:
 2481              		.loc 1 1394 0 discriminator 2
 2482 0056 FB68     		ldr	r3, [r7, #12]
 2483 0058 4022     		movs	r2, #64
 2484 005a 0121     		movs	r1, #1
 2485 005c 9954     		strb	r1, [r3, r2]
1395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 2486              		.loc 1 1396 0 is_stmt 1 discriminator 2
 2487 005e FB68     		ldr	r3, [r7, #12]
 2488 0060 4122     		movs	r2, #65
 2489 0062 2121     		movs	r1, #33
 2490 0064 9954     		strb	r1, [r3, r2]
1397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2491              		.loc 1 1397 0 discriminator 2
 2492 0066 FB68     		ldr	r3, [r7, #12]
 2493 0068 4222     		movs	r2, #66
 2494 006a 1021     		movs	r1, #16
 2495 006c 9954     		strb	r1, [r3, r2]
1398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2496              		.loc 1 1398 0 discriminator 2
 2497 006e FB68     		ldr	r3, [r7, #12]
 2498 0070 0022     		movs	r2, #0
 2499 0072 5A64     		str	r2, [r3, #68]
ARM GAS  /tmp/ccqg4Whx.s 			page 69


1399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2500              		.loc 1 1401 0 discriminator 2
 2501 0074 FB68     		ldr	r3, [r7, #12]
 2502 0076 7A68     		ldr	r2, [r7, #4]
 2503 0078 5A62     		str	r2, [r3, #36]
1402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2504              		.loc 1 1402 0 discriminator 2
 2505 007a FB68     		ldr	r3, [r7, #12]
 2506 007c 0822     		movs	r2, #8
 2507 007e BA18     		adds	r2, r7, r2
 2508 0080 1288     		ldrh	r2, [r2]
 2509 0082 5A85     		strh	r2, [r3, #42]
1403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2510              		.loc 1 1403 0 discriminator 2
 2511 0084 FB68     		ldr	r3, [r7, #12]
 2512 0086 424A     		ldr	r2, .L125
 2513 0088 DA62     		str	r2, [r3, #44]
1404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 2514              		.loc 1 1404 0 discriminator 2
 2515 008a FB68     		ldr	r3, [r7, #12]
 2516 008c 414A     		ldr	r2, .L125+4
 2517 008e 5A63     		str	r2, [r3, #52]
1405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 2518              		.loc 1 1406 0 discriminator 2
 2519 0090 FB68     		ldr	r3, [r7, #12]
 2520 0092 5B8D     		ldrh	r3, [r3, #42]
 2521 0094 9BB2     		uxth	r3, r3
 2522 0096 FF2B     		cmp	r3, #255
 2523 0098 06D9     		bls	.L121
1407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 2524              		.loc 1 1408 0
 2525 009a FB68     		ldr	r3, [r7, #12]
 2526 009c FF22     		movs	r2, #255
 2527 009e 1A85     		strh	r2, [r3, #40]
1409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2528              		.loc 1 1409 0
 2529 00a0 8023     		movs	r3, #128
 2530 00a2 5B04     		lsls	r3, r3, #17
 2531 00a4 7B61     		str	r3, [r7, #20]
 2532 00a6 07E0     		b	.L122
 2533              	.L121:
1410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 2534              		.loc 1 1413 0
 2535 00a8 FB68     		ldr	r3, [r7, #12]
 2536 00aa 5B8D     		ldrh	r3, [r3, #42]
 2537 00ac 9AB2     		uxth	r2, r3
 2538 00ae FB68     		ldr	r3, [r7, #12]
 2539 00b0 1A85     		strh	r2, [r3, #40]
1414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2540              		.loc 1 1414 0
ARM GAS  /tmp/ccqg4Whx.s 			page 70


 2541 00b2 8023     		movs	r3, #128
 2542 00b4 9B04     		lsls	r3, r3, #18
 2543 00b6 7B61     		str	r3, [r7, #20]
 2544              	.L122:
1415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
 2545              		.loc 1 1417 0
 2546 00b8 FB68     		ldr	r3, [r7, #12]
 2547 00ba 1B8D     		ldrh	r3, [r3, #40]
 2548 00bc 002B     		cmp	r3, #0
 2549 00be 44D0     		beq	.L123
1418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
1420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
 2550              		.loc 1 1420 0
 2551 00c0 FB68     		ldr	r3, [r7, #12]
 2552 00c2 9B6B     		ldr	r3, [r3, #56]
 2553 00c4 344A     		ldr	r2, .L125+8
 2554 00c6 9A62     		str	r2, [r3, #40]
1421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the DMA error callback */
1423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
 2555              		.loc 1 1423 0
 2556 00c8 FB68     		ldr	r3, [r7, #12]
 2557 00ca 9B6B     		ldr	r3, [r3, #56]
 2558 00cc 334A     		ldr	r2, .L125+12
 2559 00ce 1A63     		str	r2, [r3, #48]
1424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
1426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
 2560              		.loc 1 1426 0
 2561 00d0 FB68     		ldr	r3, [r7, #12]
 2562 00d2 9B6B     		ldr	r3, [r3, #56]
 2563 00d4 0022     		movs	r2, #0
 2564 00d6 DA62     		str	r2, [r3, #44]
1427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 2565              		.loc 1 1427 0
 2566 00d8 FB68     		ldr	r3, [r7, #12]
 2567 00da 9B6B     		ldr	r3, [r3, #56]
 2568 00dc 0022     		movs	r2, #0
 2569 00de 5A63     		str	r2, [r3, #52]
1428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable the DMA channel */
1430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSi
 2570              		.loc 1 1430 0
 2571 00e0 FB68     		ldr	r3, [r7, #12]
 2572 00e2 986B     		ldr	r0, [r3, #56]
 2573 00e4 7968     		ldr	r1, [r7, #4]
 2574 00e6 FB68     		ldr	r3, [r7, #12]
 2575 00e8 1B68     		ldr	r3, [r3]
 2576 00ea 2833     		adds	r3, r3, #40
 2577 00ec 1A00     		movs	r2, r3
 2578 00ee FB68     		ldr	r3, [r7, #12]
 2579 00f0 1B8D     		ldrh	r3, [r3, #40]
 2580 00f2 FFF7FEFF 		bl	HAL_DMA_Start_IT
1431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 71


1432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Send Slave Address */
1433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
 2581              		.loc 1 1434 0
 2582 00f6 FB68     		ldr	r3, [r7, #12]
 2583 00f8 1B8D     		ldrh	r3, [r3, #40]
 2584 00fa DAB2     		uxtb	r2, r3
 2585 00fc 7C69     		ldr	r4, [r7, #20]
 2586 00fe 0A23     		movs	r3, #10
 2587 0100 FB18     		adds	r3, r7, r3
 2588 0102 1988     		ldrh	r1, [r3]
 2589 0104 F868     		ldr	r0, [r7, #12]
 2590 0106 8023     		movs	r3, #128
 2591 0108 9B01     		lsls	r3, r3, #6
 2592 010a 0093     		str	r3, [sp]
 2593 010c 2300     		movs	r3, r4
 2594 010e FFF7FEFF 		bl	I2C_TransferConfig
1435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update XferCount value */
1437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
 2595              		.loc 1 1437 0
 2596 0112 FB68     		ldr	r3, [r7, #12]
 2597 0114 5B8D     		ldrh	r3, [r3, #42]
 2598 0116 9AB2     		uxth	r2, r3
 2599 0118 FB68     		ldr	r3, [r7, #12]
 2600 011a 1B8D     		ldrh	r3, [r3, #40]
 2601 011c D31A     		subs	r3, r2, r3
 2602 011e 9AB2     		uxth	r2, r3
 2603 0120 FB68     		ldr	r3, [r7, #12]
 2604 0122 5A85     		strh	r2, [r3, #42]
1438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
1440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 2605              		.loc 1 1440 0
 2606 0124 FB68     		ldr	r3, [r7, #12]
 2607 0126 4022     		movs	r2, #64
 2608 0128 0021     		movs	r1, #0
 2609 012a 9954     		strb	r1, [r3, r2]
1441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
1445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
1446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 2610              		.loc 1 1446 0
 2611 012c FB68     		ldr	r3, [r7, #12]
 2612 012e 1121     		movs	r1, #17
 2613 0130 1800     		movs	r0, r3
 2614 0132 FFF7FEFF 		bl	I2C_Enable_IRQ
1447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable DMA Request */
1449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
 2615              		.loc 1 1449 0
 2616 0136 FB68     		ldr	r3, [r7, #12]
 2617 0138 1B68     		ldr	r3, [r3]
 2618 013a 1A68     		ldr	r2, [r3]
 2619 013c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 72


 2620 013e 1B68     		ldr	r3, [r3]
 2621 0140 8021     		movs	r1, #128
 2622 0142 C901     		lsls	r1, r1, #7
 2623 0144 0A43     		orrs	r2, r1
 2624 0146 1A60     		str	r2, [r3]
 2625 0148 1AE0     		b	.L124
 2626              	.L123:
1450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
 2627              		.loc 1 1454 0
 2628 014a FB68     		ldr	r3, [r7, #12]
 2629 014c 144A     		ldr	r2, .L125+16
 2630 014e 5A63     		str	r2, [r3, #52]
1455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Send Slave Address */
1457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
1458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
 2631              		.loc 1 1458 0
 2632 0150 FB68     		ldr	r3, [r7, #12]
 2633 0152 1B8D     		ldrh	r3, [r3, #40]
 2634 0154 DAB2     		uxtb	r2, r3
 2635 0156 8023     		movs	r3, #128
 2636 0158 9C04     		lsls	r4, r3, #18
 2637 015a 0A23     		movs	r3, #10
 2638 015c FB18     		adds	r3, r7, r3
 2639 015e 1988     		ldrh	r1, [r3]
 2640 0160 F868     		ldr	r0, [r7, #12]
 2641 0162 8023     		movs	r3, #128
 2642 0164 9B01     		lsls	r3, r3, #6
 2643 0166 0093     		str	r3, [sp]
 2644 0168 2300     		movs	r3, r4
 2645 016a FFF7FEFF 		bl	I2C_TransferConfig
1459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
1461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 2646              		.loc 1 1461 0
 2647 016e FB68     		ldr	r3, [r7, #12]
 2648 0170 4022     		movs	r2, #64
 2649 0172 0021     		movs	r1, #0
 2650 0174 9954     		strb	r1, [r3, r2]
1462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
1466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* possible to enable all of these */
1468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 2651              		.loc 1 1469 0
 2652 0176 FB68     		ldr	r3, [r7, #12]
 2653 0178 0121     		movs	r1, #1
 2654 017a 1800     		movs	r0, r3
 2655 017c FFF7FEFF 		bl	I2C_Enable_IRQ
 2656              	.L124:
ARM GAS  /tmp/ccqg4Whx.s 			page 73


1470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 2657              		.loc 1 1472 0
 2658 0180 0023     		movs	r3, #0
 2659 0182 00E0     		b	.L119
 2660              	.L117:
1473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 2661              		.loc 1 1476 0
 2662 0184 0223     		movs	r3, #2
 2663              	.L119:
1477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 2664              		.loc 1 1478 0
 2665 0186 1800     		movs	r0, r3
 2666 0188 BD46     		mov	sp, r7
 2667 018a 07B0     		add	sp, sp, #28
 2668              		@ sp needed
 2669 018c 90BD     		pop	{r4, r7, pc}
 2670              	.L126:
 2671 018e C046     		.align	2
 2672              	.L125:
 2673 0190 0000FFFF 		.word	-65536
 2674 0194 00000000 		.word	I2C_Master_ISR_DMA
 2675 0198 00000000 		.word	I2C_DMAMasterTransmitCplt
 2676 019c 00000000 		.word	I2C_DMAError
 2677 01a0 00000000 		.word	I2C_Master_ISR_IT
 2678              		.cfi_endproc
 2679              	.LFE49:
 2681              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 2682              		.align	1
 2683              		.global	HAL_I2C_Master_Receive_DMA
 2684              		.syntax unified
 2685              		.code	16
 2686              		.thumb_func
 2687              		.fpu softvfp
 2689              	HAL_I2C_Master_Receive_DMA:
 2690              	.LFB50:
1479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 2691              		.loc 1 1491 0
 2692              		.cfi_startproc
 2693              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/ccqg4Whx.s 			page 74


 2694              		@ frame_needed = 1, uses_anonymous_args = 0
 2695 0000 90B5     		push	{r4, r7, lr}
 2696              		.cfi_def_cfa_offset 12
 2697              		.cfi_offset 4, -12
 2698              		.cfi_offset 7, -8
 2699              		.cfi_offset 14, -4
 2700 0002 89B0     		sub	sp, sp, #36
 2701              		.cfi_def_cfa_offset 48
 2702 0004 02AF     		add	r7, sp, #8
 2703              		.cfi_def_cfa 7, 40
 2704 0006 F860     		str	r0, [r7, #12]
 2705 0008 0800     		movs	r0, r1
 2706 000a 7A60     		str	r2, [r7, #4]
 2707 000c 1900     		movs	r1, r3
 2708 000e 0A23     		movs	r3, #10
 2709 0010 FB18     		adds	r3, r7, r3
 2710 0012 021C     		adds	r2, r0, #0
 2711 0014 1A80     		strh	r2, [r3]
 2712 0016 0823     		movs	r3, #8
 2713 0018 FB18     		adds	r3, r7, r3
 2714 001a 0A1C     		adds	r2, r1, #0
 2715 001c 1A80     		strh	r2, [r3]
1492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 2716              		.loc 1 1492 0
 2717 001e 0023     		movs	r3, #0
 2718 0020 7B61     		str	r3, [r7, #20]
1493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2719              		.loc 1 1494 0
 2720 0022 FB68     		ldr	r3, [r7, #12]
 2721 0024 4122     		movs	r2, #65
 2722 0026 9B5C     		ldrb	r3, [r3, r2]
 2723 0028 DBB2     		uxtb	r3, r3
 2724 002a 202B     		cmp	r3, #32
 2725 002c 00D0     		beq	.LCB2428
 2726 002e A9E0     		b	.L128	@long jump
 2727              	.LCB2428:
1495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 2728              		.loc 1 1496 0
 2729 0030 FB68     		ldr	r3, [r7, #12]
 2730 0032 1B68     		ldr	r3, [r3]
 2731 0034 9A69     		ldr	r2, [r3, #24]
 2732 0036 8023     		movs	r3, #128
 2733 0038 1B02     		lsls	r3, r3, #8
 2734 003a 1A40     		ands	r2, r3
 2735 003c 8023     		movs	r3, #128
 2736 003e 1B02     		lsls	r3, r3, #8
 2737 0040 9A42     		cmp	r2, r3
 2738 0042 01D1     		bne	.L129
1497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
 2739              		.loc 1 1498 0
 2740 0044 0223     		movs	r3, #2
 2741 0046 9EE0     		b	.L130
 2742              	.L129:
1499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccqg4Whx.s 			page 75


1500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2743              		.loc 1 1502 0
 2744 0048 FB68     		ldr	r3, [r7, #12]
 2745 004a 4022     		movs	r2, #64
 2746 004c 9B5C     		ldrb	r3, [r3, r2]
 2747 004e 012B     		cmp	r3, #1
 2748 0050 01D1     		bne	.L131
 2749              		.loc 1 1502 0 is_stmt 0 discriminator 1
 2750 0052 0223     		movs	r3, #2
 2751 0054 97E0     		b	.L130
 2752              	.L131:
 2753              		.loc 1 1502 0 discriminator 2
 2754 0056 FB68     		ldr	r3, [r7, #12]
 2755 0058 4022     		movs	r2, #64
 2756 005a 0121     		movs	r1, #1
 2757 005c 9954     		strb	r1, [r3, r2]
1503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 2758              		.loc 1 1504 0 is_stmt 1 discriminator 2
 2759 005e FB68     		ldr	r3, [r7, #12]
 2760 0060 4122     		movs	r2, #65
 2761 0062 2221     		movs	r1, #34
 2762 0064 9954     		strb	r1, [r3, r2]
1505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2763              		.loc 1 1505 0 discriminator 2
 2764 0066 FB68     		ldr	r3, [r7, #12]
 2765 0068 4222     		movs	r2, #66
 2766 006a 1021     		movs	r1, #16
 2767 006c 9954     		strb	r1, [r3, r2]
1506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2768              		.loc 1 1506 0 discriminator 2
 2769 006e FB68     		ldr	r3, [r7, #12]
 2770 0070 0022     		movs	r2, #0
 2771 0072 5A64     		str	r2, [r3, #68]
1507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2772              		.loc 1 1509 0 discriminator 2
 2773 0074 FB68     		ldr	r3, [r7, #12]
 2774 0076 7A68     		ldr	r2, [r7, #4]
 2775 0078 5A62     		str	r2, [r3, #36]
1510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2776              		.loc 1 1510 0 discriminator 2
 2777 007a FB68     		ldr	r3, [r7, #12]
 2778 007c 0822     		movs	r2, #8
 2779 007e BA18     		adds	r2, r7, r2
 2780 0080 1288     		ldrh	r2, [r2]
 2781 0082 5A85     		strh	r2, [r3, #42]
1511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2782              		.loc 1 1511 0 discriminator 2
 2783 0084 FB68     		ldr	r3, [r7, #12]
 2784 0086 424A     		ldr	r2, .L136
 2785 0088 DA62     		str	r2, [r3, #44]
1512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 2786              		.loc 1 1512 0 discriminator 2
ARM GAS  /tmp/ccqg4Whx.s 			page 76


 2787 008a FB68     		ldr	r3, [r7, #12]
 2788 008c 414A     		ldr	r2, .L136+4
 2789 008e 5A63     		str	r2, [r3, #52]
1513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 2790              		.loc 1 1514 0 discriminator 2
 2791 0090 FB68     		ldr	r3, [r7, #12]
 2792 0092 5B8D     		ldrh	r3, [r3, #42]
 2793 0094 9BB2     		uxth	r3, r3
 2794 0096 FF2B     		cmp	r3, #255
 2795 0098 06D9     		bls	.L132
1515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 2796              		.loc 1 1516 0
 2797 009a FB68     		ldr	r3, [r7, #12]
 2798 009c FF22     		movs	r2, #255
 2799 009e 1A85     		strh	r2, [r3, #40]
1517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2800              		.loc 1 1517 0
 2801 00a0 8023     		movs	r3, #128
 2802 00a2 5B04     		lsls	r3, r3, #17
 2803 00a4 7B61     		str	r3, [r7, #20]
 2804 00a6 07E0     		b	.L133
 2805              	.L132:
1518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 2806              		.loc 1 1521 0
 2807 00a8 FB68     		ldr	r3, [r7, #12]
 2808 00aa 5B8D     		ldrh	r3, [r3, #42]
 2809 00ac 9AB2     		uxth	r2, r3
 2810 00ae FB68     		ldr	r3, [r7, #12]
 2811 00b0 1A85     		strh	r2, [r3, #40]
1522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2812              		.loc 1 1522 0
 2813 00b2 8023     		movs	r3, #128
 2814 00b4 9B04     		lsls	r3, r3, #18
 2815 00b6 7B61     		str	r3, [r7, #20]
 2816              	.L133:
1523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
 2817              		.loc 1 1525 0
 2818 00b8 FB68     		ldr	r3, [r7, #12]
 2819 00ba 1B8D     		ldrh	r3, [r3, #40]
 2820 00bc 002B     		cmp	r3, #0
 2821 00be 44D0     		beq	.L134
1526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
1528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
 2822              		.loc 1 1528 0
 2823 00c0 FB68     		ldr	r3, [r7, #12]
 2824 00c2 DB6B     		ldr	r3, [r3, #60]
 2825 00c4 344A     		ldr	r2, .L136+8
 2826 00c6 9A62     		str	r2, [r3, #40]
1529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 77


1530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the DMA error callback */
1531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
 2827              		.loc 1 1531 0
 2828 00c8 FB68     		ldr	r3, [r7, #12]
 2829 00ca DB6B     		ldr	r3, [r3, #60]
 2830 00cc 334A     		ldr	r2, .L136+12
 2831 00ce 1A63     		str	r2, [r3, #48]
1532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1533:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
1534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
 2832              		.loc 1 1534 0
 2833 00d0 FB68     		ldr	r3, [r7, #12]
 2834 00d2 DB6B     		ldr	r3, [r3, #60]
 2835 00d4 0022     		movs	r2, #0
 2836 00d6 DA62     		str	r2, [r3, #44]
1535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 2837              		.loc 1 1535 0
 2838 00d8 FB68     		ldr	r3, [r7, #12]
 2839 00da DB6B     		ldr	r3, [r3, #60]
 2840 00dc 0022     		movs	r2, #0
 2841 00de 5A63     		str	r2, [r3, #52]
1536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable the DMA channel */
1538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSi
 2842              		.loc 1 1538 0
 2843 00e0 FB68     		ldr	r3, [r7, #12]
 2844 00e2 D86B     		ldr	r0, [r3, #60]
 2845 00e4 FB68     		ldr	r3, [r7, #12]
 2846 00e6 1B68     		ldr	r3, [r3]
 2847 00e8 2433     		adds	r3, r3, #36
 2848 00ea 1900     		movs	r1, r3
 2849 00ec 7A68     		ldr	r2, [r7, #4]
 2850 00ee FB68     		ldr	r3, [r7, #12]
 2851 00f0 1B8D     		ldrh	r3, [r3, #40]
 2852 00f2 FFF7FEFF 		bl	HAL_DMA_Start_IT
1539:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Send Slave Address */
1541:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 2853              		.loc 1 1542 0
 2854 00f6 FB68     		ldr	r3, [r7, #12]
 2855 00f8 1B8D     		ldrh	r3, [r3, #40]
 2856 00fa DAB2     		uxtb	r2, r3
 2857 00fc 7C69     		ldr	r4, [r7, #20]
 2858 00fe 0A23     		movs	r3, #10
 2859 0100 FB18     		adds	r3, r7, r3
 2860 0102 1988     		ldrh	r1, [r3]
 2861 0104 F868     		ldr	r0, [r7, #12]
 2862 0106 9023     		movs	r3, #144
 2863 0108 9B01     		lsls	r3, r3, #6
 2864 010a 0093     		str	r3, [sp]
 2865 010c 2300     		movs	r3, r4
 2866 010e FFF7FEFF 		bl	I2C_TransferConfig
1543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1544:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update XferCount value */
1545:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
 2867              		.loc 1 1545 0
ARM GAS  /tmp/ccqg4Whx.s 			page 78


 2868 0112 FB68     		ldr	r3, [r7, #12]
 2869 0114 5B8D     		ldrh	r3, [r3, #42]
 2870 0116 9AB2     		uxth	r2, r3
 2871 0118 FB68     		ldr	r3, [r7, #12]
 2872 011a 1B8D     		ldrh	r3, [r3, #40]
 2873 011c D31A     		subs	r3, r2, r3
 2874 011e 9AB2     		uxth	r2, r3
 2875 0120 FB68     		ldr	r3, [r7, #12]
 2876 0122 5A85     		strh	r2, [r3, #42]
1546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
1548:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 2877              		.loc 1 1548 0
 2878 0124 FB68     		ldr	r3, [r7, #12]
 2879 0126 4022     		movs	r2, #64
 2880 0128 0021     		movs	r1, #0
 2881 012a 9954     		strb	r1, [r3, r2]
1549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1551:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1552:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
1553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
1554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 2882              		.loc 1 1554 0
 2883 012c FB68     		ldr	r3, [r7, #12]
 2884 012e 1121     		movs	r1, #17
 2885 0130 1800     		movs	r0, r3
 2886 0132 FFF7FEFF 		bl	I2C_Enable_IRQ
1555:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable DMA Request */
1557:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 2887              		.loc 1 1557 0
 2888 0136 FB68     		ldr	r3, [r7, #12]
 2889 0138 1B68     		ldr	r3, [r3]
 2890 013a 1A68     		ldr	r2, [r3]
 2891 013c FB68     		ldr	r3, [r7, #12]
 2892 013e 1B68     		ldr	r3, [r3]
 2893 0140 8021     		movs	r1, #128
 2894 0142 0902     		lsls	r1, r1, #8
 2895 0144 0A43     		orrs	r2, r1
 2896 0146 1A60     		str	r2, [r3]
 2897 0148 1AE0     		b	.L135
 2898              	.L134:
1558:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1560:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1562:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
 2899              		.loc 1 1562 0
 2900 014a FB68     		ldr	r3, [r7, #12]
 2901 014c 144A     		ldr	r2, .L136+16
 2902 014e 5A63     		str	r2, [r3, #52]
1563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1564:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Send Slave Address */
1565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
1566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 2903              		.loc 1 1566 0
ARM GAS  /tmp/ccqg4Whx.s 			page 79


 2904 0150 FB68     		ldr	r3, [r7, #12]
 2905 0152 1B8D     		ldrh	r3, [r3, #40]
 2906 0154 DAB2     		uxtb	r2, r3
 2907 0156 8023     		movs	r3, #128
 2908 0158 9C04     		lsls	r4, r3, #18
 2909 015a 0A23     		movs	r3, #10
 2910 015c FB18     		adds	r3, r7, r3
 2911 015e 1988     		ldrh	r1, [r3]
 2912 0160 F868     		ldr	r0, [r7, #12]
 2913 0162 9023     		movs	r3, #144
 2914 0164 9B01     		lsls	r3, r3, #6
 2915 0166 0093     		str	r3, [sp]
 2916 0168 2300     		movs	r3, r4
 2917 016a FFF7FEFF 		bl	I2C_TransferConfig
1567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1568:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
1569:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 2918              		.loc 1 1569 0
 2919 016e FB68     		ldr	r3, [r7, #12]
 2920 0170 4022     		movs	r2, #64
 2921 0172 0021     		movs	r1, #0
 2922 0174 9954     		strb	r1, [r3, r2]
1570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1571:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1572:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1573:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                 process unlock */
1574:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* possible to enable all of these */
1576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 2923              		.loc 1 1577 0
 2924 0176 FB68     		ldr	r3, [r7, #12]
 2925 0178 0121     		movs	r1, #1
 2926 017a 1800     		movs	r0, r3
 2927 017c FFF7FEFF 		bl	I2C_Enable_IRQ
 2928              	.L135:
1578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1579:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 2929              		.loc 1 1579 0
 2930 0180 0023     		movs	r3, #0
 2931 0182 00E0     		b	.L130
 2932              	.L128:
1580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1581:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 2933              		.loc 1 1583 0
 2934 0184 0223     		movs	r3, #2
 2935              	.L130:
1584:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 2936              		.loc 1 1585 0
 2937 0186 1800     		movs	r0, r3
 2938 0188 BD46     		mov	sp, r7
 2939 018a 07B0     		add	sp, sp, #28
 2940              		@ sp needed
 2941 018c 90BD     		pop	{r4, r7, pc}
ARM GAS  /tmp/ccqg4Whx.s 			page 80


 2942              	.L137:
 2943 018e C046     		.align	2
 2944              	.L136:
 2945 0190 0000FFFF 		.word	-65536
 2946 0194 00000000 		.word	I2C_Master_ISR_DMA
 2947 0198 00000000 		.word	I2C_DMAMasterReceiveCplt
 2948 019c 00000000 		.word	I2C_DMAError
 2949 01a0 00000000 		.word	I2C_Master_ISR_IT
 2950              		.cfi_endproc
 2951              	.LFE50:
 2953              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 2954              		.align	1
 2955              		.global	HAL_I2C_Slave_Transmit_DMA
 2956              		.syntax unified
 2957              		.code	16
 2958              		.thumb_func
 2959              		.fpu softvfp
 2961              	HAL_I2C_Slave_Transmit_DMA:
 2962              	.LFB51:
1586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1588:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
1589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1591:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1592:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1593:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1594:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
1596:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 2963              		.loc 1 1596 0
 2964              		.cfi_startproc
 2965              		@ args = 0, pretend = 0, frame = 16
 2966              		@ frame_needed = 1, uses_anonymous_args = 0
 2967 0000 80B5     		push	{r7, lr}
 2968              		.cfi_def_cfa_offset 8
 2969              		.cfi_offset 7, -8
 2970              		.cfi_offset 14, -4
 2971 0002 84B0     		sub	sp, sp, #16
 2972              		.cfi_def_cfa_offset 24
 2973 0004 00AF     		add	r7, sp, #0
 2974              		.cfi_def_cfa_register 7
 2975 0006 F860     		str	r0, [r7, #12]
 2976 0008 B960     		str	r1, [r7, #8]
 2977 000a BB1D     		adds	r3, r7, #6
 2978 000c 1A80     		strh	r2, [r3]
1597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2979              		.loc 1 1597 0
 2980 000e FB68     		ldr	r3, [r7, #12]
 2981 0010 4122     		movs	r2, #65
 2982 0012 9B5C     		ldrb	r3, [r3, r2]
 2983 0014 DBB2     		uxtb	r3, r3
 2984 0016 202B     		cmp	r3, #32
 2985 0018 67D1     		bne	.L139
1598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1599:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 2986              		.loc 1 1599 0
ARM GAS  /tmp/ccqg4Whx.s 			page 81


 2987 001a BB68     		ldr	r3, [r7, #8]
 2988 001c 002B     		cmp	r3, #0
 2989 001e 03D0     		beq	.L140
 2990              		.loc 1 1599 0 is_stmt 0 discriminator 1
 2991 0020 BB1D     		adds	r3, r7, #6
 2992 0022 1B88     		ldrh	r3, [r3]
 2993 0024 002B     		cmp	r3, #0
 2994 0026 01D1     		bne	.L141
 2995              	.L140:
1600:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1601:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 2996              		.loc 1 1601 0 is_stmt 1
 2997 0028 0123     		movs	r3, #1
 2998 002a 5FE0     		b	.L142
 2999              	.L141:
1602:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1604:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3000              		.loc 1 1604 0
 3001 002c FB68     		ldr	r3, [r7, #12]
 3002 002e 4022     		movs	r2, #64
 3003 0030 9B5C     		ldrb	r3, [r3, r2]
 3004 0032 012B     		cmp	r3, #1
 3005 0034 01D1     		bne	.L143
 3006              		.loc 1 1604 0 is_stmt 0 discriminator 1
 3007 0036 0223     		movs	r3, #2
 3008 0038 58E0     		b	.L142
 3009              	.L143:
 3010              		.loc 1 1604 0 discriminator 2
 3011 003a FB68     		ldr	r3, [r7, #12]
 3012 003c 4022     		movs	r2, #64
 3013 003e 0121     		movs	r1, #1
 3014 0040 9954     		strb	r1, [r3, r2]
1605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1606:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 3015              		.loc 1 1606 0 is_stmt 1 discriminator 2
 3016 0042 FB68     		ldr	r3, [r7, #12]
 3017 0044 4122     		movs	r2, #65
 3018 0046 2121     		movs	r1, #33
 3019 0048 9954     		strb	r1, [r3, r2]
1607:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3020              		.loc 1 1607 0 discriminator 2
 3021 004a FB68     		ldr	r3, [r7, #12]
 3022 004c 4222     		movs	r2, #66
 3023 004e 2021     		movs	r1, #32
 3024 0050 9954     		strb	r1, [r3, r2]
1608:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3025              		.loc 1 1608 0 discriminator 2
 3026 0052 FB68     		ldr	r3, [r7, #12]
 3027 0054 0022     		movs	r2, #0
 3028 0056 5A64     		str	r2, [r3, #68]
1609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1610:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1611:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 3029              		.loc 1 1611 0 discriminator 2
 3030 0058 FB68     		ldr	r3, [r7, #12]
 3031 005a BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccqg4Whx.s 			page 82


 3032 005c 5A62     		str	r2, [r3, #36]
1612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3033              		.loc 1 1612 0 discriminator 2
 3034 005e FB68     		ldr	r3, [r7, #12]
 3035 0060 BA1D     		adds	r2, r7, #6
 3036 0062 1288     		ldrh	r2, [r2]
 3037 0064 5A85     		strh	r2, [r3, #42]
1613:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3038              		.loc 1 1613 0 discriminator 2
 3039 0066 FB68     		ldr	r3, [r7, #12]
 3040 0068 5B8D     		ldrh	r3, [r3, #42]
 3041 006a 9AB2     		uxth	r2, r3
 3042 006c FB68     		ldr	r3, [r7, #12]
 3043 006e 1A85     		strh	r2, [r3, #40]
1614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3044              		.loc 1 1614 0 discriminator 2
 3045 0070 FB68     		ldr	r3, [r7, #12]
 3046 0072 204A     		ldr	r2, .L144
 3047 0074 DA62     		str	r2, [r3, #44]
1615:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3048              		.loc 1 1615 0 discriminator 2
 3049 0076 FB68     		ldr	r3, [r7, #12]
 3050 0078 1F4A     		ldr	r2, .L144+4
 3051 007a 5A63     		str	r2, [r3, #52]
1616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1617:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
1618:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
 3052              		.loc 1 1618 0 discriminator 2
 3053 007c FB68     		ldr	r3, [r7, #12]
 3054 007e 9B6B     		ldr	r3, [r3, #56]
 3055 0080 1E4A     		ldr	r2, .L144+8
 3056 0082 9A62     		str	r2, [r3, #40]
1619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1620:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the DMA error callback */
1621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
 3057              		.loc 1 1621 0 discriminator 2
 3058 0084 FB68     		ldr	r3, [r7, #12]
 3059 0086 9B6B     		ldr	r3, [r3, #56]
 3060 0088 1D4A     		ldr	r2, .L144+12
 3061 008a 1A63     		str	r2, [r3, #48]
1622:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1623:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
1624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
 3062              		.loc 1 1624 0 discriminator 2
 3063 008c FB68     		ldr	r3, [r7, #12]
 3064 008e 9B6B     		ldr	r3, [r3, #56]
 3065 0090 0022     		movs	r2, #0
 3066 0092 DA62     		str	r2, [r3, #44]
1625:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
 3067              		.loc 1 1625 0 discriminator 2
 3068 0094 FB68     		ldr	r3, [r7, #12]
 3069 0096 9B6B     		ldr	r3, [r3, #56]
 3070 0098 0022     		movs	r2, #0
 3071 009a 5A63     		str	r2, [r3, #52]
1626:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1627:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable the DMA channel */
1628:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
ARM GAS  /tmp/ccqg4Whx.s 			page 83


 3072              		.loc 1 1628 0 discriminator 2
 3073 009c FB68     		ldr	r3, [r7, #12]
 3074 009e 986B     		ldr	r0, [r3, #56]
 3075 00a0 B968     		ldr	r1, [r7, #8]
 3076 00a2 FB68     		ldr	r3, [r7, #12]
 3077 00a4 1B68     		ldr	r3, [r3]
 3078 00a6 2833     		adds	r3, r3, #40
 3079 00a8 1A00     		movs	r2, r3
 3080 00aa FB68     		ldr	r3, [r7, #12]
 3081 00ac 1B8D     		ldrh	r3, [r3, #40]
 3082 00ae FFF7FEFF 		bl	HAL_DMA_Start_IT
1629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1630:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1631:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 3083              		.loc 1 1631 0 discriminator 2
 3084 00b2 FB68     		ldr	r3, [r7, #12]
 3085 00b4 1B68     		ldr	r3, [r3]
 3086 00b6 5A68     		ldr	r2, [r3, #4]
 3087 00b8 FB68     		ldr	r3, [r7, #12]
 3088 00ba 1B68     		ldr	r3, [r3]
 3089 00bc 1149     		ldr	r1, .L144+16
 3090 00be 0A40     		ands	r2, r1
 3091 00c0 5A60     		str	r2, [r3, #4]
1632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1633:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3092              		.loc 1 1634 0 discriminator 2
 3093 00c2 FB68     		ldr	r3, [r7, #12]
 3094 00c4 4022     		movs	r2, #64
 3095 00c6 0021     		movs	r1, #0
 3096 00c8 9954     		strb	r1, [r3, r2]
1635:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1636:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1638:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
1639:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
1640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 3097              		.loc 1 1640 0 discriminator 2
 3098 00ca FB68     		ldr	r3, [r7, #12]
 3099 00cc 0421     		movs	r1, #4
 3100 00ce 1800     		movs	r0, r3
 3101 00d0 FFF7FEFF 		bl	I2C_Enable_IRQ
1641:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable DMA Request */
1643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
 3102              		.loc 1 1643 0 discriminator 2
 3103 00d4 FB68     		ldr	r3, [r7, #12]
 3104 00d6 1B68     		ldr	r3, [r3]
 3105 00d8 1A68     		ldr	r2, [r3]
 3106 00da FB68     		ldr	r3, [r7, #12]
 3107 00dc 1B68     		ldr	r3, [r3]
 3108 00de 8021     		movs	r1, #128
 3109 00e0 C901     		lsls	r1, r1, #7
 3110 00e2 0A43     		orrs	r2, r1
 3111 00e4 1A60     		str	r2, [r3]
1644:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
ARM GAS  /tmp/ccqg4Whx.s 			page 84


 3112              		.loc 1 1645 0 discriminator 2
 3113 00e6 0023     		movs	r3, #0
 3114 00e8 00E0     		b	.L142
 3115              	.L139:
1646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1647:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1649:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 3116              		.loc 1 1649 0
 3117 00ea 0223     		movs	r3, #2
 3118              	.L142:
1650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 3119              		.loc 1 1651 0
 3120 00ec 1800     		movs	r0, r3
 3121 00ee BD46     		mov	sp, r7
 3122 00f0 04B0     		add	sp, sp, #16
 3123              		@ sp needed
 3124 00f2 80BD     		pop	{r7, pc}
 3125              	.L145:
 3126              		.align	2
 3127              	.L144:
 3128 00f4 0000FFFF 		.word	-65536
 3129 00f8 00000000 		.word	I2C_Slave_ISR_DMA
 3130 00fc 00000000 		.word	I2C_DMASlaveTransmitCplt
 3131 0100 00000000 		.word	I2C_DMAError
 3132 0104 FF7FFFFF 		.word	-32769
 3133              		.cfi_endproc
 3134              	.LFE51:
 3136              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3137              		.align	1
 3138              		.global	HAL_I2C_Slave_Receive_DMA
 3139              		.syntax unified
 3140              		.code	16
 3141              		.thumb_func
 3142              		.fpu softvfp
 3144              	HAL_I2C_Slave_Receive_DMA:
 3145              	.LFB52:
1652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1653:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
1655:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1656:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1658:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1659:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1660:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1662:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 3146              		.loc 1 1662 0
 3147              		.cfi_startproc
 3148              		@ args = 0, pretend = 0, frame = 16
 3149              		@ frame_needed = 1, uses_anonymous_args = 0
 3150 0000 80B5     		push	{r7, lr}
 3151              		.cfi_def_cfa_offset 8
 3152              		.cfi_offset 7, -8
 3153              		.cfi_offset 14, -4
ARM GAS  /tmp/ccqg4Whx.s 			page 85


 3154 0002 84B0     		sub	sp, sp, #16
 3155              		.cfi_def_cfa_offset 24
 3156 0004 00AF     		add	r7, sp, #0
 3157              		.cfi_def_cfa_register 7
 3158 0006 F860     		str	r0, [r7, #12]
 3159 0008 B960     		str	r1, [r7, #8]
 3160 000a BB1D     		adds	r3, r7, #6
 3161 000c 1A80     		strh	r2, [r3]
1663:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 3162              		.loc 1 1663 0
 3163 000e FB68     		ldr	r3, [r7, #12]
 3164 0010 4122     		movs	r2, #65
 3165 0012 9B5C     		ldrb	r3, [r3, r2]
 3166 0014 DBB2     		uxtb	r3, r3
 3167 0016 202B     		cmp	r3, #32
 3168 0018 67D1     		bne	.L147
1664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1665:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 3169              		.loc 1 1665 0
 3170 001a BB68     		ldr	r3, [r7, #8]
 3171 001c 002B     		cmp	r3, #0
 3172 001e 03D0     		beq	.L148
 3173              		.loc 1 1665 0 is_stmt 0 discriminator 1
 3174 0020 BB1D     		adds	r3, r7, #6
 3175 0022 1B88     		ldrh	r3, [r3]
 3176 0024 002B     		cmp	r3, #0
 3177 0026 01D1     		bne	.L149
 3178              	.L148:
1666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 3179              		.loc 1 1667 0 is_stmt 1
 3180 0028 0123     		movs	r3, #1
 3181 002a 5FE0     		b	.L150
 3182              	.L149:
1668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1670:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3183              		.loc 1 1670 0
 3184 002c FB68     		ldr	r3, [r7, #12]
 3185 002e 4022     		movs	r2, #64
 3186 0030 9B5C     		ldrb	r3, [r3, r2]
 3187 0032 012B     		cmp	r3, #1
 3188 0034 01D1     		bne	.L151
 3189              		.loc 1 1670 0 is_stmt 0 discriminator 1
 3190 0036 0223     		movs	r3, #2
 3191 0038 58E0     		b	.L150
 3192              	.L151:
 3193              		.loc 1 1670 0 discriminator 2
 3194 003a FB68     		ldr	r3, [r7, #12]
 3195 003c 4022     		movs	r2, #64
 3196 003e 0121     		movs	r1, #1
 3197 0040 9954     		strb	r1, [r3, r2]
1671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1672:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 3198              		.loc 1 1672 0 is_stmt 1 discriminator 2
 3199 0042 FB68     		ldr	r3, [r7, #12]
 3200 0044 4122     		movs	r2, #65
ARM GAS  /tmp/ccqg4Whx.s 			page 86


 3201 0046 2221     		movs	r1, #34
 3202 0048 9954     		strb	r1, [r3, r2]
1673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3203              		.loc 1 1673 0 discriminator 2
 3204 004a FB68     		ldr	r3, [r7, #12]
 3205 004c 4222     		movs	r2, #66
 3206 004e 2021     		movs	r1, #32
 3207 0050 9954     		strb	r1, [r3, r2]
1674:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3208              		.loc 1 1674 0 discriminator 2
 3209 0052 FB68     		ldr	r3, [r7, #12]
 3210 0054 0022     		movs	r2, #0
 3211 0056 5A64     		str	r2, [r3, #68]
1675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1676:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1677:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 3212              		.loc 1 1677 0 discriminator 2
 3213 0058 FB68     		ldr	r3, [r7, #12]
 3214 005a BA68     		ldr	r2, [r7, #8]
 3215 005c 5A62     		str	r2, [r3, #36]
1678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3216              		.loc 1 1678 0 discriminator 2
 3217 005e FB68     		ldr	r3, [r7, #12]
 3218 0060 BA1D     		adds	r2, r7, #6
 3219 0062 1288     		ldrh	r2, [r2]
 3220 0064 5A85     		strh	r2, [r3, #42]
1679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3221              		.loc 1 1679 0 discriminator 2
 3222 0066 FB68     		ldr	r3, [r7, #12]
 3223 0068 5B8D     		ldrh	r3, [r3, #42]
 3224 006a 9AB2     		uxth	r2, r3
 3225 006c FB68     		ldr	r3, [r7, #12]
 3226 006e 1A85     		strh	r2, [r3, #40]
1680:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3227              		.loc 1 1680 0 discriminator 2
 3228 0070 FB68     		ldr	r3, [r7, #12]
 3229 0072 204A     		ldr	r2, .L152
 3230 0074 DA62     		str	r2, [r3, #44]
1681:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3231              		.loc 1 1681 0 discriminator 2
 3232 0076 FB68     		ldr	r3, [r7, #12]
 3233 0078 1F4A     		ldr	r2, .L152+4
 3234 007a 5A63     		str	r2, [r3, #52]
1682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
1684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
 3235              		.loc 1 1684 0 discriminator 2
 3236 007c FB68     		ldr	r3, [r7, #12]
 3237 007e DB6B     		ldr	r3, [r3, #60]
 3238 0080 1E4A     		ldr	r2, .L152+8
 3239 0082 9A62     		str	r2, [r3, #40]
1685:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the DMA error callback */
1687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
 3240              		.loc 1 1687 0 discriminator 2
 3241 0084 FB68     		ldr	r3, [r7, #12]
 3242 0086 DB6B     		ldr	r3, [r3, #60]
ARM GAS  /tmp/ccqg4Whx.s 			page 87


 3243 0088 1D4A     		ldr	r2, .L152+12
 3244 008a 1A63     		str	r2, [r3, #48]
1688:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1689:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
1690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
 3245              		.loc 1 1690 0 discriminator 2
 3246 008c FB68     		ldr	r3, [r7, #12]
 3247 008e DB6B     		ldr	r3, [r3, #60]
 3248 0090 0022     		movs	r2, #0
 3249 0092 DA62     		str	r2, [r3, #44]
1691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
 3250              		.loc 1 1691 0 discriminator 2
 3251 0094 FB68     		ldr	r3, [r7, #12]
 3252 0096 DB6B     		ldr	r3, [r3, #60]
 3253 0098 0022     		movs	r2, #0
 3254 009a 5A63     		str	r2, [r3, #52]
1692:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1693:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable the DMA channel */
1694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
 3255              		.loc 1 1694 0 discriminator 2
 3256 009c FB68     		ldr	r3, [r7, #12]
 3257 009e D86B     		ldr	r0, [r3, #60]
 3258 00a0 FB68     		ldr	r3, [r7, #12]
 3259 00a2 1B68     		ldr	r3, [r3]
 3260 00a4 2433     		adds	r3, r3, #36
 3261 00a6 1900     		movs	r1, r3
 3262 00a8 BA68     		ldr	r2, [r7, #8]
 3263 00aa FB68     		ldr	r3, [r7, #12]
 3264 00ac 1B8D     		ldrh	r3, [r3, #40]
 3265 00ae FFF7FEFF 		bl	HAL_DMA_Start_IT
1695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1696:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1697:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 3266              		.loc 1 1697 0 discriminator 2
 3267 00b2 FB68     		ldr	r3, [r7, #12]
 3268 00b4 1B68     		ldr	r3, [r3]
 3269 00b6 5A68     		ldr	r2, [r3, #4]
 3270 00b8 FB68     		ldr	r3, [r7, #12]
 3271 00ba 1B68     		ldr	r3, [r3]
 3272 00bc 1149     		ldr	r1, .L152+16
 3273 00be 0A40     		ands	r2, r1
 3274 00c0 5A60     		str	r2, [r3, #4]
1698:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1699:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3275              		.loc 1 1700 0 discriminator 2
 3276 00c2 FB68     		ldr	r3, [r7, #12]
 3277 00c4 4022     		movs	r2, #64
 3278 00c6 0021     		movs	r1, #0
 3279 00c8 9954     		strb	r1, [r3, r2]
1701:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1702:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1703:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
1705:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
1706:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 3280              		.loc 1 1706 0 discriminator 2
ARM GAS  /tmp/ccqg4Whx.s 			page 88


 3281 00ca FB68     		ldr	r3, [r7, #12]
 3282 00cc 0421     		movs	r1, #4
 3283 00ce 1800     		movs	r0, r3
 3284 00d0 FFF7FEFF 		bl	I2C_Enable_IRQ
1707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1708:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable DMA Request */
1709:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 3285              		.loc 1 1709 0 discriminator 2
 3286 00d4 FB68     		ldr	r3, [r7, #12]
 3287 00d6 1B68     		ldr	r3, [r3]
 3288 00d8 1A68     		ldr	r2, [r3]
 3289 00da FB68     		ldr	r3, [r7, #12]
 3290 00dc 1B68     		ldr	r3, [r3]
 3291 00de 8021     		movs	r1, #128
 3292 00e0 0902     		lsls	r1, r1, #8
 3293 00e2 0A43     		orrs	r2, r1
 3294 00e4 1A60     		str	r2, [r3]
1710:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1711:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 3295              		.loc 1 1711 0 discriminator 2
 3296 00e6 0023     		movs	r3, #0
 3297 00e8 00E0     		b	.L150
 3298              	.L147:
1712:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1713:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1714:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1715:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 3299              		.loc 1 1715 0
 3300 00ea 0223     		movs	r3, #2
 3301              	.L150:
1716:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1717:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 3302              		.loc 1 1717 0
 3303 00ec 1800     		movs	r0, r3
 3304 00ee BD46     		mov	sp, r7
 3305 00f0 04B0     		add	sp, sp, #16
 3306              		@ sp needed
 3307 00f2 80BD     		pop	{r7, pc}
 3308              	.L153:
 3309              		.align	2
 3310              	.L152:
 3311 00f4 0000FFFF 		.word	-65536
 3312 00f8 00000000 		.word	I2C_Slave_ISR_DMA
 3313 00fc 00000000 		.word	I2C_DMASlaveReceiveCplt
 3314 0100 00000000 		.word	I2C_DMAError
 3315 0104 FF7FFFFF 		.word	-32769
 3316              		.cfi_endproc
 3317              	.LFE52:
 3319              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3320              		.align	1
 3321              		.global	HAL_I2C_Mem_Write
 3322              		.syntax unified
 3323              		.code	16
 3324              		.thumb_func
 3325              		.fpu softvfp
 3327              	HAL_I2C_Mem_Write:
 3328              	.LFB53:
ARM GAS  /tmp/ccqg4Whx.s 			page 89


1718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1719:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
1720:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1721:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1723:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
1725:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
1726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1727:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1728:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1731:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
1732:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 3329              		.loc 1 1732 0
 3330              		.cfi_startproc
 3331              		@ args = 12, pretend = 0, frame = 24
 3332              		@ frame_needed = 1, uses_anonymous_args = 0
 3333 0000 90B5     		push	{r4, r7, lr}
 3334              		.cfi_def_cfa_offset 12
 3335              		.cfi_offset 4, -12
 3336              		.cfi_offset 7, -8
 3337              		.cfi_offset 14, -4
 3338 0002 89B0     		sub	sp, sp, #36
 3339              		.cfi_def_cfa_offset 48
 3340 0004 02AF     		add	r7, sp, #8
 3341              		.cfi_def_cfa 7, 40
 3342 0006 F860     		str	r0, [r7, #12]
 3343 0008 0C00     		movs	r4, r1
 3344 000a 1000     		movs	r0, r2
 3345 000c 1900     		movs	r1, r3
 3346 000e 0A23     		movs	r3, #10
 3347 0010 FB18     		adds	r3, r7, r3
 3348 0012 221C     		adds	r2, r4, #0
 3349 0014 1A80     		strh	r2, [r3]
 3350 0016 0823     		movs	r3, #8
 3351 0018 FB18     		adds	r3, r7, r3
 3352 001a 021C     		adds	r2, r0, #0
 3353 001c 1A80     		strh	r2, [r3]
 3354 001e BB1D     		adds	r3, r7, #6
 3355 0020 0A1C     		adds	r2, r1, #0
 3356 0022 1A80     		strh	r2, [r3]
1733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 3357              		.loc 1 1733 0
 3358 0024 0023     		movs	r3, #0
 3359 0026 7B61     		str	r3, [r7, #20]
1734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1735:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
1736:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
1737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 3360              		.loc 1 1738 0
 3361 0028 FB68     		ldr	r3, [r7, #12]
 3362 002a 4122     		movs	r2, #65
 3363 002c 9B5C     		ldrb	r3, [r3, r2]
 3364 002e DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccqg4Whx.s 			page 90


 3365 0030 202B     		cmp	r3, #32
 3366 0032 00D0     		beq	.LCB2989
 3367 0034 1CE1     		b	.L155	@long jump
 3368              	.LCB2989:
1739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1740:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 3369              		.loc 1 1740 0
 3370 0036 BB6A     		ldr	r3, [r7, #40]
 3371 0038 002B     		cmp	r3, #0
 3372 003a 04D0     		beq	.L156
 3373              		.loc 1 1740 0 is_stmt 0 discriminator 1
 3374 003c 2C23     		movs	r3, #44
 3375 003e FB18     		adds	r3, r7, r3
 3376 0040 1B88     		ldrh	r3, [r3]
 3377 0042 002B     		cmp	r3, #0
 3378 0044 01D1     		bne	.L157
 3379              	.L156:
1741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 3380              		.loc 1 1742 0 is_stmt 1
 3381 0046 0123     		movs	r3, #1
 3382 0048 13E1     		b	.L158
 3383              	.L157:
1743:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1744:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3384              		.loc 1 1746 0
 3385 004a FB68     		ldr	r3, [r7, #12]
 3386 004c 4022     		movs	r2, #64
 3387 004e 9B5C     		ldrb	r3, [r3, r2]
 3388 0050 012B     		cmp	r3, #1
 3389 0052 01D1     		bne	.L159
 3390              		.loc 1 1746 0 is_stmt 0 discriminator 1
 3391 0054 0223     		movs	r3, #2
 3392 0056 0CE1     		b	.L158
 3393              	.L159:
 3394              		.loc 1 1746 0 discriminator 2
 3395 0058 FB68     		ldr	r3, [r7, #12]
 3396 005a 4022     		movs	r2, #64
 3397 005c 0121     		movs	r1, #1
 3398 005e 9954     		strb	r1, [r3, r2]
1747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 3399              		.loc 1 1749 0 is_stmt 1 discriminator 2
 3400 0060 FFF7FEFF 		bl	HAL_GetTick
 3401 0064 0300     		movs	r3, r0
 3402 0066 7B61     		str	r3, [r7, #20]
1750:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1751:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
 3403              		.loc 1 1751 0 discriminator 2
 3404 0068 8023     		movs	r3, #128
 3405 006a 1902     		lsls	r1, r3, #8
 3406 006c F868     		ldr	r0, [r7, #12]
 3407 006e 7B69     		ldr	r3, [r7, #20]
 3408 0070 0093     		str	r3, [sp]
ARM GAS  /tmp/ccqg4Whx.s 			page 91


 3409 0072 1923     		movs	r3, #25
 3410 0074 0122     		movs	r2, #1
 3411 0076 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3412 007a 031E     		subs	r3, r0, #0
 3413 007c 01D0     		beq	.L160
1752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 3414              		.loc 1 1753 0
 3415 007e 0323     		movs	r3, #3
 3416 0080 F7E0     		b	.L158
 3417              	.L160:
1754:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1755:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 3418              		.loc 1 1756 0
 3419 0082 FB68     		ldr	r3, [r7, #12]
 3420 0084 4122     		movs	r2, #65
 3421 0086 2121     		movs	r1, #33
 3422 0088 9954     		strb	r1, [r3, r2]
1757:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3423              		.loc 1 1757 0
 3424 008a FB68     		ldr	r3, [r7, #12]
 3425 008c 4222     		movs	r2, #66
 3426 008e 4021     		movs	r1, #64
 3427 0090 9954     		strb	r1, [r3, r2]
1758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3428              		.loc 1 1758 0
 3429 0092 FB68     		ldr	r3, [r7, #12]
 3430 0094 0022     		movs	r2, #0
 3431 0096 5A64     		str	r2, [r3, #68]
1759:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1761:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 3432              		.loc 1 1761 0
 3433 0098 FB68     		ldr	r3, [r7, #12]
 3434 009a BA6A     		ldr	r2, [r7, #40]
 3435 009c 5A62     		str	r2, [r3, #36]
1762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3436              		.loc 1 1762 0
 3437 009e FB68     		ldr	r3, [r7, #12]
 3438 00a0 2C22     		movs	r2, #44
 3439 00a2 BA18     		adds	r2, r7, r2
 3440 00a4 1288     		ldrh	r2, [r2]
 3441 00a6 5A85     		strh	r2, [r3, #42]
1763:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3442              		.loc 1 1763 0
 3443 00a8 FB68     		ldr	r3, [r7, #12]
 3444 00aa 0022     		movs	r2, #0
 3445 00ac 5A63     		str	r2, [r3, #52]
1764:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
1766:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
 3446              		.loc 1 1766 0
 3447 00ae BB1D     		adds	r3, r7, #6
 3448 00b0 1C88     		ldrh	r4, [r3]
 3449 00b2 0823     		movs	r3, #8
 3450 00b4 FB18     		adds	r3, r7, r3
ARM GAS  /tmp/ccqg4Whx.s 			page 92


 3451 00b6 1A88     		ldrh	r2, [r3]
 3452 00b8 0A23     		movs	r3, #10
 3453 00ba FB18     		adds	r3, r7, r3
 3454 00bc 1988     		ldrh	r1, [r3]
 3455 00be F868     		ldr	r0, [r7, #12]
 3456 00c0 7B69     		ldr	r3, [r7, #20]
 3457 00c2 0193     		str	r3, [sp, #4]
 3458 00c4 3B6B     		ldr	r3, [r7, #48]
 3459 00c6 0093     		str	r3, [sp]
 3460 00c8 2300     		movs	r3, r4
 3461 00ca FFF7FEFF 		bl	I2C_RequestMemoryWrite
 3462 00ce 031E     		subs	r3, r0, #0
 3463 00d0 0FD0     		beq	.L161
1767:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 3464              		.loc 1 1768 0
 3465 00d2 FB68     		ldr	r3, [r7, #12]
 3466 00d4 5B6C     		ldr	r3, [r3, #68]
 3467 00d6 042B     		cmp	r3, #4
 3468 00d8 05D1     		bne	.L162
1769:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
1771:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 3469              		.loc 1 1771 0
 3470 00da FB68     		ldr	r3, [r7, #12]
 3471 00dc 4022     		movs	r2, #64
 3472 00de 0021     		movs	r1, #0
 3473 00e0 9954     		strb	r1, [r3, r2]
1772:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 3474              		.loc 1 1772 0
 3475 00e2 0123     		movs	r3, #1
 3476 00e4 C5E0     		b	.L158
 3477              	.L162:
1773:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
1775:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1776:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
1777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 3478              		.loc 1 1777 0
 3479 00e6 FB68     		ldr	r3, [r7, #12]
 3480 00e8 4022     		movs	r2, #64
 3481 00ea 0021     		movs	r1, #0
 3482 00ec 9954     		strb	r1, [r3, r2]
1778:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 3483              		.loc 1 1778 0
 3484 00ee 0323     		movs	r3, #3
 3485 00f0 BFE0     		b	.L158
 3486              	.L161:
1779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1780:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1781:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1782:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1783:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 3487              		.loc 1 1783 0
 3488 00f2 FB68     		ldr	r3, [r7, #12]
 3489 00f4 5B8D     		ldrh	r3, [r3, #42]
 3490 00f6 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccqg4Whx.s 			page 93


 3491 00f8 FF2B     		cmp	r3, #255
 3492 00fa 11D9     		bls	.L163
1784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1785:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 3493              		.loc 1 1785 0
 3494 00fc FB68     		ldr	r3, [r7, #12]
 3495 00fe FF22     		movs	r2, #255
 3496 0100 1A85     		strh	r2, [r3, #40]
1786:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 3497              		.loc 1 1786 0
 3498 0102 FB68     		ldr	r3, [r7, #12]
 3499 0104 1B8D     		ldrh	r3, [r3, #40]
 3500 0106 DAB2     		uxtb	r2, r3
 3501 0108 8023     		movs	r3, #128
 3502 010a 5C04     		lsls	r4, r3, #17
 3503 010c 0A23     		movs	r3, #10
 3504 010e FB18     		adds	r3, r7, r3
 3505 0110 1988     		ldrh	r1, [r3]
 3506 0112 F868     		ldr	r0, [r7, #12]
 3507 0114 0023     		movs	r3, #0
 3508 0116 0093     		str	r3, [sp]
 3509 0118 2300     		movs	r3, r4
 3510 011a FFF7FEFF 		bl	I2C_TransferConfig
 3511 011e 12E0     		b	.L170
 3512              	.L163:
1787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1788:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 3513              		.loc 1 1790 0
 3514 0120 FB68     		ldr	r3, [r7, #12]
 3515 0122 5B8D     		ldrh	r3, [r3, #42]
 3516 0124 9AB2     		uxth	r2, r3
 3517 0126 FB68     		ldr	r3, [r7, #12]
 3518 0128 1A85     		strh	r2, [r3, #40]
1791:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 3519              		.loc 1 1791 0
 3520 012a FB68     		ldr	r3, [r7, #12]
 3521 012c 1B8D     		ldrh	r3, [r3, #40]
 3522 012e DAB2     		uxtb	r2, r3
 3523 0130 8023     		movs	r3, #128
 3524 0132 9C04     		lsls	r4, r3, #18
 3525 0134 0A23     		movs	r3, #10
 3526 0136 FB18     		adds	r3, r7, r3
 3527 0138 1988     		ldrh	r1, [r3]
 3528 013a F868     		ldr	r0, [r7, #12]
 3529 013c 0023     		movs	r3, #0
 3530 013e 0093     		str	r3, [sp]
 3531 0140 2300     		movs	r3, r4
 3532 0142 FFF7FEFF 		bl	I2C_TransferConfig
 3533              	.L170:
1792:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1793:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     do
1795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/ccqg4Whx.s 			page 94


 3534              		.loc 1 1797 0
 3535 0146 7A69     		ldr	r2, [r7, #20]
 3536 0148 396B     		ldr	r1, [r7, #48]
 3537 014a FB68     		ldr	r3, [r7, #12]
 3538 014c 1800     		movs	r0, r3
 3539 014e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 3540 0152 031E     		subs	r3, r0, #0
 3541 0154 07D0     		beq	.L165
1798:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 3542              		.loc 1 1799 0
 3543 0156 FB68     		ldr	r3, [r7, #12]
 3544 0158 5B6C     		ldr	r3, [r3, #68]
 3545 015a 042B     		cmp	r3, #4
 3546 015c 01D1     		bne	.L166
1800:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1801:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_ERROR;
 3547              		.loc 1 1801 0
 3548 015e 0123     		movs	r3, #1
 3549 0160 87E0     		b	.L158
 3550              	.L166:
1802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1803:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
1804:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 3551              		.loc 1 1805 0
 3552 0162 0323     		movs	r3, #3
 3553 0164 85E0     		b	.L158
 3554              	.L165:
1806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1808:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
1810:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 3555              		.loc 1 1810 0
 3556 0166 FB68     		ldr	r3, [r7, #12]
 3557 0168 5B6A     		ldr	r3, [r3, #36]
 3558 016a 591C     		adds	r1, r3, #1
 3559 016c FA68     		ldr	r2, [r7, #12]
 3560 016e 5162     		str	r1, [r2, #36]
 3561 0170 1A78     		ldrb	r2, [r3]
 3562 0172 FB68     		ldr	r3, [r7, #12]
 3563 0174 1B68     		ldr	r3, [r3]
 3564 0176 9A62     		str	r2, [r3, #40]
1811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 3565              		.loc 1 1811 0
 3566 0178 FB68     		ldr	r3, [r7, #12]
 3567 017a 5B8D     		ldrh	r3, [r3, #42]
 3568 017c 9BB2     		uxth	r3, r3
 3569 017e 013B     		subs	r3, r3, #1
 3570 0180 9AB2     		uxth	r2, r3
 3571 0182 FB68     		ldr	r3, [r7, #12]
 3572 0184 5A85     		strh	r2, [r3, #42]
1812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 3573              		.loc 1 1812 0
 3574 0186 FB68     		ldr	r3, [r7, #12]
 3575 0188 1B8D     		ldrh	r3, [r3, #40]
ARM GAS  /tmp/ccqg4Whx.s 			page 95


 3576 018a 013B     		subs	r3, r3, #1
 3577 018c 9AB2     		uxth	r2, r3
 3578 018e FB68     		ldr	r3, [r7, #12]
 3579 0190 1A85     		strh	r2, [r3, #40]
1813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1814:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 3580              		.loc 1 1814 0
 3581 0192 FB68     		ldr	r3, [r7, #12]
 3582 0194 1B8D     		ldrh	r3, [r3, #40]
 3583 0196 002B     		cmp	r3, #0
 3584 0198 3BD1     		bne	.L167
 3585              		.loc 1 1814 0 is_stmt 0 discriminator 1
 3586 019a FB68     		ldr	r3, [r7, #12]
 3587 019c 5B8D     		ldrh	r3, [r3, #42]
 3588 019e 9BB2     		uxth	r3, r3
 3589 01a0 002B     		cmp	r3, #0
 3590 01a2 36D0     		beq	.L167
1815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1816:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 3591              		.loc 1 1817 0 is_stmt 1
 3592 01a4 3A6B     		ldr	r2, [r7, #48]
 3593 01a6 F868     		ldr	r0, [r7, #12]
 3594 01a8 7B69     		ldr	r3, [r7, #20]
 3595 01aa 0093     		str	r3, [sp]
 3596 01ac 1300     		movs	r3, r2
 3597 01ae 0022     		movs	r2, #0
 3598 01b0 8021     		movs	r1, #128
 3599 01b2 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3600 01b6 031E     		subs	r3, r0, #0
 3601 01b8 01D0     		beq	.L168
1818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 3602              		.loc 1 1819 0
 3603 01ba 0323     		movs	r3, #3
 3604 01bc 59E0     		b	.L158
 3605              	.L168:
1820:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1822:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
 3606              		.loc 1 1822 0
 3607 01be FB68     		ldr	r3, [r7, #12]
 3608 01c0 5B8D     		ldrh	r3, [r3, #42]
 3609 01c2 9BB2     		uxth	r3, r3
 3610 01c4 FF2B     		cmp	r3, #255
 3611 01c6 11D9     		bls	.L169
1823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1824:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 3612              		.loc 1 1824 0
 3613 01c8 FB68     		ldr	r3, [r7, #12]
 3614 01ca FF22     		movs	r2, #255
 3615 01cc 1A85     		strh	r2, [r3, #40]
1825:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 3616              		.loc 1 1825 0
 3617 01ce FB68     		ldr	r3, [r7, #12]
 3618 01d0 1B8D     		ldrh	r3, [r3, #40]
 3619 01d2 DAB2     		uxtb	r2, r3
ARM GAS  /tmp/ccqg4Whx.s 			page 96


 3620 01d4 8023     		movs	r3, #128
 3621 01d6 5C04     		lsls	r4, r3, #17
 3622 01d8 0A23     		movs	r3, #10
 3623 01da FB18     		adds	r3, r7, r3
 3624 01dc 1988     		ldrh	r1, [r3]
 3625 01de F868     		ldr	r0, [r7, #12]
 3626 01e0 0023     		movs	r3, #0
 3627 01e2 0093     		str	r3, [sp]
 3628 01e4 2300     		movs	r3, r4
 3629 01e6 FFF7FEFF 		bl	I2C_TransferConfig
 3630 01ea 12E0     		b	.L167
 3631              	.L169:
1826:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1827:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
1828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1829:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 3632              		.loc 1 1829 0
 3633 01ec FB68     		ldr	r3, [r7, #12]
 3634 01ee 5B8D     		ldrh	r3, [r3, #42]
 3635 01f0 9AB2     		uxth	r2, r3
 3636 01f2 FB68     		ldr	r3, [r7, #12]
 3637 01f4 1A85     		strh	r2, [r3, #40]
1830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 3638              		.loc 1 1830 0
 3639 01f6 FB68     		ldr	r3, [r7, #12]
 3640 01f8 1B8D     		ldrh	r3, [r3, #40]
 3641 01fa DAB2     		uxtb	r2, r3
 3642 01fc 8023     		movs	r3, #128
 3643 01fe 9C04     		lsls	r4, r3, #18
 3644 0200 0A23     		movs	r3, #10
 3645 0202 FB18     		adds	r3, r7, r3
 3646 0204 1988     		ldrh	r1, [r3]
 3647 0206 F868     		ldr	r0, [r7, #12]
 3648 0208 0023     		movs	r3, #0
 3649 020a 0093     		str	r3, [sp]
 3650 020c 2300     		movs	r3, r4
 3651 020e FFF7FEFF 		bl	I2C_TransferConfig
 3652              	.L167:
1831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1833:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1835:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
 3653              		.loc 1 1835 0
 3654 0212 FB68     		ldr	r3, [r7, #12]
 3655 0214 5B8D     		ldrh	r3, [r3, #42]
 3656 0216 9BB2     		uxth	r3, r3
 3657 0218 002B     		cmp	r3, #0
 3658 021a 94D1     		bne	.L170
1836:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1837:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1838:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
1839:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 3659              		.loc 1 1839 0
 3660 021c 7A69     		ldr	r2, [r7, #20]
 3661 021e 396B     		ldr	r1, [r7, #48]
 3662 0220 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 97


 3663 0222 1800     		movs	r0, r3
 3664 0224 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 3665 0228 031E     		subs	r3, r0, #0
 3666 022a 07D0     		beq	.L171
1840:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 3667              		.loc 1 1841 0
 3668 022c FB68     		ldr	r3, [r7, #12]
 3669 022e 5B6C     		ldr	r3, [r3, #68]
 3670 0230 042B     		cmp	r3, #4
 3671 0232 01D1     		bne	.L172
1842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 3672              		.loc 1 1843 0
 3673 0234 0123     		movs	r3, #1
 3674 0236 1CE0     		b	.L158
 3675              	.L172:
1844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
1846:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1847:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 3676              		.loc 1 1847 0
 3677 0238 0323     		movs	r3, #3
 3678 023a 1AE0     		b	.L158
 3679              	.L171:
1848:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1849:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1850:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP Flag */
1852:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 3680              		.loc 1 1852 0
 3681 023c FB68     		ldr	r3, [r7, #12]
 3682 023e 1B68     		ldr	r3, [r3]
 3683 0240 2022     		movs	r2, #32
 3684 0242 DA61     		str	r2, [r3, #28]
1853:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1854:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1855:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 3685              		.loc 1 1855 0
 3686 0244 FB68     		ldr	r3, [r7, #12]
 3687 0246 1B68     		ldr	r3, [r3]
 3688 0248 5A68     		ldr	r2, [r3, #4]
 3689 024a FB68     		ldr	r3, [r7, #12]
 3690 024c 1B68     		ldr	r3, [r3]
 3691 024e 0B49     		ldr	r1, .L173
 3692 0250 0A40     		ands	r2, r1
 3693 0252 5A60     		str	r2, [r3, #4]
1856:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1857:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 3694              		.loc 1 1857 0
 3695 0254 FB68     		ldr	r3, [r7, #12]
 3696 0256 4122     		movs	r2, #65
 3697 0258 2021     		movs	r1, #32
 3698 025a 9954     		strb	r1, [r3, r2]
1858:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 3699              		.loc 1 1858 0
 3700 025c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 98


 3701 025e 4222     		movs	r2, #66
 3702 0260 0021     		movs	r1, #0
 3703 0262 9954     		strb	r1, [r3, r2]
1859:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1860:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
1861:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3704              		.loc 1 1861 0
 3705 0264 FB68     		ldr	r3, [r7, #12]
 3706 0266 4022     		movs	r2, #64
 3707 0268 0021     		movs	r1, #0
 3708 026a 9954     		strb	r1, [r3, r2]
1862:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1863:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 3709              		.loc 1 1863 0
 3710 026c 0023     		movs	r3, #0
 3711 026e 00E0     		b	.L158
 3712              	.L155:
1864:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1865:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
1866:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1867:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 3713              		.loc 1 1867 0
 3714 0270 0223     		movs	r3, #2
 3715              	.L158:
1868:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
1869:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 3716              		.loc 1 1869 0
 3717 0272 1800     		movs	r0, r3
 3718 0274 BD46     		mov	sp, r7
 3719 0276 07B0     		add	sp, sp, #28
 3720              		@ sp needed
 3721 0278 90BD     		pop	{r4, r7, pc}
 3722              	.L174:
 3723 027a C046     		.align	2
 3724              	.L173:
 3725 027c 00E800FE 		.word	-33495040
 3726              		.cfi_endproc
 3727              	.LFE53:
 3729              		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 3730              		.align	1
 3731              		.global	HAL_I2C_Mem_Read
 3732              		.syntax unified
 3733              		.code	16
 3734              		.thumb_func
 3735              		.fpu softvfp
 3737              	HAL_I2C_Mem_Read:
 3738              	.LFB54:
1870:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1871:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
1872:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
1873:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1874:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1875:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1876:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1877:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
1878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
1879:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
ARM GAS  /tmp/ccqg4Whx.s 			page 99


1880:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1881:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1882:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
1883:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
1884:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
1885:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 3739              		.loc 1 1885 0
 3740              		.cfi_startproc
 3741              		@ args = 12, pretend = 0, frame = 24
 3742              		@ frame_needed = 1, uses_anonymous_args = 0
 3743 0000 90B5     		push	{r4, r7, lr}
 3744              		.cfi_def_cfa_offset 12
 3745              		.cfi_offset 4, -12
 3746              		.cfi_offset 7, -8
 3747              		.cfi_offset 14, -4
 3748 0002 89B0     		sub	sp, sp, #36
 3749              		.cfi_def_cfa_offset 48
 3750 0004 02AF     		add	r7, sp, #8
 3751              		.cfi_def_cfa 7, 40
 3752 0006 F860     		str	r0, [r7, #12]
 3753 0008 0C00     		movs	r4, r1
 3754 000a 1000     		movs	r0, r2
 3755 000c 1900     		movs	r1, r3
 3756 000e 0A23     		movs	r3, #10
 3757 0010 FB18     		adds	r3, r7, r3
 3758 0012 221C     		adds	r2, r4, #0
 3759 0014 1A80     		strh	r2, [r3]
 3760 0016 0823     		movs	r3, #8
 3761 0018 FB18     		adds	r3, r7, r3
 3762 001a 021C     		adds	r2, r0, #0
 3763 001c 1A80     		strh	r2, [r3]
 3764 001e BB1D     		adds	r3, r7, #6
 3765 0020 0A1C     		adds	r2, r1, #0
 3766 0022 1A80     		strh	r2, [r3]
1886:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 3767              		.loc 1 1886 0
 3768 0024 0023     		movs	r3, #0
 3769 0026 7B61     		str	r3, [r7, #20]
1887:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1888:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
1889:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
1890:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1891:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 3770              		.loc 1 1891 0
 3771 0028 FB68     		ldr	r3, [r7, #12]
 3772 002a 4122     		movs	r2, #65
 3773 002c 9B5C     		ldrb	r3, [r3, r2]
 3774 002e DBB2     		uxtb	r3, r3
 3775 0030 202B     		cmp	r3, #32
 3776 0032 00D0     		beq	.LCB3370
 3777 0034 1CE1     		b	.L176	@long jump
 3778              	.LCB3370:
1892:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
1893:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 3779              		.loc 1 1893 0
 3780 0036 BB6A     		ldr	r3, [r7, #40]
 3781 0038 002B     		cmp	r3, #0
ARM GAS  /tmp/ccqg4Whx.s 			page 100


 3782 003a 04D0     		beq	.L177
 3783              		.loc 1 1893 0 is_stmt 0 discriminator 1
 3784 003c 2C23     		movs	r3, #44
 3785 003e FB18     		adds	r3, r7, r3
 3786 0040 1B88     		ldrh	r3, [r3]
 3787 0042 002B     		cmp	r3, #0
 3788 0044 01D1     		bne	.L178
 3789              	.L177:
1894:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1895:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 3790              		.loc 1 1895 0 is_stmt 1
 3791 0046 0123     		movs	r3, #1
 3792 0048 13E1     		b	.L179
 3793              	.L178:
1896:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1897:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1898:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
1899:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3794              		.loc 1 1899 0
 3795 004a FB68     		ldr	r3, [r7, #12]
 3796 004c 4022     		movs	r2, #64
 3797 004e 9B5C     		ldrb	r3, [r3, r2]
 3798 0050 012B     		cmp	r3, #1
 3799 0052 01D1     		bne	.L180
 3800              		.loc 1 1899 0 is_stmt 0 discriminator 1
 3801 0054 0223     		movs	r3, #2
 3802 0056 0CE1     		b	.L179
 3803              	.L180:
 3804              		.loc 1 1899 0 discriminator 2
 3805 0058 FB68     		ldr	r3, [r7, #12]
 3806 005a 4022     		movs	r2, #64
 3807 005c 0121     		movs	r1, #1
 3808 005e 9954     		strb	r1, [r3, r2]
1900:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1901:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1902:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 3809              		.loc 1 1902 0 is_stmt 1 discriminator 2
 3810 0060 FFF7FEFF 		bl	HAL_GetTick
 3811 0064 0300     		movs	r3, r0
 3812 0066 7B61     		str	r3, [r7, #20]
1903:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1904:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
 3813              		.loc 1 1904 0 discriminator 2
 3814 0068 8023     		movs	r3, #128
 3815 006a 1902     		lsls	r1, r3, #8
 3816 006c F868     		ldr	r0, [r7, #12]
 3817 006e 7B69     		ldr	r3, [r7, #20]
 3818 0070 0093     		str	r3, [sp]
 3819 0072 1923     		movs	r3, #25
 3820 0074 0122     		movs	r2, #1
 3821 0076 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3822 007a 031E     		subs	r3, r0, #0
 3823 007c 01D0     		beq	.L181
1905:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1906:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 3824              		.loc 1 1906 0
 3825 007e 0323     		movs	r3, #3
ARM GAS  /tmp/ccqg4Whx.s 			page 101


 3826 0080 F7E0     		b	.L179
 3827              	.L181:
1907:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1908:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1909:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 3828              		.loc 1 1909 0
 3829 0082 FB68     		ldr	r3, [r7, #12]
 3830 0084 4122     		movs	r2, #65
 3831 0086 2221     		movs	r1, #34
 3832 0088 9954     		strb	r1, [r3, r2]
1910:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3833              		.loc 1 1910 0
 3834 008a FB68     		ldr	r3, [r7, #12]
 3835 008c 4222     		movs	r2, #66
 3836 008e 4021     		movs	r1, #64
 3837 0090 9954     		strb	r1, [r3, r2]
1911:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3838              		.loc 1 1911 0
 3839 0092 FB68     		ldr	r3, [r7, #12]
 3840 0094 0022     		movs	r2, #0
 3841 0096 5A64     		str	r2, [r3, #68]
1912:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1913:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1914:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 3842              		.loc 1 1914 0
 3843 0098 FB68     		ldr	r3, [r7, #12]
 3844 009a BA6A     		ldr	r2, [r7, #40]
 3845 009c 5A62     		str	r2, [r3, #36]
1915:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3846              		.loc 1 1915 0
 3847 009e FB68     		ldr	r3, [r7, #12]
 3848 00a0 2C22     		movs	r2, #44
 3849 00a2 BA18     		adds	r2, r7, r2
 3850 00a4 1288     		ldrh	r2, [r2]
 3851 00a6 5A85     		strh	r2, [r3, #42]
1916:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3852              		.loc 1 1916 0
 3853 00a8 FB68     		ldr	r3, [r7, #12]
 3854 00aa 0022     		movs	r2, #0
 3855 00ac 5A63     		str	r2, [r3, #52]
1917:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1918:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
1919:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
 3856              		.loc 1 1919 0
 3857 00ae BB1D     		adds	r3, r7, #6
 3858 00b0 1C88     		ldrh	r4, [r3]
 3859 00b2 0823     		movs	r3, #8
 3860 00b4 FB18     		adds	r3, r7, r3
 3861 00b6 1A88     		ldrh	r2, [r3]
 3862 00b8 0A23     		movs	r3, #10
 3863 00ba FB18     		adds	r3, r7, r3
 3864 00bc 1988     		ldrh	r1, [r3]
 3865 00be F868     		ldr	r0, [r7, #12]
 3866 00c0 7B69     		ldr	r3, [r7, #20]
 3867 00c2 0193     		str	r3, [sp, #4]
 3868 00c4 3B6B     		ldr	r3, [r7, #48]
 3869 00c6 0093     		str	r3, [sp]
ARM GAS  /tmp/ccqg4Whx.s 			page 102


 3870 00c8 2300     		movs	r3, r4
 3871 00ca FFF7FEFF 		bl	I2C_RequestMemoryRead
 3872 00ce 031E     		subs	r3, r0, #0
 3873 00d0 0FD0     		beq	.L182
1920:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1921:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 3874              		.loc 1 1921 0
 3875 00d2 FB68     		ldr	r3, [r7, #12]
 3876 00d4 5B6C     		ldr	r3, [r3, #68]
 3877 00d6 042B     		cmp	r3, #4
 3878 00d8 05D1     		bne	.L183
1922:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1923:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
1924:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 3879              		.loc 1 1924 0
 3880 00da FB68     		ldr	r3, [r7, #12]
 3881 00dc 4022     		movs	r2, #64
 3882 00de 0021     		movs	r1, #0
 3883 00e0 9954     		strb	r1, [r3, r2]
1925:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 3884              		.loc 1 1925 0
 3885 00e2 0123     		movs	r3, #1
 3886 00e4 C5E0     		b	.L179
 3887              	.L183:
1926:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1927:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
1928:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1929:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
1930:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 3888              		.loc 1 1930 0
 3889 00e6 FB68     		ldr	r3, [r7, #12]
 3890 00e8 4022     		movs	r2, #64
 3891 00ea 0021     		movs	r1, #0
 3892 00ec 9954     		strb	r1, [r3, r2]
1931:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 3893              		.loc 1 1931 0
 3894 00ee 0323     		movs	r3, #3
 3895 00f0 BFE0     		b	.L179
 3896              	.L182:
1932:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1933:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1934:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1935:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
1936:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1937:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 3897              		.loc 1 1937 0
 3898 00f2 FB68     		ldr	r3, [r7, #12]
 3899 00f4 5B8D     		ldrh	r3, [r3, #42]
 3900 00f6 9BB2     		uxth	r3, r3
 3901 00f8 FF2B     		cmp	r3, #255
 3902 00fa 12D9     		bls	.L184
1938:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1939:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 3903              		.loc 1 1939 0
 3904 00fc FB68     		ldr	r3, [r7, #12]
 3905 00fe FF22     		movs	r2, #255
 3906 0100 1A85     		strh	r2, [r3, #40]
ARM GAS  /tmp/ccqg4Whx.s 			page 103


1940:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 3907              		.loc 1 1940 0
 3908 0102 FB68     		ldr	r3, [r7, #12]
 3909 0104 1B8D     		ldrh	r3, [r3, #40]
 3910 0106 DAB2     		uxtb	r2, r3
 3911 0108 8023     		movs	r3, #128
 3912 010a 5C04     		lsls	r4, r3, #17
 3913 010c 0A23     		movs	r3, #10
 3914 010e FB18     		adds	r3, r7, r3
 3915 0110 1988     		ldrh	r1, [r3]
 3916 0112 F868     		ldr	r0, [r7, #12]
 3917 0114 9023     		movs	r3, #144
 3918 0116 9B01     		lsls	r3, r3, #6
 3919 0118 0093     		str	r3, [sp]
 3920 011a 2300     		movs	r3, r4
 3921 011c FFF7FEFF 		bl	I2C_TransferConfig
 3922 0120 13E0     		b	.L190
 3923              	.L184:
1941:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1942:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
1943:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1944:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 3924              		.loc 1 1944 0
 3925 0122 FB68     		ldr	r3, [r7, #12]
 3926 0124 5B8D     		ldrh	r3, [r3, #42]
 3927 0126 9AB2     		uxth	r2, r3
 3928 0128 FB68     		ldr	r3, [r7, #12]
 3929 012a 1A85     		strh	r2, [r3, #40]
1945:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 3930              		.loc 1 1945 0
 3931 012c FB68     		ldr	r3, [r7, #12]
 3932 012e 1B8D     		ldrh	r3, [r3, #40]
 3933 0130 DAB2     		uxtb	r2, r3
 3934 0132 8023     		movs	r3, #128
 3935 0134 9C04     		lsls	r4, r3, #18
 3936 0136 0A23     		movs	r3, #10
 3937 0138 FB18     		adds	r3, r7, r3
 3938 013a 1988     		ldrh	r1, [r3]
 3939 013c F868     		ldr	r0, [r7, #12]
 3940 013e 9023     		movs	r3, #144
 3941 0140 9B01     		lsls	r3, r3, #6
 3942 0142 0093     		str	r3, [sp]
 3943 0144 2300     		movs	r3, r4
 3944 0146 FFF7FEFF 		bl	I2C_TransferConfig
 3945              	.L190:
1946:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1947:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1948:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     do
1949:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1950:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1951:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 3946              		.loc 1 1951 0
 3947 014a 3A6B     		ldr	r2, [r7, #48]
 3948 014c F868     		ldr	r0, [r7, #12]
 3949 014e 7B69     		ldr	r3, [r7, #20]
 3950 0150 0093     		str	r3, [sp]
 3951 0152 1300     		movs	r3, r2
ARM GAS  /tmp/ccqg4Whx.s 			page 104


 3952 0154 0022     		movs	r2, #0
 3953 0156 0421     		movs	r1, #4
 3954 0158 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3955 015c 031E     		subs	r3, r0, #0
 3956 015e 01D0     		beq	.L186
1952:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1953:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 3957              		.loc 1 1953 0
 3958 0160 0323     		movs	r3, #3
 3959 0162 86E0     		b	.L179
 3960              	.L186:
1954:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1955:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1956:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Read data from RXDR */
1957:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 3961              		.loc 1 1957 0
 3962 0164 FB68     		ldr	r3, [r7, #12]
 3963 0166 1B68     		ldr	r3, [r3]
 3964 0168 586A     		ldr	r0, [r3, #36]
 3965 016a FB68     		ldr	r3, [r7, #12]
 3966 016c 5B6A     		ldr	r3, [r3, #36]
 3967 016e 591C     		adds	r1, r3, #1
 3968 0170 FA68     		ldr	r2, [r7, #12]
 3969 0172 5162     		str	r1, [r2, #36]
 3970 0174 C2B2     		uxtb	r2, r0
 3971 0176 1A70     		strb	r2, [r3]
1958:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 3972              		.loc 1 1958 0
 3973 0178 FB68     		ldr	r3, [r7, #12]
 3974 017a 1B8D     		ldrh	r3, [r3, #40]
 3975 017c 013B     		subs	r3, r3, #1
 3976 017e 9AB2     		uxth	r2, r3
 3977 0180 FB68     		ldr	r3, [r7, #12]
 3978 0182 1A85     		strh	r2, [r3, #40]
1959:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 3979              		.loc 1 1959 0
 3980 0184 FB68     		ldr	r3, [r7, #12]
 3981 0186 5B8D     		ldrh	r3, [r3, #42]
 3982 0188 9BB2     		uxth	r3, r3
 3983 018a 013B     		subs	r3, r3, #1
 3984 018c 9AB2     		uxth	r2, r3
 3985 018e FB68     		ldr	r3, [r7, #12]
 3986 0190 5A85     		strh	r2, [r3, #42]
1960:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1961:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 3987              		.loc 1 1961 0
 3988 0192 FB68     		ldr	r3, [r7, #12]
 3989 0194 1B8D     		ldrh	r3, [r3, #40]
 3990 0196 002B     		cmp	r3, #0
 3991 0198 3BD1     		bne	.L187
 3992              		.loc 1 1961 0 is_stmt 0 discriminator 1
 3993 019a FB68     		ldr	r3, [r7, #12]
 3994 019c 5B8D     		ldrh	r3, [r3, #42]
 3995 019e 9BB2     		uxth	r3, r3
 3996 01a0 002B     		cmp	r3, #0
 3997 01a2 36D0     		beq	.L187
1962:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
ARM GAS  /tmp/ccqg4Whx.s 			page 105


1963:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1964:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 3998              		.loc 1 1964 0 is_stmt 1
 3999 01a4 3A6B     		ldr	r2, [r7, #48]
 4000 01a6 F868     		ldr	r0, [r7, #12]
 4001 01a8 7B69     		ldr	r3, [r7, #20]
 4002 01aa 0093     		str	r3, [sp]
 4003 01ac 1300     		movs	r3, r2
 4004 01ae 0022     		movs	r2, #0
 4005 01b0 8021     		movs	r1, #128
 4006 01b2 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4007 01b6 031E     		subs	r3, r0, #0
 4008 01b8 01D0     		beq	.L188
1965:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1966:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 4009              		.loc 1 1966 0
 4010 01ba 0323     		movs	r3, #3
 4011 01bc 59E0     		b	.L179
 4012              	.L188:
1967:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1968:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1969:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
 4013              		.loc 1 1969 0
 4014 01be FB68     		ldr	r3, [r7, #12]
 4015 01c0 5B8D     		ldrh	r3, [r3, #42]
 4016 01c2 9BB2     		uxth	r3, r3
 4017 01c4 FF2B     		cmp	r3, #255
 4018 01c6 11D9     		bls	.L189
1970:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1971:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 4019              		.loc 1 1971 0
 4020 01c8 FB68     		ldr	r3, [r7, #12]
 4021 01ca FF22     		movs	r2, #255
 4022 01cc 1A85     		strh	r2, [r3, #40]
1972:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 4023              		.loc 1 1972 0
 4024 01ce FB68     		ldr	r3, [r7, #12]
 4025 01d0 1B8D     		ldrh	r3, [r3, #40]
 4026 01d2 DAB2     		uxtb	r2, r3
 4027 01d4 8023     		movs	r3, #128
 4028 01d6 5C04     		lsls	r4, r3, #17
 4029 01d8 0A23     		movs	r3, #10
 4030 01da FB18     		adds	r3, r7, r3
 4031 01dc 1988     		ldrh	r1, [r3]
 4032 01de F868     		ldr	r0, [r7, #12]
 4033 01e0 0023     		movs	r3, #0
 4034 01e2 0093     		str	r3, [sp]
 4035 01e4 2300     		movs	r3, r4
 4036 01e6 FFF7FEFF 		bl	I2C_TransferConfig
 4037 01ea 12E0     		b	.L187
 4038              	.L189:
1973:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1974:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
1975:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
1976:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 4039              		.loc 1 1976 0
 4040 01ec FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 106


 4041 01ee 5B8D     		ldrh	r3, [r3, #42]
 4042 01f0 9AB2     		uxth	r2, r3
 4043 01f2 FB68     		ldr	r3, [r7, #12]
 4044 01f4 1A85     		strh	r2, [r3, #40]
1977:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 4045              		.loc 1 1977 0
 4046 01f6 FB68     		ldr	r3, [r7, #12]
 4047 01f8 1B8D     		ldrh	r3, [r3, #40]
 4048 01fa DAB2     		uxtb	r2, r3
 4049 01fc 8023     		movs	r3, #128
 4050 01fe 9C04     		lsls	r4, r3, #18
 4051 0200 0A23     		movs	r3, #10
 4052 0202 FB18     		adds	r3, r7, r3
 4053 0204 1988     		ldrh	r1, [r3]
 4054 0206 F868     		ldr	r0, [r7, #12]
 4055 0208 0023     		movs	r3, #0
 4056 020a 0093     		str	r3, [sp]
 4057 020c 2300     		movs	r3, r4
 4058 020e FFF7FEFF 		bl	I2C_TransferConfig
 4059              	.L187:
1978:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
1979:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1980:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1981:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (hi2c->XferCount > 0U);
 4060              		.loc 1 1981 0
 4061 0212 FB68     		ldr	r3, [r7, #12]
 4062 0214 5B8D     		ldrh	r3, [r3, #42]
 4063 0216 9BB2     		uxth	r3, r3
 4064 0218 002B     		cmp	r3, #0
 4065 021a 96D1     		bne	.L190
1982:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1983:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1984:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
1985:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 4066              		.loc 1 1985 0
 4067 021c 7A69     		ldr	r2, [r7, #20]
 4068 021e 396B     		ldr	r1, [r7, #48]
 4069 0220 FB68     		ldr	r3, [r7, #12]
 4070 0222 1800     		movs	r0, r3
 4071 0224 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4072 0228 031E     		subs	r3, r0, #0
 4073 022a 07D0     		beq	.L191
1986:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
1987:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4074              		.loc 1 1987 0
 4075 022c FB68     		ldr	r3, [r7, #12]
 4076 022e 5B6C     		ldr	r3, [r3, #68]
 4077 0230 042B     		cmp	r3, #4
 4078 0232 01D1     		bne	.L192
1988:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1989:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 4079              		.loc 1 1989 0
 4080 0234 0123     		movs	r3, #1
 4081 0236 1CE0     		b	.L179
 4082              	.L192:
1990:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1991:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
ARM GAS  /tmp/ccqg4Whx.s 			page 107


1992:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
1993:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4083              		.loc 1 1993 0
 4084 0238 0323     		movs	r3, #3
 4085 023a 1AE0     		b	.L179
 4086              	.L191:
1994:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
1995:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
1996:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
1997:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP Flag */
1998:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 4087              		.loc 1 1998 0
 4088 023c FB68     		ldr	r3, [r7, #12]
 4089 023e 1B68     		ldr	r3, [r3]
 4090 0240 2022     		movs	r2, #32
 4091 0242 DA61     		str	r2, [r3, #28]
1999:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2000:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2001:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 4092              		.loc 1 2001 0
 4093 0244 FB68     		ldr	r3, [r7, #12]
 4094 0246 1B68     		ldr	r3, [r3]
 4095 0248 5A68     		ldr	r2, [r3, #4]
 4096 024a FB68     		ldr	r3, [r7, #12]
 4097 024c 1B68     		ldr	r3, [r3]
 4098 024e 0B49     		ldr	r1, .L193
 4099 0250 0A40     		ands	r2, r1
 4100 0252 5A60     		str	r2, [r3, #4]
2002:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2003:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 4101              		.loc 1 2003 0
 4102 0254 FB68     		ldr	r3, [r7, #12]
 4103 0256 4122     		movs	r2, #65
 4104 0258 2021     		movs	r1, #32
 4105 025a 9954     		strb	r1, [r3, r2]
2004:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4106              		.loc 1 2004 0
 4107 025c FB68     		ldr	r3, [r7, #12]
 4108 025e 4222     		movs	r2, #66
 4109 0260 0021     		movs	r1, #0
 4110 0262 9954     		strb	r1, [r3, r2]
2005:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2006:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2007:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 4111              		.loc 1 2007 0
 4112 0264 FB68     		ldr	r3, [r7, #12]
 4113 0266 4022     		movs	r2, #64
 4114 0268 0021     		movs	r1, #0
 4115 026a 9954     		strb	r1, [r3, r2]
2008:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2009:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 4116              		.loc 1 2009 0
 4117 026c 0023     		movs	r3, #0
 4118 026e 00E0     		b	.L179
 4119              	.L176:
2010:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2011:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
ARM GAS  /tmp/ccqg4Whx.s 			page 108


2012:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2013:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 4120              		.loc 1 2013 0
 4121 0270 0223     		movs	r3, #2
 4122              	.L179:
2014:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2015:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 4123              		.loc 1 2015 0
 4124 0272 1800     		movs	r0, r3
 4125 0274 BD46     		mov	sp, r7
 4126 0276 07B0     		add	sp, sp, #28
 4127              		@ sp needed
 4128 0278 90BD     		pop	{r4, r7, pc}
 4129              	.L194:
 4130 027a C046     		.align	2
 4131              	.L193:
 4132 027c 00E800FE 		.word	-33495040
 4133              		.cfi_endproc
 4134              	.LFE54:
 4136              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4137              		.align	1
 4138              		.global	HAL_I2C_Mem_Write_IT
 4139              		.syntax unified
 4140              		.code	16
 4141              		.thumb_func
 4142              		.fpu softvfp
 4144              	HAL_I2C_Mem_Write_IT:
 4145              	.LFB55:
2016:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2017:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2018:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2019:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2020:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2021:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2022:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2023:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2024:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2025:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2026:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2027:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2028:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2029:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 4146              		.loc 1 2029 0
 4147              		.cfi_startproc
 4148              		@ args = 8, pretend = 0, frame = 24
 4149              		@ frame_needed = 1, uses_anonymous_args = 0
 4150 0000 90B5     		push	{r4, r7, lr}
 4151              		.cfi_def_cfa_offset 12
 4152              		.cfi_offset 4, -12
 4153              		.cfi_offset 7, -8
 4154              		.cfi_offset 14, -4
 4155 0002 89B0     		sub	sp, sp, #36
 4156              		.cfi_def_cfa_offset 48
 4157 0004 02AF     		add	r7, sp, #8
 4158              		.cfi_def_cfa 7, 40
 4159 0006 F860     		str	r0, [r7, #12]
 4160 0008 0C00     		movs	r4, r1
ARM GAS  /tmp/ccqg4Whx.s 			page 109


 4161 000a 1000     		movs	r0, r2
 4162 000c 1900     		movs	r1, r3
 4163 000e 0A23     		movs	r3, #10
 4164 0010 FB18     		adds	r3, r7, r3
 4165 0012 221C     		adds	r2, r4, #0
 4166 0014 1A80     		strh	r2, [r3]
 4167 0016 0823     		movs	r3, #8
 4168 0018 FB18     		adds	r3, r7, r3
 4169 001a 021C     		adds	r2, r0, #0
 4170 001c 1A80     		strh	r2, [r3]
 4171 001e BB1D     		adds	r3, r7, #6
 4172 0020 0A1C     		adds	r2, r1, #0
 4173 0022 1A80     		strh	r2, [r3]
2030:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 4174              		.loc 1 2030 0
 4175 0024 0023     		movs	r3, #0
 4176 0026 3B61     		str	r3, [r7, #16]
2031:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 4177              		.loc 1 2031 0
 4178 0028 0023     		movs	r3, #0
 4179 002a 7B61     		str	r3, [r7, #20]
2032:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2033:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2034:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2035:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2036:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 4180              		.loc 1 2036 0
 4181 002c FB68     		ldr	r3, [r7, #12]
 4182 002e 4122     		movs	r2, #65
 4183 0030 9B5C     		ldrb	r3, [r3, r2]
 4184 0032 DBB2     		uxtb	r3, r3
 4185 0034 202B     		cmp	r3, #32
 4186 0036 00D0     		beq	.LCB3750
 4187 0038 8BE0     		b	.L196	@long jump
 4188              	.LCB3750:
2037:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2038:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 4189              		.loc 1 2038 0
 4190 003a BB6A     		ldr	r3, [r7, #40]
 4191 003c 002B     		cmp	r3, #0
 4192 003e 04D0     		beq	.L197
 4193              		.loc 1 2038 0 is_stmt 0 discriminator 1
 4194 0040 2C23     		movs	r3, #44
 4195 0042 FB18     		adds	r3, r7, r3
 4196 0044 1B88     		ldrh	r3, [r3]
 4197 0046 002B     		cmp	r3, #0
 4198 0048 01D1     		bne	.L198
 4199              	.L197:
2039:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2040:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 4200              		.loc 1 2040 0 is_stmt 1
 4201 004a 0123     		movs	r3, #1
 4202 004c 82E0     		b	.L199
 4203              	.L198:
2041:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2042:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2043:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
ARM GAS  /tmp/ccqg4Whx.s 			page 110


 4204              		.loc 1 2043 0
 4205 004e FB68     		ldr	r3, [r7, #12]
 4206 0050 1B68     		ldr	r3, [r3]
 4207 0052 9A69     		ldr	r2, [r3, #24]
 4208 0054 8023     		movs	r3, #128
 4209 0056 1B02     		lsls	r3, r3, #8
 4210 0058 1A40     		ands	r2, r3
 4211 005a 8023     		movs	r3, #128
 4212 005c 1B02     		lsls	r3, r3, #8
 4213 005e 9A42     		cmp	r2, r3
 4214 0060 01D1     		bne	.L200
2044:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2045:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
 4215              		.loc 1 2045 0
 4216 0062 0223     		movs	r3, #2
 4217 0064 76E0     		b	.L199
 4218              	.L200:
2046:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2047:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2048:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2049:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4219              		.loc 1 2049 0
 4220 0066 FB68     		ldr	r3, [r7, #12]
 4221 0068 4022     		movs	r2, #64
 4222 006a 9B5C     		ldrb	r3, [r3, r2]
 4223 006c 012B     		cmp	r3, #1
 4224 006e 01D1     		bne	.L201
 4225              		.loc 1 2049 0 is_stmt 0 discriminator 1
 4226 0070 0223     		movs	r3, #2
 4227 0072 6FE0     		b	.L199
 4228              	.L201:
 4229              		.loc 1 2049 0 discriminator 2
 4230 0074 FB68     		ldr	r3, [r7, #12]
 4231 0076 4022     		movs	r2, #64
 4232 0078 0121     		movs	r1, #1
 4233 007a 9954     		strb	r1, [r3, r2]
2050:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2051:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2052:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4234              		.loc 1 2052 0 is_stmt 1 discriminator 2
 4235 007c FFF7FEFF 		bl	HAL_GetTick
 4236 0080 0300     		movs	r3, r0
 4237 0082 3B61     		str	r3, [r7, #16]
2053:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2054:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 4238              		.loc 1 2054 0 discriminator 2
 4239 0084 FB68     		ldr	r3, [r7, #12]
 4240 0086 4122     		movs	r2, #65
 4241 0088 2121     		movs	r1, #33
 4242 008a 9954     		strb	r1, [r3, r2]
2055:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4243              		.loc 1 2055 0 discriminator 2
 4244 008c FB68     		ldr	r3, [r7, #12]
 4245 008e 4222     		movs	r2, #66
 4246 0090 4021     		movs	r1, #64
 4247 0092 9954     		strb	r1, [r3, r2]
2056:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
ARM GAS  /tmp/ccqg4Whx.s 			page 111


 4248              		.loc 1 2056 0 discriminator 2
 4249 0094 FB68     		ldr	r3, [r7, #12]
 4250 0096 0022     		movs	r2, #0
 4251 0098 5A64     		str	r2, [r3, #68]
2057:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2058:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2059:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 4252              		.loc 1 2059 0 discriminator 2
 4253 009a FB68     		ldr	r3, [r7, #12]
 4254 009c BA6A     		ldr	r2, [r7, #40]
 4255 009e 5A62     		str	r2, [r3, #36]
2060:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4256              		.loc 1 2060 0 discriminator 2
 4257 00a0 FB68     		ldr	r3, [r7, #12]
 4258 00a2 2C22     		movs	r2, #44
 4259 00a4 BA18     		adds	r2, r7, r2
 4260 00a6 1288     		ldrh	r2, [r2]
 4261 00a8 5A85     		strh	r2, [r3, #42]
2061:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4262              		.loc 1 2061 0 discriminator 2
 4263 00aa FB68     		ldr	r3, [r7, #12]
 4264 00ac 2B4A     		ldr	r2, .L206
 4265 00ae DA62     		str	r2, [r3, #44]
2062:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4266              		.loc 1 2062 0 discriminator 2
 4267 00b0 FB68     		ldr	r3, [r7, #12]
 4268 00b2 2B4A     		ldr	r2, .L206+4
 4269 00b4 5A63     		str	r2, [r3, #52]
2063:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2064:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 4270              		.loc 1 2064 0 discriminator 2
 4271 00b6 FB68     		ldr	r3, [r7, #12]
 4272 00b8 5B8D     		ldrh	r3, [r3, #42]
 4273 00ba 9BB2     		uxth	r3, r3
 4274 00bc FF2B     		cmp	r3, #255
 4275 00be 06D9     		bls	.L202
2065:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2066:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4276              		.loc 1 2066 0
 4277 00c0 FB68     		ldr	r3, [r7, #12]
 4278 00c2 FF22     		movs	r2, #255
 4279 00c4 1A85     		strh	r2, [r3, #40]
2067:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4280              		.loc 1 2067 0
 4281 00c6 8023     		movs	r3, #128
 4282 00c8 5B04     		lsls	r3, r3, #17
 4283 00ca 7B61     		str	r3, [r7, #20]
 4284 00cc 07E0     		b	.L203
 4285              	.L202:
2068:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2069:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2070:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2071:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4286              		.loc 1 2071 0
 4287 00ce FB68     		ldr	r3, [r7, #12]
 4288 00d0 5B8D     		ldrh	r3, [r3, #42]
 4289 00d2 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccqg4Whx.s 			page 112


 4290 00d4 FB68     		ldr	r3, [r7, #12]
 4291 00d6 1A85     		strh	r2, [r3, #40]
2072:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4292              		.loc 1 2072 0
 4293 00d8 8023     		movs	r3, #128
 4294 00da 9B04     		lsls	r3, r3, #18
 4295 00dc 7B61     		str	r3, [r7, #20]
 4296              	.L203:
2073:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2074:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2075:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2076:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
 4297              		.loc 1 2076 0
 4298 00de BB1D     		adds	r3, r7, #6
 4299 00e0 1C88     		ldrh	r4, [r3]
 4300 00e2 0823     		movs	r3, #8
 4301 00e4 FB18     		adds	r3, r7, r3
 4302 00e6 1A88     		ldrh	r2, [r3]
 4303 00e8 0A23     		movs	r3, #10
 4304 00ea FB18     		adds	r3, r7, r3
 4305 00ec 1988     		ldrh	r1, [r3]
 4306 00ee F868     		ldr	r0, [r7, #12]
 4307 00f0 3B69     		ldr	r3, [r7, #16]
 4308 00f2 0193     		str	r3, [sp, #4]
 4309 00f4 1923     		movs	r3, #25
 4310 00f6 0093     		str	r3, [sp]
 4311 00f8 2300     		movs	r3, r4
 4312 00fa FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4313 00fe 031E     		subs	r3, r0, #0
 4314 0100 0FD0     		beq	.L204
2077:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2078:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4315              		.loc 1 2078 0
 4316 0102 FB68     		ldr	r3, [r7, #12]
 4317 0104 5B6C     		ldr	r3, [r3, #68]
 4318 0106 042B     		cmp	r3, #4
 4319 0108 05D1     		bne	.L205
2079:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2080:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2081:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4320              		.loc 1 2081 0
 4321 010a FB68     		ldr	r3, [r7, #12]
 4322 010c 4022     		movs	r2, #64
 4323 010e 0021     		movs	r1, #0
 4324 0110 9954     		strb	r1, [r3, r2]
2082:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 4325              		.loc 1 2082 0
 4326 0112 0123     		movs	r3, #1
 4327 0114 1EE0     		b	.L199
 4328              	.L205:
2083:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2084:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
2085:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2086:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2087:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4329              		.loc 1 2087 0
 4330 0116 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 113


 4331 0118 4022     		movs	r2, #64
 4332 011a 0021     		movs	r1, #0
 4333 011c 9954     		strb	r1, [r3, r2]
2088:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4334              		.loc 1 2088 0
 4335 011e 0323     		movs	r3, #3
 4336 0120 18E0     		b	.L199
 4337              	.L204:
2089:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2090:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2091:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2092:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2093:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
 4338              		.loc 1 2093 0
 4339 0122 FB68     		ldr	r3, [r7, #12]
 4340 0124 1B8D     		ldrh	r3, [r3, #40]
 4341 0126 DAB2     		uxtb	r2, r3
 4342 0128 7C69     		ldr	r4, [r7, #20]
 4343 012a 0A23     		movs	r3, #10
 4344 012c FB18     		adds	r3, r7, r3
 4345 012e 1988     		ldrh	r1, [r3]
 4346 0130 F868     		ldr	r0, [r7, #12]
 4347 0132 0023     		movs	r3, #0
 4348 0134 0093     		str	r3, [sp]
 4349 0136 2300     		movs	r3, r4
 4350 0138 FFF7FEFF 		bl	I2C_TransferConfig
2094:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2095:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2096:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 4351              		.loc 1 2096 0
 4352 013c FB68     		ldr	r3, [r7, #12]
 4353 013e 4022     		movs	r2, #64
 4354 0140 0021     		movs	r1, #0
 4355 0142 9954     		strb	r1, [r3, r2]
2097:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2098:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2099:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
2101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
2104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 4356              		.loc 1 2105 0
 4357 0144 FB68     		ldr	r3, [r7, #12]
 4358 0146 0121     		movs	r1, #1
 4359 0148 1800     		movs	r0, r3
 4360 014a FFF7FEFF 		bl	I2C_Enable_IRQ
2106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 4361              		.loc 1 2107 0
 4362 014e 0023     		movs	r3, #0
 4363 0150 00E0     		b	.L199
 4364              	.L196:
2108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccqg4Whx.s 			page 114


2111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 4365              		.loc 1 2111 0
 4366 0152 0223     		movs	r3, #2
 4367              	.L199:
2112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 4368              		.loc 1 2113 0
 4369 0154 1800     		movs	r0, r3
 4370 0156 BD46     		mov	sp, r7
 4371 0158 07B0     		add	sp, sp, #28
 4372              		@ sp needed
 4373 015a 90BD     		pop	{r4, r7, pc}
 4374              	.L207:
 4375              		.align	2
 4376              	.L206:
 4377 015c 0000FFFF 		.word	-65536
 4378 0160 00000000 		.word	I2C_Master_ISR_IT
 4379              		.cfi_endproc
 4380              	.LFE55:
 4382              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4383              		.align	1
 4384              		.global	HAL_I2C_Mem_Read_IT
 4385              		.syntax unified
 4386              		.code	16
 4387              		.thumb_func
 4388              		.fpu softvfp
 4390              	HAL_I2C_Mem_Read_IT:
 4391              	.LFB56:
2114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 4392              		.loc 1 2128 0
 4393              		.cfi_startproc
 4394              		@ args = 8, pretend = 0, frame = 24
 4395              		@ frame_needed = 1, uses_anonymous_args = 0
 4396 0000 90B5     		push	{r4, r7, lr}
 4397              		.cfi_def_cfa_offset 12
 4398              		.cfi_offset 4, -12
 4399              		.cfi_offset 7, -8
 4400              		.cfi_offset 14, -4
 4401 0002 89B0     		sub	sp, sp, #36
 4402              		.cfi_def_cfa_offset 48
 4403 0004 02AF     		add	r7, sp, #8
 4404              		.cfi_def_cfa 7, 40
 4405 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 115


 4406 0008 0C00     		movs	r4, r1
 4407 000a 1000     		movs	r0, r2
 4408 000c 1900     		movs	r1, r3
 4409 000e 0A23     		movs	r3, #10
 4410 0010 FB18     		adds	r3, r7, r3
 4411 0012 221C     		adds	r2, r4, #0
 4412 0014 1A80     		strh	r2, [r3]
 4413 0016 0823     		movs	r3, #8
 4414 0018 FB18     		adds	r3, r7, r3
 4415 001a 021C     		adds	r2, r0, #0
 4416 001c 1A80     		strh	r2, [r3]
 4417 001e BB1D     		adds	r3, r7, #6
 4418 0020 0A1C     		adds	r2, r1, #0
 4419 0022 1A80     		strh	r2, [r3]
2129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 4420              		.loc 1 2129 0
 4421 0024 0023     		movs	r3, #0
 4422 0026 3B61     		str	r3, [r7, #16]
2130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 4423              		.loc 1 2130 0
 4424 0028 0023     		movs	r3, #0
 4425 002a 7B61     		str	r3, [r7, #20]
2131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 4426              		.loc 1 2135 0
 4427 002c FB68     		ldr	r3, [r7, #12]
 4428 002e 4122     		movs	r2, #65
 4429 0030 9B5C     		ldrb	r3, [r3, r2]
 4430 0032 DBB2     		uxtb	r3, r3
 4431 0034 202B     		cmp	r3, #32
 4432 0036 00D0     		beq	.LCB3971
 4433 0038 8CE0     		b	.L209	@long jump
 4434              	.LCB3971:
2136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 4435              		.loc 1 2137 0
 4436 003a BB6A     		ldr	r3, [r7, #40]
 4437 003c 002B     		cmp	r3, #0
 4438 003e 04D0     		beq	.L210
 4439              		.loc 1 2137 0 is_stmt 0 discriminator 1
 4440 0040 2C23     		movs	r3, #44
 4441 0042 FB18     		adds	r3, r7, r3
 4442 0044 1B88     		ldrh	r3, [r3]
 4443 0046 002B     		cmp	r3, #0
 4444 0048 01D1     		bne	.L211
 4445              	.L210:
2138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 4446              		.loc 1 2139 0 is_stmt 1
 4447 004a 0123     		movs	r3, #1
 4448 004c 83E0     		b	.L212
 4449              	.L211:
2140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 116


2142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 4450              		.loc 1 2142 0
 4451 004e FB68     		ldr	r3, [r7, #12]
 4452 0050 1B68     		ldr	r3, [r3]
 4453 0052 9A69     		ldr	r2, [r3, #24]
 4454 0054 8023     		movs	r3, #128
 4455 0056 1B02     		lsls	r3, r3, #8
 4456 0058 1A40     		ands	r2, r3
 4457 005a 8023     		movs	r3, #128
 4458 005c 1B02     		lsls	r3, r3, #8
 4459 005e 9A42     		cmp	r2, r3
 4460 0060 01D1     		bne	.L213
2143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
 4461              		.loc 1 2144 0
 4462 0062 0223     		movs	r3, #2
 4463 0064 77E0     		b	.L212
 4464              	.L213:
2145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4465              		.loc 1 2148 0
 4466 0066 FB68     		ldr	r3, [r7, #12]
 4467 0068 4022     		movs	r2, #64
 4468 006a 9B5C     		ldrb	r3, [r3, r2]
 4469 006c 012B     		cmp	r3, #1
 4470 006e 01D1     		bne	.L214
 4471              		.loc 1 2148 0 is_stmt 0 discriminator 1
 4472 0070 0223     		movs	r3, #2
 4473 0072 70E0     		b	.L212
 4474              	.L214:
 4475              		.loc 1 2148 0 discriminator 2
 4476 0074 FB68     		ldr	r3, [r7, #12]
 4477 0076 4022     		movs	r2, #64
 4478 0078 0121     		movs	r1, #1
 4479 007a 9954     		strb	r1, [r3, r2]
2149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4480              		.loc 1 2151 0 is_stmt 1 discriminator 2
 4481 007c FFF7FEFF 		bl	HAL_GetTick
 4482 0080 0300     		movs	r3, r0
 4483 0082 3B61     		str	r3, [r7, #16]
2152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 4484              		.loc 1 2153 0 discriminator 2
 4485 0084 FB68     		ldr	r3, [r7, #12]
 4486 0086 4122     		movs	r2, #65
 4487 0088 2221     		movs	r1, #34
 4488 008a 9954     		strb	r1, [r3, r2]
2154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4489              		.loc 1 2154 0 discriminator 2
 4490 008c FB68     		ldr	r3, [r7, #12]
 4491 008e 4222     		movs	r2, #66
 4492 0090 4021     		movs	r1, #64
 4493 0092 9954     		strb	r1, [r3, r2]
ARM GAS  /tmp/ccqg4Whx.s 			page 117


2155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4494              		.loc 1 2155 0 discriminator 2
 4495 0094 FB68     		ldr	r3, [r7, #12]
 4496 0096 0022     		movs	r2, #0
 4497 0098 5A64     		str	r2, [r3, #68]
2156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 4498              		.loc 1 2158 0 discriminator 2
 4499 009a FB68     		ldr	r3, [r7, #12]
 4500 009c BA6A     		ldr	r2, [r7, #40]
 4501 009e 5A62     		str	r2, [r3, #36]
2159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4502              		.loc 1 2159 0 discriminator 2
 4503 00a0 FB68     		ldr	r3, [r7, #12]
 4504 00a2 2C22     		movs	r2, #44
 4505 00a4 BA18     		adds	r2, r7, r2
 4506 00a6 1288     		ldrh	r2, [r2]
 4507 00a8 5A85     		strh	r2, [r3, #42]
2160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4508              		.loc 1 2160 0 discriminator 2
 4509 00aa FB68     		ldr	r3, [r7, #12]
 4510 00ac 2C4A     		ldr	r2, .L219
 4511 00ae DA62     		str	r2, [r3, #44]
2161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4512              		.loc 1 2161 0 discriminator 2
 4513 00b0 FB68     		ldr	r3, [r7, #12]
 4514 00b2 2C4A     		ldr	r2, .L219+4
 4515 00b4 5A63     		str	r2, [r3, #52]
2162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 4516              		.loc 1 2163 0 discriminator 2
 4517 00b6 FB68     		ldr	r3, [r7, #12]
 4518 00b8 5B8D     		ldrh	r3, [r3, #42]
 4519 00ba 9BB2     		uxth	r3, r3
 4520 00bc FF2B     		cmp	r3, #255
 4521 00be 06D9     		bls	.L215
2164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4522              		.loc 1 2165 0
 4523 00c0 FB68     		ldr	r3, [r7, #12]
 4524 00c2 FF22     		movs	r2, #255
 4525 00c4 1A85     		strh	r2, [r3, #40]
2166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4526              		.loc 1 2166 0
 4527 00c6 8023     		movs	r3, #128
 4528 00c8 5B04     		lsls	r3, r3, #17
 4529 00ca 7B61     		str	r3, [r7, #20]
 4530 00cc 07E0     		b	.L216
 4531              	.L215:
2167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4532              		.loc 1 2170 0
 4533 00ce FB68     		ldr	r3, [r7, #12]
 4534 00d0 5B8D     		ldrh	r3, [r3, #42]
ARM GAS  /tmp/ccqg4Whx.s 			page 118


 4535 00d2 9AB2     		uxth	r2, r3
 4536 00d4 FB68     		ldr	r3, [r7, #12]
 4537 00d6 1A85     		strh	r2, [r3, #40]
2171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4538              		.loc 1 2171 0
 4539 00d8 8023     		movs	r3, #128
 4540 00da 9B04     		lsls	r3, r3, #18
 4541 00dc 7B61     		str	r3, [r7, #20]
 4542              	.L216:
2172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
 4543              		.loc 1 2175 0
 4544 00de BB1D     		adds	r3, r7, #6
 4545 00e0 1C88     		ldrh	r4, [r3]
 4546 00e2 0823     		movs	r3, #8
 4547 00e4 FB18     		adds	r3, r7, r3
 4548 00e6 1A88     		ldrh	r2, [r3]
 4549 00e8 0A23     		movs	r3, #10
 4550 00ea FB18     		adds	r3, r7, r3
 4551 00ec 1988     		ldrh	r1, [r3]
 4552 00ee F868     		ldr	r0, [r7, #12]
 4553 00f0 3B69     		ldr	r3, [r7, #16]
 4554 00f2 0193     		str	r3, [sp, #4]
 4555 00f4 1923     		movs	r3, #25
 4556 00f6 0093     		str	r3, [sp]
 4557 00f8 2300     		movs	r3, r4
 4558 00fa FFF7FEFF 		bl	I2C_RequestMemoryRead
 4559 00fe 031E     		subs	r3, r0, #0
 4560 0100 0FD0     		beq	.L217
2176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4561              		.loc 1 2177 0
 4562 0102 FB68     		ldr	r3, [r7, #12]
 4563 0104 5B6C     		ldr	r3, [r3, #68]
 4564 0106 042B     		cmp	r3, #4
 4565 0108 05D1     		bne	.L218
2178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4566              		.loc 1 2180 0
 4567 010a FB68     		ldr	r3, [r7, #12]
 4568 010c 4022     		movs	r2, #64
 4569 010e 0021     		movs	r1, #0
 4570 0110 9954     		strb	r1, [r3, r2]
2181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 4571              		.loc 1 2181 0
 4572 0112 0123     		movs	r3, #1
 4573 0114 1FE0     		b	.L212
 4574              	.L218:
2182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
2184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4575              		.loc 1 2186 0
ARM GAS  /tmp/ccqg4Whx.s 			page 119


 4576 0116 FB68     		ldr	r3, [r7, #12]
 4577 0118 4022     		movs	r2, #64
 4578 011a 0021     		movs	r1, #0
 4579 011c 9954     		strb	r1, [r3, r2]
2187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4580              		.loc 1 2187 0
 4581 011e 0323     		movs	r3, #3
 4582 0120 19E0     		b	.L212
 4583              	.L217:
2188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 4584              		.loc 1 2192 0
 4585 0122 FB68     		ldr	r3, [r7, #12]
 4586 0124 1B8D     		ldrh	r3, [r3, #40]
 4587 0126 DAB2     		uxtb	r2, r3
 4588 0128 7C69     		ldr	r4, [r7, #20]
 4589 012a 0A23     		movs	r3, #10
 4590 012c FB18     		adds	r3, r7, r3
 4591 012e 1988     		ldrh	r1, [r3]
 4592 0130 F868     		ldr	r0, [r7, #12]
 4593 0132 9023     		movs	r3, #144
 4594 0134 9B01     		lsls	r3, r3, #6
 4595 0136 0093     		str	r3, [sp]
 4596 0138 2300     		movs	r3, r4
 4597 013a FFF7FEFF 		bl	I2C_TransferConfig
2193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 4598              		.loc 1 2195 0
 4599 013e FB68     		ldr	r3, [r7, #12]
 4600 0140 4022     		movs	r2, #64
 4601 0142 0021     		movs	r1, #0
 4602 0144 9954     		strb	r1, [r3, r2]
2196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
2200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* possible to enable all of these */
2203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
 4603              		.loc 1 2204 0
 4604 0146 FB68     		ldr	r3, [r7, #12]
 4605 0148 0221     		movs	r1, #2
 4606 014a 1800     		movs	r0, r3
 4607 014c FFF7FEFF 		bl	I2C_Enable_IRQ
2205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 4608              		.loc 1 2206 0
 4609 0150 0023     		movs	r3, #0
 4610 0152 00E0     		b	.L212
 4611              	.L209:
2207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccqg4Whx.s 			page 120


2208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 4612              		.loc 1 2210 0
 4613 0154 0223     		movs	r3, #2
 4614              	.L212:
2211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 4615              		.loc 1 2212 0
 4616 0156 1800     		movs	r0, r3
 4617 0158 BD46     		mov	sp, r7
 4618 015a 07B0     		add	sp, sp, #28
 4619              		@ sp needed
 4620 015c 90BD     		pop	{r4, r7, pc}
 4621              	.L220:
 4622 015e C046     		.align	2
 4623              	.L219:
 4624 0160 0000FFFF 		.word	-65536
 4625 0164 00000000 		.word	I2C_Master_ISR_IT
 4626              		.cfi_endproc
 4627              	.LFE56:
 4629              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 4630              		.align	1
 4631              		.global	HAL_I2C_Mem_Write_DMA
 4632              		.syntax unified
 4633              		.code	16
 4634              		.thumb_func
 4635              		.fpu softvfp
 4637              	HAL_I2C_Mem_Write_DMA:
 4638              	.LFB57:
2213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 4639              		.loc 1 2226 0
 4640              		.cfi_startproc
 4641              		@ args = 8, pretend = 0, frame = 24
 4642              		@ frame_needed = 1, uses_anonymous_args = 0
 4643 0000 90B5     		push	{r4, r7, lr}
 4644              		.cfi_def_cfa_offset 12
 4645              		.cfi_offset 4, -12
 4646              		.cfi_offset 7, -8
 4647              		.cfi_offset 14, -4
 4648 0002 89B0     		sub	sp, sp, #36
 4649              		.cfi_def_cfa_offset 48
 4650 0004 02AF     		add	r7, sp, #8
 4651              		.cfi_def_cfa 7, 40
ARM GAS  /tmp/ccqg4Whx.s 			page 121


 4652 0006 F860     		str	r0, [r7, #12]
 4653 0008 0C00     		movs	r4, r1
 4654 000a 1000     		movs	r0, r2
 4655 000c 1900     		movs	r1, r3
 4656 000e 0A23     		movs	r3, #10
 4657 0010 FB18     		adds	r3, r7, r3
 4658 0012 221C     		adds	r2, r4, #0
 4659 0014 1A80     		strh	r2, [r3]
 4660 0016 0823     		movs	r3, #8
 4661 0018 FB18     		adds	r3, r7, r3
 4662 001a 021C     		adds	r2, r0, #0
 4663 001c 1A80     		strh	r2, [r3]
 4664 001e BB1D     		adds	r3, r7, #6
 4665 0020 0A1C     		adds	r2, r1, #0
 4666 0022 1A80     		strh	r2, [r3]
2227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 4667              		.loc 1 2227 0
 4668 0024 0023     		movs	r3, #0
 4669 0026 3B61     		str	r3, [r7, #16]
2228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 4670              		.loc 1 2228 0
 4671 0028 0023     		movs	r3, #0
 4672 002a 7B61     		str	r3, [r7, #20]
2229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 4673              		.loc 1 2233 0
 4674 002c FB68     		ldr	r3, [r7, #12]
 4675 002e 4122     		movs	r2, #65
 4676 0030 9B5C     		ldrb	r3, [r3, r2]
 4677 0032 DBB2     		uxtb	r3, r3
 4678 0034 202B     		cmp	r3, #32
 4679 0036 00D0     		beq	.LCB4193
 4680 0038 B8E0     		b	.L222	@long jump
 4681              	.LCB4193:
2234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 4682              		.loc 1 2235 0
 4683 003a BB6A     		ldr	r3, [r7, #40]
 4684 003c 002B     		cmp	r3, #0
 4685 003e 04D0     		beq	.L223
 4686              		.loc 1 2235 0 is_stmt 0 discriminator 1
 4687 0040 2C23     		movs	r3, #44
 4688 0042 FB18     		adds	r3, r7, r3
 4689 0044 1B88     		ldrh	r3, [r3]
 4690 0046 002B     		cmp	r3, #0
 4691 0048 01D1     		bne	.L224
 4692              	.L223:
2236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 4693              		.loc 1 2237 0 is_stmt 1
 4694 004a 0123     		movs	r3, #1
 4695 004c AFE0     		b	.L225
 4696              	.L224:
2238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccqg4Whx.s 			page 122


2239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 4697              		.loc 1 2240 0
 4698 004e FB68     		ldr	r3, [r7, #12]
 4699 0050 1B68     		ldr	r3, [r3]
 4700 0052 9A69     		ldr	r2, [r3, #24]
 4701 0054 8023     		movs	r3, #128
 4702 0056 1B02     		lsls	r3, r3, #8
 4703 0058 1A40     		ands	r2, r3
 4704 005a 8023     		movs	r3, #128
 4705 005c 1B02     		lsls	r3, r3, #8
 4706 005e 9A42     		cmp	r2, r3
 4707 0060 01D1     		bne	.L226
2241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
 4708              		.loc 1 2242 0
 4709 0062 0223     		movs	r3, #2
 4710 0064 A3E0     		b	.L225
 4711              	.L226:
2243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4712              		.loc 1 2246 0
 4713 0066 FB68     		ldr	r3, [r7, #12]
 4714 0068 4022     		movs	r2, #64
 4715 006a 9B5C     		ldrb	r3, [r3, r2]
 4716 006c 012B     		cmp	r3, #1
 4717 006e 01D1     		bne	.L227
 4718              		.loc 1 2246 0 is_stmt 0 discriminator 1
 4719 0070 0223     		movs	r3, #2
 4720 0072 9CE0     		b	.L225
 4721              	.L227:
 4722              		.loc 1 2246 0 discriminator 2
 4723 0074 FB68     		ldr	r3, [r7, #12]
 4724 0076 4022     		movs	r2, #64
 4725 0078 0121     		movs	r1, #1
 4726 007a 9954     		strb	r1, [r3, r2]
2247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4727              		.loc 1 2249 0 is_stmt 1 discriminator 2
 4728 007c FFF7FEFF 		bl	HAL_GetTick
 4729 0080 0300     		movs	r3, r0
 4730 0082 3B61     		str	r3, [r7, #16]
2250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 4731              		.loc 1 2251 0 discriminator 2
 4732 0084 FB68     		ldr	r3, [r7, #12]
 4733 0086 4122     		movs	r2, #65
 4734 0088 2121     		movs	r1, #33
 4735 008a 9954     		strb	r1, [r3, r2]
2252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4736              		.loc 1 2252 0 discriminator 2
 4737 008c FB68     		ldr	r3, [r7, #12]
 4738 008e 4222     		movs	r2, #66
 4739 0090 4021     		movs	r1, #64
ARM GAS  /tmp/ccqg4Whx.s 			page 123


 4740 0092 9954     		strb	r1, [r3, r2]
2253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4741              		.loc 1 2253 0 discriminator 2
 4742 0094 FB68     		ldr	r3, [r7, #12]
 4743 0096 0022     		movs	r2, #0
 4744 0098 5A64     		str	r2, [r3, #68]
2254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 4745              		.loc 1 2256 0 discriminator 2
 4746 009a FB68     		ldr	r3, [r7, #12]
 4747 009c BA6A     		ldr	r2, [r7, #40]
 4748 009e 5A62     		str	r2, [r3, #36]
2257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4749              		.loc 1 2257 0 discriminator 2
 4750 00a0 FB68     		ldr	r3, [r7, #12]
 4751 00a2 2C22     		movs	r2, #44
 4752 00a4 BA18     		adds	r2, r7, r2
 4753 00a6 1288     		ldrh	r2, [r2]
 4754 00a8 5A85     		strh	r2, [r3, #42]
2258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4755              		.loc 1 2258 0 discriminator 2
 4756 00aa FB68     		ldr	r3, [r7, #12]
 4757 00ac 424A     		ldr	r2, .L232
 4758 00ae DA62     		str	r2, [r3, #44]
2259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4759              		.loc 1 2259 0 discriminator 2
 4760 00b0 FB68     		ldr	r3, [r7, #12]
 4761 00b2 424A     		ldr	r2, .L232+4
 4762 00b4 5A63     		str	r2, [r3, #52]
2260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 4763              		.loc 1 2261 0 discriminator 2
 4764 00b6 FB68     		ldr	r3, [r7, #12]
 4765 00b8 5B8D     		ldrh	r3, [r3, #42]
 4766 00ba 9BB2     		uxth	r3, r3
 4767 00bc FF2B     		cmp	r3, #255
 4768 00be 06D9     		bls	.L228
2262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4769              		.loc 1 2263 0
 4770 00c0 FB68     		ldr	r3, [r7, #12]
 4771 00c2 FF22     		movs	r2, #255
 4772 00c4 1A85     		strh	r2, [r3, #40]
2264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4773              		.loc 1 2264 0
 4774 00c6 8023     		movs	r3, #128
 4775 00c8 5B04     		lsls	r3, r3, #17
 4776 00ca 7B61     		str	r3, [r7, #20]
 4777 00cc 07E0     		b	.L229
 4778              	.L228:
2265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4779              		.loc 1 2268 0
 4780 00ce FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 124


 4781 00d0 5B8D     		ldrh	r3, [r3, #42]
 4782 00d2 9AB2     		uxth	r2, r3
 4783 00d4 FB68     		ldr	r3, [r7, #12]
 4784 00d6 1A85     		strh	r2, [r3, #40]
2269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4785              		.loc 1 2269 0
 4786 00d8 8023     		movs	r3, #128
 4787 00da 9B04     		lsls	r3, r3, #18
 4788 00dc 7B61     		str	r3, [r7, #20]
 4789              	.L229:
2270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
 4790              		.loc 1 2273 0
 4791 00de BB1D     		adds	r3, r7, #6
 4792 00e0 1C88     		ldrh	r4, [r3]
 4793 00e2 0823     		movs	r3, #8
 4794 00e4 FB18     		adds	r3, r7, r3
 4795 00e6 1A88     		ldrh	r2, [r3]
 4796 00e8 0A23     		movs	r3, #10
 4797 00ea FB18     		adds	r3, r7, r3
 4798 00ec 1988     		ldrh	r1, [r3]
 4799 00ee F868     		ldr	r0, [r7, #12]
 4800 00f0 3B69     		ldr	r3, [r7, #16]
 4801 00f2 0193     		str	r3, [sp, #4]
 4802 00f4 1923     		movs	r3, #25
 4803 00f6 0093     		str	r3, [sp]
 4804 00f8 2300     		movs	r3, r4
 4805 00fa FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4806 00fe 031E     		subs	r3, r0, #0
 4807 0100 0FD0     		beq	.L230
2274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4808              		.loc 1 2275 0
 4809 0102 FB68     		ldr	r3, [r7, #12]
 4810 0104 5B6C     		ldr	r3, [r3, #68]
 4811 0106 042B     		cmp	r3, #4
 4812 0108 05D1     		bne	.L231
2276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4813              		.loc 1 2278 0
 4814 010a FB68     		ldr	r3, [r7, #12]
 4815 010c 4022     		movs	r2, #64
 4816 010e 0021     		movs	r1, #0
 4817 0110 9954     		strb	r1, [r3, r2]
2279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 4818              		.loc 1 2279 0
 4819 0112 0123     		movs	r3, #1
 4820 0114 4BE0     		b	.L225
 4821              	.L231:
2280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
2282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/ccqg4Whx.s 			page 125


 4822              		.loc 1 2284 0
 4823 0116 FB68     		ldr	r3, [r7, #12]
 4824 0118 4022     		movs	r2, #64
 4825 011a 0021     		movs	r1, #0
 4826 011c 9954     		strb	r1, [r3, r2]
2285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4827              		.loc 1 2285 0
 4828 011e 0323     		movs	r3, #3
 4829 0120 45E0     		b	.L225
 4830              	.L230:
2286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
2290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
 4831              		.loc 1 2290 0
 4832 0122 FB68     		ldr	r3, [r7, #12]
 4833 0124 9B6B     		ldr	r3, [r3, #56]
 4834 0126 264A     		ldr	r2, .L232+8
 4835 0128 9A62     		str	r2, [r3, #40]
2291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the DMA error callback */
2293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
 4836              		.loc 1 2293 0
 4837 012a FB68     		ldr	r3, [r7, #12]
 4838 012c 9B6B     		ldr	r3, [r3, #56]
 4839 012e 254A     		ldr	r2, .L232+12
 4840 0130 1A63     		str	r2, [r3, #48]
2294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
2296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
 4841              		.loc 1 2296 0
 4842 0132 FB68     		ldr	r3, [r7, #12]
 4843 0134 9B6B     		ldr	r3, [r3, #56]
 4844 0136 0022     		movs	r2, #0
 4845 0138 DA62     		str	r2, [r3, #44]
2297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
 4846              		.loc 1 2297 0
 4847 013a FB68     		ldr	r3, [r7, #12]
 4848 013c 9B6B     		ldr	r3, [r3, #56]
 4849 013e 0022     		movs	r2, #0
 4850 0140 5A63     		str	r2, [r3, #52]
2298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable the DMA channel */
2300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
 4851              		.loc 1 2300 0
 4852 0142 FB68     		ldr	r3, [r7, #12]
 4853 0144 986B     		ldr	r0, [r3, #56]
 4854 0146 B96A     		ldr	r1, [r7, #40]
 4855 0148 FB68     		ldr	r3, [r7, #12]
 4856 014a 1B68     		ldr	r3, [r3]
 4857 014c 2833     		adds	r3, r3, #40
 4858 014e 1A00     		movs	r2, r3
 4859 0150 FB68     		ldr	r3, [r7, #12]
 4860 0152 1B8D     		ldrh	r3, [r3, #40]
 4861 0154 FFF7FEFF 		bl	HAL_DMA_Start_IT
2301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 126


2302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address */
2303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
 4862              		.loc 1 2304 0
 4863 0158 FB68     		ldr	r3, [r7, #12]
 4864 015a 1B8D     		ldrh	r3, [r3, #40]
 4865 015c DAB2     		uxtb	r2, r3
 4866 015e 7C69     		ldr	r4, [r7, #20]
 4867 0160 0A23     		movs	r3, #10
 4868 0162 FB18     		adds	r3, r7, r3
 4869 0164 1988     		ldrh	r1, [r3]
 4870 0166 F868     		ldr	r0, [r7, #12]
 4871 0168 0023     		movs	r3, #0
 4872 016a 0093     		str	r3, [sp]
 4873 016c 2300     		movs	r3, r4
 4874 016e FFF7FEFF 		bl	I2C_TransferConfig
2305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update XferCount value */
2307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
 4875              		.loc 1 2307 0
 4876 0172 FB68     		ldr	r3, [r7, #12]
 4877 0174 5B8D     		ldrh	r3, [r3, #42]
 4878 0176 9AB2     		uxth	r2, r3
 4879 0178 FB68     		ldr	r3, [r7, #12]
 4880 017a 1B8D     		ldrh	r3, [r3, #40]
 4881 017c D31A     		subs	r3, r2, r3
 4882 017e 9AB2     		uxth	r2, r3
 4883 0180 FB68     		ldr	r3, [r7, #12]
 4884 0182 5A85     		strh	r2, [r3, #42]
2308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 4885              		.loc 1 2310 0
 4886 0184 FB68     		ldr	r3, [r7, #12]
 4887 0186 4022     		movs	r2, #64
 4888 0188 0021     		movs	r1, #0
 4889 018a 9954     		strb	r1, [r3, r2]
2311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
2315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
2316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 4890              		.loc 1 2316 0
 4891 018c FB68     		ldr	r3, [r7, #12]
 4892 018e 1121     		movs	r1, #17
 4893 0190 1800     		movs	r0, r3
 4894 0192 FFF7FEFF 		bl	I2C_Enable_IRQ
2317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable DMA Request */
2319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
 4895              		.loc 1 2319 0
 4896 0196 FB68     		ldr	r3, [r7, #12]
 4897 0198 1B68     		ldr	r3, [r3]
 4898 019a 1A68     		ldr	r2, [r3]
 4899 019c FB68     		ldr	r3, [r7, #12]
 4900 019e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccqg4Whx.s 			page 127


 4901 01a0 8021     		movs	r1, #128
 4902 01a2 C901     		lsls	r1, r1, #7
 4903 01a4 0A43     		orrs	r2, r1
 4904 01a6 1A60     		str	r2, [r3]
2320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 4905              		.loc 1 2321 0
 4906 01a8 0023     		movs	r3, #0
 4907 01aa 00E0     		b	.L225
 4908              	.L222:
2322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 4909              		.loc 1 2325 0
 4910 01ac 0223     		movs	r3, #2
 4911              	.L225:
2326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 4912              		.loc 1 2327 0
 4913 01ae 1800     		movs	r0, r3
 4914 01b0 BD46     		mov	sp, r7
 4915 01b2 07B0     		add	sp, sp, #28
 4916              		@ sp needed
 4917 01b4 90BD     		pop	{r4, r7, pc}
 4918              	.L233:
 4919 01b6 C046     		.align	2
 4920              	.L232:
 4921 01b8 0000FFFF 		.word	-65536
 4922 01bc 00000000 		.word	I2C_Master_ISR_DMA
 4923 01c0 00000000 		.word	I2C_DMAMasterTransmitCplt
 4924 01c4 00000000 		.word	I2C_DMAError
 4925              		.cfi_endproc
 4926              	.LFE57:
 4928              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
 4929              		.align	1
 4930              		.global	HAL_I2C_Mem_Read_DMA
 4931              		.syntax unified
 4932              		.code	16
 4933              		.thumb_func
 4934              		.fpu softvfp
 4936              	HAL_I2C_Mem_Read_DMA:
 4937              	.LFB58:
2328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
ARM GAS  /tmp/ccqg4Whx.s 			page 128


2342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 4938              		.loc 1 2342 0
 4939              		.cfi_startproc
 4940              		@ args = 8, pretend = 0, frame = 24
 4941              		@ frame_needed = 1, uses_anonymous_args = 0
 4942 0000 90B5     		push	{r4, r7, lr}
 4943              		.cfi_def_cfa_offset 12
 4944              		.cfi_offset 4, -12
 4945              		.cfi_offset 7, -8
 4946              		.cfi_offset 14, -4
 4947 0002 89B0     		sub	sp, sp, #36
 4948              		.cfi_def_cfa_offset 48
 4949 0004 02AF     		add	r7, sp, #8
 4950              		.cfi_def_cfa 7, 40
 4951 0006 F860     		str	r0, [r7, #12]
 4952 0008 0C00     		movs	r4, r1
 4953 000a 1000     		movs	r0, r2
 4954 000c 1900     		movs	r1, r3
 4955 000e 0A23     		movs	r3, #10
 4956 0010 FB18     		adds	r3, r7, r3
 4957 0012 221C     		adds	r2, r4, #0
 4958 0014 1A80     		strh	r2, [r3]
 4959 0016 0823     		movs	r3, #8
 4960 0018 FB18     		adds	r3, r7, r3
 4961 001a 021C     		adds	r2, r0, #0
 4962 001c 1A80     		strh	r2, [r3]
 4963 001e BB1D     		adds	r3, r7, #6
 4964 0020 0A1C     		adds	r2, r1, #0
 4965 0022 1A80     		strh	r2, [r3]
2343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 4966              		.loc 1 2343 0
 4967 0024 0023     		movs	r3, #0
 4968 0026 3B61     		str	r3, [r7, #16]
2344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 4969              		.loc 1 2344 0
 4970 0028 0023     		movs	r3, #0
 4971 002a 7B61     		str	r3, [r7, #20]
2345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 4972              		.loc 1 2349 0
 4973 002c FB68     		ldr	r3, [r7, #12]
 4974 002e 4122     		movs	r2, #65
 4975 0030 9B5C     		ldrb	r3, [r3, r2]
 4976 0032 DBB2     		uxtb	r3, r3
 4977 0034 202B     		cmp	r3, #32
 4978 0036 00D0     		beq	.LCB4460
 4979 0038 B9E0     		b	.L235	@long jump
 4980              	.LCB4460:
2350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 4981              		.loc 1 2351 0
 4982 003a BB6A     		ldr	r3, [r7, #40]
 4983 003c 002B     		cmp	r3, #0
 4984 003e 04D0     		beq	.L236
ARM GAS  /tmp/ccqg4Whx.s 			page 129


 4985              		.loc 1 2351 0 is_stmt 0 discriminator 1
 4986 0040 2C23     		movs	r3, #44
 4987 0042 FB18     		adds	r3, r7, r3
 4988 0044 1B88     		ldrh	r3, [r3]
 4989 0046 002B     		cmp	r3, #0
 4990 0048 01D1     		bne	.L237
 4991              	.L236:
2352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 4992              		.loc 1 2353 0 is_stmt 1
 4993 004a 0123     		movs	r3, #1
 4994 004c B0E0     		b	.L238
 4995              	.L237:
2354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 4996              		.loc 1 2356 0
 4997 004e FB68     		ldr	r3, [r7, #12]
 4998 0050 1B68     		ldr	r3, [r3]
 4999 0052 9A69     		ldr	r2, [r3, #24]
 5000 0054 8023     		movs	r3, #128
 5001 0056 1B02     		lsls	r3, r3, #8
 5002 0058 1A40     		ands	r2, r3
 5003 005a 8023     		movs	r3, #128
 5004 005c 1B02     		lsls	r3, r3, #8
 5005 005e 9A42     		cmp	r2, r3
 5006 0060 01D1     		bne	.L239
2357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
 5007              		.loc 1 2358 0
 5008 0062 0223     		movs	r3, #2
 5009 0064 A4E0     		b	.L238
 5010              	.L239:
2359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5011              		.loc 1 2362 0
 5012 0066 FB68     		ldr	r3, [r7, #12]
 5013 0068 4022     		movs	r2, #64
 5014 006a 9B5C     		ldrb	r3, [r3, r2]
 5015 006c 012B     		cmp	r3, #1
 5016 006e 01D1     		bne	.L240
 5017              		.loc 1 2362 0 is_stmt 0 discriminator 1
 5018 0070 0223     		movs	r3, #2
 5019 0072 9DE0     		b	.L238
 5020              	.L240:
 5021              		.loc 1 2362 0 discriminator 2
 5022 0074 FB68     		ldr	r3, [r7, #12]
 5023 0076 4022     		movs	r2, #64
 5024 0078 0121     		movs	r1, #1
 5025 007a 9954     		strb	r1, [r3, r2]
2363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 5026              		.loc 1 2365 0 is_stmt 1 discriminator 2
 5027 007c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccqg4Whx.s 			page 130


 5028 0080 0300     		movs	r3, r0
 5029 0082 3B61     		str	r3, [r7, #16]
2366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 5030              		.loc 1 2367 0 discriminator 2
 5031 0084 FB68     		ldr	r3, [r7, #12]
 5032 0086 4122     		movs	r2, #65
 5033 0088 2221     		movs	r1, #34
 5034 008a 9954     		strb	r1, [r3, r2]
2368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 5035              		.loc 1 2368 0 discriminator 2
 5036 008c FB68     		ldr	r3, [r7, #12]
 5037 008e 4222     		movs	r2, #66
 5038 0090 4021     		movs	r1, #64
 5039 0092 9954     		strb	r1, [r3, r2]
2369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 5040              		.loc 1 2369 0 discriminator 2
 5041 0094 FB68     		ldr	r3, [r7, #12]
 5042 0096 0022     		movs	r2, #0
 5043 0098 5A64     		str	r2, [r3, #68]
2370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5044              		.loc 1 2372 0 discriminator 2
 5045 009a FB68     		ldr	r3, [r7, #12]
 5046 009c BA6A     		ldr	r2, [r7, #40]
 5047 009e 5A62     		str	r2, [r3, #36]
2373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5048              		.loc 1 2373 0 discriminator 2
 5049 00a0 FB68     		ldr	r3, [r7, #12]
 5050 00a2 2C22     		movs	r2, #44
 5051 00a4 BA18     		adds	r2, r7, r2
 5052 00a6 1288     		ldrh	r2, [r2]
 5053 00a8 5A85     		strh	r2, [r3, #42]
2374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 5054              		.loc 1 2374 0 discriminator 2
 5055 00aa FB68     		ldr	r3, [r7, #12]
 5056 00ac 424A     		ldr	r2, .L245
 5057 00ae DA62     		str	r2, [r3, #44]
2375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5058              		.loc 1 2375 0 discriminator 2
 5059 00b0 FB68     		ldr	r3, [r7, #12]
 5060 00b2 424A     		ldr	r2, .L245+4
 5061 00b4 5A63     		str	r2, [r3, #52]
2376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 5062              		.loc 1 2377 0 discriminator 2
 5063 00b6 FB68     		ldr	r3, [r7, #12]
 5064 00b8 5B8D     		ldrh	r3, [r3, #42]
 5065 00ba 9BB2     		uxth	r3, r3
 5066 00bc FF2B     		cmp	r3, #255
 5067 00be 06D9     		bls	.L241
2378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 5068              		.loc 1 2379 0
 5069 00c0 FB68     		ldr	r3, [r7, #12]
 5070 00c2 FF22     		movs	r2, #255
ARM GAS  /tmp/ccqg4Whx.s 			page 131


 5071 00c4 1A85     		strh	r2, [r3, #40]
2380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5072              		.loc 1 2380 0
 5073 00c6 8023     		movs	r3, #128
 5074 00c8 5B04     		lsls	r3, r3, #17
 5075 00ca 7B61     		str	r3, [r7, #20]
 5076 00cc 07E0     		b	.L242
 5077              	.L241:
2381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 5078              		.loc 1 2384 0
 5079 00ce FB68     		ldr	r3, [r7, #12]
 5080 00d0 5B8D     		ldrh	r3, [r3, #42]
 5081 00d2 9AB2     		uxth	r2, r3
 5082 00d4 FB68     		ldr	r3, [r7, #12]
 5083 00d6 1A85     		strh	r2, [r3, #40]
2385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5084              		.loc 1 2385 0
 5085 00d8 8023     		movs	r3, #128
 5086 00da 9B04     		lsls	r3, r3, #18
 5087 00dc 7B61     		str	r3, [r7, #20]
 5088              	.L242:
2386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
 5089              		.loc 1 2389 0
 5090 00de BB1D     		adds	r3, r7, #6
 5091 00e0 1C88     		ldrh	r4, [r3]
 5092 00e2 0823     		movs	r3, #8
 5093 00e4 FB18     		adds	r3, r7, r3
 5094 00e6 1A88     		ldrh	r2, [r3]
 5095 00e8 0A23     		movs	r3, #10
 5096 00ea FB18     		adds	r3, r7, r3
 5097 00ec 1988     		ldrh	r1, [r3]
 5098 00ee F868     		ldr	r0, [r7, #12]
 5099 00f0 3B69     		ldr	r3, [r7, #16]
 5100 00f2 0193     		str	r3, [sp, #4]
 5101 00f4 1923     		movs	r3, #25
 5102 00f6 0093     		str	r3, [sp]
 5103 00f8 2300     		movs	r3, r4
 5104 00fa FFF7FEFF 		bl	I2C_RequestMemoryRead
 5105 00fe 031E     		subs	r3, r0, #0
 5106 0100 0FD0     		beq	.L243
2390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 5107              		.loc 1 2391 0
 5108 0102 FB68     		ldr	r3, [r7, #12]
 5109 0104 5B6C     		ldr	r3, [r3, #68]
 5110 0106 042B     		cmp	r3, #4
 5111 0108 05D1     		bne	.L244
2392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5112              		.loc 1 2394 0
ARM GAS  /tmp/ccqg4Whx.s 			page 132


 5113 010a FB68     		ldr	r3, [r7, #12]
 5114 010c 4022     		movs	r2, #64
 5115 010e 0021     		movs	r1, #0
 5116 0110 9954     		strb	r1, [r3, r2]
2395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 5117              		.loc 1 2395 0
 5118 0112 0123     		movs	r3, #1
 5119 0114 4CE0     		b	.L238
 5120              	.L244:
2396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
2398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5121              		.loc 1 2400 0
 5122 0116 FB68     		ldr	r3, [r7, #12]
 5123 0118 4022     		movs	r2, #64
 5124 011a 0021     		movs	r1, #0
 5125 011c 9954     		strb	r1, [r3, r2]
2401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 5126              		.loc 1 2401 0
 5127 011e 0323     		movs	r3, #3
 5128 0120 46E0     		b	.L238
 5129              	.L243:
2402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
2406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
 5130              		.loc 1 2406 0
 5131 0122 FB68     		ldr	r3, [r7, #12]
 5132 0124 DB6B     		ldr	r3, [r3, #60]
 5133 0126 264A     		ldr	r2, .L245+8
 5134 0128 9A62     		str	r2, [r3, #40]
2407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the DMA error callback */
2409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
 5135              		.loc 1 2409 0
 5136 012a FB68     		ldr	r3, [r7, #12]
 5137 012c DB6B     		ldr	r3, [r3, #60]
 5138 012e 254A     		ldr	r2, .L245+12
 5139 0130 1A63     		str	r2, [r3, #48]
2410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
2412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
 5140              		.loc 1 2412 0
 5141 0132 FB68     		ldr	r3, [r7, #12]
 5142 0134 DB6B     		ldr	r3, [r3, #60]
 5143 0136 0022     		movs	r2, #0
 5144 0138 DA62     		str	r2, [r3, #44]
2413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
 5145              		.loc 1 2413 0
 5146 013a FB68     		ldr	r3, [r7, #12]
 5147 013c DB6B     		ldr	r3, [r3, #60]
 5148 013e 0022     		movs	r2, #0
 5149 0140 5A63     		str	r2, [r3, #52]
2414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 133


2415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable the DMA channel */
2416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
 5150              		.loc 1 2416 0
 5151 0142 FB68     		ldr	r3, [r7, #12]
 5152 0144 D86B     		ldr	r0, [r3, #60]
 5153 0146 FB68     		ldr	r3, [r7, #12]
 5154 0148 1B68     		ldr	r3, [r3]
 5155 014a 2433     		adds	r3, r3, #36
 5156 014c 1900     		movs	r1, r3
 5157 014e BA6A     		ldr	r2, [r7, #40]
 5158 0150 FB68     		ldr	r3, [r7, #12]
 5159 0152 1B8D     		ldrh	r3, [r3, #40]
 5160 0154 FFF7FEFF 		bl	HAL_DMA_Start_IT
2417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 5161              		.loc 1 2419 0
 5162 0158 FB68     		ldr	r3, [r7, #12]
 5163 015a 1B8D     		ldrh	r3, [r3, #40]
 5164 015c DAB2     		uxtb	r2, r3
 5165 015e 7C69     		ldr	r4, [r7, #20]
 5166 0160 0A23     		movs	r3, #10
 5167 0162 FB18     		adds	r3, r7, r3
 5168 0164 1988     		ldrh	r1, [r3]
 5169 0166 F868     		ldr	r0, [r7, #12]
 5170 0168 9023     		movs	r3, #144
 5171 016a 9B01     		lsls	r3, r3, #6
 5172 016c 0093     		str	r3, [sp]
 5173 016e 2300     		movs	r3, r4
 5174 0170 FFF7FEFF 		bl	I2C_TransferConfig
2420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update XferCount value */
2422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
 5175              		.loc 1 2422 0
 5176 0174 FB68     		ldr	r3, [r7, #12]
 5177 0176 5B8D     		ldrh	r3, [r3, #42]
 5178 0178 9AB2     		uxth	r2, r3
 5179 017a FB68     		ldr	r3, [r7, #12]
 5180 017c 1B8D     		ldrh	r3, [r3, #40]
 5181 017e D31A     		subs	r3, r2, r3
 5182 0180 9AB2     		uxth	r2, r3
 5183 0182 FB68     		ldr	r3, [r7, #12]
 5184 0184 5A85     		strh	r2, [r3, #42]
2423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5185              		.loc 1 2425 0
 5186 0186 FB68     		ldr	r3, [r7, #12]
 5187 0188 4022     		movs	r2, #64
 5188 018a 0021     		movs	r1, #0
 5189 018c 9954     		strb	r1, [r3, r2]
2426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable DMA Request */
2428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 5190              		.loc 1 2428 0
 5191 018e FB68     		ldr	r3, [r7, #12]
 5192 0190 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccqg4Whx.s 			page 134


 5193 0192 1A68     		ldr	r2, [r3]
 5194 0194 FB68     		ldr	r3, [r7, #12]
 5195 0196 1B68     		ldr	r3, [r3]
 5196 0198 8021     		movs	r1, #128
 5197 019a 0902     		lsls	r1, r1, #8
 5198 019c 0A43     		orrs	r2, r1
 5199 019e 1A60     		str	r2, [r3]
2429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
2433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
2434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 5200              		.loc 1 2434 0
 5201 01a0 FB68     		ldr	r3, [r7, #12]
 5202 01a2 1121     		movs	r1, #17
 5203 01a4 1800     		movs	r0, r3
 5204 01a6 FFF7FEFF 		bl	I2C_Enable_IRQ
2435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 5205              		.loc 1 2436 0
 5206 01aa 0023     		movs	r3, #0
 5207 01ac 00E0     		b	.L238
 5208              	.L235:
2437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 5209              		.loc 1 2440 0
 5210 01ae 0223     		movs	r3, #2
 5211              	.L238:
2441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 5212              		.loc 1 2442 0
 5213 01b0 1800     		movs	r0, r3
 5214 01b2 BD46     		mov	sp, r7
 5215 01b4 07B0     		add	sp, sp, #28
 5216              		@ sp needed
 5217 01b6 90BD     		pop	{r4, r7, pc}
 5218              	.L246:
 5219              		.align	2
 5220              	.L245:
 5221 01b8 0000FFFF 		.word	-65536
 5222 01bc 00000000 		.word	I2C_Master_ISR_DMA
 5223 01c0 00000000 		.word	I2C_DMAMasterReceiveCplt
 5224 01c4 00000000 		.word	I2C_DMAError
 5225              		.cfi_endproc
 5226              	.LFE58:
 5228              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5229              		.align	1
 5230              		.global	HAL_I2C_IsDeviceReady
 5231              		.syntax unified
 5232              		.code	16
 5233              		.thumb_func
 5234              		.fpu softvfp
 5236              	HAL_I2C_IsDeviceReady:
 5237              	.LFB59:
ARM GAS  /tmp/ccqg4Whx.s 			page 135


2443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
2446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This function is used with Memory devices
2447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Trials Number of trials
2452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
2456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 5238              		.loc 1 2456 0
 5239              		.cfi_startproc
 5240              		@ args = 0, pretend = 0, frame = 24
 5241              		@ frame_needed = 1, uses_anonymous_args = 0
 5242 0000 80B5     		push	{r7, lr}
 5243              		.cfi_def_cfa_offset 8
 5244              		.cfi_offset 7, -8
 5245              		.cfi_offset 14, -4
 5246 0002 88B0     		sub	sp, sp, #32
 5247              		.cfi_def_cfa_offset 40
 5248 0004 02AF     		add	r7, sp, #8
 5249              		.cfi_def_cfa 7, 32
 5250 0006 F860     		str	r0, [r7, #12]
 5251 0008 7A60     		str	r2, [r7, #4]
 5252 000a 3B60     		str	r3, [r7]
 5253 000c 0A23     		movs	r3, #10
 5254 000e FB18     		adds	r3, r7, r3
 5255 0010 0A1C     		adds	r2, r1, #0
 5256 0012 1A80     		strh	r2, [r3]
2457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 5257              		.loc 1 2457 0
 5258 0014 0023     		movs	r3, #0
 5259 0016 7B61     		str	r3, [r7, #20]
2458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0U;
 5260              		.loc 1 2459 0
 5261 0018 0023     		movs	r3, #0
 5262 001a 3B61     		str	r3, [r7, #16]
2460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 5263              		.loc 1 2461 0
 5264 001c FB68     		ldr	r3, [r7, #12]
 5265 001e 4122     		movs	r2, #65
 5266 0020 9B5C     		ldrb	r3, [r3, r2]
 5267 0022 DBB2     		uxtb	r3, r3
 5268 0024 202B     		cmp	r3, #32
 5269 0026 00D0     		beq	.LCB4719
 5270 0028 CBE0     		b	.L248	@long jump
 5271              	.LCB4719:
2462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 5272              		.loc 1 2463 0
 5273 002a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 136


 5274 002c 1B68     		ldr	r3, [r3]
 5275 002e 9A69     		ldr	r2, [r3, #24]
 5276 0030 8023     		movs	r3, #128
 5277 0032 1B02     		lsls	r3, r3, #8
 5278 0034 1A40     		ands	r2, r3
 5279 0036 8023     		movs	r3, #128
 5280 0038 1B02     		lsls	r3, r3, #8
 5281 003a 9A42     		cmp	r2, r3
 5282 003c 01D1     		bne	.L249
2464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_BUSY;
 5283              		.loc 1 2465 0
 5284 003e 0223     		movs	r3, #2
 5285 0040 C0E0     		b	.L250
 5286              	.L249:
2466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5287              		.loc 1 2469 0
 5288 0042 FB68     		ldr	r3, [r7, #12]
 5289 0044 4022     		movs	r2, #64
 5290 0046 9B5C     		ldrb	r3, [r3, r2]
 5291 0048 012B     		cmp	r3, #1
 5292 004a 01D1     		bne	.L251
 5293              		.loc 1 2469 0 is_stmt 0 discriminator 1
 5294 004c 0223     		movs	r3, #2
 5295 004e B9E0     		b	.L250
 5296              	.L251:
 5297              		.loc 1 2469 0 discriminator 2
 5298 0050 FB68     		ldr	r3, [r7, #12]
 5299 0052 4022     		movs	r2, #64
 5300 0054 0121     		movs	r1, #1
 5301 0056 9954     		strb	r1, [r3, r2]
2470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
 5302              		.loc 1 2471 0 is_stmt 1 discriminator 2
 5303 0058 FB68     		ldr	r3, [r7, #12]
 5304 005a 4122     		movs	r2, #65
 5305 005c 2421     		movs	r1, #36
 5306 005e 9954     		strb	r1, [r3, r2]
2472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5307              		.loc 1 2472 0 discriminator 2
 5308 0060 FB68     		ldr	r3, [r7, #12]
 5309 0062 0022     		movs	r2, #0
 5310 0064 5A64     		str	r2, [r3, #68]
 5311              	.L263:
2473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     do
2475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Generate Start */
2477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
 5312              		.loc 1 2477 0
 5313 0066 FB68     		ldr	r3, [r7, #12]
 5314 0068 DB68     		ldr	r3, [r3, #12]
 5315 006a 012B     		cmp	r3, #1
 5316 006c 07D1     		bne	.L252
ARM GAS  /tmp/ccqg4Whx.s 			page 137


 5317              		.loc 1 2477 0 is_stmt 0 discriminator 1
 5318 006e 0A23     		movs	r3, #10
 5319 0070 FB18     		adds	r3, r7, r3
 5320 0072 1B88     		ldrh	r3, [r3]
 5321 0074 9B05     		lsls	r3, r3, #22
 5322 0076 9B0D     		lsrs	r3, r3, #22
 5323 0078 544A     		ldr	r2, .L264
 5324 007a 1A43     		orrs	r2, r3
 5325 007c 07E0     		b	.L253
 5326              	.L252:
 5327              		.loc 1 2477 0 discriminator 2
 5328 007e 0A23     		movs	r3, #10
 5329 0080 FB18     		adds	r3, r7, r3
 5330 0082 1B88     		ldrh	r3, [r3]
 5331 0084 9B05     		lsls	r3, r3, #22
 5332 0086 9B0D     		lsrs	r3, r3, #22
 5333 0088 A022     		movs	r2, #160
 5334 008a 9201     		lsls	r2, r2, #6
 5335 008c 1A43     		orrs	r2, r3
 5336              	.L253:
 5337              		.loc 1 2477 0 discriminator 4
 5338 008e FB68     		ldr	r3, [r7, #12]
 5339 0090 1B68     		ldr	r3, [r3]
 5340 0092 5A60     		str	r2, [r3, #4]
2478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
2481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tickstart = HAL_GetTick();
 5341              		.loc 1 2481 0 is_stmt 1 discriminator 4
 5342 0094 FFF7FEFF 		bl	HAL_GetTick
 5343 0098 0300     		movs	r3, r0
 5344 009a 7B61     		str	r3, [r7, #20]
2482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_F
 5345              		.loc 1 2482 0 discriminator 4
 5346 009c 17E0     		b	.L254
 5347              	.L257:
2483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (Timeout != HAL_MAX_DELAY)
 5348              		.loc 1 2484 0
 5349 009e 3B68     		ldr	r3, [r7]
 5350 00a0 0133     		adds	r3, r3, #1
 5351 00a2 14D0     		beq	.L254
2485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
2486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 5352              		.loc 1 2486 0
 5353 00a4 3B68     		ldr	r3, [r7]
 5354 00a6 002B     		cmp	r3, #0
 5355 00a8 07D0     		beq	.L255
 5356              		.loc 1 2486 0 is_stmt 0 discriminator 1
 5357 00aa FFF7FEFF 		bl	HAL_GetTick
 5358 00ae 0200     		movs	r2, r0
 5359 00b0 7B69     		ldr	r3, [r7, #20]
 5360 00b2 D31A     		subs	r3, r2, r3
 5361 00b4 3A68     		ldr	r2, [r7]
 5362 00b6 9A42     		cmp	r2, r3
 5363 00b8 09D2     		bcs	.L254
 5364              	.L255:
ARM GAS  /tmp/ccqg4Whx.s 			page 138


2487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           {
2488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Device is ready */
2489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
 5365              		.loc 1 2489 0 is_stmt 1
 5366 00ba FB68     		ldr	r3, [r7, #12]
 5367 00bc 4122     		movs	r2, #65
 5368 00be 2021     		movs	r1, #32
 5369 00c0 9954     		strb	r1, [r3, r2]
2490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             /* Process Unlocked */
2491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
 5370              		.loc 1 2491 0
 5371 00c2 FB68     		ldr	r3, [r7, #12]
 5372 00c4 4022     		movs	r2, #64
 5373 00c6 0021     		movs	r1, #0
 5374 00c8 9954     		strb	r1, [r3, r2]
2492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             return HAL_TIMEOUT;
 5375              		.loc 1 2492 0
 5376 00ca 0323     		movs	r3, #3
 5377 00cc 7AE0     		b	.L250
 5378              	.L254:
2482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 5379              		.loc 1 2482 0
 5380 00ce FB68     		ldr	r3, [r7, #12]
 5381 00d0 1B68     		ldr	r3, [r3]
 5382 00d2 9B69     		ldr	r3, [r3, #24]
 5383 00d4 2022     		movs	r2, #32
 5384 00d6 1340     		ands	r3, r2
 5385 00d8 202B     		cmp	r3, #32
 5386 00da 0CD0     		beq	.L256
2482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 5387              		.loc 1 2482 0 is_stmt 0 discriminator 1
 5388 00dc FB68     		ldr	r3, [r7, #12]
 5389 00de 1B68     		ldr	r3, [r3]
 5390 00e0 9B69     		ldr	r3, [r3, #24]
 5391 00e2 1022     		movs	r2, #16
 5392 00e4 1340     		ands	r3, r2
 5393 00e6 102B     		cmp	r3, #16
 5394 00e8 05D0     		beq	.L256
2482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 5395              		.loc 1 2482 0 discriminator 2
 5396 00ea FB68     		ldr	r3, [r7, #12]
 5397 00ec 4122     		movs	r2, #65
 5398 00ee 9B5C     		ldrb	r3, [r3, r2]
 5399 00f0 DBB2     		uxtb	r3, r3
 5400 00f2 A02B     		cmp	r3, #160
 5401 00f4 D3D1     		bne	.L257
 5402              	.L256:
2493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           }
2494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
2495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
2498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
 5403              		.loc 1 2498 0 is_stmt 1
 5404 00f6 FB68     		ldr	r3, [r7, #12]
 5405 00f8 1B68     		ldr	r3, [r3]
 5406 00fa 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/ccqg4Whx.s 			page 139


 5407 00fc 1022     		movs	r2, #16
 5408 00fe 1340     		ands	r3, r2
 5409 0100 102B     		cmp	r3, #16
 5410 0102 1AD0     		beq	.L258
2499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
2501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 5411              		.loc 1 2501 0
 5412 0104 3A68     		ldr	r2, [r7]
 5413 0106 F868     		ldr	r0, [r7, #12]
 5414 0108 7B69     		ldr	r3, [r7, #20]
 5415 010a 0093     		str	r3, [sp]
 5416 010c 1300     		movs	r3, r2
 5417 010e 0022     		movs	r2, #0
 5418 0110 2021     		movs	r1, #32
 5419 0112 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5420 0116 031E     		subs	r3, r0, #0
 5421 0118 01D0     		beq	.L259
2502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
2503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 5422              		.loc 1 2503 0
 5423 011a 0323     		movs	r3, #3
 5424 011c 52E0     		b	.L250
 5425              	.L259:
2504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
2505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear STOP Flag */
2507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 5426              		.loc 1 2507 0
 5427 011e FB68     		ldr	r3, [r7, #12]
 5428 0120 1B68     		ldr	r3, [r3]
 5429 0122 2022     		movs	r2, #32
 5430 0124 DA61     		str	r2, [r3, #28]
2508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Device is ready */
2510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 5431              		.loc 1 2510 0
 5432 0126 FB68     		ldr	r3, [r7, #12]
 5433 0128 4122     		movs	r2, #65
 5434 012a 2021     		movs	r1, #32
 5435 012c 9954     		strb	r1, [r3, r2]
2511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
2513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5436              		.loc 1 2513 0
 5437 012e FB68     		ldr	r3, [r7, #12]
 5438 0130 4022     		movs	r2, #64
 5439 0132 0021     		movs	r1, #0
 5440 0134 9954     		strb	r1, [r3, r2]
2514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_OK;
 5441              		.loc 1 2515 0
 5442 0136 0023     		movs	r3, #0
 5443 0138 44E0     		b	.L250
 5444              	.L258:
2516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
ARM GAS  /tmp/ccqg4Whx.s 			page 140


2518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
2520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 5445              		.loc 1 2520 0
 5446 013a 3A68     		ldr	r2, [r7]
 5447 013c F868     		ldr	r0, [r7, #12]
 5448 013e 7B69     		ldr	r3, [r7, #20]
 5449 0140 0093     		str	r3, [sp]
 5450 0142 1300     		movs	r3, r2
 5451 0144 0022     		movs	r2, #0
 5452 0146 2021     		movs	r1, #32
 5453 0148 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5454 014c 031E     		subs	r3, r0, #0
 5455 014e 01D0     		beq	.L260
2521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
2522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 5456              		.loc 1 2522 0
 5457 0150 0323     		movs	r3, #3
 5458 0152 37E0     		b	.L250
 5459              	.L260:
2523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
2524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear NACK Flag */
2526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 5460              		.loc 1 2526 0
 5461 0154 FB68     		ldr	r3, [r7, #12]
 5462 0156 1B68     		ldr	r3, [r3]
 5463 0158 1022     		movs	r2, #16
 5464 015a DA61     		str	r2, [r3, #28]
2527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
2529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 5465              		.loc 1 2529 0
 5466 015c FB68     		ldr	r3, [r7, #12]
 5467 015e 1B68     		ldr	r3, [r3]
 5468 0160 2022     		movs	r2, #32
 5469 0162 DA61     		str	r2, [r3, #28]
2530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
2533:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_Trials++ == Trials)
 5470              		.loc 1 2533 0
 5471 0164 3B69     		ldr	r3, [r7, #16]
 5472 0166 5A1C     		adds	r2, r3, #1
 5473 0168 3A61     		str	r2, [r7, #16]
 5474 016a 7A68     		ldr	r2, [r7, #4]
 5475 016c 9A42     		cmp	r2, r3
 5476 016e 19D1     		bne	.L261
2534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
2535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Generate Stop */
2536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
 5477              		.loc 1 2536 0
 5478 0170 FB68     		ldr	r3, [r7, #12]
 5479 0172 1B68     		ldr	r3, [r3]
 5480 0174 5A68     		ldr	r2, [r3, #4]
 5481 0176 FB68     		ldr	r3, [r7, #12]
 5482 0178 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccqg4Whx.s 			page 141


 5483 017a 8021     		movs	r1, #128
 5484 017c C901     		lsls	r1, r1, #7
 5485 017e 0A43     		orrs	r2, r1
 5486 0180 5A60     		str	r2, [r3, #4]
2537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
2539:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 5487              		.loc 1 2539 0
 5488 0182 3A68     		ldr	r2, [r7]
 5489 0184 F868     		ldr	r0, [r7, #12]
 5490 0186 7B69     		ldr	r3, [r7, #20]
 5491 0188 0093     		str	r3, [sp]
 5492 018a 1300     		movs	r3, r2
 5493 018c 0022     		movs	r2, #0
 5494 018e 2021     		movs	r1, #32
 5495 0190 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5496 0194 031E     		subs	r3, r0, #0
 5497 0196 01D0     		beq	.L262
2540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
2541:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 5498              		.loc 1 2541 0
 5499 0198 0323     		movs	r3, #3
 5500 019a 13E0     		b	.L250
 5501              	.L262:
2542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
2543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2544:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear STOP Flag */
2545:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 5502              		.loc 1 2545 0
 5503 019c FB68     		ldr	r3, [r7, #12]
 5504 019e 1B68     		ldr	r3, [r3]
 5505 01a0 2022     		movs	r2, #32
 5506 01a2 DA61     		str	r2, [r3, #28]
 5507              	.L261:
2546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
2547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2548:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (I2C_Trials < Trials);
 5508              		.loc 1 2548 0
 5509 01a4 3B69     		ldr	r3, [r7, #16]
 5510 01a6 7A68     		ldr	r2, [r7, #4]
 5511 01a8 9A42     		cmp	r2, r3
 5512 01aa 00D9     		bls	.LCB4945
 5513 01ac 5BE7     		b	.L263	@long jump
 5514              	.LCB4945:
2549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 5515              		.loc 1 2550 0
 5516 01ae FB68     		ldr	r3, [r7, #12]
 5517 01b0 4122     		movs	r2, #65
 5518 01b2 2021     		movs	r1, #32
 5519 01b4 9954     		strb	r1, [r3, r2]
2551:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2552:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5520              		.loc 1 2553 0
 5521 01b6 FB68     		ldr	r3, [r7, #12]
 5522 01b8 4022     		movs	r2, #64
ARM GAS  /tmp/ccqg4Whx.s 			page 142


 5523 01ba 0021     		movs	r1, #0
 5524 01bc 9954     		strb	r1, [r3, r2]
2554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2555:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_TIMEOUT;
 5525              		.loc 1 2555 0
 5526 01be 0323     		movs	r3, #3
 5527 01c0 00E0     		b	.L250
 5528              	.L248:
2556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2557:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2558:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 5529              		.loc 1 2559 0
 5530 01c2 0223     		movs	r3, #2
 5531              	.L250:
2560:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 5532              		.loc 1 2561 0
 5533 01c4 1800     		movs	r0, r3
 5534 01c6 BD46     		mov	sp, r7
 5535 01c8 06B0     		add	sp, sp, #24
 5536              		@ sp needed
 5537 01ca 80BD     		pop	{r7, pc}
 5538              	.L265:
 5539              		.align	2
 5540              	.L264:
 5541 01cc 00200002 		.word	33562624
 5542              		.cfi_endproc
 5543              	.LFE59:
 5545              		.section	.text.HAL_I2C_Master_Sequential_Transmit_IT,"ax",%progbits
 5546              		.align	1
 5547              		.global	HAL_I2C_Master_Sequential_Transmit_IT
 5548              		.syntax unified
 5549              		.code	16
 5550              		.thumb_func
 5551              		.fpu softvfp
 5553              	HAL_I2C_Master_Sequential_Transmit_IT:
 5554              	.LFB60:
2562:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2564:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
2565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2568:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2569:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2571:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2572:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2573:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2574:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Sequential_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddres
2576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 5555              		.loc 1 2576 0
 5556              		.cfi_startproc
 5557              		@ args = 4, pretend = 0, frame = 24
 5558              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccqg4Whx.s 			page 143


 5559 0000 90B5     		push	{r4, r7, lr}
 5560              		.cfi_def_cfa_offset 12
 5561              		.cfi_offset 4, -12
 5562              		.cfi_offset 7, -8
 5563              		.cfi_offset 14, -4
 5564 0002 89B0     		sub	sp, sp, #36
 5565              		.cfi_def_cfa_offset 48
 5566 0004 02AF     		add	r7, sp, #8
 5567              		.cfi_def_cfa 7, 40
 5568 0006 F860     		str	r0, [r7, #12]
 5569 0008 0800     		movs	r0, r1
 5570 000a 7A60     		str	r2, [r7, #4]
 5571 000c 1900     		movs	r1, r3
 5572 000e 0A23     		movs	r3, #10
 5573 0010 FB18     		adds	r3, r7, r3
 5574 0012 021C     		adds	r2, r0, #0
 5575 0014 1A80     		strh	r2, [r3]
 5576 0016 0823     		movs	r3, #8
 5577 0018 FB18     		adds	r3, r7, r3
 5578 001a 0A1C     		adds	r2, r1, #0
 5579 001c 1A80     		strh	r2, [r3]
2577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 5580              		.loc 1 2577 0
 5581 001e 0023     		movs	r3, #0
 5582 0020 7B61     		str	r3, [r7, #20]
2578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
 5583              		.loc 1 2578 0
 5584 0022 8023     		movs	r3, #128
 5585 0024 9B01     		lsls	r3, r3, #6
 5586 0026 3B61     		str	r3, [r7, #16]
2579:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2581:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 5587              		.loc 1 2583 0
 5588 0028 FB68     		ldr	r3, [r7, #12]
 5589 002a 4122     		movs	r2, #65
 5590 002c 9B5C     		ldrb	r3, [r3, r2]
 5591 002e DBB2     		uxtb	r3, r3
 5592 0030 202B     		cmp	r3, #32
 5593 0032 55D1     		bne	.L267
2584:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5594              		.loc 1 2586 0
 5595 0034 FB68     		ldr	r3, [r7, #12]
 5596 0036 4022     		movs	r2, #64
 5597 0038 9B5C     		ldrb	r3, [r3, r2]
 5598 003a 012B     		cmp	r3, #1
 5599 003c 01D1     		bne	.L268
 5600              		.loc 1 2586 0 is_stmt 0 discriminator 1
 5601 003e 0223     		movs	r3, #2
 5602 0040 4FE0     		b	.L269
 5603              	.L268:
 5604              		.loc 1 2586 0 discriminator 2
 5605 0042 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 144


 5606 0044 4022     		movs	r2, #64
 5607 0046 0121     		movs	r1, #1
 5608 0048 9954     		strb	r1, [r3, r2]
2587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2588:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 5609              		.loc 1 2588 0 is_stmt 1 discriminator 2
 5610 004a FB68     		ldr	r3, [r7, #12]
 5611 004c 4122     		movs	r2, #65
 5612 004e 2121     		movs	r1, #33
 5613 0050 9954     		strb	r1, [r3, r2]
2589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5614              		.loc 1 2589 0 discriminator 2
 5615 0052 FB68     		ldr	r3, [r7, #12]
 5616 0054 4222     		movs	r2, #66
 5617 0056 1021     		movs	r1, #16
 5618 0058 9954     		strb	r1, [r3, r2]
2590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5619              		.loc 1 2590 0 discriminator 2
 5620 005a FB68     		ldr	r3, [r7, #12]
 5621 005c 0022     		movs	r2, #0
 5622 005e 5A64     		str	r2, [r3, #68]
2591:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2592:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2593:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5623              		.loc 1 2593 0 discriminator 2
 5624 0060 FB68     		ldr	r3, [r7, #12]
 5625 0062 7A68     		ldr	r2, [r7, #4]
 5626 0064 5A62     		str	r2, [r3, #36]
2594:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5627              		.loc 1 2594 0 discriminator 2
 5628 0066 FB68     		ldr	r3, [r7, #12]
 5629 0068 0822     		movs	r2, #8
 5630 006a BA18     		adds	r2, r7, r2
 5631 006c 1288     		ldrh	r2, [r2]
 5632 006e 5A85     		strh	r2, [r3, #42]
2595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5633              		.loc 1 2595 0 discriminator 2
 5634 0070 FB68     		ldr	r3, [r7, #12]
 5635 0072 BA6A     		ldr	r2, [r7, #40]
 5636 0074 DA62     		str	r2, [r3, #44]
2596:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5637              		.loc 1 2596 0 discriminator 2
 5638 0076 FB68     		ldr	r3, [r7, #12]
 5639 0078 1C4A     		ldr	r2, .L273
 5640 007a 5A63     		str	r2, [r3, #52]
2597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If size > MAX_NBYTE_SIZE, use reload mode */
2599:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 5641              		.loc 1 2599 0 discriminator 2
 5642 007c FB68     		ldr	r3, [r7, #12]
 5643 007e 5B8D     		ldrh	r3, [r3, #42]
 5644 0080 9BB2     		uxth	r3, r3
 5645 0082 FF2B     		cmp	r3, #255
 5646 0084 06D9     		bls	.L270
2600:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2601:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 5647              		.loc 1 2601 0
ARM GAS  /tmp/ccqg4Whx.s 			page 145


 5648 0086 FB68     		ldr	r3, [r7, #12]
 5649 0088 FF22     		movs	r2, #255
 5650 008a 1A85     		strh	r2, [r3, #40]
2602:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5651              		.loc 1 2602 0
 5652 008c 8023     		movs	r3, #128
 5653 008e 5B04     		lsls	r3, r3, #17
 5654 0090 7B61     		str	r3, [r7, #20]
 5655 0092 07E0     		b	.L271
 5656              	.L270:
2603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2604:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2606:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 5657              		.loc 1 2606 0
 5658 0094 FB68     		ldr	r3, [r7, #12]
 5659 0096 5B8D     		ldrh	r3, [r3, #42]
 5660 0098 9AB2     		uxth	r2, r3
 5661 009a FB68     		ldr	r3, [r7, #12]
 5662 009c 1A85     		strh	r2, [r3, #40]
2607:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5663              		.loc 1 2607 0
 5664 009e FB68     		ldr	r3, [r7, #12]
 5665 00a0 DB6A     		ldr	r3, [r3, #44]
 5666 00a2 7B61     		str	r3, [r7, #20]
 5667              	.L271:
2608:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2610:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If transfer direction not change, do not generate Restart Condition */
2611:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
2612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 5668              		.loc 1 2612 0
 5669 00a4 FB68     		ldr	r3, [r7, #12]
 5670 00a6 1B6B     		ldr	r3, [r3, #48]
 5671 00a8 112B     		cmp	r3, #17
 5672 00aa 01D1     		bne	.L272
2613:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
 5673              		.loc 1 2614 0
 5674 00ac 0023     		movs	r3, #0
 5675 00ae 3B61     		str	r3, [r7, #16]
 5676              	.L272:
2615:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2617:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
2618:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, xferrequest);
 5677              		.loc 1 2618 0
 5678 00b0 FB68     		ldr	r3, [r7, #12]
 5679 00b2 1B8D     		ldrh	r3, [r3, #40]
 5680 00b4 DAB2     		uxtb	r2, r3
 5681 00b6 7C69     		ldr	r4, [r7, #20]
 5682 00b8 0A23     		movs	r3, #10
 5683 00ba FB18     		adds	r3, r7, r3
 5684 00bc 1988     		ldrh	r1, [r3]
 5685 00be F868     		ldr	r0, [r7, #12]
 5686 00c0 3B69     		ldr	r3, [r7, #16]
 5687 00c2 0093     		str	r3, [sp]
ARM GAS  /tmp/ccqg4Whx.s 			page 146


 5688 00c4 2300     		movs	r3, r4
 5689 00c6 FFF7FEFF 		bl	I2C_TransferConfig
2619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2620:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5690              		.loc 1 2621 0
 5691 00ca FB68     		ldr	r3, [r7, #12]
 5692 00cc 4022     		movs	r2, #64
 5693 00ce 0021     		movs	r1, #0
 5694 00d0 9954     		strb	r1, [r3, r2]
2622:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2623:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2625:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
2626:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 5695              		.loc 1 2626 0
 5696 00d2 FB68     		ldr	r3, [r7, #12]
 5697 00d4 0121     		movs	r1, #1
 5698 00d6 1800     		movs	r0, r3
 5699 00d8 FFF7FEFF 		bl	I2C_Enable_IRQ
2627:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2628:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 5700              		.loc 1 2628 0
 5701 00dc 0023     		movs	r3, #0
 5702 00de 00E0     		b	.L269
 5703              	.L267:
2629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2630:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2631:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 5704              		.loc 1 2632 0
 5705 00e0 0223     		movs	r3, #2
 5706              	.L269:
2633:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 5707              		.loc 1 2634 0
 5708 00e2 1800     		movs	r0, r3
 5709 00e4 BD46     		mov	sp, r7
 5710 00e6 07B0     		add	sp, sp, #28
 5711              		@ sp needed
 5712 00e8 90BD     		pop	{r4, r7, pc}
 5713              	.L274:
 5714 00ea C046     		.align	2
 5715              	.L273:
 5716 00ec 00000000 		.word	I2C_Master_ISR_IT
 5717              		.cfi_endproc
 5718              	.LFE60:
 5720              		.section	.text.HAL_I2C_Master_Sequential_Receive_IT,"ax",%progbits
 5721              		.align	1
 5722              		.global	HAL_I2C_Master_Sequential_Receive_IT
 5723              		.syntax unified
 5724              		.code	16
 5725              		.thumb_func
 5726              		.fpu softvfp
 5728              	HAL_I2C_Master_Sequential_Receive_IT:
 5729              	.LFB61:
2635:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 147


2636:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
2638:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2639:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2641:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2644:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2647:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Sequential_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress
2649:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 5730              		.loc 1 2649 0
 5731              		.cfi_startproc
 5732              		@ args = 4, pretend = 0, frame = 24
 5733              		@ frame_needed = 1, uses_anonymous_args = 0
 5734 0000 90B5     		push	{r4, r7, lr}
 5735              		.cfi_def_cfa_offset 12
 5736              		.cfi_offset 4, -12
 5737              		.cfi_offset 7, -8
 5738              		.cfi_offset 14, -4
 5739 0002 89B0     		sub	sp, sp, #36
 5740              		.cfi_def_cfa_offset 48
 5741 0004 02AF     		add	r7, sp, #8
 5742              		.cfi_def_cfa 7, 40
 5743 0006 F860     		str	r0, [r7, #12]
 5744 0008 0800     		movs	r0, r1
 5745 000a 7A60     		str	r2, [r7, #4]
 5746 000c 1900     		movs	r1, r3
 5747 000e 0A23     		movs	r3, #10
 5748 0010 FB18     		adds	r3, r7, r3
 5749 0012 021C     		adds	r2, r0, #0
 5750 0014 1A80     		strh	r2, [r3]
 5751 0016 0823     		movs	r3, #8
 5752 0018 FB18     		adds	r3, r7, r3
 5753 001a 0A1C     		adds	r2, r1, #0
 5754 001c 1A80     		strh	r2, [r3]
2650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 5755              		.loc 1 2650 0
 5756 001e 0023     		movs	r3, #0
 5757 0020 7B61     		str	r3, [r7, #20]
2651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
 5758              		.loc 1 2651 0
 5759 0022 9023     		movs	r3, #144
 5760 0024 9B01     		lsls	r3, r3, #6
 5761 0026 3B61     		str	r3, [r7, #16]
2652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2653:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2655:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2656:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 5762              		.loc 1 2656 0
 5763 0028 FB68     		ldr	r3, [r7, #12]
 5764 002a 4122     		movs	r2, #65
 5765 002c 9B5C     		ldrb	r3, [r3, r2]
ARM GAS  /tmp/ccqg4Whx.s 			page 148


 5766 002e DBB2     		uxtb	r3, r3
 5767 0030 202B     		cmp	r3, #32
 5768 0032 55D1     		bne	.L276
2657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2658:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2659:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5769              		.loc 1 2659 0
 5770 0034 FB68     		ldr	r3, [r7, #12]
 5771 0036 4022     		movs	r2, #64
 5772 0038 9B5C     		ldrb	r3, [r3, r2]
 5773 003a 012B     		cmp	r3, #1
 5774 003c 01D1     		bne	.L277
 5775              		.loc 1 2659 0 is_stmt 0 discriminator 1
 5776 003e 0223     		movs	r3, #2
 5777 0040 4FE0     		b	.L278
 5778              	.L277:
 5779              		.loc 1 2659 0 discriminator 2
 5780 0042 FB68     		ldr	r3, [r7, #12]
 5781 0044 4022     		movs	r2, #64
 5782 0046 0121     		movs	r1, #1
 5783 0048 9954     		strb	r1, [r3, r2]
2660:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 5784              		.loc 1 2661 0 is_stmt 1 discriminator 2
 5785 004a FB68     		ldr	r3, [r7, #12]
 5786 004c 4122     		movs	r2, #65
 5787 004e 2221     		movs	r1, #34
 5788 0050 9954     		strb	r1, [r3, r2]
2662:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5789              		.loc 1 2662 0 discriminator 2
 5790 0052 FB68     		ldr	r3, [r7, #12]
 5791 0054 4222     		movs	r2, #66
 5792 0056 1021     		movs	r1, #16
 5793 0058 9954     		strb	r1, [r3, r2]
2663:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5794              		.loc 1 2663 0 discriminator 2
 5795 005a FB68     		ldr	r3, [r7, #12]
 5796 005c 0022     		movs	r2, #0
 5797 005e 5A64     		str	r2, [r3, #68]
2664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2665:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5798              		.loc 1 2666 0 discriminator 2
 5799 0060 FB68     		ldr	r3, [r7, #12]
 5800 0062 7A68     		ldr	r2, [r7, #4]
 5801 0064 5A62     		str	r2, [r3, #36]
2667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5802              		.loc 1 2667 0 discriminator 2
 5803 0066 FB68     		ldr	r3, [r7, #12]
 5804 0068 0822     		movs	r2, #8
 5805 006a BA18     		adds	r2, r7, r2
 5806 006c 1288     		ldrh	r2, [r2]
 5807 006e 5A85     		strh	r2, [r3, #42]
2668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5808              		.loc 1 2668 0 discriminator 2
 5809 0070 FB68     		ldr	r3, [r7, #12]
 5810 0072 BA6A     		ldr	r2, [r7, #40]
ARM GAS  /tmp/ccqg4Whx.s 			page 149


 5811 0074 DA62     		str	r2, [r3, #44]
2669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5812              		.loc 1 2669 0 discriminator 2
 5813 0076 FB68     		ldr	r3, [r7, #12]
 5814 0078 1C4A     		ldr	r2, .L282
 5815 007a 5A63     		str	r2, [r3, #52]
2670:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
2672:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
 5816              		.loc 1 2672 0 discriminator 2
 5817 007c FB68     		ldr	r3, [r7, #12]
 5818 007e 5B8D     		ldrh	r3, [r3, #42]
 5819 0080 9BB2     		uxth	r3, r3
 5820 0082 FF2B     		cmp	r3, #255
 5821 0084 06D9     		bls	.L279
2673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2674:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 5822              		.loc 1 2674 0
 5823 0086 FB68     		ldr	r3, [r7, #12]
 5824 0088 FF22     		movs	r2, #255
 5825 008a 1A85     		strh	r2, [r3, #40]
2675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5826              		.loc 1 2675 0
 5827 008c 8023     		movs	r3, #128
 5828 008e 5B04     		lsls	r3, r3, #17
 5829 0090 7B61     		str	r3, [r7, #20]
 5830 0092 07E0     		b	.L280
 5831              	.L279:
2676:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2677:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
2678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 5832              		.loc 1 2679 0
 5833 0094 FB68     		ldr	r3, [r7, #12]
 5834 0096 5B8D     		ldrh	r3, [r3, #42]
 5835 0098 9AB2     		uxth	r2, r3
 5836 009a FB68     		ldr	r3, [r7, #12]
 5837 009c 1A85     		strh	r2, [r3, #40]
2680:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5838              		.loc 1 2680 0
 5839 009e FB68     		ldr	r3, [r7, #12]
 5840 00a0 DB6A     		ldr	r3, [r3, #44]
 5841 00a2 7B61     		str	r3, [r7, #20]
 5842              	.L280:
2681:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If transfer direction not change, do not generate Restart Condition */
2684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
2685:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 5843              		.loc 1 2685 0
 5844 00a4 FB68     		ldr	r3, [r7, #12]
 5845 00a6 1B6B     		ldr	r3, [r3, #48]
 5846 00a8 122B     		cmp	r3, #18
 5847 00aa 01D1     		bne	.L281
2686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
 5848              		.loc 1 2687 0
ARM GAS  /tmp/ccqg4Whx.s 			page 150


 5849 00ac 0023     		movs	r3, #0
 5850 00ae 3B61     		str	r3, [r7, #16]
 5851              	.L281:
2688:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2689:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
2691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, xferrequest);
 5852              		.loc 1 2691 0
 5853 00b0 FB68     		ldr	r3, [r7, #12]
 5854 00b2 1B8D     		ldrh	r3, [r3, #40]
 5855 00b4 DAB2     		uxtb	r2, r3
 5856 00b6 7C69     		ldr	r4, [r7, #20]
 5857 00b8 0A23     		movs	r3, #10
 5858 00ba FB18     		adds	r3, r7, r3
 5859 00bc 1988     		ldrh	r1, [r3]
 5860 00be F868     		ldr	r0, [r7, #12]
 5861 00c0 3B69     		ldr	r3, [r7, #16]
 5862 00c2 0093     		str	r3, [sp]
 5863 00c4 2300     		movs	r3, r4
 5864 00c6 FFF7FEFF 		bl	I2C_TransferConfig
2692:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2693:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5865              		.loc 1 2694 0
 5866 00ca FB68     		ldr	r3, [r7, #12]
 5867 00cc 4022     		movs	r2, #64
 5868 00ce 0021     		movs	r1, #0
 5869 00d0 9954     		strb	r1, [r3, r2]
2695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2696:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2697:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2698:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
2699:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
 5870              		.loc 1 2699 0
 5871 00d2 FB68     		ldr	r3, [r7, #12]
 5872 00d4 0221     		movs	r1, #2
 5873 00d6 1800     		movs	r0, r3
 5874 00d8 FFF7FEFF 		bl	I2C_Enable_IRQ
2700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2701:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 5875              		.loc 1 2701 0
 5876 00dc 0023     		movs	r3, #0
 5877 00de 00E0     		b	.L278
 5878              	.L276:
2702:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2703:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2705:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 5879              		.loc 1 2705 0
 5880 00e0 0223     		movs	r3, #2
 5881              	.L278:
2706:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 5882              		.loc 1 2707 0
 5883 00e2 1800     		movs	r0, r3
 5884 00e4 BD46     		mov	sp, r7
 5885 00e6 07B0     		add	sp, sp, #28
ARM GAS  /tmp/ccqg4Whx.s 			page 151


 5886              		@ sp needed
 5887 00e8 90BD     		pop	{r4, r7, pc}
 5888              	.L283:
 5889 00ea C046     		.align	2
 5890              	.L282:
 5891 00ec 00000000 		.word	I2C_Master_ISR_IT
 5892              		.cfi_endproc
 5893              	.LFE61:
 5895              		.section	.text.HAL_I2C_Slave_Sequential_Transmit_IT,"ax",%progbits
 5896              		.align	1
 5897              		.global	HAL_I2C_Slave_Sequential_Transmit_IT
 5898              		.syntax unified
 5899              		.code	16
 5900              		.thumb_func
 5901              		.fpu softvfp
 5903              	HAL_I2C_Slave_Sequential_Transmit_IT:
 5904              	.LFB62:
2708:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2709:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2710:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
2711:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2712:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2713:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2714:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2715:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2716:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2717:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2719:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Sequential_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uin
2720:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 5905              		.loc 1 2720 0
 5906              		.cfi_startproc
 5907              		@ args = 0, pretend = 0, frame = 16
 5908              		@ frame_needed = 1, uses_anonymous_args = 0
 5909 0000 80B5     		push	{r7, lr}
 5910              		.cfi_def_cfa_offset 8
 5911              		.cfi_offset 7, -8
 5912              		.cfi_offset 14, -4
 5913 0002 84B0     		sub	sp, sp, #16
 5914              		.cfi_def_cfa_offset 24
 5915 0004 00AF     		add	r7, sp, #0
 5916              		.cfi_def_cfa_register 7
 5917 0006 F860     		str	r0, [r7, #12]
 5918 0008 B960     		str	r1, [r7, #8]
 5919 000a 3B60     		str	r3, [r7]
 5920 000c BB1D     		adds	r3, r7, #6
 5921 000e 1A80     		strh	r2, [r3]
2721:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2723:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
 5922              		.loc 1 2724 0
 5923 0010 FB68     		ldr	r3, [r7, #12]
 5924 0012 4122     		movs	r2, #65
 5925 0014 9B5C     		ldrb	r3, [r3, r2]
 5926 0016 DBB2     		uxtb	r3, r3
 5927 0018 1A00     		movs	r2, r3
ARM GAS  /tmp/ccqg4Whx.s 			page 152


 5928 001a 2823     		movs	r3, #40
 5929 001c 1340     		ands	r3, r2
 5930 001e 282B     		cmp	r3, #40
 5931 0020 5FD1     		bne	.L285
2725:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 5932              		.loc 1 2726 0
 5933 0022 BB68     		ldr	r3, [r7, #8]
 5934 0024 002B     		cmp	r3, #0
 5935 0026 03D0     		beq	.L286
 5936              		.loc 1 2726 0 is_stmt 0 discriminator 1
 5937 0028 BB1D     		adds	r3, r7, #6
 5938 002a 1B88     		ldrh	r3, [r3]
 5939 002c 002B     		cmp	r3, #0
 5940 002e 01D1     		bne	.L287
 5941              	.L286:
2727:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2728:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 5942              		.loc 1 2728 0 is_stmt 1
 5943 0030 0123     		movs	r3, #1
 5944 0032 57E0     		b	.L288
 5945              	.L287:
2729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2731:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
2732:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
 5946              		.loc 1 2732 0
 5947 0034 FB68     		ldr	r3, [r7, #12]
 5948 0036 0521     		movs	r1, #5
 5949 0038 1800     		movs	r0, r3
 5950 003a FFF7FEFF 		bl	I2C_Disable_IRQ
2733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2735:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5951              		.loc 1 2735 0
 5952 003e FB68     		ldr	r3, [r7, #12]
 5953 0040 4022     		movs	r2, #64
 5954 0042 9B5C     		ldrb	r3, [r3, r2]
 5955 0044 012B     		cmp	r3, #1
 5956 0046 01D1     		bne	.L289
 5957              		.loc 1 2735 0 is_stmt 0 discriminator 1
 5958 0048 0223     		movs	r3, #2
 5959 004a 4BE0     		b	.L288
 5960              	.L289:
 5961              		.loc 1 2735 0 discriminator 2
 5962 004c FB68     		ldr	r3, [r7, #12]
 5963 004e 4022     		movs	r2, #64
 5964 0050 0121     		movs	r1, #1
 5965 0052 9954     		strb	r1, [r3, r2]
2736:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
2738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
2739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
 5966              		.loc 1 2739 0 is_stmt 1 discriminator 2
 5967 0054 FB68     		ldr	r3, [r7, #12]
 5968 0056 4122     		movs	r2, #65
 5969 0058 9B5C     		ldrb	r3, [r3, r2]
ARM GAS  /tmp/ccqg4Whx.s 			page 153


 5970 005a DBB2     		uxtb	r3, r3
 5971 005c 2A2B     		cmp	r3, #42
 5972 005e 04D1     		bne	.L290
2740:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable associated Interrupts */
2742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 5973              		.loc 1 2742 0
 5974 0060 FB68     		ldr	r3, [r7, #12]
 5975 0062 0221     		movs	r1, #2
 5976 0064 1800     		movs	r0, r3
 5977 0066 FFF7FEFF 		bl	I2C_Disable_IRQ
 5978              	.L290:
2743:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2744:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
 5979              		.loc 1 2745 0
 5980 006a FB68     		ldr	r3, [r7, #12]
 5981 006c 4122     		movs	r2, #65
 5982 006e 2921     		movs	r1, #41
 5983 0070 9954     		strb	r1, [r3, r2]
2746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 5984              		.loc 1 2746 0
 5985 0072 FB68     		ldr	r3, [r7, #12]
 5986 0074 4222     		movs	r2, #66
 5987 0076 2021     		movs	r1, #32
 5988 0078 9954     		strb	r1, [r3, r2]
2747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5989              		.loc 1 2747 0
 5990 007a FB68     		ldr	r3, [r7, #12]
 5991 007c 0022     		movs	r2, #0
 5992 007e 5A64     		str	r2, [r3, #68]
2748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
2750:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 5993              		.loc 1 2750 0
 5994 0080 FB68     		ldr	r3, [r7, #12]
 5995 0082 1B68     		ldr	r3, [r3]
 5996 0084 5A68     		ldr	r2, [r3, #4]
 5997 0086 FB68     		ldr	r3, [r7, #12]
 5998 0088 1B68     		ldr	r3, [r3]
 5999 008a 1849     		ldr	r1, .L292
 6000 008c 0A40     		ands	r2, r1
 6001 008e 5A60     		str	r2, [r3, #4]
2751:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 6002              		.loc 1 2753 0
 6003 0090 FB68     		ldr	r3, [r7, #12]
 6004 0092 BA68     		ldr	r2, [r7, #8]
 6005 0094 5A62     		str	r2, [r3, #36]
2754:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6006              		.loc 1 2754 0
 6007 0096 FB68     		ldr	r3, [r7, #12]
 6008 0098 BA1D     		adds	r2, r7, #6
 6009 009a 1288     		ldrh	r2, [r2]
 6010 009c 5A85     		strh	r2, [r3, #42]
2755:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
ARM GAS  /tmp/ccqg4Whx.s 			page 154


 6011              		.loc 1 2755 0
 6012 009e FB68     		ldr	r3, [r7, #12]
 6013 00a0 5B8D     		ldrh	r3, [r3, #42]
 6014 00a2 9AB2     		uxth	r2, r3
 6015 00a4 FB68     		ldr	r3, [r7, #12]
 6016 00a6 1A85     		strh	r2, [r3, #40]
2756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6017              		.loc 1 2756 0
 6018 00a8 FB68     		ldr	r3, [r7, #12]
 6019 00aa 3A68     		ldr	r2, [r7]
 6020 00ac DA62     		str	r2, [r3, #44]
2757:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6021              		.loc 1 2757 0
 6022 00ae FB68     		ldr	r3, [r7, #12]
 6023 00b0 0F4A     		ldr	r2, .L292+4
 6024 00b2 5A63     		str	r2, [r3, #52]
2758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2759:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
 6025              		.loc 1 2759 0
 6026 00b4 FB68     		ldr	r3, [r7, #12]
 6027 00b6 1B68     		ldr	r3, [r3]
 6028 00b8 9B69     		ldr	r3, [r3, #24]
 6029 00ba 1B0C     		lsrs	r3, r3, #16
 6030 00bc 0122     		movs	r2, #1
 6031 00be 1340     		ands	r3, r2
 6032 00c0 012B     		cmp	r3, #1
 6033 00c2 03D1     		bne	.L291
2760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2761:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
2762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
2763:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 6034              		.loc 1 2763 0
 6035 00c4 FB68     		ldr	r3, [r7, #12]
 6036 00c6 1B68     		ldr	r3, [r3]
 6037 00c8 0822     		movs	r2, #8
 6038 00ca DA61     		str	r2, [r3, #28]
 6039              	.L291:
2764:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2766:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2767:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6040              		.loc 1 2767 0
 6041 00cc FB68     		ldr	r3, [r7, #12]
 6042 00ce 4022     		movs	r2, #64
 6043 00d0 0021     		movs	r1, #0
 6044 00d2 9954     		strb	r1, [r3, r2]
2768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2769:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
2771:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     process unlock */
2772:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* REnable ADDR interrupt */
2773:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
 6045              		.loc 1 2773 0
 6046 00d4 FB68     		ldr	r3, [r7, #12]
 6047 00d6 0521     		movs	r1, #5
 6048 00d8 1800     		movs	r0, r3
 6049 00da FFF7FEFF 		bl	I2C_Enable_IRQ
ARM GAS  /tmp/ccqg4Whx.s 			page 155


2774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2775:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 6050              		.loc 1 2775 0
 6051 00de 0023     		movs	r3, #0
 6052 00e0 00E0     		b	.L288
 6053              	.L285:
2776:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2778:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
 6054              		.loc 1 2779 0
 6055 00e2 0123     		movs	r3, #1
 6056              	.L288:
2780:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2781:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6057              		.loc 1 2781 0
 6058 00e4 1800     		movs	r0, r3
 6059 00e6 BD46     		mov	sp, r7
 6060 00e8 04B0     		add	sp, sp, #16
 6061              		@ sp needed
 6062 00ea 80BD     		pop	{r7, pc}
 6063              	.L293:
 6064              		.align	2
 6065              	.L292:
 6066 00ec FF7FFFFF 		.word	-32769
 6067 00f0 00000000 		.word	I2C_Slave_ISR_IT
 6068              		.cfi_endproc
 6069              	.LFE62:
 6071              		.section	.text.HAL_I2C_Slave_Sequential_Receive_IT,"ax",%progbits
 6072              		.align	1
 6073              		.global	HAL_I2C_Slave_Sequential_Receive_IT
 6074              		.syntax unified
 6075              		.code	16
 6076              		.thumb_func
 6077              		.fpu softvfp
 6079              	HAL_I2C_Slave_Sequential_Receive_IT:
 6080              	.LFB63:
2782:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2783:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
2785:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2786:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2788:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2791:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2792:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2793:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Sequential_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint
2794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6081              		.loc 1 2794 0
 6082              		.cfi_startproc
 6083              		@ args = 0, pretend = 0, frame = 16
 6084              		@ frame_needed = 1, uses_anonymous_args = 0
 6085 0000 80B5     		push	{r7, lr}
 6086              		.cfi_def_cfa_offset 8
 6087              		.cfi_offset 7, -8
ARM GAS  /tmp/ccqg4Whx.s 			page 156


 6088              		.cfi_offset 14, -4
 6089 0002 84B0     		sub	sp, sp, #16
 6090              		.cfi_def_cfa_offset 24
 6091 0004 00AF     		add	r7, sp, #0
 6092              		.cfi_def_cfa_register 7
 6093 0006 F860     		str	r0, [r7, #12]
 6094 0008 B960     		str	r1, [r7, #8]
 6095 000a 3B60     		str	r3, [r7]
 6096 000c BB1D     		adds	r3, r7, #6
 6097 000e 1A80     		strh	r2, [r3]
2795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
2796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2798:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
 6098              		.loc 1 2798 0
 6099 0010 FB68     		ldr	r3, [r7, #12]
 6100 0012 4122     		movs	r2, #65
 6101 0014 9B5C     		ldrb	r3, [r3, r2]
 6102 0016 DBB2     		uxtb	r3, r3
 6103 0018 1A00     		movs	r2, r3
 6104 001a 2823     		movs	r3, #40
 6105 001c 1340     		ands	r3, r2
 6106 001e 282B     		cmp	r3, #40
 6107 0020 5ED1     		bne	.L295
2799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2800:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
 6108              		.loc 1 2800 0
 6109 0022 BB68     		ldr	r3, [r7, #8]
 6110 0024 002B     		cmp	r3, #0
 6111 0026 03D0     		beq	.L296
 6112              		.loc 1 2800 0 is_stmt 0 discriminator 1
 6113 0028 BB1D     		adds	r3, r7, #6
 6114 002a 1B88     		ldrh	r3, [r3]
 6115 002c 002B     		cmp	r3, #0
 6116 002e 01D1     		bne	.L297
 6117              	.L296:
2801:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return  HAL_ERROR;
 6118              		.loc 1 2802 0 is_stmt 1
 6119 0030 0123     		movs	r3, #1
 6120 0032 56E0     		b	.L298
 6121              	.L297:
2803:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2804:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
2806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
 6122              		.loc 1 2806 0
 6123 0034 FB68     		ldr	r3, [r7, #12]
 6124 0036 0621     		movs	r1, #6
 6125 0038 1800     		movs	r0, r3
 6126 003a FFF7FEFF 		bl	I2C_Disable_IRQ
2807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2808:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6127              		.loc 1 2809 0
 6128 003e FB68     		ldr	r3, [r7, #12]
 6129 0040 4022     		movs	r2, #64
ARM GAS  /tmp/ccqg4Whx.s 			page 157


 6130 0042 9B5C     		ldrb	r3, [r3, r2]
 6131 0044 012B     		cmp	r3, #1
 6132 0046 01D1     		bne	.L299
 6133              		.loc 1 2809 0 is_stmt 0 discriminator 1
 6134 0048 0223     		movs	r3, #2
 6135 004a 4AE0     		b	.L298
 6136              	.L299:
 6137              		.loc 1 2809 0 discriminator 2
 6138 004c FB68     		ldr	r3, [r7, #12]
 6139 004e 4022     		movs	r2, #64
 6140 0050 0121     		movs	r1, #1
 6141 0052 9954     		strb	r1, [r3, r2]
2810:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
2812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
2813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
 6142              		.loc 1 2813 0 is_stmt 1 discriminator 2
 6143 0054 FB68     		ldr	r3, [r7, #12]
 6144 0056 4122     		movs	r2, #65
 6145 0058 9B5C     		ldrb	r3, [r3, r2]
 6146 005a DBB2     		uxtb	r3, r3
 6147 005c 292B     		cmp	r3, #41
 6148 005e 04D1     		bne	.L300
2814:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable associated Interrupts */
2816:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 6149              		.loc 1 2816 0
 6150 0060 FB68     		ldr	r3, [r7, #12]
 6151 0062 0121     		movs	r1, #1
 6152 0064 1800     		movs	r0, r3
 6153 0066 FFF7FEFF 		bl	I2C_Disable_IRQ
 6154              	.L300:
2817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
2818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
 6155              		.loc 1 2819 0
 6156 006a FB68     		ldr	r3, [r7, #12]
 6157 006c 4122     		movs	r2, #65
 6158 006e 2A21     		movs	r1, #42
 6159 0070 9954     		strb	r1, [r3, r2]
2820:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6160              		.loc 1 2820 0
 6161 0072 FB68     		ldr	r3, [r7, #12]
 6162 0074 4222     		movs	r2, #66
 6163 0076 2021     		movs	r1, #32
 6164 0078 9954     		strb	r1, [r3, r2]
2821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6165              		.loc 1 2821 0
 6166 007a FB68     		ldr	r3, [r7, #12]
 6167 007c 0022     		movs	r2, #0
 6168 007e 5A64     		str	r2, [r3, #68]
2822:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
2824:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 6169              		.loc 1 2824 0
 6170 0080 FB68     		ldr	r3, [r7, #12]
 6171 0082 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccqg4Whx.s 			page 158


 6172 0084 5A68     		ldr	r2, [r3, #4]
 6173 0086 FB68     		ldr	r3, [r7, #12]
 6174 0088 1B68     		ldr	r3, [r3]
 6175 008a 1849     		ldr	r1, .L302
 6176 008c 0A40     		ands	r2, r1
 6177 008e 5A60     		str	r2, [r3, #4]
2825:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2826:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2827:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 6178              		.loc 1 2827 0
 6179 0090 FB68     		ldr	r3, [r7, #12]
 6180 0092 BA68     		ldr	r2, [r7, #8]
 6181 0094 5A62     		str	r2, [r3, #36]
2828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6182              		.loc 1 2828 0
 6183 0096 FB68     		ldr	r3, [r7, #12]
 6184 0098 BA1D     		adds	r2, r7, #6
 6185 009a 1288     		ldrh	r2, [r2]
 6186 009c 5A85     		strh	r2, [r3, #42]
2829:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6187              		.loc 1 2829 0
 6188 009e FB68     		ldr	r3, [r7, #12]
 6189 00a0 5B8D     		ldrh	r3, [r3, #42]
 6190 00a2 9AB2     		uxth	r2, r3
 6191 00a4 FB68     		ldr	r3, [r7, #12]
 6192 00a6 1A85     		strh	r2, [r3, #40]
2830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6193              		.loc 1 2830 0
 6194 00a8 FB68     		ldr	r3, [r7, #12]
 6195 00aa 3A68     		ldr	r2, [r7]
 6196 00ac DA62     		str	r2, [r3, #44]
2831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6197              		.loc 1 2831 0
 6198 00ae FB68     		ldr	r3, [r7, #12]
 6199 00b0 0F4A     		ldr	r2, .L302+4
 6200 00b2 5A63     		str	r2, [r3, #52]
2832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2833:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
 6201              		.loc 1 2833 0
 6202 00b4 FB68     		ldr	r3, [r7, #12]
 6203 00b6 1B68     		ldr	r3, [r3]
 6204 00b8 9A69     		ldr	r2, [r3, #24]
 6205 00ba 8023     		movs	r3, #128
 6206 00bc 5B02     		lsls	r3, r3, #9
 6207 00be 1340     		ands	r3, r2
 6208 00c0 03D1     		bne	.L301
2834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
2835:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
2836:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
2837:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 6209              		.loc 1 2837 0
 6210 00c2 FB68     		ldr	r3, [r7, #12]
 6211 00c4 1B68     		ldr	r3, [r3]
 6212 00c6 0822     		movs	r2, #8
 6213 00c8 DA61     		str	r2, [r3, #28]
 6214              	.L301:
2838:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccqg4Whx.s 			page 159


2839:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2840:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6215              		.loc 1 2841 0
 6216 00ca FB68     		ldr	r3, [r7, #12]
 6217 00cc 4022     		movs	r2, #64
 6218 00ce 0021     		movs	r1, #0
 6219 00d0 9954     		strb	r1, [r3, r2]
2842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
2845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     process unlock */
2846:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* REnable ADDR interrupt */
2847:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
 6220              		.loc 1 2847 0
 6221 00d2 FB68     		ldr	r3, [r7, #12]
 6222 00d4 0621     		movs	r1, #6
 6223 00d6 1800     		movs	r0, r3
 6224 00d8 FFF7FEFF 		bl	I2C_Enable_IRQ
2848:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2849:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 6225              		.loc 1 2849 0
 6226 00dc 0023     		movs	r3, #0
 6227 00de 00E0     		b	.L298
 6228              	.L295:
2850:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2852:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2853:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
 6229              		.loc 1 2853 0
 6230 00e0 0123     		movs	r3, #1
 6231              	.L298:
2854:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2855:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6232              		.loc 1 2855 0
 6233 00e2 1800     		movs	r0, r3
 6234 00e4 BD46     		mov	sp, r7
 6235 00e6 04B0     		add	sp, sp, #16
 6236              		@ sp needed
 6237 00e8 80BD     		pop	{r7, pc}
 6238              	.L303:
 6239 00ea C046     		.align	2
 6240              	.L302:
 6241 00ec FF7FFFFF 		.word	-32769
 6242 00f0 00000000 		.word	I2C_Slave_ISR_IT
 6243              		.cfi_endproc
 6244              	.LFE63:
 6246              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 6247              		.align	1
 6248              		.global	HAL_I2C_EnableListen_IT
 6249              		.syntax unified
 6250              		.code	16
 6251              		.thumb_func
 6252              		.fpu softvfp
 6254              	HAL_I2C_EnableListen_IT:
 6255              	.LFB64:
2856:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 160


2857:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2858:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
2859:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2860:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2861:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2862:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2863:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
2864:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6256              		.loc 1 2864 0
 6257              		.cfi_startproc
 6258              		@ args = 0, pretend = 0, frame = 8
 6259              		@ frame_needed = 1, uses_anonymous_args = 0
 6260 0000 80B5     		push	{r7, lr}
 6261              		.cfi_def_cfa_offset 8
 6262              		.cfi_offset 7, -8
 6263              		.cfi_offset 14, -4
 6264 0002 82B0     		sub	sp, sp, #8
 6265              		.cfi_def_cfa_offset 16
 6266 0004 00AF     		add	r7, sp, #0
 6267              		.cfi_def_cfa_register 7
 6268 0006 7860     		str	r0, [r7, #4]
2865:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 6269              		.loc 1 2865 0
 6270 0008 7B68     		ldr	r3, [r7, #4]
 6271 000a 4122     		movs	r2, #65
 6272 000c 9B5C     		ldrb	r3, [r3, r2]
 6273 000e DBB2     		uxtb	r3, r3
 6274 0010 202B     		cmp	r3, #32
 6275 0012 0DD1     		bne	.L305
2866:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2867:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
 6276              		.loc 1 2867 0
 6277 0014 7B68     		ldr	r3, [r7, #4]
 6278 0016 4122     		movs	r2, #65
 6279 0018 2821     		movs	r1, #40
 6280 001a 9954     		strb	r1, [r3, r2]
2868:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 6281              		.loc 1 2868 0
 6282 001c 7B68     		ldr	r3, [r7, #4]
 6283 001e 074A     		ldr	r2, .L307
 6284 0020 5A63     		str	r2, [r3, #52]
2869:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2870:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
2871:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 6285              		.loc 1 2871 0
 6286 0022 7B68     		ldr	r3, [r7, #4]
 6287 0024 0421     		movs	r1, #4
 6288 0026 1800     		movs	r0, r3
 6289 0028 FFF7FEFF 		bl	I2C_Enable_IRQ
2872:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2873:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 6290              		.loc 1 2873 0
 6291 002c 0023     		movs	r3, #0
 6292 002e 00E0     		b	.L306
 6293              	.L305:
2874:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2875:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
ARM GAS  /tmp/ccqg4Whx.s 			page 161


2876:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2877:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 6294              		.loc 1 2877 0
 6295 0030 0223     		movs	r3, #2
 6296              	.L306:
2878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2879:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6297              		.loc 1 2879 0
 6298 0032 1800     		movs	r0, r3
 6299 0034 BD46     		mov	sp, r7
 6300 0036 02B0     		add	sp, sp, #8
 6301              		@ sp needed
 6302 0038 80BD     		pop	{r7, pc}
 6303              	.L308:
 6304 003a C046     		.align	2
 6305              	.L307:
 6306 003c 00000000 		.word	I2C_Slave_ISR_IT
 6307              		.cfi_endproc
 6308              	.LFE64:
 6310              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 6311              		.align	1
 6312              		.global	HAL_I2C_DisableListen_IT
 6313              		.syntax unified
 6314              		.code	16
 6315              		.thumb_func
 6316              		.fpu softvfp
 6318              	HAL_I2C_DisableListen_IT:
 6319              	.LFB65:
2880:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2881:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2882:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
2883:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2884:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C
2885:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2886:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2887:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
2888:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6320              		.loc 1 2888 0
 6321              		.cfi_startproc
 6322              		@ args = 0, pretend = 0, frame = 16
 6323              		@ frame_needed = 1, uses_anonymous_args = 0
 6324 0000 80B5     		push	{r7, lr}
 6325              		.cfi_def_cfa_offset 8
 6326              		.cfi_offset 7, -8
 6327              		.cfi_offset 14, -4
 6328 0002 84B0     		sub	sp, sp, #16
 6329              		.cfi_def_cfa_offset 24
 6330 0004 00AF     		add	r7, sp, #0
 6331              		.cfi_def_cfa_register 7
 6332 0006 7860     		str	r0, [r7, #4]
2889:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
2890:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmp;
2891:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2892:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
2893:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
 6333              		.loc 1 2893 0
 6334 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccqg4Whx.s 			page 162


 6335 000a 4122     		movs	r2, #65
 6336 000c 9B5C     		ldrb	r3, [r3, r2]
 6337 000e DBB2     		uxtb	r3, r3
 6338 0010 282B     		cmp	r3, #40
 6339 0012 22D1     		bne	.L310
2894:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2895:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
 6340              		.loc 1 2895 0
 6341 0014 7B68     		ldr	r3, [r7, #4]
 6342 0016 4122     		movs	r2, #65
 6343 0018 9B5C     		ldrb	r3, [r3, r2]
 6344 001a DBB2     		uxtb	r3, r3
 6345 001c 1A00     		movs	r2, r3
 6346 001e 0323     		movs	r3, #3
 6347 0020 1340     		ands	r3, r2
 6348 0022 FB60     		str	r3, [r7, #12]
2896:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 6349              		.loc 1 2896 0
 6350 0024 7B68     		ldr	r3, [r7, #4]
 6351 0026 4222     		movs	r2, #66
 6352 0028 9B5C     		ldrb	r3, [r3, r2]
 6353 002a DBB2     		uxtb	r3, r3
 6354 002c 1A00     		movs	r2, r3
 6355 002e FB68     		ldr	r3, [r7, #12]
 6356 0030 1A43     		orrs	r2, r3
 6357 0032 7B68     		ldr	r3, [r7, #4]
 6358 0034 1A63     		str	r2, [r3, #48]
2897:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 6359              		.loc 1 2897 0
 6360 0036 7B68     		ldr	r3, [r7, #4]
 6361 0038 4122     		movs	r2, #65
 6362 003a 2021     		movs	r1, #32
 6363 003c 9954     		strb	r1, [r3, r2]
2898:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 6364              		.loc 1 2898 0
 6365 003e 7B68     		ldr	r3, [r7, #4]
 6366 0040 4222     		movs	r2, #66
 6367 0042 0021     		movs	r1, #0
 6368 0044 9954     		strb	r1, [r3, r2]
2899:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 6369              		.loc 1 2899 0
 6370 0046 7B68     		ldr	r3, [r7, #4]
 6371 0048 0022     		movs	r2, #0
 6372 004a 5A63     		str	r2, [r3, #52]
2900:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2901:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
2902:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 6373              		.loc 1 2902 0
 6374 004c 7B68     		ldr	r3, [r7, #4]
 6375 004e 0421     		movs	r1, #4
 6376 0050 1800     		movs	r0, r3
 6377 0052 FFF7FEFF 		bl	I2C_Disable_IRQ
2903:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2904:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 6378              		.loc 1 2904 0
 6379 0056 0023     		movs	r3, #0
 6380 0058 00E0     		b	.L311
ARM GAS  /tmp/ccqg4Whx.s 			page 163


 6381              	.L310:
2905:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2906:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2907:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2908:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_BUSY;
 6382              		.loc 1 2908 0
 6383 005a 0223     		movs	r3, #2
 6384              	.L311:
2909:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2910:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6385              		.loc 1 2910 0
 6386 005c 1800     		movs	r0, r3
 6387 005e BD46     		mov	sp, r7
 6388 0060 04B0     		add	sp, sp, #16
 6389              		@ sp needed
 6390 0062 80BD     		pop	{r7, pc}
 6391              		.cfi_endproc
 6392              	.LFE65:
 6394              		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
 6395              		.align	1
 6396              		.global	HAL_I2C_Master_Abort_IT
 6397              		.syntax unified
 6398              		.code	16
 6399              		.thumb_func
 6400              		.fpu softvfp
 6402              	HAL_I2C_Master_Abort_IT:
 6403              	.LFB66:
2911:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2912:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2913:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
2914:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2915:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2916:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2917:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2918:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
2919:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2920:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
2921:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6404              		.loc 1 2921 0
 6405              		.cfi_startproc
 6406              		@ args = 0, pretend = 0, frame = 8
 6407              		@ frame_needed = 1, uses_anonymous_args = 0
 6408 0000 80B5     		push	{r7, lr}
 6409              		.cfi_def_cfa_offset 8
 6410              		.cfi_offset 7, -8
 6411              		.cfi_offset 14, -4
 6412 0002 84B0     		sub	sp, sp, #16
 6413              		.cfi_def_cfa_offset 24
 6414 0004 02AF     		add	r7, sp, #8
 6415              		.cfi_def_cfa 7, 16
 6416 0006 7860     		str	r0, [r7, #4]
 6417 0008 0A00     		movs	r2, r1
 6418 000a BB1C     		adds	r3, r7, #2
 6419 000c 1A80     		strh	r2, [r3]
2922:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 6420              		.loc 1 2922 0
 6421 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccqg4Whx.s 			page 164


 6422 0010 4222     		movs	r2, #66
 6423 0012 9B5C     		ldrb	r3, [r3, r2]
 6424 0014 DBB2     		uxtb	r3, r3
 6425 0016 102B     		cmp	r3, #16
 6426 0018 2FD1     		bne	.L313
2923:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2924:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Locked */
2925:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6427              		.loc 1 2925 0
 6428 001a 7B68     		ldr	r3, [r7, #4]
 6429 001c 4022     		movs	r2, #64
 6430 001e 9B5C     		ldrb	r3, [r3, r2]
 6431 0020 012B     		cmp	r3, #1
 6432 0022 01D1     		bne	.L314
 6433              		.loc 1 2925 0 is_stmt 0 discriminator 1
 6434 0024 0223     		movs	r3, #2
 6435 0026 29E0     		b	.L315
 6436              	.L314:
 6437              		.loc 1 2925 0 discriminator 2
 6438 0028 7B68     		ldr	r3, [r7, #4]
 6439 002a 4022     		movs	r2, #64
 6440 002c 0121     		movs	r1, #1
 6441 002e 9954     		strb	r1, [r3, r2]
2926:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2927:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts */
2928:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 6442              		.loc 1 2928 0 is_stmt 1 discriminator 2
 6443 0030 7B68     		ldr	r3, [r7, #4]
 6444 0032 0221     		movs	r1, #2
 6445 0034 1800     		movs	r0, r3
 6446 0036 FFF7FEFF 		bl	I2C_Disable_IRQ
2929:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 6447              		.loc 1 2929 0 discriminator 2
 6448 003a 7B68     		ldr	r3, [r7, #4]
 6449 003c 0121     		movs	r1, #1
 6450 003e 1800     		movs	r0, r3
 6451 0040 FFF7FEFF 		bl	I2C_Disable_IRQ
2930:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2931:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
2932:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
 6452              		.loc 1 2932 0 discriminator 2
 6453 0044 7B68     		ldr	r3, [r7, #4]
 6454 0046 4122     		movs	r2, #65
 6455 0048 6021     		movs	r1, #96
 6456 004a 9954     		strb	r1, [r3, r2]
2933:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2934:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
2935:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
2936:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
 6457              		.loc 1 2936 0 discriminator 2
 6458 004c 8023     		movs	r3, #128
 6459 004e 9A04     		lsls	r2, r3, #18
 6460 0050 BB1C     		adds	r3, r7, #2
 6461 0052 1988     		ldrh	r1, [r3]
 6462 0054 7868     		ldr	r0, [r7, #4]
 6463 0056 8023     		movs	r3, #128
 6464 0058 DB01     		lsls	r3, r3, #7
ARM GAS  /tmp/ccqg4Whx.s 			page 165


 6465 005a 0093     		str	r3, [sp]
 6466 005c 1300     		movs	r3, r2
 6467 005e 0122     		movs	r2, #1
 6468 0060 FFF7FEFF 		bl	I2C_TransferConfig
2937:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2938:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
2939:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6469              		.loc 1 2939 0 discriminator 2
 6470 0064 7B68     		ldr	r3, [r7, #4]
 6471 0066 4022     		movs	r2, #64
 6472 0068 0021     		movs	r1, #0
 6473 006a 9954     		strb	r1, [r3, r2]
2940:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2941:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2942:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2943:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****               process unlock */
2944:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
 6474              		.loc 1 2944 0 discriminator 2
 6475 006c 7B68     		ldr	r3, [r7, #4]
 6476 006e 1221     		movs	r1, #18
 6477 0070 1800     		movs	r0, r3
 6478 0072 FFF7FEFF 		bl	I2C_Enable_IRQ
2945:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2946:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_OK;
 6479              		.loc 1 2946 0 discriminator 2
 6480 0076 0023     		movs	r3, #0
 6481 0078 00E0     		b	.L315
 6482              	.L313:
2947:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2948:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
2949:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2950:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wrong usage of abort function */
2951:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
2952:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
 6483              		.loc 1 2952 0
 6484 007a 0123     		movs	r3, #1
 6485              	.L315:
2953:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2954:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6486              		.loc 1 2954 0
 6487 007c 1800     		movs	r0, r3
 6488 007e BD46     		mov	sp, r7
 6489 0080 02B0     		add	sp, sp, #8
 6490              		@ sp needed
 6491 0082 80BD     		pop	{r7, pc}
 6492              		.cfi_endproc
 6493              	.LFE66:
 6495              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 6496              		.align	1
 6497              		.global	HAL_I2C_EV_IRQHandler
 6498              		.syntax unified
 6499              		.code	16
 6500              		.thumb_func
 6501              		.fpu softvfp
 6503              	HAL_I2C_EV_IRQHandler:
 6504              	.LFB67:
2955:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 166


2956:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2957:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
2958:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2959:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2960:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
2961:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  * @{
2962:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  */
2963:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2964:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2965:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
2966:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2967:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2968:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
2969:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2970:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
2971:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6505              		.loc 1 2971 0
 6506              		.cfi_startproc
 6507              		@ args = 0, pretend = 0, frame = 16
 6508              		@ frame_needed = 1, uses_anonymous_args = 0
 6509 0000 80B5     		push	{r7, lr}
 6510              		.cfi_def_cfa_offset 8
 6511              		.cfi_offset 7, -8
 6512              		.cfi_offset 14, -4
 6513 0002 84B0     		sub	sp, sp, #16
 6514              		.cfi_def_cfa_offset 24
 6515 0004 00AF     		add	r7, sp, #0
 6516              		.cfi_def_cfa_register 7
 6517 0006 7860     		str	r0, [r7, #4]
2972:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
2973:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 6518              		.loc 1 2973 0
 6519 0008 7B68     		ldr	r3, [r7, #4]
 6520 000a 1B68     		ldr	r3, [r3]
 6521 000c 9B69     		ldr	r3, [r3, #24]
 6522 000e FB60     		str	r3, [r7, #12]
2974:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 6523              		.loc 1 2974 0
 6524 0010 7B68     		ldr	r3, [r7, #4]
 6525 0012 1B68     		ldr	r3, [r3]
 6526 0014 1B68     		ldr	r3, [r3]
 6527 0016 BB60     		str	r3, [r7, #8]
2975:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2976:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
2977:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->XferISR != NULL)
 6528              		.loc 1 2977 0
 6529 0018 7B68     		ldr	r3, [r7, #4]
 6530 001a 5B6B     		ldr	r3, [r3, #52]
 6531 001c 002B     		cmp	r3, #0
 6532 001e 05D0     		beq	.L318
2978:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2979:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
 6533              		.loc 1 2979 0
 6534 0020 7B68     		ldr	r3, [r7, #4]
 6535 0022 5B6B     		ldr	r3, [r3, #52]
 6536 0024 BA68     		ldr	r2, [r7, #8]
 6537 0026 F968     		ldr	r1, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 167


 6538 0028 7868     		ldr	r0, [r7, #4]
 6539 002a 9847     		blx	r3
 6540              	.LVL0:
 6541              	.L318:
2980:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
2981:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6542              		.loc 1 2981 0
 6543 002c C046     		nop
 6544 002e BD46     		mov	sp, r7
 6545 0030 04B0     		add	sp, sp, #16
 6546              		@ sp needed
 6547 0032 80BD     		pop	{r7, pc}
 6548              		.cfi_endproc
 6549              	.LFE67:
 6551              		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 6552              		.align	1
 6553              		.global	HAL_I2C_ER_IRQHandler
 6554              		.syntax unified
 6555              		.code	16
 6556              		.thumb_func
 6557              		.fpu softvfp
 6559              	HAL_I2C_ER_IRQHandler:
 6560              	.LFB68:
2982:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2983:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
2984:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
2985:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2986:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2987:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
2988:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
2989:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
2990:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6561              		.loc 1 2990 0
 6562              		.cfi_startproc
 6563              		@ args = 0, pretend = 0, frame = 16
 6564              		@ frame_needed = 1, uses_anonymous_args = 0
 6565 0000 80B5     		push	{r7, lr}
 6566              		.cfi_def_cfa_offset 8
 6567              		.cfi_offset 7, -8
 6568              		.cfi_offset 14, -4
 6569 0002 84B0     		sub	sp, sp, #16
 6570              		.cfi_def_cfa_offset 24
 6571 0004 00AF     		add	r7, sp, #0
 6572              		.cfi_def_cfa_register 7
 6573 0006 7860     		str	r0, [r7, #4]
2991:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 6574              		.loc 1 2991 0
 6575 0008 7B68     		ldr	r3, [r7, #4]
 6576 000a 1B68     		ldr	r3, [r3]
 6577 000c 9B69     		ldr	r3, [r3, #24]
 6578 000e FB60     		str	r3, [r7, #12]
2992:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 6579              		.loc 1 2992 0
 6580 0010 7B68     		ldr	r3, [r7, #4]
 6581 0012 1B68     		ldr	r3, [r3]
 6582 0014 1B68     		ldr	r3, [r3]
 6583 0016 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccqg4Whx.s 			page 168


2993:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2994:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
2995:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((itflags & I2C_FLAG_BERR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 6584              		.loc 1 2995 0
 6585 0018 FA68     		ldr	r2, [r7, #12]
 6586 001a 8023     		movs	r3, #128
 6587 001c 5B00     		lsls	r3, r3, #1
 6588 001e 1340     		ands	r3, r2
 6589 0020 0ED0     		beq	.L320
 6590              		.loc 1 2995 0 is_stmt 0 discriminator 1
 6591 0022 BB68     		ldr	r3, [r7, #8]
 6592 0024 8022     		movs	r2, #128
 6593 0026 1340     		ands	r3, r2
 6594 0028 0AD0     		beq	.L320
2996:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
2997:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
 6595              		.loc 1 2997 0 is_stmt 1
 6596 002a 7B68     		ldr	r3, [r7, #4]
 6597 002c 5B6C     		ldr	r3, [r3, #68]
 6598 002e 0122     		movs	r2, #1
 6599 0030 1A43     		orrs	r2, r3
 6600 0032 7B68     		ldr	r3, [r7, #4]
 6601 0034 5A64     		str	r2, [r3, #68]
2998:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
2999:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear BERR flag */
3000:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 6602              		.loc 1 3000 0
 6603 0036 7B68     		ldr	r3, [r7, #4]
 6604 0038 1B68     		ldr	r3, [r3]
 6605 003a 8022     		movs	r2, #128
 6606 003c 5200     		lsls	r2, r2, #1
 6607 003e DA61     		str	r2, [r3, #28]
 6608              	.L320:
3001:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3002:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3003:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
3004:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((itflags & I2C_FLAG_OVR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 6609              		.loc 1 3004 0
 6610 0040 FA68     		ldr	r2, [r7, #12]
 6611 0042 8023     		movs	r3, #128
 6612 0044 DB00     		lsls	r3, r3, #3
 6613 0046 1340     		ands	r3, r2
 6614 0048 0ED0     		beq	.L321
 6615              		.loc 1 3004 0 is_stmt 0 discriminator 1
 6616 004a BB68     		ldr	r3, [r7, #8]
 6617 004c 8022     		movs	r2, #128
 6618 004e 1340     		ands	r3, r2
 6619 0050 0AD0     		beq	.L321
3005:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3006:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
 6620              		.loc 1 3006 0 is_stmt 1
 6621 0052 7B68     		ldr	r3, [r7, #4]
 6622 0054 5B6C     		ldr	r3, [r3, #68]
 6623 0056 0822     		movs	r2, #8
 6624 0058 1A43     		orrs	r2, r3
 6625 005a 7B68     		ldr	r3, [r7, #4]
 6626 005c 5A64     		str	r2, [r3, #68]
ARM GAS  /tmp/ccqg4Whx.s 			page 169


3007:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3008:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear OVR flag */
3009:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 6627              		.loc 1 3009 0
 6628 005e 7B68     		ldr	r3, [r7, #4]
 6629 0060 1B68     		ldr	r3, [r3]
 6630 0062 8022     		movs	r2, #128
 6631 0064 D200     		lsls	r2, r2, #3
 6632 0066 DA61     		str	r2, [r3, #28]
 6633              	.L321:
3010:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3011:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3012:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
3013:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((itflags & I2C_FLAG_ARLO) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 6634              		.loc 1 3013 0
 6635 0068 FA68     		ldr	r2, [r7, #12]
 6636 006a 8023     		movs	r3, #128
 6637 006c 9B00     		lsls	r3, r3, #2
 6638 006e 1340     		ands	r3, r2
 6639 0070 0ED0     		beq	.L322
 6640              		.loc 1 3013 0 is_stmt 0 discriminator 1
 6641 0072 BB68     		ldr	r3, [r7, #8]
 6642 0074 8022     		movs	r2, #128
 6643 0076 1340     		ands	r3, r2
 6644 0078 0AD0     		beq	.L322
3014:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3015:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
 6645              		.loc 1 3015 0 is_stmt 1
 6646 007a 7B68     		ldr	r3, [r7, #4]
 6647 007c 5B6C     		ldr	r3, [r3, #68]
 6648 007e 0222     		movs	r2, #2
 6649 0080 1A43     		orrs	r2, r3
 6650 0082 7B68     		ldr	r3, [r7, #4]
 6651 0084 5A64     		str	r2, [r3, #68]
3016:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3017:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear ARLO flag */
3018:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 6652              		.loc 1 3018 0
 6653 0086 7B68     		ldr	r3, [r7, #4]
 6654 0088 1B68     		ldr	r3, [r3]
 6655 008a 8022     		movs	r2, #128
 6656 008c 9200     		lsls	r2, r2, #2
 6657 008e DA61     		str	r2, [r3, #28]
 6658              	.L322:
3019:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3020:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3021:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
3022:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->ErrorCode & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C
 6659              		.loc 1 3022 0
 6660 0090 7B68     		ldr	r3, [r7, #4]
 6661 0092 5B6C     		ldr	r3, [r3, #68]
 6662 0094 0B22     		movs	r2, #11
 6663 0096 1340     		ands	r3, r2
 6664 0098 06D0     		beq	.L324
3023:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3024:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
 6665              		.loc 1 3024 0
ARM GAS  /tmp/ccqg4Whx.s 			page 170


 6666 009a 7B68     		ldr	r3, [r7, #4]
 6667 009c 5A6C     		ldr	r2, [r3, #68]
 6668 009e 7B68     		ldr	r3, [r7, #4]
 6669 00a0 1100     		movs	r1, r2
 6670 00a2 1800     		movs	r0, r3
 6671 00a4 FFF7FEFF 		bl	I2C_ITError
 6672              	.L324:
3025:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3026:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6673              		.loc 1 3026 0
 6674 00a8 C046     		nop
 6675 00aa BD46     		mov	sp, r7
 6676 00ac 04B0     		add	sp, sp, #16
 6677              		@ sp needed
 6678 00ae 80BD     		pop	{r7, pc}
 6679              		.cfi_endproc
 6680              	.LFE68:
 6682              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 6683              		.align	1
 6684              		.weak	HAL_I2C_MasterTxCpltCallback
 6685              		.syntax unified
 6686              		.code	16
 6687              		.thumb_func
 6688              		.fpu softvfp
 6690              	HAL_I2C_MasterTxCpltCallback:
 6691              	.LFB69:
3027:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3028:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3029:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
3030:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3031:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3032:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3033:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3034:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
3035:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6692              		.loc 1 3035 0
 6693              		.cfi_startproc
 6694              		@ args = 0, pretend = 0, frame = 8
 6695              		@ frame_needed = 1, uses_anonymous_args = 0
 6696 0000 80B5     		push	{r7, lr}
 6697              		.cfi_def_cfa_offset 8
 6698              		.cfi_offset 7, -8
 6699              		.cfi_offset 14, -4
 6700 0002 82B0     		sub	sp, sp, #8
 6701              		.cfi_def_cfa_offset 16
 6702 0004 00AF     		add	r7, sp, #0
 6703              		.cfi_def_cfa_register 7
 6704 0006 7860     		str	r0, [r7, #4]
3036:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3037:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
3038:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3039:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3040:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
3041:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
3042:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6705              		.loc 1 3042 0
 6706 0008 C046     		nop
ARM GAS  /tmp/ccqg4Whx.s 			page 171


 6707 000a BD46     		mov	sp, r7
 6708 000c 02B0     		add	sp, sp, #8
 6709              		@ sp needed
 6710 000e 80BD     		pop	{r7, pc}
 6711              		.cfi_endproc
 6712              	.LFE69:
 6714              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 6715              		.align	1
 6716              		.weak	HAL_I2C_MasterRxCpltCallback
 6717              		.syntax unified
 6718              		.code	16
 6719              		.thumb_func
 6720              		.fpu softvfp
 6722              	HAL_I2C_MasterRxCpltCallback:
 6723              	.LFB70:
3043:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3044:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3045:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
3046:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3047:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3048:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3049:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3050:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
3051:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6724              		.loc 1 3051 0
 6725              		.cfi_startproc
 6726              		@ args = 0, pretend = 0, frame = 8
 6727              		@ frame_needed = 1, uses_anonymous_args = 0
 6728 0000 80B5     		push	{r7, lr}
 6729              		.cfi_def_cfa_offset 8
 6730              		.cfi_offset 7, -8
 6731              		.cfi_offset 14, -4
 6732 0002 82B0     		sub	sp, sp, #8
 6733              		.cfi_def_cfa_offset 16
 6734 0004 00AF     		add	r7, sp, #0
 6735              		.cfi_def_cfa_register 7
 6736 0006 7860     		str	r0, [r7, #4]
3052:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3053:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
3054:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3055:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3056:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
3057:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
3058:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6737              		.loc 1 3058 0
 6738 0008 C046     		nop
 6739 000a BD46     		mov	sp, r7
 6740 000c 02B0     		add	sp, sp, #8
 6741              		@ sp needed
 6742 000e 80BD     		pop	{r7, pc}
 6743              		.cfi_endproc
 6744              	.LFE70:
 6746              		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 6747              		.align	1
 6748              		.weak	HAL_I2C_SlaveTxCpltCallback
 6749              		.syntax unified
 6750              		.code	16
ARM GAS  /tmp/ccqg4Whx.s 			page 172


 6751              		.thumb_func
 6752              		.fpu softvfp
 6754              	HAL_I2C_SlaveTxCpltCallback:
 6755              	.LFB71:
3059:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3060:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
3061:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3062:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3063:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3064:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3065:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
3066:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6756              		.loc 1 3066 0
 6757              		.cfi_startproc
 6758              		@ args = 0, pretend = 0, frame = 8
 6759              		@ frame_needed = 1, uses_anonymous_args = 0
 6760 0000 80B5     		push	{r7, lr}
 6761              		.cfi_def_cfa_offset 8
 6762              		.cfi_offset 7, -8
 6763              		.cfi_offset 14, -4
 6764 0002 82B0     		sub	sp, sp, #8
 6765              		.cfi_def_cfa_offset 16
 6766 0004 00AF     		add	r7, sp, #0
 6767              		.cfi_def_cfa_register 7
 6768 0006 7860     		str	r0, [r7, #4]
3067:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3068:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
3069:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3070:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3071:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
3072:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
3073:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6769              		.loc 1 3073 0
 6770 0008 C046     		nop
 6771 000a BD46     		mov	sp, r7
 6772 000c 02B0     		add	sp, sp, #8
 6773              		@ sp needed
 6774 000e 80BD     		pop	{r7, pc}
 6775              		.cfi_endproc
 6776              	.LFE71:
 6778              		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 6779              		.align	1
 6780              		.weak	HAL_I2C_SlaveRxCpltCallback
 6781              		.syntax unified
 6782              		.code	16
 6783              		.thumb_func
 6784              		.fpu softvfp
 6786              	HAL_I2C_SlaveRxCpltCallback:
 6787              	.LFB72:
3074:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3075:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3076:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
3077:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3078:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3079:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3080:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3081:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
ARM GAS  /tmp/ccqg4Whx.s 			page 173


3082:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6788              		.loc 1 3082 0
 6789              		.cfi_startproc
 6790              		@ args = 0, pretend = 0, frame = 8
 6791              		@ frame_needed = 1, uses_anonymous_args = 0
 6792 0000 80B5     		push	{r7, lr}
 6793              		.cfi_def_cfa_offset 8
 6794              		.cfi_offset 7, -8
 6795              		.cfi_offset 14, -4
 6796 0002 82B0     		sub	sp, sp, #8
 6797              		.cfi_def_cfa_offset 16
 6798 0004 00AF     		add	r7, sp, #0
 6799              		.cfi_def_cfa_register 7
 6800 0006 7860     		str	r0, [r7, #4]
3083:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3084:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
3085:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3086:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3087:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
3088:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
3089:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6801              		.loc 1 3089 0
 6802 0008 C046     		nop
 6803 000a BD46     		mov	sp, r7
 6804 000c 02B0     		add	sp, sp, #8
 6805              		@ sp needed
 6806 000e 80BD     		pop	{r7, pc}
 6807              		.cfi_endproc
 6808              	.LFE72:
 6810              		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
 6811              		.align	1
 6812              		.weak	HAL_I2C_AddrCallback
 6813              		.syntax unified
 6814              		.code	16
 6815              		.thumb_func
 6816              		.fpu softvfp
 6818              	HAL_I2C_AddrCallback:
 6819              	.LFB73:
3090:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3091:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3092:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
3093:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3094:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3095:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFE
3096:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
3097:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3098:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3099:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
3100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6820              		.loc 1 3100 0
 6821              		.cfi_startproc
 6822              		@ args = 0, pretend = 0, frame = 8
 6823              		@ frame_needed = 1, uses_anonymous_args = 0
 6824 0000 80B5     		push	{r7, lr}
 6825              		.cfi_def_cfa_offset 8
 6826              		.cfi_offset 7, -8
 6827              		.cfi_offset 14, -4
ARM GAS  /tmp/ccqg4Whx.s 			page 174


 6828 0002 82B0     		sub	sp, sp, #8
 6829              		.cfi_def_cfa_offset 16
 6830 0004 00AF     		add	r7, sp, #0
 6831              		.cfi_def_cfa_register 7
 6832 0006 7860     		str	r0, [r7, #4]
 6833 0008 0800     		movs	r0, r1
 6834 000a 1100     		movs	r1, r2
 6835 000c FB1C     		adds	r3, r7, #3
 6836 000e 021C     		adds	r2, r0, #0
 6837 0010 1A70     		strb	r2, [r3]
 6838 0012 3B00     		movs	r3, r7
 6839 0014 0A1C     		adds	r2, r1, #0
 6840 0016 1A80     		strh	r2, [r3]
3101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
3103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(TransferDirection);
3104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
3105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
3108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
3109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6841              		.loc 1 3109 0
 6842 0018 C046     		nop
 6843 001a BD46     		mov	sp, r7
 6844 001c 02B0     		add	sp, sp, #8
 6845              		@ sp needed
 6846 001e 80BD     		pop	{r7, pc}
 6847              		.cfi_endproc
 6848              	.LFE73:
 6850              		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 6851              		.align	1
 6852              		.weak	HAL_I2C_ListenCpltCallback
 6853              		.syntax unified
 6854              		.code	16
 6855              		.thumb_func
 6856              		.fpu softvfp
 6858              	HAL_I2C_ListenCpltCallback:
 6859              	.LFB74:
3110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Listen Complete callback.
3113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
3118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6860              		.loc 1 3118 0
 6861              		.cfi_startproc
 6862              		@ args = 0, pretend = 0, frame = 8
 6863              		@ frame_needed = 1, uses_anonymous_args = 0
 6864 0000 80B5     		push	{r7, lr}
 6865              		.cfi_def_cfa_offset 8
 6866              		.cfi_offset 7, -8
 6867              		.cfi_offset 14, -4
 6868 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccqg4Whx.s 			page 175


 6869              		.cfi_def_cfa_offset 16
 6870 0004 00AF     		add	r7, sp, #0
 6871              		.cfi_def_cfa_register 7
 6872 0006 7860     		str	r0, [r7, #4]
3119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
3121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
3124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
3125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6873              		.loc 1 3125 0
 6874 0008 C046     		nop
 6875 000a BD46     		mov	sp, r7
 6876 000c 02B0     		add	sp, sp, #8
 6877              		@ sp needed
 6878 000e 80BD     		pop	{r7, pc}
 6879              		.cfi_endproc
 6880              	.LFE74:
 6882              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 6883              		.align	1
 6884              		.weak	HAL_I2C_MemTxCpltCallback
 6885              		.syntax unified
 6886              		.code	16
 6887              		.thumb_func
 6888              		.fpu softvfp
 6890              	HAL_I2C_MemTxCpltCallback:
 6891              	.LFB75:
3126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
3129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
3134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6892              		.loc 1 3134 0
 6893              		.cfi_startproc
 6894              		@ args = 0, pretend = 0, frame = 8
 6895              		@ frame_needed = 1, uses_anonymous_args = 0
 6896 0000 80B5     		push	{r7, lr}
 6897              		.cfi_def_cfa_offset 8
 6898              		.cfi_offset 7, -8
 6899              		.cfi_offset 14, -4
 6900 0002 82B0     		sub	sp, sp, #8
 6901              		.cfi_def_cfa_offset 16
 6902 0004 00AF     		add	r7, sp, #0
 6903              		.cfi_def_cfa_register 7
 6904 0006 7860     		str	r0, [r7, #4]
3135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
3137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
3140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
3141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
ARM GAS  /tmp/ccqg4Whx.s 			page 176


 6905              		.loc 1 3141 0
 6906 0008 C046     		nop
 6907 000a BD46     		mov	sp, r7
 6908 000c 02B0     		add	sp, sp, #8
 6909              		@ sp needed
 6910 000e 80BD     		pop	{r7, pc}
 6911              		.cfi_endproc
 6912              	.LFE75:
 6914              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 6915              		.align	1
 6916              		.weak	HAL_I2C_MemRxCpltCallback
 6917              		.syntax unified
 6918              		.code	16
 6919              		.thumb_func
 6920              		.fpu softvfp
 6922              	HAL_I2C_MemRxCpltCallback:
 6923              	.LFB76:
3142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
3145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
3150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6924              		.loc 1 3150 0
 6925              		.cfi_startproc
 6926              		@ args = 0, pretend = 0, frame = 8
 6927              		@ frame_needed = 1, uses_anonymous_args = 0
 6928 0000 80B5     		push	{r7, lr}
 6929              		.cfi_def_cfa_offset 8
 6930              		.cfi_offset 7, -8
 6931              		.cfi_offset 14, -4
 6932 0002 82B0     		sub	sp, sp, #8
 6933              		.cfi_def_cfa_offset 16
 6934 0004 00AF     		add	r7, sp, #0
 6935              		.cfi_def_cfa_register 7
 6936 0006 7860     		str	r0, [r7, #4]
3151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
3153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
3156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
3157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6937              		.loc 1 3157 0
 6938 0008 C046     		nop
 6939 000a BD46     		mov	sp, r7
 6940 000c 02B0     		add	sp, sp, #8
 6941              		@ sp needed
 6942 000e 80BD     		pop	{r7, pc}
 6943              		.cfi_endproc
 6944              	.LFE76:
 6946              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 6947              		.align	1
 6948              		.weak	HAL_I2C_ErrorCallback
ARM GAS  /tmp/ccqg4Whx.s 			page 177


 6949              		.syntax unified
 6950              		.code	16
 6951              		.thumb_func
 6952              		.fpu softvfp
 6954              	HAL_I2C_ErrorCallback:
 6955              	.LFB77:
3158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C error callback.
3161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
3166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6956              		.loc 1 3166 0
 6957              		.cfi_startproc
 6958              		@ args = 0, pretend = 0, frame = 8
 6959              		@ frame_needed = 1, uses_anonymous_args = 0
 6960 0000 80B5     		push	{r7, lr}
 6961              		.cfi_def_cfa_offset 8
 6962              		.cfi_offset 7, -8
 6963              		.cfi_offset 14, -4
 6964 0002 82B0     		sub	sp, sp, #8
 6965              		.cfi_def_cfa_offset 16
 6966 0004 00AF     		add	r7, sp, #0
 6967              		.cfi_def_cfa_register 7
 6968 0006 7860     		str	r0, [r7, #4]
3167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
3169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
3172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
3173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 6969              		.loc 1 3173 0
 6970 0008 C046     		nop
 6971 000a BD46     		mov	sp, r7
 6972 000c 02B0     		add	sp, sp, #8
 6973              		@ sp needed
 6974 000e 80BD     		pop	{r7, pc}
 6975              		.cfi_endproc
 6976              	.LFE77:
 6978              		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 6979              		.align	1
 6980              		.weak	HAL_I2C_AbortCpltCallback
 6981              		.syntax unified
 6982              		.code	16
 6983              		.thumb_func
 6984              		.fpu softvfp
 6986              	HAL_I2C_AbortCpltCallback:
 6987              	.LFB78:
3174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C abort callback.
3177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  /tmp/ccqg4Whx.s 			page 178


3179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
3182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 6988              		.loc 1 3182 0
 6989              		.cfi_startproc
 6990              		@ args = 0, pretend = 0, frame = 8
 6991              		@ frame_needed = 1, uses_anonymous_args = 0
 6992 0000 80B5     		push	{r7, lr}
 6993              		.cfi_def_cfa_offset 8
 6994              		.cfi_offset 7, -8
 6995              		.cfi_offset 14, -4
 6996 0002 82B0     		sub	sp, sp, #8
 6997              		.cfi_def_cfa_offset 16
 6998 0004 00AF     		add	r7, sp, #0
 6999              		.cfi_def_cfa_register 7
 7000 0006 7860     		str	r0, [r7, #4]
3183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hi2c);
3185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
3188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****    */
3189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 7001              		.loc 1 3189 0
 7002 0008 C046     		nop
 7003 000a BD46     		mov	sp, r7
 7004 000c 02B0     		add	sp, sp, #8
 7005              		@ sp needed
 7006 000e 80BD     		pop	{r7, pc}
 7007              		.cfi_endproc
 7008              	.LFE78:
 7010              		.section	.text.HAL_I2C_GetState,"ax",%progbits
 7011              		.align	1
 7012              		.global	HAL_I2C_GetState
 7013              		.syntax unified
 7014              		.code	16
 7015              		.thumb_func
 7016              		.fpu softvfp
 7018              	HAL_I2C_GetState:
 7019              	.LFB79:
3190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
3193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
3196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  *  @brief   Peripheral State, Mode and Error functions
3197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  *
3198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @verbatim
3199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
3200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
3201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****  ===============================================================================
3202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     [..]
3203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
3204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     and the data flow.
3205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 179


3206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** @endverbatim
3207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
3208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
3212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL state
3215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
3217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 7020              		.loc 1 3217 0
 7021              		.cfi_startproc
 7022              		@ args = 0, pretend = 0, frame = 8
 7023              		@ frame_needed = 1, uses_anonymous_args = 0
 7024 0000 80B5     		push	{r7, lr}
 7025              		.cfi_def_cfa_offset 8
 7026              		.cfi_offset 7, -8
 7027              		.cfi_offset 14, -4
 7028 0002 82B0     		sub	sp, sp, #8
 7029              		.cfi_def_cfa_offset 16
 7030 0004 00AF     		add	r7, sp, #0
 7031              		.cfi_def_cfa_register 7
 7032 0006 7860     		str	r0, [r7, #4]
3218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Return I2C handle state */
3219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return hi2c->State;
 7033              		.loc 1 3219 0
 7034 0008 7B68     		ldr	r3, [r7, #4]
 7035 000a 4122     		movs	r2, #65
 7036 000c 9B5C     		ldrb	r3, [r3, r2]
 7037 000e DBB2     		uxtb	r3, r3
3220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 7038              		.loc 1 3220 0
 7039 0010 1800     		movs	r0, r3
 7040 0012 BD46     		mov	sp, r7
 7041 0014 02B0     		add	sp, sp, #8
 7042              		@ sp needed
 7043 0016 80BD     		pop	{r7, pc}
 7044              		.cfi_endproc
 7045              	.LFE79:
 7047              		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 7048              		.align	1
 7049              		.global	HAL_I2C_GetMode
 7050              		.syntax unified
 7051              		.code	16
 7052              		.thumb_func
 7053              		.fpu softvfp
 7055              	HAL_I2C_GetMode:
 7056              	.LFB80:
3221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
3224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         the configuration information for I2C module
3226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL mode
3227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
ARM GAS  /tmp/ccqg4Whx.s 			page 180


3228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
3229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 7057              		.loc 1 3229 0
 7058              		.cfi_startproc
 7059              		@ args = 0, pretend = 0, frame = 8
 7060              		@ frame_needed = 1, uses_anonymous_args = 0
 7061 0000 80B5     		push	{r7, lr}
 7062              		.cfi_def_cfa_offset 8
 7063              		.cfi_offset 7, -8
 7064              		.cfi_offset 14, -4
 7065 0002 82B0     		sub	sp, sp, #8
 7066              		.cfi_def_cfa_offset 16
 7067 0004 00AF     		add	r7, sp, #0
 7068              		.cfi_def_cfa_register 7
 7069 0006 7860     		str	r0, [r7, #4]
3230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return hi2c->Mode;
 7070              		.loc 1 3230 0
 7071 0008 7B68     		ldr	r3, [r7, #4]
 7072 000a 4222     		movs	r2, #66
 7073 000c 9B5C     		ldrb	r3, [r3, r2]
 7074 000e DBB2     		uxtb	r3, r3
3231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 7075              		.loc 1 3231 0
 7076 0010 1800     		movs	r0, r3
 7077 0012 BD46     		mov	sp, r7
 7078 0014 02B0     		add	sp, sp, #8
 7079              		@ sp needed
 7080 0016 80BD     		pop	{r7, pc}
 7081              		.cfi_endproc
 7082              	.LFE80:
 7084              		.section	.text.HAL_I2C_GetError,"ax",%progbits
 7085              		.align	1
 7086              		.global	HAL_I2C_GetError
 7087              		.syntax unified
 7088              		.code	16
 7089              		.thumb_func
 7090              		.fpu softvfp
 7092              	HAL_I2C_GetError:
 7093              	.LFB81:
3232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** * @brief  Return the I2C error code.
3235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
3237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** * @retval I2C Error Code
3238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** */
3239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
3240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 7094              		.loc 1 3240 0
 7095              		.cfi_startproc
 7096              		@ args = 0, pretend = 0, frame = 8
 7097              		@ frame_needed = 1, uses_anonymous_args = 0
 7098 0000 80B5     		push	{r7, lr}
 7099              		.cfi_def_cfa_offset 8
 7100              		.cfi_offset 7, -8
 7101              		.cfi_offset 14, -4
 7102 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccqg4Whx.s 			page 181


 7103              		.cfi_def_cfa_offset 16
 7104 0004 00AF     		add	r7, sp, #0
 7105              		.cfi_def_cfa_register 7
 7106 0006 7860     		str	r0, [r7, #4]
3241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return hi2c->ErrorCode;
 7107              		.loc 1 3241 0
 7108 0008 7B68     		ldr	r3, [r7, #4]
 7109 000a 5B6C     		ldr	r3, [r3, #68]
3242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 7110              		.loc 1 3242 0
 7111 000c 1800     		movs	r0, r3
 7112 000e BD46     		mov	sp, r7
 7113 0010 02B0     		add	sp, sp, #8
 7114              		@ sp needed
 7115 0012 80BD     		pop	{r7, pc}
 7116              		.cfi_endproc
 7117              	.LFE81:
 7119              		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 7120              		.align	1
 7121              		.syntax unified
 7122              		.code	16
 7123              		.thumb_func
 7124              		.fpu softvfp
 7126              	I2C_Master_ISR_IT:
 7127              	.LFB82:
3243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
3246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @}
3250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
3253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @{
3254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
3258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
3265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 7128              		.loc 1 3265 0
 7129              		.cfi_startproc
 7130              		@ args = 0, pretend = 0, frame = 24
 7131              		@ frame_needed = 1, uses_anonymous_args = 0
 7132 0000 90B5     		push	{r4, r7, lr}
 7133              		.cfi_def_cfa_offset 12
 7134              		.cfi_offset 4, -12
 7135              		.cfi_offset 7, -8
 7136              		.cfi_offset 14, -4
ARM GAS  /tmp/ccqg4Whx.s 			page 182


 7137 0002 89B0     		sub	sp, sp, #36
 7138              		.cfi_def_cfa_offset 48
 7139 0004 02AF     		add	r7, sp, #8
 7140              		.cfi_def_cfa 7, 40
 7141 0006 F860     		str	r0, [r7, #12]
 7142 0008 B960     		str	r1, [r7, #8]
 7143 000a 7A60     		str	r2, [r7, #4]
3266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint16_t devaddress = 0U;
 7144              		.loc 1 3266 0
 7145 000c 1623     		movs	r3, #22
 7146 000e FB18     		adds	r3, r7, r3
 7147 0010 0022     		movs	r2, #0
 7148 0012 1A80     		strh	r2, [r3]
3267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Locked */
3269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7149              		.loc 1 3269 0
 7150 0014 FB68     		ldr	r3, [r7, #12]
 7151 0016 4022     		movs	r2, #64
 7152 0018 9B5C     		ldrb	r3, [r3, r2]
 7153 001a 012B     		cmp	r3, #1
 7154 001c 01D1     		bne	.L342
 7155              		.loc 1 3269 0 is_stmt 0 discriminator 1
 7156 001e 0223     		movs	r3, #2
 7157 0020 0DE1     		b	.L343
 7158              	.L342:
 7159              		.loc 1 3269 0 discriminator 2
 7160 0022 FB68     		ldr	r3, [r7, #12]
 7161 0024 4022     		movs	r2, #64
 7162 0026 0121     		movs	r1, #1
 7163 0028 9954     		strb	r1, [r3, r2]
3270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7164              		.loc 1 3271 0 is_stmt 1 discriminator 2
 7165 002a BB68     		ldr	r3, [r7, #8]
 7166 002c 1022     		movs	r2, #16
 7167 002e 1340     		ands	r3, r2
 7168 0030 12D0     		beq	.L344
 7169              		.loc 1 3271 0 is_stmt 0 discriminator 1
 7170 0032 7B68     		ldr	r3, [r7, #4]
 7171 0034 1022     		movs	r2, #16
 7172 0036 1340     		ands	r3, r2
 7173 0038 0ED0     		beq	.L344
3272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear NACK Flag */
3274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7174              		.loc 1 3274 0 is_stmt 1
 7175 003a FB68     		ldr	r3, [r7, #12]
 7176 003c 1B68     		ldr	r3, [r3]
 7177 003e 1022     		movs	r2, #16
 7178 0040 DA61     		str	r2, [r3, #28]
3275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set corresponding Error Code */
3277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
3278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
3279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7179              		.loc 1 3279 0
ARM GAS  /tmp/ccqg4Whx.s 			page 183


 7180 0042 FB68     		ldr	r3, [r7, #12]
 7181 0044 5B6C     		ldr	r3, [r3, #68]
 7182 0046 0422     		movs	r2, #4
 7183 0048 1A43     		orrs	r2, r3
 7184 004a FB68     		ldr	r3, [r7, #12]
 7185 004c 5A64     		str	r2, [r3, #68]
3280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Flush TX register */
3282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
 7186              		.loc 1 3282 0
 7187 004e FB68     		ldr	r3, [r7, #12]
 7188 0050 1800     		movs	r0, r3
 7189 0052 FFF7FEFF 		bl	I2C_Flush_TXDR
 7190 0056 DFE0     		b	.L345
 7191              	.L344:
3283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
 7192              		.loc 1 3284 0
 7193 0058 BB68     		ldr	r3, [r7, #8]
 7194 005a 0422     		movs	r2, #4
 7195 005c 1340     		ands	r3, r2
 7196 005e 1BD0     		beq	.L346
 7197              		.loc 1 3284 0 is_stmt 0 discriminator 1
 7198 0060 7B68     		ldr	r3, [r7, #4]
 7199 0062 0422     		movs	r2, #4
 7200 0064 1340     		ands	r3, r2
 7201 0066 17D0     		beq	.L346
3285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Read data from RXDR */
3287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 7202              		.loc 1 3287 0 is_stmt 1
 7203 0068 FB68     		ldr	r3, [r7, #12]
 7204 006a 1B68     		ldr	r3, [r3]
 7205 006c 586A     		ldr	r0, [r3, #36]
 7206 006e FB68     		ldr	r3, [r7, #12]
 7207 0070 5B6A     		ldr	r3, [r3, #36]
 7208 0072 591C     		adds	r1, r3, #1
 7209 0074 FA68     		ldr	r2, [r7, #12]
 7210 0076 5162     		str	r1, [r2, #36]
 7211 0078 C2B2     		uxtb	r2, r0
 7212 007a 1A70     		strb	r2, [r3]
3288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize--;
 7213              		.loc 1 3288 0
 7214 007c FB68     		ldr	r3, [r7, #12]
 7215 007e 1B8D     		ldrh	r3, [r3, #40]
 7216 0080 013B     		subs	r3, r3, #1
 7217 0082 9AB2     		uxth	r2, r3
 7218 0084 FB68     		ldr	r3, [r7, #12]
 7219 0086 1A85     		strh	r2, [r3, #40]
3289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount--;
 7220              		.loc 1 3289 0
 7221 0088 FB68     		ldr	r3, [r7, #12]
 7222 008a 5B8D     		ldrh	r3, [r3, #42]
 7223 008c 9BB2     		uxth	r3, r3
 7224 008e 013B     		subs	r3, r3, #1
 7225 0090 9AB2     		uxth	r2, r3
 7226 0092 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 184


 7227 0094 5A85     		strh	r2, [r3, #42]
 7228 0096 BFE0     		b	.L345
 7229              	.L346:
3290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
 7230              		.loc 1 3291 0
 7231 0098 BB68     		ldr	r3, [r7, #8]
 7232 009a 0222     		movs	r2, #2
 7233 009c 1340     		ands	r3, r2
 7234 009e 1AD0     		beq	.L347
 7235              		.loc 1 3291 0 is_stmt 0 discriminator 1
 7236 00a0 7B68     		ldr	r3, [r7, #4]
 7237 00a2 0222     		movs	r2, #2
 7238 00a4 1340     		ands	r3, r2
 7239 00a6 16D0     		beq	.L347
3292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Write data to TXDR */
3294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 7240              		.loc 1 3294 0 is_stmt 1
 7241 00a8 FB68     		ldr	r3, [r7, #12]
 7242 00aa 5B6A     		ldr	r3, [r3, #36]
 7243 00ac 591C     		adds	r1, r3, #1
 7244 00ae FA68     		ldr	r2, [r7, #12]
 7245 00b0 5162     		str	r1, [r2, #36]
 7246 00b2 1A78     		ldrb	r2, [r3]
 7247 00b4 FB68     		ldr	r3, [r7, #12]
 7248 00b6 1B68     		ldr	r3, [r3]
 7249 00b8 9A62     		str	r2, [r3, #40]
3295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferSize--;
 7250              		.loc 1 3295 0
 7251 00ba FB68     		ldr	r3, [r7, #12]
 7252 00bc 1B8D     		ldrh	r3, [r3, #40]
 7253 00be 013B     		subs	r3, r3, #1
 7254 00c0 9AB2     		uxth	r2, r3
 7255 00c2 FB68     		ldr	r3, [r7, #12]
 7256 00c4 1A85     		strh	r2, [r3, #40]
3296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount--;
 7257              		.loc 1 3296 0
 7258 00c6 FB68     		ldr	r3, [r7, #12]
 7259 00c8 5B8D     		ldrh	r3, [r3, #42]
 7260 00ca 9BB2     		uxth	r3, r3
 7261 00cc 013B     		subs	r3, r3, #1
 7262 00ce 9AB2     		uxth	r2, r3
 7263 00d0 FB68     		ldr	r3, [r7, #12]
 7264 00d2 5A85     		strh	r2, [r3, #42]
 7265 00d4 A0E0     		b	.L345
 7266              	.L347:
3297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 7267              		.loc 1 3298 0
 7268 00d6 BB68     		ldr	r3, [r7, #8]
 7269 00d8 8022     		movs	r2, #128
 7270 00da 1340     		ands	r3, r2
 7271 00dc 00D1     		bne	.LCB6437
 7272 00de 6BE0     		b	.L348	@long jump
 7273              	.LCB6437:
 7274              		.loc 1 3298 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccqg4Whx.s 			page 185


 7275 00e0 7B68     		ldr	r3, [r7, #4]
 7276 00e2 4022     		movs	r2, #64
 7277 00e4 1340     		ands	r3, r2
 7278 00e6 00D1     		bne	.LCB6442
 7279 00e8 66E0     		b	.L348	@long jump
 7280              	.LCB6442:
3299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 7281              		.loc 1 3300 0 is_stmt 1
 7282 00ea FB68     		ldr	r3, [r7, #12]
 7283 00ec 1B8D     		ldrh	r3, [r3, #40]
 7284 00ee 002B     		cmp	r3, #0
 7285 00f0 4CD1     		bne	.L349
 7286              		.loc 1 3300 0 is_stmt 0 discriminator 1
 7287 00f2 FB68     		ldr	r3, [r7, #12]
 7288 00f4 5B8D     		ldrh	r3, [r3, #42]
 7289 00f6 9BB2     		uxth	r3, r3
 7290 00f8 002B     		cmp	r3, #0
 7291 00fa 47D0     		beq	.L349
3301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
 7292              		.loc 1 3302 0 is_stmt 1
 7293 00fc FB68     		ldr	r3, [r7, #12]
 7294 00fe 1B68     		ldr	r3, [r3]
 7295 0100 5B68     		ldr	r3, [r3, #4]
 7296 0102 9AB2     		uxth	r2, r3
 7297 0104 1623     		movs	r3, #22
 7298 0106 FB18     		adds	r3, r7, r3
 7299 0108 9205     		lsls	r2, r2, #22
 7300 010a 920D     		lsrs	r2, r2, #22
 7301 010c 1A80     		strh	r2, [r3]
3303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
 7302              		.loc 1 3304 0
 7303 010e FB68     		ldr	r3, [r7, #12]
 7304 0110 5B8D     		ldrh	r3, [r3, #42]
 7305 0112 9BB2     		uxth	r3, r3
 7306 0114 FF2B     		cmp	r3, #255
 7307 0116 11D9     		bls	.L350
3305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
 7308              		.loc 1 3306 0
 7309 0118 FB68     		ldr	r3, [r7, #12]
 7310 011a FF22     		movs	r2, #255
 7311 011c 1A85     		strh	r2, [r3, #40]
3307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 7312              		.loc 1 3307 0
 7313 011e FB68     		ldr	r3, [r7, #12]
 7314 0120 1B8D     		ldrh	r3, [r3, #40]
 7315 0122 DAB2     		uxtb	r2, r3
 7316 0124 8023     		movs	r3, #128
 7317 0126 5C04     		lsls	r4, r3, #17
 7318 0128 1623     		movs	r3, #22
 7319 012a FB18     		adds	r3, r7, r3
 7320 012c 1988     		ldrh	r1, [r3]
 7321 012e F868     		ldr	r0, [r7, #12]
 7322 0130 0023     		movs	r3, #0
ARM GAS  /tmp/ccqg4Whx.s 			page 186


 7323 0132 0093     		str	r3, [sp]
 7324 0134 2300     		movs	r3, r4
 7325 0136 FFF7FEFF 		bl	I2C_TransferConfig
3304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 7326              		.loc 1 3304 0
 7327 013a 3CE0     		b	.L353
 7328              	.L350:
3308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
 7329              		.loc 1 3311 0
 7330 013c FB68     		ldr	r3, [r7, #12]
 7331 013e 5B8D     		ldrh	r3, [r3, #42]
 7332 0140 9AB2     		uxth	r2, r3
 7333 0142 FB68     		ldr	r3, [r7, #12]
 7334 0144 1A85     		strh	r2, [r3, #40]
3312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 7335              		.loc 1 3312 0
 7336 0146 FB68     		ldr	r3, [r7, #12]
 7337 0148 DB6A     		ldr	r3, [r3, #44]
 7338 014a 3F4A     		ldr	r2, .L359
 7339 014c 9342     		cmp	r3, r2
 7340 014e 0ED0     		beq	.L352
3313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, hi2c->XferOptions, I2C_NO_STARTSTOP)
 7341              		.loc 1 3314 0
 7342 0150 FB68     		ldr	r3, [r7, #12]
 7343 0152 1B8D     		ldrh	r3, [r3, #40]
 7344 0154 DAB2     		uxtb	r2, r3
 7345 0156 FB68     		ldr	r3, [r7, #12]
 7346 0158 DC6A     		ldr	r4, [r3, #44]
 7347 015a 1623     		movs	r3, #22
 7348 015c FB18     		adds	r3, r7, r3
 7349 015e 1988     		ldrh	r1, [r3]
 7350 0160 F868     		ldr	r0, [r7, #12]
 7351 0162 0023     		movs	r3, #0
 7352 0164 0093     		str	r3, [sp]
 7353 0166 2300     		movs	r3, r4
 7354 0168 FFF7FEFF 		bl	I2C_TransferConfig
3304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 7355              		.loc 1 3304 0
 7356 016c 23E0     		b	.L353
 7357              	.L352:
3315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
3317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 7358              		.loc 1 3318 0
 7359 016e FB68     		ldr	r3, [r7, #12]
 7360 0170 1B8D     		ldrh	r3, [r3, #40]
 7361 0172 DAB2     		uxtb	r2, r3
 7362 0174 8023     		movs	r3, #128
 7363 0176 9C04     		lsls	r4, r3, #18
 7364 0178 1623     		movs	r3, #22
 7365 017a FB18     		adds	r3, r7, r3
 7366 017c 1988     		ldrh	r1, [r3]
ARM GAS  /tmp/ccqg4Whx.s 			page 187


 7367 017e F868     		ldr	r0, [r7, #12]
 7368 0180 0023     		movs	r3, #0
 7369 0182 0093     		str	r3, [sp]
 7370 0184 2300     		movs	r3, r4
 7371 0186 FFF7FEFF 		bl	I2C_TransferConfig
3304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
 7372              		.loc 1 3304 0
 7373 018a 14E0     		b	.L353
 7374              	.L349:
3319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
3325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
 7375              		.loc 1 3325 0
 7376 018c FB68     		ldr	r3, [r7, #12]
 7377 018e 1B68     		ldr	r3, [r3]
 7378 0190 5A68     		ldr	r2, [r3, #4]
 7379 0192 8023     		movs	r3, #128
 7380 0194 9B04     		lsls	r3, r3, #18
 7381 0196 1A40     		ands	r2, r3
 7382 0198 8023     		movs	r3, #128
 7383 019a 9B04     		lsls	r3, r3, #18
 7384 019c 9A42     		cmp	r2, r3
 7385 019e 04D0     		beq	.L354
3326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
3328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITMasterSequentialCplt(hi2c);
 7386              		.loc 1 3328 0
 7387 01a0 FB68     		ldr	r3, [r7, #12]
 7388 01a2 1800     		movs	r0, r3
 7389 01a4 FFF7FEFF 		bl	I2C_ITMasterSequentialCplt
3300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 7390              		.loc 1 3300 0
 7391 01a8 36E0     		b	.L345
 7392              	.L354:
3329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
3333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
3334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
 7393              		.loc 1 3334 0
 7394 01aa FB68     		ldr	r3, [r7, #12]
 7395 01ac 4021     		movs	r1, #64
 7396 01ae 1800     		movs	r0, r3
 7397 01b0 FFF7FEFF 		bl	I2C_ITError
3300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 7398              		.loc 1 3300 0
 7399 01b4 30E0     		b	.L345
 7400              	.L353:
3300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 7401              		.loc 1 3300 0 is_stmt 0 discriminator 1
 7402 01b6 2FE0     		b	.L345
 7403              	.L348:
ARM GAS  /tmp/ccqg4Whx.s 			page 188


3335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_TC) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 7404              		.loc 1 3338 0 is_stmt 1
 7405 01b8 BB68     		ldr	r3, [r7, #8]
 7406 01ba 4022     		movs	r2, #64
 7407 01bc 1340     		ands	r3, r2
 7408 01be 2BD0     		beq	.L345
 7409              		.loc 1 3338 0 is_stmt 0 discriminator 1
 7410 01c0 7B68     		ldr	r3, [r7, #4]
 7411 01c2 4022     		movs	r2, #64
 7412 01c4 1340     		ands	r3, r2
 7413 01c6 27D0     		beq	.L345
3339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
 7414              		.loc 1 3340 0 is_stmt 1
 7415 01c8 FB68     		ldr	r3, [r7, #12]
 7416 01ca 5B8D     		ldrh	r3, [r3, #42]
 7417 01cc 9BB2     		uxth	r3, r3
 7418 01ce 002B     		cmp	r3, #0
 7419 01d0 1DD1     		bne	.L355
3341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
 7420              		.loc 1 3342 0
 7421 01d2 FB68     		ldr	r3, [r7, #12]
 7422 01d4 1B68     		ldr	r3, [r3]
 7423 01d6 5A68     		ldr	r2, [r3, #4]
 7424 01d8 8023     		movs	r3, #128
 7425 01da 9B04     		lsls	r3, r3, #18
 7426 01dc 1A40     		ands	r2, r3
 7427 01de 8023     		movs	r3, #128
 7428 01e0 9B04     		lsls	r3, r3, #18
 7429 01e2 9A42     		cmp	r2, r3
 7430 01e4 18D0     		beq	.L345
3343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
3345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
 7431              		.loc 1 3345 0
 7432 01e6 FB68     		ldr	r3, [r7, #12]
 7433 01e8 DB6A     		ldr	r3, [r3, #44]
 7434 01ea 174A     		ldr	r2, .L359
 7435 01ec 9342     		cmp	r3, r2
 7436 01ee 09D1     		bne	.L357
3346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Generate Stop */
3348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
 7437              		.loc 1 3348 0
 7438 01f0 FB68     		ldr	r3, [r7, #12]
 7439 01f2 1B68     		ldr	r3, [r3]
 7440 01f4 5A68     		ldr	r2, [r3, #4]
 7441 01f6 FB68     		ldr	r3, [r7, #12]
 7442 01f8 1B68     		ldr	r3, [r3]
 7443 01fa 8021     		movs	r1, #128
 7444 01fc C901     		lsls	r1, r1, #7
 7445 01fe 0A43     		orrs	r2, r1
 7446 0200 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccqg4Whx.s 			page 189


 7447 0202 09E0     		b	.L345
 7448              	.L357:
3349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         else
3351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
3353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           I2C_ITMasterSequentialCplt(hi2c);
 7449              		.loc 1 3353 0
 7450 0204 FB68     		ldr	r3, [r7, #12]
 7451 0206 1800     		movs	r0, r3
 7452 0208 FFF7FEFF 		bl	I2C_ITMasterSequentialCplt
 7453 020c 04E0     		b	.L345
 7454              	.L355:
3354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
3360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
 7455              		.loc 1 3361 0
 7456 020e FB68     		ldr	r3, [r7, #12]
 7457 0210 4021     		movs	r1, #64
 7458 0212 1800     		movs	r0, r3
 7459 0214 FFF7FEFF 		bl	I2C_ITError
 7460              	.L345:
3362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7461              		.loc 1 3365 0
 7462 0218 BB68     		ldr	r3, [r7, #8]
 7463 021a 2022     		movs	r2, #32
 7464 021c 1340     		ands	r3, r2
 7465 021e 09D0     		beq	.L358
 7466              		.loc 1 3365 0 is_stmt 0 discriminator 1
 7467 0220 7B68     		ldr	r3, [r7, #4]
 7468 0222 2022     		movs	r2, #32
 7469 0224 1340     		ands	r3, r2
 7470 0226 05D0     		beq	.L358
3366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Master complete process */
3368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
 7471              		.loc 1 3368 0 is_stmt 1
 7472 0228 BA68     		ldr	r2, [r7, #8]
 7473 022a FB68     		ldr	r3, [r7, #12]
 7474 022c 1100     		movs	r1, r2
 7475 022e 1800     		movs	r0, r3
 7476 0230 FFF7FEFF 		bl	I2C_ITMasterCplt
 7477              	.L358:
3369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
3372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 7478              		.loc 1 3372 0
 7479 0234 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 190


 7480 0236 4022     		movs	r2, #64
 7481 0238 0021     		movs	r1, #0
 7482 023a 9954     		strb	r1, [r3, r2]
3373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 7483              		.loc 1 3374 0
 7484 023c 0023     		movs	r3, #0
 7485              	.L343:
3375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 7486              		.loc 1 3375 0
 7487 023e 1800     		movs	r0, r3
 7488 0240 BD46     		mov	sp, r7
 7489 0242 07B0     		add	sp, sp, #28
 7490              		@ sp needed
 7491 0244 90BD     		pop	{r4, r7, pc}
 7492              	.L360:
 7493 0246 C046     		.align	2
 7494              	.L359:
 7495 0248 0000FFFF 		.word	-65536
 7496              		.cfi_endproc
 7497              	.LFE82:
 7499              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 7500              		.align	1
 7501              		.syntax unified
 7502              		.code	16
 7503              		.thumb_func
 7504              		.fpu softvfp
 7506              	I2C_Slave_ISR_IT:
 7507              	.LFB83:
3376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
3379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
3386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 7508              		.loc 1 3386 0
 7509              		.cfi_startproc
 7510              		@ args = 0, pretend = 0, frame = 16
 7511              		@ frame_needed = 1, uses_anonymous_args = 0
 7512 0000 80B5     		push	{r7, lr}
 7513              		.cfi_def_cfa_offset 8
 7514              		.cfi_offset 7, -8
 7515              		.cfi_offset 14, -4
 7516 0002 84B0     		sub	sp, sp, #16
 7517              		.cfi_def_cfa_offset 24
 7518 0004 00AF     		add	r7, sp, #0
 7519              		.cfi_def_cfa_register 7
 7520 0006 F860     		str	r0, [r7, #12]
 7521 0008 B960     		str	r1, [r7, #8]
 7522 000a 7A60     		str	r2, [r7, #4]
3387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process locked */
3388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
ARM GAS  /tmp/ccqg4Whx.s 			page 191


 7523              		.loc 1 3388 0
 7524 000c FB68     		ldr	r3, [r7, #12]
 7525 000e 4022     		movs	r2, #64
 7526 0010 9B5C     		ldrb	r3, [r3, r2]
 7527 0012 012B     		cmp	r3, #1
 7528 0014 01D1     		bne	.L362
 7529              		.loc 1 3388 0 is_stmt 0 discriminator 1
 7530 0016 0223     		movs	r3, #2
 7531 0018 DBE0     		b	.L363
 7532              	.L362:
 7533              		.loc 1 3388 0 discriminator 2
 7534 001a FB68     		ldr	r3, [r7, #12]
 7535 001c 4022     		movs	r2, #64
 7536 001e 0121     		movs	r1, #1
 7537 0020 9954     		strb	r1, [r3, r2]
3389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7538              		.loc 1 3390 0 is_stmt 1 discriminator 2
 7539 0022 BB68     		ldr	r3, [r7, #8]
 7540 0024 1022     		movs	r2, #16
 7541 0026 1340     		ands	r3, r2
 7542 0028 4AD0     		beq	.L364
 7543              		.loc 1 3390 0 is_stmt 0 discriminator 1
 7544 002a 7B68     		ldr	r3, [r7, #4]
 7545 002c 1022     		movs	r2, #16
 7546 002e 1340     		ands	r3, r2
 7547 0030 46D0     		beq	.L364
3391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check that I2C transfer finished */
3393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
3394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean XferCount == 0*/
3395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* So clear Flag NACKF only */
3396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
 7548              		.loc 1 3396 0 is_stmt 1
 7549 0032 FB68     		ldr	r3, [r7, #12]
 7550 0034 5B8D     		ldrh	r3, [r3, #42]
 7551 0036 9BB2     		uxth	r3, r3
 7552 0038 002B     		cmp	r3, #0
 7553 003a 35D1     		bne	.L365
3397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (((hi2c->XferOptions == I2C_FIRST_AND_LAST_FRAME) || (hi2c->XferOptions == I2C_LAST_FRAME)
 7554              		.loc 1 3398 0
 7555 003c FB68     		ldr	r3, [r7, #12]
 7556 003e DA6A     		ldr	r2, [r3, #44]
 7557 0040 8023     		movs	r3, #128
 7558 0042 9B04     		lsls	r3, r3, #18
 7559 0044 9A42     		cmp	r2, r3
 7560 0046 05D0     		beq	.L366
 7561              		.loc 1 3398 0 is_stmt 0 discriminator 2
 7562 0048 FB68     		ldr	r3, [r7, #12]
 7563 004a DA6A     		ldr	r2, [r3, #44]
 7564 004c 8023     		movs	r3, #128
 7565 004e 9B04     		lsls	r3, r3, #18
 7566 0050 9A42     		cmp	r2, r3
 7567 0052 0CD1     		bne	.L367
 7568              	.L366:
3399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           (hi2c->State == HAL_I2C_STATE_LISTEN))
ARM GAS  /tmp/ccqg4Whx.s 			page 192


 7569              		.loc 1 3399 0 is_stmt 1 discriminator 3
 7570 0054 FB68     		ldr	r3, [r7, #12]
 7571 0056 4122     		movs	r2, #65
 7572 0058 9B5C     		ldrb	r3, [r3, r2]
 7573 005a DBB2     		uxtb	r3, r3
3398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           (hi2c->State == HAL_I2C_STATE_LISTEN))
 7574              		.loc 1 3398 0 discriminator 3
 7575 005c 282B     		cmp	r3, #40
 7576 005e 06D1     		bne	.L367
3400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call I2C Listen complete process */
3402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, ITFlags);
 7577              		.loc 1 3402 0
 7578 0060 BA68     		ldr	r2, [r7, #8]
 7579 0062 FB68     		ldr	r3, [r7, #12]
 7580 0064 1100     		movs	r1, r2
 7581 0066 1800     		movs	r0, r3
 7582 0068 FFF7FEFF 		bl	I2C_ITListenCplt
 7583 006c 27E0     		b	.L370
 7584              	.L367:
3403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else if ((hi2c->XferOptions != I2C_NO_OPTION_FRAME) && (hi2c->State == HAL_I2C_STATE_BUSY_TX_
 7585              		.loc 1 3404 0
 7586 006e FB68     		ldr	r3, [r7, #12]
 7587 0070 DB6A     		ldr	r3, [r3, #44]
 7588 0072 5A4A     		ldr	r2, .L380
 7589 0074 9342     		cmp	r3, r2
 7590 0076 12D0     		beq	.L369
 7591              		.loc 1 3404 0 is_stmt 0 discriminator 1
 7592 0078 FB68     		ldr	r3, [r7, #12]
 7593 007a 4122     		movs	r2, #65
 7594 007c 9B5C     		ldrb	r3, [r3, r2]
 7595 007e DBB2     		uxtb	r3, r3
 7596 0080 292B     		cmp	r3, #41
 7597 0082 0CD1     		bne	.L369
3405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear NACK Flag */
3407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7598              		.loc 1 3407 0 is_stmt 1
 7599 0084 FB68     		ldr	r3, [r7, #12]
 7600 0086 1B68     		ldr	r3, [r3]
 7601 0088 1022     		movs	r2, #16
 7602 008a DA61     		str	r2, [r3, #28]
3408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Flush TX register */
3410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
 7603              		.loc 1 3410 0
 7604 008c FB68     		ldr	r3, [r7, #12]
 7605 008e 1800     		movs	r0, r3
 7606 0090 FFF7FEFF 		bl	I2C_Flush_TXDR
3411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Last Byte is Transmitted */
3413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
3414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
 7607              		.loc 1 3414 0
 7608 0094 FB68     		ldr	r3, [r7, #12]
 7609 0096 1800     		movs	r0, r3
ARM GAS  /tmp/ccqg4Whx.s 			page 193


 7610 0098 FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7611 009c 0FE0     		b	.L370
 7612              	.L369:
3415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Clear NACK Flag */
3419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7613              		.loc 1 3419 0
 7614 009e FB68     		ldr	r3, [r7, #12]
 7615 00a0 1B68     		ldr	r3, [r3]
 7616 00a2 1022     		movs	r2, #16
 7617 00a4 DA61     		str	r2, [r3, #28]
3396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 7618              		.loc 1 3396 0
 7619 00a6 81E0     		b	.L371
 7620              	.L365:
3420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
3425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear NACK Flag */
3426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7621              		.loc 1 3426 0
 7622 00a8 FB68     		ldr	r3, [r7, #12]
 7623 00aa 1B68     		ldr	r3, [r3]
 7624 00ac 1022     		movs	r2, #16
 7625 00ae DA61     		str	r2, [r3, #28]
3427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
3429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7626              		.loc 1 3429 0
 7627 00b0 FB68     		ldr	r3, [r7, #12]
 7628 00b2 5B6C     		ldr	r3, [r3, #68]
 7629 00b4 0422     		movs	r2, #4
 7630 00b6 1A43     		orrs	r2, r3
 7631 00b8 FB68     		ldr	r3, [r7, #12]
 7632 00ba 5A64     		str	r2, [r3, #68]
3396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 7633              		.loc 1 3396 0
 7634 00bc 76E0     		b	.L371
 7635              	.L370:
3396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 7636              		.loc 1 3396 0 is_stmt 0 discriminator 1
 7637 00be 75E0     		b	.L371
 7638              	.L364:
3430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
 7639              		.loc 1 3432 0 is_stmt 1
 7640 00c0 BB68     		ldr	r3, [r7, #8]
 7641 00c2 0422     		movs	r2, #4
 7642 00c4 1340     		ands	r3, r2
 7643 00c6 2ED0     		beq	.L372
 7644              		.loc 1 3432 0 is_stmt 0 discriminator 1
 7645 00c8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccqg4Whx.s 			page 194


 7646 00ca 0422     		movs	r2, #4
 7647 00cc 1340     		ands	r3, r2
 7648 00ce 2AD0     		beq	.L372
3433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
 7649              		.loc 1 3434 0 is_stmt 1
 7650 00d0 FB68     		ldr	r3, [r7, #12]
 7651 00d2 5B8D     		ldrh	r3, [r3, #42]
 7652 00d4 9BB2     		uxth	r3, r3
 7653 00d6 002B     		cmp	r3, #0
 7654 00d8 16D0     		beq	.L373
3435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Read data from RXDR */
3437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 7655              		.loc 1 3437 0
 7656 00da FB68     		ldr	r3, [r7, #12]
 7657 00dc 1B68     		ldr	r3, [r3]
 7658 00de 586A     		ldr	r0, [r3, #36]
 7659 00e0 FB68     		ldr	r3, [r7, #12]
 7660 00e2 5B6A     		ldr	r3, [r3, #36]
 7661 00e4 591C     		adds	r1, r3, #1
 7662 00e6 FA68     		ldr	r2, [r7, #12]
 7663 00e8 5162     		str	r1, [r2, #36]
 7664 00ea C2B2     		uxtb	r2, r0
 7665 00ec 1A70     		strb	r2, [r3]
3438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 7666              		.loc 1 3438 0
 7667 00ee FB68     		ldr	r3, [r7, #12]
 7668 00f0 1B8D     		ldrh	r3, [r3, #40]
 7669 00f2 013B     		subs	r3, r3, #1
 7670 00f4 9AB2     		uxth	r2, r3
 7671 00f6 FB68     		ldr	r3, [r7, #12]
 7672 00f8 1A85     		strh	r2, [r3, #40]
3439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 7673              		.loc 1 3439 0
 7674 00fa FB68     		ldr	r3, [r7, #12]
 7675 00fc 5B8D     		ldrh	r3, [r3, #42]
 7676 00fe 9BB2     		uxth	r3, r3
 7677 0100 013B     		subs	r3, r3, #1
 7678 0102 9AB2     		uxth	r2, r3
 7679 0104 FB68     		ldr	r3, [r7, #12]
 7680 0106 5A85     		strh	r2, [r3, #42]
 7681              	.L373:
3440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && \
 7682              		.loc 1 3442 0
 7683 0108 FB68     		ldr	r3, [r7, #12]
 7684 010a 5B8D     		ldrh	r3, [r3, #42]
 7685 010c 9BB2     		uxth	r3, r3
 7686 010e 002B     		cmp	r3, #0
 7687 0110 4BD1     		bne	.L379
3443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
 7688              		.loc 1 3443 0 discriminator 1
 7689 0112 FB68     		ldr	r3, [r7, #12]
 7690 0114 DB6A     		ldr	r3, [r3, #44]
3442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
ARM GAS  /tmp/ccqg4Whx.s 			page 195


 7691              		.loc 1 3442 0 discriminator 1
 7692 0116 314A     		ldr	r2, .L380
 7693 0118 9342     		cmp	r3, r2
 7694 011a 46D0     		beq	.L379
3444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
3446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITSlaveSequentialCplt(hi2c);
 7695              		.loc 1 3446 0
 7696 011c FB68     		ldr	r3, [r7, #12]
 7697 011e 1800     		movs	r0, r3
 7698 0120 FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
3442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
 7699              		.loc 1 3442 0
 7700 0124 41E0     		b	.L379
 7701              	.L372:
3447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
 7702              		.loc 1 3449 0
 7703 0126 BB68     		ldr	r3, [r7, #8]
 7704 0128 0822     		movs	r2, #8
 7705 012a 1340     		ands	r3, r2
 7706 012c 0AD0     		beq	.L375
 7707              		.loc 1 3449 0 is_stmt 0 discriminator 1
 7708 012e 7B68     		ldr	r3, [r7, #4]
 7709 0130 0822     		movs	r2, #8
 7710 0132 1340     		ands	r3, r2
 7711 0134 06D0     		beq	.L375
3450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
 7712              		.loc 1 3451 0 is_stmt 1
 7713 0136 BA68     		ldr	r2, [r7, #8]
 7714 0138 FB68     		ldr	r3, [r7, #12]
 7715 013a 1100     		movs	r1, r2
 7716 013c 1800     		movs	r0, r3
 7717 013e FFF7FEFF 		bl	I2C_ITAddrCplt
 7718 0142 33E0     		b	.L371
 7719              	.L375:
3452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
 7720              		.loc 1 3453 0
 7721 0144 BB68     		ldr	r3, [r7, #8]
 7722 0146 0222     		movs	r2, #2
 7723 0148 1340     		ands	r3, r2
 7724 014a 2FD0     		beq	.L371
 7725              		.loc 1 3453 0 is_stmt 0 discriminator 1
 7726 014c 7B68     		ldr	r3, [r7, #4]
 7727 014e 0222     		movs	r2, #2
 7728 0150 1340     		ands	r3, r2
 7729 0152 2BD0     		beq	.L371
3454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
3456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
3457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check if all Datas have already been sent */
3458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
3459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
 7730              		.loc 1 3459 0 is_stmt 1
ARM GAS  /tmp/ccqg4Whx.s 			page 196


 7731 0154 FB68     		ldr	r3, [r7, #12]
 7732 0156 5B8D     		ldrh	r3, [r3, #42]
 7733 0158 9BB2     		uxth	r3, r3
 7734 015a 002B     		cmp	r3, #0
 7735 015c 16D0     		beq	.L376
3460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Write data to TXDR */
3462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 7736              		.loc 1 3462 0
 7737 015e FB68     		ldr	r3, [r7, #12]
 7738 0160 5B6A     		ldr	r3, [r3, #36]
 7739 0162 591C     		adds	r1, r3, #1
 7740 0164 FA68     		ldr	r2, [r7, #12]
 7741 0166 5162     		str	r1, [r2, #36]
 7742 0168 1A78     		ldrb	r2, [r3]
 7743 016a FB68     		ldr	r3, [r7, #12]
 7744 016c 1B68     		ldr	r3, [r3]
 7745 016e 9A62     		str	r2, [r3, #40]
3463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 7746              		.loc 1 3463 0
 7747 0170 FB68     		ldr	r3, [r7, #12]
 7748 0172 5B8D     		ldrh	r3, [r3, #42]
 7749 0174 9BB2     		uxth	r3, r3
 7750 0176 013B     		subs	r3, r3, #1
 7751 0178 9AB2     		uxth	r2, r3
 7752 017a FB68     		ldr	r3, [r7, #12]
 7753 017c 5A85     		strh	r2, [r3, #42]
3464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 7754              		.loc 1 3464 0
 7755 017e FB68     		ldr	r3, [r7, #12]
 7756 0180 1B8D     		ldrh	r3, [r3, #40]
 7757 0182 013B     		subs	r3, r3, #1
 7758 0184 9AB2     		uxth	r2, r3
 7759 0186 FB68     		ldr	r3, [r7, #12]
 7760 0188 1A85     		strh	r2, [r3, #40]
 7761 018a 0FE0     		b	.L371
 7762              	.L376:
3465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((hi2c->XferOptions == I2C_NEXT_FRAME) || (hi2c->XferOptions == I2C_FIRST_FRAME))
 7763              		.loc 1 3468 0
 7764 018c FB68     		ldr	r3, [r7, #12]
 7765 018e DA6A     		ldr	r2, [r3, #44]
 7766 0190 8023     		movs	r3, #128
 7767 0192 5B04     		lsls	r3, r3, #17
 7768 0194 9A42     		cmp	r2, r3
 7769 0196 03D0     		beq	.L377
 7770              		.loc 1 3468 0 is_stmt 0 discriminator 1
 7771 0198 FB68     		ldr	r3, [r7, #12]
 7772 019a DB6A     		ldr	r3, [r3, #44]
 7773 019c 002B     		cmp	r3, #0
 7774 019e 05D1     		bne	.L371
 7775              	.L377:
3469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Last Byte is Transmitted */
3471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
ARM GAS  /tmp/ccqg4Whx.s 			page 197


3472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
 7776              		.loc 1 3472 0 is_stmt 1
 7777 01a0 FB68     		ldr	r3, [r7, #12]
 7778 01a2 1800     		movs	r0, r3
 7779 01a4 FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7780 01a8 00E0     		b	.L371
 7781              	.L379:
3442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
 7782              		.loc 1 3442 0
 7783 01aa C046     		nop
 7784              	.L371:
3473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check if STOPF is set */
3478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7785              		.loc 1 3478 0
 7786 01ac BB68     		ldr	r3, [r7, #8]
 7787 01ae 2022     		movs	r2, #32
 7788 01b0 1340     		ands	r3, r2
 7789 01b2 09D0     		beq	.L378
 7790              		.loc 1 3478 0 is_stmt 0 discriminator 1
 7791 01b4 7B68     		ldr	r3, [r7, #4]
 7792 01b6 2022     		movs	r2, #32
 7793 01b8 1340     		ands	r3, r2
 7794 01ba 05D0     		beq	.L378
3479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Slave complete process */
3481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
 7795              		.loc 1 3481 0 is_stmt 1
 7796 01bc BA68     		ldr	r2, [r7, #8]
 7797 01be FB68     		ldr	r3, [r7, #12]
 7798 01c0 1100     		movs	r1, r2
 7799 01c2 1800     		movs	r0, r3
 7800 01c4 FFF7FEFF 		bl	I2C_ITSlaveCplt
 7801              	.L378:
3482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
3485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 7802              		.loc 1 3485 0
 7803 01c8 FB68     		ldr	r3, [r7, #12]
 7804 01ca 4022     		movs	r2, #64
 7805 01cc 0021     		movs	r1, #0
 7806 01ce 9954     		strb	r1, [r3, r2]
3486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 7807              		.loc 1 3487 0
 7808 01d0 0023     		movs	r3, #0
 7809              	.L363:
3488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 7810              		.loc 1 3488 0
 7811 01d2 1800     		movs	r0, r3
 7812 01d4 BD46     		mov	sp, r7
 7813 01d6 04B0     		add	sp, sp, #16
 7814              		@ sp needed
ARM GAS  /tmp/ccqg4Whx.s 			page 198


 7815 01d8 80BD     		pop	{r7, pc}
 7816              	.L381:
 7817 01da C046     		.align	2
 7818              	.L380:
 7819 01dc 0000FFFF 		.word	-65536
 7820              		.cfi_endproc
 7821              	.LFE83:
 7823              		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
 7824              		.align	1
 7825              		.syntax unified
 7826              		.code	16
 7827              		.thumb_func
 7828              		.fpu softvfp
 7830              	I2C_Master_ISR_DMA:
 7831              	.LFB84:
3489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
3492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
3499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 7832              		.loc 1 3499 0
 7833              		.cfi_startproc
 7834              		@ args = 0, pretend = 0, frame = 24
 7835              		@ frame_needed = 1, uses_anonymous_args = 0
 7836 0000 90B5     		push	{r4, r7, lr}
 7837              		.cfi_def_cfa_offset 12
 7838              		.cfi_offset 4, -12
 7839              		.cfi_offset 7, -8
 7840              		.cfi_offset 14, -4
 7841 0002 89B0     		sub	sp, sp, #36
 7842              		.cfi_def_cfa_offset 48
 7843 0004 02AF     		add	r7, sp, #8
 7844              		.cfi_def_cfa 7, 40
 7845 0006 F860     		str	r0, [r7, #12]
 7846 0008 B960     		str	r1, [r7, #8]
 7847 000a 7A60     		str	r2, [r7, #4]
3500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint16_t devaddress = 0U;
 7848              		.loc 1 3500 0
 7849 000c 1223     		movs	r3, #18
 7850 000e FB18     		adds	r3, r7, r3
 7851 0010 0022     		movs	r2, #0
 7852 0012 1A80     		strh	r2, [r3]
3501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
 7853              		.loc 1 3501 0
 7854 0014 0023     		movs	r3, #0
 7855 0016 7B61     		str	r3, [r7, #20]
3502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Locked */
3504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7856              		.loc 1 3504 0
 7857 0018 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 199


 7858 001a 4022     		movs	r2, #64
 7859 001c 9B5C     		ldrb	r3, [r3, r2]
 7860 001e 012B     		cmp	r3, #1
 7861 0020 01D1     		bne	.L383
 7862              		.loc 1 3504 0 is_stmt 0 discriminator 1
 7863 0022 0223     		movs	r3, #2
 7864 0024 9AE0     		b	.L384
 7865              	.L383:
 7866              		.loc 1 3504 0 discriminator 2
 7867 0026 FB68     		ldr	r3, [r7, #12]
 7868 0028 4022     		movs	r2, #64
 7869 002a 0121     		movs	r1, #1
 7870 002c 9954     		strb	r1, [r3, r2]
3505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7871              		.loc 1 3506 0 is_stmt 1 discriminator 2
 7872 002e BB68     		ldr	r3, [r7, #8]
 7873 0030 1022     		movs	r2, #16
 7874 0032 1340     		ands	r3, r2
 7875 0034 17D0     		beq	.L385
 7876              		.loc 1 3506 0 is_stmt 0 discriminator 1
 7877 0036 7B68     		ldr	r3, [r7, #4]
 7878 0038 1022     		movs	r2, #16
 7879 003a 1340     		ands	r3, r2
 7880 003c 13D0     		beq	.L385
3507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear NACK Flag */
3509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7881              		.loc 1 3509 0 is_stmt 1
 7882 003e FB68     		ldr	r3, [r7, #12]
 7883 0040 1B68     		ldr	r3, [r3]
 7884 0042 1022     		movs	r2, #16
 7885 0044 DA61     		str	r2, [r3, #28]
3510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set corresponding Error Code */
3512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7886              		.loc 1 3512 0
 7887 0046 FB68     		ldr	r3, [r7, #12]
 7888 0048 5B6C     		ldr	r3, [r3, #68]
 7889 004a 0422     		movs	r2, #4
 7890 004c 1A43     		orrs	r2, r3
 7891 004e FB68     		ldr	r3, [r7, #12]
 7892 0050 5A64     		str	r2, [r3, #68]
3513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
3515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
3516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
3517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
 7893              		.loc 1 3517 0
 7894 0052 FB68     		ldr	r3, [r7, #12]
 7895 0054 1221     		movs	r1, #18
 7896 0056 1800     		movs	r0, r3
 7897 0058 FFF7FEFF 		bl	I2C_Enable_IRQ
3518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Flush TX register */
3520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
 7898              		.loc 1 3520 0
ARM GAS  /tmp/ccqg4Whx.s 			page 200


 7899 005c FB68     		ldr	r3, [r7, #12]
 7900 005e 1800     		movs	r0, r3
 7901 0060 FFF7FEFF 		bl	I2C_Flush_TXDR
 7902 0064 75E0     		b	.L386
 7903              	.L385:
3521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 7904              		.loc 1 3522 0
 7905 0066 BB68     		ldr	r3, [r7, #8]
 7906 0068 8022     		movs	r2, #128
 7907 006a 1340     		ands	r3, r2
 7908 006c 63D0     		beq	.L387
 7909              		.loc 1 3522 0 is_stmt 0 discriminator 1
 7910 006e 7B68     		ldr	r3, [r7, #4]
 7911 0070 4022     		movs	r2, #64
 7912 0072 1340     		ands	r3, r2
 7913 0074 5FD0     		beq	.L387
3523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable TC interrupt */
3525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
 7914              		.loc 1 3525 0 is_stmt 1
 7915 0076 FB68     		ldr	r3, [r7, #12]
 7916 0078 1B68     		ldr	r3, [r3]
 7917 007a 1A68     		ldr	r2, [r3]
 7918 007c FB68     		ldr	r3, [r7, #12]
 7919 007e 1B68     		ldr	r3, [r3]
 7920 0080 4021     		movs	r1, #64
 7921 0082 8A43     		bics	r2, r1
 7922 0084 1A60     		str	r2, [r3]
3526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
 7923              		.loc 1 3527 0
 7924 0086 FB68     		ldr	r3, [r7, #12]
 7925 0088 5B8D     		ldrh	r3, [r3, #42]
 7926 008a 9BB2     		uxth	r3, r3
 7927 008c 002B     		cmp	r3, #0
 7928 008e 4CD0     		beq	.L388
3528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Recover Slave address */
3530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
 7929              		.loc 1 3530 0
 7930 0090 FB68     		ldr	r3, [r7, #12]
 7931 0092 1B68     		ldr	r3, [r3]
 7932 0094 5B68     		ldr	r3, [r3, #4]
 7933 0096 9AB2     		uxth	r2, r3
 7934 0098 1223     		movs	r3, #18
 7935 009a FB18     		adds	r3, r7, r3
 7936 009c 9205     		lsls	r2, r2, #22
 7937 009e 920D     		lsrs	r2, r2, #22
 7938 00a0 1A80     		strh	r2, [r3]
3531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
3533:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
 7939              		.loc 1 3533 0
 7940 00a2 FB68     		ldr	r3, [r7, #12]
 7941 00a4 5B8D     		ldrh	r3, [r3, #42]
 7942 00a6 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccqg4Whx.s 			page 201


 7943 00a8 FF2B     		cmp	r3, #255
 7944 00aa 06D9     		bls	.L389
3534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
 7945              		.loc 1 3535 0
 7946 00ac FB68     		ldr	r3, [r7, #12]
 7947 00ae FF22     		movs	r2, #255
 7948 00b0 1A85     		strh	r2, [r3, #40]
3536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
 7949              		.loc 1 3536 0
 7950 00b2 8023     		movs	r3, #128
 7951 00b4 5B04     		lsls	r3, r3, #17
 7952 00b6 7B61     		str	r3, [r7, #20]
 7953 00b8 07E0     		b	.L390
 7954              	.L389:
3537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3539:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
 7955              		.loc 1 3540 0
 7956 00ba FB68     		ldr	r3, [r7, #12]
 7957 00bc 5B8D     		ldrh	r3, [r3, #42]
 7958 00be 9AB2     		uxth	r2, r3
 7959 00c0 FB68     		ldr	r3, [r7, #12]
 7960 00c2 1A85     		strh	r2, [r3, #40]
3541:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         xfermode = I2C_AUTOEND_MODE;
 7961              		.loc 1 3541 0
 7962 00c4 8023     		movs	r3, #128
 7963 00c6 9B04     		lsls	r3, r3, #18
 7964 00c8 7B61     		str	r3, [r7, #20]
 7965              	.L390:
3542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3544:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
3545:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
 7966              		.loc 1 3545 0
 7967 00ca FB68     		ldr	r3, [r7, #12]
 7968 00cc 1B8D     		ldrh	r3, [r3, #40]
 7969 00ce DAB2     		uxtb	r2, r3
 7970 00d0 7C69     		ldr	r4, [r7, #20]
 7971 00d2 1223     		movs	r3, #18
 7972 00d4 FB18     		adds	r3, r7, r3
 7973 00d6 1988     		ldrh	r1, [r3]
 7974 00d8 F868     		ldr	r0, [r7, #12]
 7975 00da 0023     		movs	r3, #0
 7976 00dc 0093     		str	r3, [sp]
 7977 00de 2300     		movs	r3, r4
 7978 00e0 FFF7FEFF 		bl	I2C_TransferConfig
3546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Update XferCount value */
3548:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
 7979              		.loc 1 3548 0
 7980 00e4 FB68     		ldr	r3, [r7, #12]
 7981 00e6 5B8D     		ldrh	r3, [r3, #42]
 7982 00e8 9AB2     		uxth	r2, r3
 7983 00ea FB68     		ldr	r3, [r7, #12]
 7984 00ec 1B8D     		ldrh	r3, [r3, #40]
ARM GAS  /tmp/ccqg4Whx.s 			page 202


 7985 00ee D31A     		subs	r3, r2, r3
 7986 00f0 9AB2     		uxth	r2, r3
 7987 00f2 FB68     		ldr	r3, [r7, #12]
 7988 00f4 5A85     		strh	r2, [r3, #42]
3549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable DMA Request */
3551:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 7989              		.loc 1 3551 0
 7990 00f6 FB68     		ldr	r3, [r7, #12]
 7991 00f8 4122     		movs	r2, #65
 7992 00fa 9B5C     		ldrb	r3, [r3, r2]
 7993 00fc DBB2     		uxtb	r3, r3
 7994 00fe 222B     		cmp	r3, #34
 7995 0100 09D1     		bne	.L391
3552:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 7996              		.loc 1 3553 0
 7997 0102 FB68     		ldr	r3, [r7, #12]
 7998 0104 1B68     		ldr	r3, [r3]
 7999 0106 1A68     		ldr	r2, [r3]
 8000 0108 FB68     		ldr	r3, [r7, #12]
 8001 010a 1B68     		ldr	r3, [r3]
 8002 010c 8021     		movs	r1, #128
 8003 010e 0902     		lsls	r1, r1, #8
 8004 0110 0A43     		orrs	r2, r1
 8005 0112 1A60     		str	r2, [r3]
3527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 8006              		.loc 1 3527 0
 8007 0114 1DE0     		b	.L386
 8008              	.L391:
3554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3555:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3557:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
 8009              		.loc 1 3557 0
 8010 0116 FB68     		ldr	r3, [r7, #12]
 8011 0118 1B68     		ldr	r3, [r3]
 8012 011a 1A68     		ldr	r2, [r3]
 8013 011c FB68     		ldr	r3, [r7, #12]
 8014 011e 1B68     		ldr	r3, [r3]
 8015 0120 8021     		movs	r1, #128
 8016 0122 C901     		lsls	r1, r1, #7
 8017 0124 0A43     		orrs	r2, r1
 8018 0126 1A60     		str	r2, [r3]
3527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 8019              		.loc 1 3527 0
 8020 0128 13E0     		b	.L386
 8021              	.L388:
3558:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3560:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3562:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Wrong size Status regarding TCR flag event */
3563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3564:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
 8022              		.loc 1 3564 0
 8023 012a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 203


 8024 012c 4021     		movs	r1, #64
 8025 012e 1800     		movs	r0, r3
 8026 0130 FFF7FEFF 		bl	I2C_ITError
3527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 8027              		.loc 1 3527 0
 8028 0134 0DE0     		b	.L386
 8029              	.L387:
3565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 8030              		.loc 1 3567 0
 8031 0136 BB68     		ldr	r3, [r7, #8]
 8032 0138 2022     		movs	r2, #32
 8033 013a 1340     		ands	r3, r2
 8034 013c 09D0     		beq	.L386
 8035              		.loc 1 3567 0 is_stmt 0 discriminator 1
 8036 013e 7B68     		ldr	r3, [r7, #4]
 8037 0140 2022     		movs	r2, #32
 8038 0142 1340     		ands	r3, r2
 8039 0144 05D0     		beq	.L386
3568:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3569:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Master complete process */
3570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
 8040              		.loc 1 3570 0 is_stmt 1
 8041 0146 BA68     		ldr	r2, [r7, #8]
 8042 0148 FB68     		ldr	r3, [r7, #12]
 8043 014a 1100     		movs	r1, r2
 8044 014c 1800     		movs	r0, r3
 8045 014e FFF7FEFF 		bl	I2C_ITMasterCplt
 8046              	.L386:
3571:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3572:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3573:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
3574:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 8047              		.loc 1 3574 0
 8048 0152 FB68     		ldr	r3, [r7, #12]
 8049 0154 4022     		movs	r2, #64
 8050 0156 0021     		movs	r1, #0
 8051 0158 9954     		strb	r1, [r3, r2]
3575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 8052              		.loc 1 3576 0
 8053 015a 0023     		movs	r3, #0
 8054              	.L384:
3577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 8055              		.loc 1 3577 0
 8056 015c 1800     		movs	r0, r3
 8057 015e BD46     		mov	sp, r7
 8058 0160 07B0     		add	sp, sp, #28
 8059              		@ sp needed
 8060 0162 90BD     		pop	{r4, r7, pc}
 8061              		.cfi_endproc
 8062              	.LFE84:
 8064              		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
 8065              		.align	1
 8066              		.syntax unified
 8067              		.code	16
ARM GAS  /tmp/ccqg4Whx.s 			page 204


 8068              		.thumb_func
 8069              		.fpu softvfp
 8071              	I2C_Slave_ISR_DMA:
 8072              	.LFB85:
3578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3579:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
3581:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3584:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
3588:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 8073              		.loc 1 3588 0
 8074              		.cfi_startproc
 8075              		@ args = 0, pretend = 0, frame = 16
 8076              		@ frame_needed = 1, uses_anonymous_args = 0
 8077 0000 80B5     		push	{r7, lr}
 8078              		.cfi_def_cfa_offset 8
 8079              		.cfi_offset 7, -8
 8080              		.cfi_offset 14, -4
 8081 0002 84B0     		sub	sp, sp, #16
 8082              		.cfi_def_cfa_offset 24
 8083 0004 00AF     		add	r7, sp, #0
 8084              		.cfi_def_cfa_register 7
 8085 0006 F860     		str	r0, [r7, #12]
 8086 0008 B960     		str	r1, [r7, #8]
 8087 000a 7A60     		str	r2, [r7, #4]
3589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process locked */
3590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 8088              		.loc 1 3590 0
 8089 000c FB68     		ldr	r3, [r7, #12]
 8090 000e 4022     		movs	r2, #64
 8091 0010 9B5C     		ldrb	r3, [r3, r2]
 8092 0012 012B     		cmp	r3, #1
 8093 0014 01D1     		bne	.L395
 8094              		.loc 1 3590 0 is_stmt 0 discriminator 1
 8095 0016 0223     		movs	r3, #2
 8096 0018 52E0     		b	.L396
 8097              	.L395:
 8098              		.loc 1 3590 0 discriminator 2
 8099 001a FB68     		ldr	r3, [r7, #12]
 8100 001c 4022     		movs	r2, #64
 8101 001e 0121     		movs	r1, #1
 8102 0020 9954     		strb	r1, [r3, r2]
3591:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3592:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 8103              		.loc 1 3592 0 is_stmt 1 discriminator 2
 8104 0022 BB68     		ldr	r3, [r7, #8]
 8105 0024 1022     		movs	r2, #16
 8106 0026 1340     		ands	r3, r2
 8107 0028 2AD0     		beq	.L397
 8108              		.loc 1 3592 0 is_stmt 0 discriminator 1
 8109 002a 7B68     		ldr	r3, [r7, #4]
 8110 002c 1022     		movs	r2, #16
ARM GAS  /tmp/ccqg4Whx.s 			page 205


 8111 002e 1340     		ands	r3, r2
 8112 0030 26D0     		beq	.L397
3593:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3594:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check that I2C transfer finished */
3595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
3596:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Mean XferCount == 0 */
3597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* So clear Flag NACKF only */
3598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
 8113              		.loc 1 3598 0 is_stmt 1
 8114 0032 FB68     		ldr	r3, [r7, #12]
 8115 0034 4122     		movs	r2, #65
 8116 0036 9B5C     		ldrb	r3, [r3, r2]
 8117 0038 DBB2     		uxtb	r3, r3
 8118 003a 212B     		cmp	r3, #33
 8119 003c 07D1     		bne	.L398
 8120              		.loc 1 3598 0 is_stmt 0 discriminator 1
 8121 003e FB68     		ldr	r3, [r7, #12]
 8122 0040 9B6B     		ldr	r3, [r3, #56]
 8123 0042 1B68     		ldr	r3, [r3]
 8124 0044 5B68     		ldr	r3, [r3, #4]
 8125 0046 5A42     		rsbs	r2, r3, #0
 8126 0048 5341     		adcs	r3, r3, r2
 8127 004a DBB2     		uxtb	r3, r3
 8128 004c 06E0     		b	.L399
 8129              	.L398:
 8130              		.loc 1 3598 0 discriminator 2
 8131 004e FB68     		ldr	r3, [r7, #12]
 8132 0050 DB6B     		ldr	r3, [r3, #60]
 8133 0052 1B68     		ldr	r3, [r3]
 8134 0054 5B68     		ldr	r3, [r3, #4]
 8135 0056 5A42     		rsbs	r2, r3, #0
 8136 0058 5341     		adcs	r3, r3, r2
 8137 005a DBB2     		uxtb	r3, r3
 8138              	.L399:
 8139              		.loc 1 3598 0 discriminator 4
 8140 005c 002B     		cmp	r3, #0
 8141 005e 04D0     		beq	.L400
3599:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3600:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear NACK Flag */
3601:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8142              		.loc 1 3601 0 is_stmt 1
 8143 0060 FB68     		ldr	r3, [r7, #12]
 8144 0062 1B68     		ldr	r3, [r3]
 8145 0064 1022     		movs	r2, #16
 8146 0066 DA61     		str	r2, [r3, #28]
3598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 8147              		.loc 1 3598 0
 8148 0068 25E0     		b	.L402
 8149              	.L400:
3602:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3604:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
3606:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear NACK Flag */
3607:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8150              		.loc 1 3607 0
 8151 006a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 206


 8152 006c 1B68     		ldr	r3, [r3]
 8153 006e 1022     		movs	r2, #16
 8154 0070 DA61     		str	r2, [r3, #28]
3608:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
3610:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8155              		.loc 1 3610 0
 8156 0072 FB68     		ldr	r3, [r7, #12]
 8157 0074 5B6C     		ldr	r3, [r3, #68]
 8158 0076 0422     		movs	r2, #4
 8159 0078 1A43     		orrs	r2, r3
 8160 007a FB68     		ldr	r3, [r7, #12]
 8161 007c 5A64     		str	r2, [r3, #68]
3598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 8162              		.loc 1 3598 0
 8163 007e 1AE0     		b	.L402
 8164              	.L397:
3611:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3613:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
 8165              		.loc 1 3613 0
 8166 0080 BB68     		ldr	r3, [r7, #8]
 8167 0082 0822     		movs	r2, #8
 8168 0084 1340     		ands	r3, r2
 8169 0086 08D0     		beq	.L403
 8170              		.loc 1 3613 0 is_stmt 0 discriminator 1
 8171 0088 7B68     		ldr	r3, [r7, #4]
 8172 008a 0822     		movs	r2, #8
 8173 008c 1340     		ands	r3, r2
 8174 008e 04D0     		beq	.L403
3614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3615:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear ADDR flag */
3616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 8175              		.loc 1 3616 0 is_stmt 1
 8176 0090 FB68     		ldr	r3, [r7, #12]
 8177 0092 1B68     		ldr	r3, [r3]
 8178 0094 0822     		movs	r2, #8
 8179 0096 DA61     		str	r2, [r3, #28]
 8180 0098 0DE0     		b	.L402
 8181              	.L403:
3617:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3618:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 8182              		.loc 1 3618 0
 8183 009a BB68     		ldr	r3, [r7, #8]
 8184 009c 2022     		movs	r2, #32
 8185 009e 1340     		ands	r3, r2
 8186 00a0 09D0     		beq	.L402
 8187              		.loc 1 3618 0 is_stmt 0 discriminator 1
 8188 00a2 7B68     		ldr	r3, [r7, #4]
 8189 00a4 2022     		movs	r2, #32
 8190 00a6 1340     		ands	r3, r2
 8191 00a8 05D0     		beq	.L402
3619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3620:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call I2C Slave complete process */
3621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
 8192              		.loc 1 3621 0 is_stmt 1
 8193 00aa BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccqg4Whx.s 			page 207


 8194 00ac FB68     		ldr	r3, [r7, #12]
 8195 00ae 1100     		movs	r1, r2
 8196 00b0 1800     		movs	r0, r3
 8197 00b2 FFF7FEFF 		bl	I2C_ITSlaveCplt
 8198              	.L402:
3622:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3623:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
3625:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 8199              		.loc 1 3625 0
 8200 00b6 FB68     		ldr	r3, [r7, #12]
 8201 00b8 4022     		movs	r2, #64
 8202 00ba 0021     		movs	r1, #0
 8203 00bc 9954     		strb	r1, [r3, r2]
3626:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3627:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 8204              		.loc 1 3627 0
 8205 00be 0023     		movs	r3, #0
 8206              	.L396:
3628:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 8207              		.loc 1 3628 0
 8208 00c0 1800     		movs	r0, r3
 8209 00c2 BD46     		mov	sp, r7
 8210 00c4 04B0     		add	sp, sp, #16
 8211              		@ sp needed
 8212 00c6 80BD     		pop	{r7, pc}
 8213              		.cfi_endproc
 8214              	.LFE85:
 8216              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 8217              		.align	1
 8218              		.syntax unified
 8219              		.code	16
 8220              		.thumb_func
 8221              		.fpu softvfp
 8223              	I2C_RequestMemoryWrite:
 8224              	.LFB86:
3629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3630:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3631:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
3632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3633:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3635:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
3636:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3638:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3639:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
3640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3641:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
3643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 8225              		.loc 1 3643 0
 8226              		.cfi_startproc
 8227              		@ args = 8, pretend = 0, frame = 16
 8228              		@ frame_needed = 1, uses_anonymous_args = 0
 8229 0000 B0B5     		push	{r4, r5, r7, lr}
 8230              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccqg4Whx.s 			page 208


 8231              		.cfi_offset 4, -16
 8232              		.cfi_offset 5, -12
 8233              		.cfi_offset 7, -8
 8234              		.cfi_offset 14, -4
 8235 0002 86B0     		sub	sp, sp, #24
 8236              		.cfi_def_cfa_offset 40
 8237 0004 02AF     		add	r7, sp, #8
 8238              		.cfi_def_cfa 7, 32
 8239 0006 F860     		str	r0, [r7, #12]
 8240 0008 0C00     		movs	r4, r1
 8241 000a 1000     		movs	r0, r2
 8242 000c 1900     		movs	r1, r3
 8243 000e 0A25     		movs	r5, #10
 8244 0010 7B19     		adds	r3, r7, r5
 8245 0012 221C     		adds	r2, r4, #0
 8246 0014 1A80     		strh	r2, [r3]
 8247 0016 0823     		movs	r3, #8
 8248 0018 FB18     		adds	r3, r7, r3
 8249 001a 021C     		adds	r2, r0, #0
 8250 001c 1A80     		strh	r2, [r3]
 8251 001e BB1D     		adds	r3, r7, #6
 8252 0020 0A1C     		adds	r2, r1, #0
 8253 0022 1A80     		strh	r2, [r3]
3644:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8254              		.loc 1 3644 0
 8255 0024 BB1D     		adds	r3, r7, #6
 8256 0026 1B88     		ldrh	r3, [r3]
 8257 0028 DAB2     		uxtb	r2, r3
 8258 002a 8023     		movs	r3, #128
 8259 002c 5C04     		lsls	r4, r3, #17
 8260 002e 7B19     		adds	r3, r7, r5
 8261 0030 1988     		ldrh	r1, [r3]
 8262 0032 F868     		ldr	r0, [r7, #12]
 8263 0034 8023     		movs	r3, #128
 8264 0036 9B01     		lsls	r3, r3, #6
 8265 0038 0093     		str	r3, [sp]
 8266 003a 2300     		movs	r3, r4
 8267 003c FFF7FEFF 		bl	I2C_TransferConfig
3645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
3647:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8268              		.loc 1 3647 0
 8269 0040 7A6A     		ldr	r2, [r7, #36]
 8270 0042 396A     		ldr	r1, [r7, #32]
 8271 0044 FB68     		ldr	r3, [r7, #12]
 8272 0046 1800     		movs	r0, r3
 8273 0048 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 8274 004c 031E     		subs	r3, r0, #0
 8275 004e 07D0     		beq	.L405
3648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3649:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8276              		.loc 1 3649 0
 8277 0050 FB68     		ldr	r3, [r7, #12]
 8278 0052 5B6C     		ldr	r3, [r3, #68]
 8279 0054 042B     		cmp	r3, #4
 8280 0056 01D1     		bne	.L406
3650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
ARM GAS  /tmp/ccqg4Whx.s 			page 209


3651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 8281              		.loc 1 3651 0
 8282 0058 0123     		movs	r3, #1
 8283 005a 3BE0     		b	.L407
 8284              	.L406:
3652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3653:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3655:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 8285              		.loc 1 3655 0
 8286 005c 0323     		movs	r3, #3
 8287 005e 39E0     		b	.L407
 8288              	.L405:
3656:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3658:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3659:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
3660:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8289              		.loc 1 3660 0
 8290 0060 BB1D     		adds	r3, r7, #6
 8291 0062 1B88     		ldrh	r3, [r3]
 8292 0064 012B     		cmp	r3, #1
 8293 0066 07D1     		bne	.L408
3661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3662:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Memory Address */
3663:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8294              		.loc 1 3663 0
 8295 0068 0823     		movs	r3, #8
 8296 006a FB18     		adds	r3, r7, r3
 8297 006c 1B88     		ldrh	r3, [r3]
 8298 006e DAB2     		uxtb	r2, r3
 8299 0070 FB68     		ldr	r3, [r7, #12]
 8300 0072 1B68     		ldr	r3, [r3]
 8301 0074 9A62     		str	r2, [r3, #40]
 8302 0076 1FE0     		b	.L409
 8303              	.L408:
3664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3665:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
3666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send MSB of Memory Address */
3669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8304              		.loc 1 3669 0
 8305 0078 0823     		movs	r3, #8
 8306 007a FB18     		adds	r3, r7, r3
 8307 007c 1B88     		ldrh	r3, [r3]
 8308 007e 1B0A     		lsrs	r3, r3, #8
 8309 0080 9BB2     		uxth	r3, r3
 8310 0082 DAB2     		uxtb	r2, r3
 8311 0084 FB68     		ldr	r3, [r7, #12]
 8312 0086 1B68     		ldr	r3, [r3]
 8313 0088 9A62     		str	r2, [r3, #40]
3670:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
3672:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8314              		.loc 1 3672 0
 8315 008a 7A6A     		ldr	r2, [r7, #36]
ARM GAS  /tmp/ccqg4Whx.s 			page 210


 8316 008c 396A     		ldr	r1, [r7, #32]
 8317 008e FB68     		ldr	r3, [r7, #12]
 8318 0090 1800     		movs	r0, r3
 8319 0092 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 8320 0096 031E     		subs	r3, r0, #0
 8321 0098 07D0     		beq	.L410
3673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3674:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8322              		.loc 1 3674 0
 8323 009a FB68     		ldr	r3, [r7, #12]
 8324 009c 5B6C     		ldr	r3, [r3, #68]
 8325 009e 042B     		cmp	r3, #4
 8326 00a0 01D1     		bne	.L411
3675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3676:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 8327              		.loc 1 3676 0
 8328 00a2 0123     		movs	r3, #1
 8329 00a4 16E0     		b	.L407
 8330              	.L411:
3677:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3680:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 8331              		.loc 1 3680 0
 8332 00a6 0323     		movs	r3, #3
 8333 00a8 14E0     		b	.L407
 8334              	.L410:
3681:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send LSB of Memory Address */
3685:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8335              		.loc 1 3685 0
 8336 00aa 0823     		movs	r3, #8
 8337 00ac FB18     		adds	r3, r7, r3
 8338 00ae 1B88     		ldrh	r3, [r3]
 8339 00b0 DAB2     		uxtb	r2, r3
 8340 00b2 FB68     		ldr	r3, [r7, #12]
 8341 00b4 1B68     		ldr	r3, [r3]
 8342 00b6 9A62     		str	r2, [r3, #40]
 8343              	.L409:
3686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3688:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Wait until TCR flag is set */
3689:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8344              		.loc 1 3689 0
 8345 00b8 3A6A     		ldr	r2, [r7, #32]
 8346 00ba F868     		ldr	r0, [r7, #12]
 8347 00bc 7B6A     		ldr	r3, [r7, #36]
 8348 00be 0093     		str	r3, [sp]
 8349 00c0 1300     		movs	r3, r2
 8350 00c2 0022     		movs	r2, #0
 8351 00c4 8021     		movs	r1, #128
 8352 00c6 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 8353 00ca 031E     		subs	r3, r0, #0
 8354 00cc 01D0     		beq	.L412
3690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccqg4Whx.s 			page 211


3691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_TIMEOUT;
 8355              		.loc 1 3691 0
 8356 00ce 0323     		movs	r3, #3
 8357 00d0 00E0     		b	.L407
 8358              	.L412:
3692:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3693:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 8359              		.loc 1 3694 0
 8360 00d2 0023     		movs	r3, #0
 8361              	.L407:
3695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 8362              		.loc 1 3695 0
 8363 00d4 1800     		movs	r0, r3
 8364 00d6 BD46     		mov	sp, r7
 8365 00d8 04B0     		add	sp, sp, #16
 8366              		@ sp needed
 8367 00da B0BD     		pop	{r4, r5, r7, pc}
 8368              		.cfi_endproc
 8369              	.LFE86:
 8371              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 8372              		.align	1
 8373              		.syntax unified
 8374              		.code	16
 8375              		.thumb_func
 8376              		.fpu softvfp
 8378              	I2C_RequestMemoryRead:
 8379              	.LFB87:
3696:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3697:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3698:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
3699:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3701:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3702:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
3703:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3705:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3706:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
3707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
3708:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3709:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
3710:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 8380              		.loc 1 3710 0
 8381              		.cfi_startproc
 8382              		@ args = 8, pretend = 0, frame = 16
 8383              		@ frame_needed = 1, uses_anonymous_args = 0
 8384 0000 B0B5     		push	{r4, r5, r7, lr}
 8385              		.cfi_def_cfa_offset 16
 8386              		.cfi_offset 4, -16
 8387              		.cfi_offset 5, -12
 8388              		.cfi_offset 7, -8
 8389              		.cfi_offset 14, -4
 8390 0002 86B0     		sub	sp, sp, #24
 8391              		.cfi_def_cfa_offset 40
 8392 0004 02AF     		add	r7, sp, #8
 8393              		.cfi_def_cfa 7, 32
ARM GAS  /tmp/ccqg4Whx.s 			page 212


 8394 0006 F860     		str	r0, [r7, #12]
 8395 0008 0C00     		movs	r4, r1
 8396 000a 1000     		movs	r0, r2
 8397 000c 1900     		movs	r1, r3
 8398 000e 0A25     		movs	r5, #10
 8399 0010 7B19     		adds	r3, r7, r5
 8400 0012 221C     		adds	r2, r4, #0
 8401 0014 1A80     		strh	r2, [r3]
 8402 0016 0823     		movs	r3, #8
 8403 0018 FB18     		adds	r3, r7, r3
 8404 001a 021C     		adds	r2, r0, #0
 8405 001c 1A80     		strh	r2, [r3]
 8406 001e BB1D     		adds	r3, r7, #6
 8407 0020 0A1C     		adds	r2, r1, #0
 8408 0022 1A80     		strh	r2, [r3]
3711:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8409              		.loc 1 3711 0
 8410 0024 BB1D     		adds	r3, r7, #6
 8411 0026 1B88     		ldrh	r3, [r3]
 8412 0028 DAB2     		uxtb	r2, r3
 8413 002a 7B19     		adds	r3, r7, r5
 8414 002c 1988     		ldrh	r1, [r3]
 8415 002e F868     		ldr	r0, [r7, #12]
 8416 0030 8023     		movs	r3, #128
 8417 0032 9B01     		lsls	r3, r3, #6
 8418 0034 0093     		str	r3, [sp]
 8419 0036 0023     		movs	r3, #0
 8420 0038 FFF7FEFF 		bl	I2C_TransferConfig
3712:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3713:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
3714:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8421              		.loc 1 3714 0
 8422 003c 7A6A     		ldr	r2, [r7, #36]
 8423 003e 396A     		ldr	r1, [r7, #32]
 8424 0040 FB68     		ldr	r3, [r7, #12]
 8425 0042 1800     		movs	r0, r3
 8426 0044 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 8427 0048 031E     		subs	r3, r0, #0
 8428 004a 07D0     		beq	.L414
3715:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3716:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8429              		.loc 1 3716 0
 8430 004c FB68     		ldr	r3, [r7, #12]
 8431 004e 5B6C     		ldr	r3, [r3, #68]
 8432 0050 042B     		cmp	r3, #4
 8433 0052 01D1     		bne	.L415
3717:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 8434              		.loc 1 3718 0
 8435 0054 0123     		movs	r3, #1
 8436 0056 3BE0     		b	.L416
 8437              	.L415:
3719:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3720:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3721:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 8438              		.loc 1 3722 0
ARM GAS  /tmp/ccqg4Whx.s 			page 213


 8439 0058 0323     		movs	r3, #3
 8440 005a 39E0     		b	.L416
 8441              	.L414:
3723:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3725:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
3727:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8442              		.loc 1 3727 0
 8443 005c BB1D     		adds	r3, r7, #6
 8444 005e 1B88     		ldrh	r3, [r3]
 8445 0060 012B     		cmp	r3, #1
 8446 0062 07D1     		bne	.L417
3728:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send Memory Address */
3730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8447              		.loc 1 3730 0
 8448 0064 0823     		movs	r3, #8
 8449 0066 FB18     		adds	r3, r7, r3
 8450 0068 1B88     		ldrh	r3, [r3]
 8451 006a DAB2     		uxtb	r2, r3
 8452 006c FB68     		ldr	r3, [r7, #12]
 8453 006e 1B68     		ldr	r3, [r3]
 8454 0070 9A62     		str	r2, [r3, #40]
 8455 0072 1FE0     		b	.L418
 8456              	.L417:
3731:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3732:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
3733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3735:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send MSB of Memory Address */
3736:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8457              		.loc 1 3736 0
 8458 0074 0823     		movs	r3, #8
 8459 0076 FB18     		adds	r3, r7, r3
 8460 0078 1B88     		ldrh	r3, [r3]
 8461 007a 1B0A     		lsrs	r3, r3, #8
 8462 007c 9BB2     		uxth	r3, r3
 8463 007e DAB2     		uxtb	r2, r3
 8464 0080 FB68     		ldr	r3, [r7, #12]
 8465 0082 1B68     		ldr	r3, [r3]
 8466 0084 9A62     		str	r2, [r3, #40]
3737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
3739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8467              		.loc 1 3739 0
 8468 0086 7A6A     		ldr	r2, [r7, #36]
 8469 0088 396A     		ldr	r1, [r7, #32]
 8470 008a FB68     		ldr	r3, [r7, #12]
 8471 008c 1800     		movs	r0, r3
 8472 008e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 8473 0092 031E     		subs	r3, r0, #0
 8474 0094 07D0     		beq	.L419
3740:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8475              		.loc 1 3741 0
 8476 0096 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 214


 8477 0098 5B6C     		ldr	r3, [r3, #68]
 8478 009a 042B     		cmp	r3, #4
 8479 009c 01D1     		bne	.L420
3742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3743:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_ERROR;
 8480              		.loc 1 3743 0
 8481 009e 0123     		movs	r3, #1
 8482 00a0 16E0     		b	.L416
 8483              	.L420:
3744:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 8484              		.loc 1 3747 0
 8485 00a2 0323     		movs	r3, #3
 8486 00a4 14E0     		b	.L416
 8487              	.L419:
3748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3750:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3751:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Send LSB of Memory Address */
3752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8488              		.loc 1 3752 0
 8489 00a6 0823     		movs	r3, #8
 8490 00a8 FB18     		adds	r3, r7, r3
 8491 00aa 1B88     		ldrh	r3, [r3]
 8492 00ac DAB2     		uxtb	r2, r3
 8493 00ae FB68     		ldr	r3, [r7, #12]
 8494 00b0 1B68     		ldr	r3, [r3]
 8495 00b2 9A62     		str	r2, [r3, #40]
 8496              	.L418:
3753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3754:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3755:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Wait until TC flag is set */
3756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8497              		.loc 1 3756 0
 8498 00b4 3A6A     		ldr	r2, [r7, #32]
 8499 00b6 F868     		ldr	r0, [r7, #12]
 8500 00b8 7B6A     		ldr	r3, [r7, #36]
 8501 00ba 0093     		str	r3, [sp]
 8502 00bc 1300     		movs	r3, r2
 8503 00be 0022     		movs	r2, #0
 8504 00c0 4021     		movs	r1, #64
 8505 00c2 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 8506 00c6 031E     		subs	r3, r0, #0
 8507 00c8 01D0     		beq	.L421
3757:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_TIMEOUT;
 8508              		.loc 1 3758 0
 8509 00ca 0323     		movs	r3, #3
 8510 00cc 00E0     		b	.L416
 8511              	.L421:
3759:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3761:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 8512              		.loc 1 3761 0
 8513 00ce 0023     		movs	r3, #0
ARM GAS  /tmp/ccqg4Whx.s 			page 215


 8514              	.L416:
3762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 8515              		.loc 1 3762 0
 8516 00d0 1800     		movs	r0, r3
 8517 00d2 BD46     		mov	sp, r7
 8518 00d4 04B0     		add	sp, sp, #16
 8519              		@ sp needed
 8520 00d6 B0BD     		pop	{r4, r5, r7, pc}
 8521              		.cfi_endproc
 8522              	.LFE87:
 8524              		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 8525              		.align	1
 8526              		.syntax unified
 8527              		.code	16
 8528              		.thumb_func
 8529              		.fpu softvfp
 8531              	I2C_ITAddrCplt:
 8532              	.LFB88:
3763:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3764:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
3766:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3767:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3769:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
3771:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 8533              		.loc 1 3771 0
 8534              		.cfi_startproc
 8535              		@ args = 0, pretend = 0, frame = 16
 8536              		@ frame_needed = 1, uses_anonymous_args = 0
 8537 0000 90B5     		push	{r4, r7, lr}
 8538              		.cfi_def_cfa_offset 12
 8539              		.cfi_offset 4, -12
 8540              		.cfi_offset 7, -8
 8541              		.cfi_offset 14, -4
 8542 0002 85B0     		sub	sp, sp, #20
 8543              		.cfi_def_cfa_offset 32
 8544 0004 00AF     		add	r7, sp, #0
 8545              		.cfi_def_cfa_register 7
 8546 0006 7860     		str	r0, [r7, #4]
 8547 0008 3960     		str	r1, [r7]
3772:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint8_t transferdirection = 0U;
 8548              		.loc 1 3772 0
 8549 000a 0F23     		movs	r3, #15
 8550 000c FB18     		adds	r3, r7, r3
 8551 000e 0022     		movs	r2, #0
 8552 0010 1A70     		strb	r2, [r3]
3773:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint16_t slaveaddrcode = 0U;
 8553              		.loc 1 3773 0
 8554 0012 0C23     		movs	r3, #12
 8555 0014 FB18     		adds	r3, r7, r3
 8556 0016 0022     		movs	r2, #0
 8557 0018 1A80     		strh	r2, [r3]
3774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint16_t ownadd1code = 0U;
 8558              		.loc 1 3774 0
 8559 001a 0A23     		movs	r3, #10
ARM GAS  /tmp/ccqg4Whx.s 			page 216


 8560 001c FB18     		adds	r3, r7, r3
 8561 001e 0022     		movs	r2, #0
 8562 0020 1A80     		strh	r2, [r3]
3775:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint16_t ownadd2code = 0U;
 8563              		.loc 1 3775 0
 8564 0022 0823     		movs	r3, #8
 8565 0024 FB18     		adds	r3, r7, r3
 8566 0026 0022     		movs	r2, #0
 8567 0028 1A80     		strh	r2, [r3]
3776:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3778:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(ITFlags);
3779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3780:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
3781:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
 8568              		.loc 1 3781 0
 8569 002a 7B68     		ldr	r3, [r7, #4]
 8570 002c 4122     		movs	r2, #65
 8571 002e 9B5C     		ldrb	r3, [r3, r2]
 8572 0030 DBB2     		uxtb	r3, r3
 8573 0032 1A00     		movs	r2, r3
 8574 0034 2823     		movs	r3, #40
 8575 0036 1340     		ands	r3, r2
 8576 0038 282B     		cmp	r3, #40
 8577 003a 00D0     		beq	.LCB7661
 8578 003c 89E0     		b	.L423	@long jump
 8579              	.LCB7661:
3782:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3783:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
 8580              		.loc 1 3783 0
 8581 003e 7B68     		ldr	r3, [r7, #4]
 8582 0040 1B68     		ldr	r3, [r3]
 8583 0042 9B69     		ldr	r3, [r3, #24]
 8584 0044 1B0C     		lsrs	r3, r3, #16
 8585 0046 DAB2     		uxtb	r2, r3
 8586 0048 0F23     		movs	r3, #15
 8587 004a FB18     		adds	r3, r7, r3
 8588 004c 0121     		movs	r1, #1
 8589 004e 0A40     		ands	r2, r1
 8590 0050 1A70     		strb	r2, [r3]
3784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 8591              		.loc 1 3784 0
 8592 0052 7B68     		ldr	r3, [r7, #4]
 8593 0054 1B68     		ldr	r3, [r3]
 8594 0056 9B69     		ldr	r3, [r3, #24]
 8595 0058 1B0C     		lsrs	r3, r3, #16
 8596 005a 9AB2     		uxth	r2, r3
 8597 005c 0C23     		movs	r3, #12
 8598 005e FB18     		adds	r3, r7, r3
 8599 0060 FE21     		movs	r1, #254
 8600 0062 0A40     		ands	r2, r1
 8601 0064 1A80     		strh	r2, [r3]
3785:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 8602              		.loc 1 3785 0
 8603 0066 7B68     		ldr	r3, [r7, #4]
 8604 0068 1B68     		ldr	r3, [r3]
 8605 006a 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccqg4Whx.s 			page 217


 8606 006c 9AB2     		uxth	r2, r3
 8607 006e 0A23     		movs	r3, #10
 8608 0070 FB18     		adds	r3, r7, r3
 8609 0072 9205     		lsls	r2, r2, #22
 8610 0074 920D     		lsrs	r2, r2, #22
 8611 0076 1A80     		strh	r2, [r3]
3786:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 8612              		.loc 1 3786 0
 8613 0078 7B68     		ldr	r3, [r7, #4]
 8614 007a 1B68     		ldr	r3, [r3]
 8615 007c DB68     		ldr	r3, [r3, #12]
 8616 007e 9AB2     		uxth	r2, r3
 8617 0080 0823     		movs	r3, #8
 8618 0082 FB18     		adds	r3, r7, r3
 8619 0084 FE21     		movs	r1, #254
 8620 0086 0A40     		ands	r2, r1
 8621 0088 1A80     		strh	r2, [r3]
3787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3788:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
3789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8622              		.loc 1 3789 0
 8623 008a 7B68     		ldr	r3, [r7, #4]
 8624 008c DB68     		ldr	r3, [r3, #12]
 8625 008e 022B     		cmp	r3, #2
 8626 0090 4BD1     		bne	.L424
3790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3791:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
 8627              		.loc 1 3791 0
 8628 0092 0A23     		movs	r3, #10
 8629 0094 FB18     		adds	r3, r7, r3
 8630 0096 1B88     		ldrh	r3, [r3]
 8631 0098 DB09     		lsrs	r3, r3, #7
 8632 009a 9AB2     		uxth	r2, r3
 8633 009c 0C23     		movs	r3, #12
 8634 009e FB18     		adds	r3, r7, r3
 8635 00a0 1B88     		ldrh	r3, [r3]
 8636 00a2 5340     		eors	r3, r2
 8637 00a4 9BB2     		uxth	r3, r3
 8638 00a6 1A00     		movs	r2, r3
 8639 00a8 0623     		movs	r3, #6
 8640 00aa 1340     		ands	r3, r2
 8641 00ac 24D1     		bne	.L425
3792:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3793:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
 8642              		.loc 1 3793 0
 8643 00ae 0C23     		movs	r3, #12
 8644 00b0 FB18     		adds	r3, r7, r3
 8645 00b2 0A22     		movs	r2, #10
 8646 00b4 BA18     		adds	r2, r7, r2
 8647 00b6 1288     		ldrh	r2, [r2]
 8648 00b8 1A80     		strh	r2, [r3]
3794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->AddrEventCount++;
 8649              		.loc 1 3794 0
 8650 00ba 7B68     		ldr	r3, [r7, #4]
 8651 00bc 9B6C     		ldr	r3, [r3, #72]
 8652 00be 5A1C     		adds	r2, r3, #1
 8653 00c0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccqg4Whx.s 			page 218


 8654 00c2 9A64     		str	r2, [r3, #72]
3795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
 8655              		.loc 1 3795 0
 8656 00c4 7B68     		ldr	r3, [r7, #4]
 8657 00c6 9B6C     		ldr	r3, [r3, #72]
 8658 00c8 022B     		cmp	r3, #2
 8659 00ca 4AD1     		bne	.L430
3796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
3797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Reset Address Event counter */
3798:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
 8660              		.loc 1 3798 0
 8661 00cc 7B68     		ldr	r3, [r7, #4]
 8662 00ce 0022     		movs	r2, #0
 8663 00d0 9A64     		str	r2, [r3, #72]
3799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3800:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Clear ADDR flag */
3801:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 8664              		.loc 1 3801 0
 8665 00d2 7B68     		ldr	r3, [r7, #4]
 8666 00d4 1B68     		ldr	r3, [r3]
 8667 00d6 0822     		movs	r2, #8
 8668 00d8 DA61     		str	r2, [r3, #28]
3802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3803:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Process Unlocked */
3804:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
 8669              		.loc 1 3804 0
 8670 00da 7B68     		ldr	r3, [r7, #4]
 8671 00dc 4022     		movs	r2, #64
 8672 00de 0021     		movs	r1, #0
 8673 00e0 9954     		strb	r1, [r3, r2]
3805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Call Slave Addr callback */
3807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
 8674              		.loc 1 3807 0
 8675 00e2 0C23     		movs	r3, #12
 8676 00e4 FB18     		adds	r3, r7, r3
 8677 00e6 1A88     		ldrh	r2, [r3]
 8678 00e8 0F23     		movs	r3, #15
 8679 00ea FB18     		adds	r3, r7, r3
 8680 00ec 1978     		ldrb	r1, [r3]
 8681 00ee 7B68     		ldr	r3, [r7, #4]
 8682 00f0 1800     		movs	r0, r3
 8683 00f2 FFF7FEFF 		bl	HAL_I2C_AddrCallback
3808:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
3809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3810:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       else
3811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
3812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
3813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3814:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
3815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3816:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
3818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3820:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Call Slave Addr callback */
3821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
ARM GAS  /tmp/ccqg4Whx.s 			page 219


3822:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
3823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3824:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
3825:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3826:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3827:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
3828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3829:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
3831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3833:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call Slave Addr callback */
3834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
3835:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3836:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3837:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Else clear address flag only */
3838:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3839:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3840:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear ADDR flag */
3841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
3844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3846:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 8684              		.loc 1 3846 0
 8685 00f6 34E0     		b	.L430
 8686              	.L425:
3812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8687              		.loc 1 3812 0
 8688 00f8 0C24     		movs	r4, #12
 8689 00fa 3B19     		adds	r3, r7, r4
 8690 00fc 0822     		movs	r2, #8
 8691 00fe BA18     		adds	r2, r7, r2
 8692 0100 1288     		ldrh	r2, [r2]
 8693 0102 1A80     		strh	r2, [r3]
3815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8694              		.loc 1 3815 0
 8695 0104 7B68     		ldr	r3, [r7, #4]
 8696 0106 0421     		movs	r1, #4
 8697 0108 1800     		movs	r0, r3
 8698 010a FFF7FEFF 		bl	I2C_Disable_IRQ
3818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8699              		.loc 1 3818 0
 8700 010e 7B68     		ldr	r3, [r7, #4]
 8701 0110 4022     		movs	r2, #64
 8702 0112 0021     		movs	r1, #0
 8703 0114 9954     		strb	r1, [r3, r2]
3821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
 8704              		.loc 1 3821 0
 8705 0116 3B19     		adds	r3, r7, r4
 8706 0118 1A88     		ldrh	r2, [r3]
 8707 011a 0F23     		movs	r3, #15
 8708 011c FB18     		adds	r3, r7, r3
 8709 011e 1978     		ldrb	r1, [r3]
 8710 0120 7B68     		ldr	r3, [r7, #4]
 8711 0122 1800     		movs	r0, r3
ARM GAS  /tmp/ccqg4Whx.s 			page 220


 8712 0124 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8713              		.loc 1 3846 0
 8714 0128 1BE0     		b	.L430
 8715              	.L424:
3828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8716              		.loc 1 3828 0
 8717 012a 7B68     		ldr	r3, [r7, #4]
 8718 012c 0421     		movs	r1, #4
 8719 012e 1800     		movs	r0, r3
 8720 0130 FFF7FEFF 		bl	I2C_Disable_IRQ
3831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8721              		.loc 1 3831 0
 8722 0134 7B68     		ldr	r3, [r7, #4]
 8723 0136 4022     		movs	r2, #64
 8724 0138 0021     		movs	r1, #0
 8725 013a 9954     		strb	r1, [r3, r2]
3834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 8726              		.loc 1 3834 0
 8727 013c 0C23     		movs	r3, #12
 8728 013e FB18     		adds	r3, r7, r3
 8729 0140 1A88     		ldrh	r2, [r3]
 8730 0142 0F23     		movs	r3, #15
 8731 0144 FB18     		adds	r3, r7, r3
 8732 0146 1978     		ldrb	r1, [r3]
 8733 0148 7B68     		ldr	r3, [r7, #4]
 8734 014a 1800     		movs	r0, r3
 8735 014c FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8736              		.loc 1 3846 0
 8737 0150 07E0     		b	.L430
 8738              	.L423:
3841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8739              		.loc 1 3841 0
 8740 0152 7B68     		ldr	r3, [r7, #4]
 8741 0154 1B68     		ldr	r3, [r3]
 8742 0156 0822     		movs	r2, #8
 8743 0158 DA61     		str	r2, [r3, #28]
3844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 8744              		.loc 1 3844 0
 8745 015a 7B68     		ldr	r3, [r7, #4]
 8746 015c 4022     		movs	r2, #64
 8747 015e 0021     		movs	r1, #0
 8748 0160 9954     		strb	r1, [r3, r2]
 8749              	.L430:
 8750              		.loc 1 3846 0
 8751 0162 C046     		nop
 8752 0164 BD46     		mov	sp, r7
 8753 0166 05B0     		add	sp, sp, #20
 8754              		@ sp needed
 8755 0168 90BD     		pop	{r4, r7, pc}
 8756              		.cfi_endproc
 8757              	.LFE88:
 8759              		.section	.text.I2C_ITMasterSequentialCplt,"ax",%progbits
 8760              		.align	1
 8761              		.syntax unified
 8762              		.code	16
 8763              		.thumb_func
 8764              		.fpu softvfp
ARM GAS  /tmp/ccqg4Whx.s 			page 221


 8766              	I2C_ITMasterSequentialCplt:
 8767              	.LFB89:
3847:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3848:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3849:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
3850:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3852:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3853:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITMasterSequentialCplt(I2C_HandleTypeDef *hi2c)
3854:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 8768              		.loc 1 3854 0
 8769              		.cfi_startproc
 8770              		@ args = 0, pretend = 0, frame = 8
 8771              		@ frame_needed = 1, uses_anonymous_args = 0
 8772 0000 80B5     		push	{r7, lr}
 8773              		.cfi_def_cfa_offset 8
 8774              		.cfi_offset 7, -8
 8775              		.cfi_offset 14, -4
 8776 0002 82B0     		sub	sp, sp, #8
 8777              		.cfi_def_cfa_offset 16
 8778 0004 00AF     		add	r7, sp, #0
 8779              		.cfi_def_cfa_register 7
 8780 0006 7860     		str	r0, [r7, #4]
3855:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset I2C handle mode */
3856:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8781              		.loc 1 3856 0
 8782 0008 7B68     		ldr	r3, [r7, #4]
 8783 000a 4222     		movs	r2, #66
 8784 000c 0021     		movs	r1, #0
 8785 000e 9954     		strb	r1, [r3, r2]
3857:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3858:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
3859:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
3860:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 8786              		.loc 1 3860 0
 8787 0010 7B68     		ldr	r3, [r7, #4]
 8788 0012 4122     		movs	r2, #65
 8789 0014 9B5C     		ldrb	r3, [r3, r2]
 8790 0016 DBB2     		uxtb	r3, r3
 8791 0018 212B     		cmp	r3, #33
 8792 001a 17D1     		bne	.L432
3861:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3862:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
 8793              		.loc 1 3862 0
 8794 001c 7B68     		ldr	r3, [r7, #4]
 8795 001e 4122     		movs	r2, #65
 8796 0020 2021     		movs	r1, #32
 8797 0022 9954     		strb	r1, [r3, r2]
3863:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 8798              		.loc 1 3863 0
 8799 0024 7B68     		ldr	r3, [r7, #4]
 8800 0026 1122     		movs	r2, #17
 8801 0028 1A63     		str	r2, [r3, #48]
3864:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 8802              		.loc 1 3864 0
 8803 002a 7B68     		ldr	r3, [r7, #4]
 8804 002c 0022     		movs	r2, #0
ARM GAS  /tmp/ccqg4Whx.s 			page 222


 8805 002e 5A63     		str	r2, [r3, #52]
3865:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3866:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts */
3867:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 8806              		.loc 1 3867 0
 8807 0030 7B68     		ldr	r3, [r7, #4]
 8808 0032 0121     		movs	r1, #1
 8809 0034 1800     		movs	r0, r3
 8810 0036 FFF7FEFF 		bl	I2C_Disable_IRQ
3868:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3869:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
3870:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 8811              		.loc 1 3870 0
 8812 003a 7B68     		ldr	r3, [r7, #4]
 8813 003c 4022     		movs	r2, #64
 8814 003e 0021     		movs	r1, #0
 8815 0040 9954     		strb	r1, [r3, r2]
3871:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3872:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3873:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
 8816              		.loc 1 3873 0
 8817 0042 7B68     		ldr	r3, [r7, #4]
 8818 0044 1800     		movs	r0, r3
 8819 0046 FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
3874:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3875:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
3876:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
3877:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
3879:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
3880:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
3881:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3882:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts */
3883:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3884:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3885:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
3886:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3887:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3888:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3889:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
3890:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3891:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 8820              		.loc 1 3891 0
 8821 004a 16E0     		b	.L434
 8822              	.L432:
3878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 8823              		.loc 1 3878 0
 8824 004c 7B68     		ldr	r3, [r7, #4]
 8825 004e 4122     		movs	r2, #65
 8826 0050 2021     		movs	r1, #32
 8827 0052 9954     		strb	r1, [r3, r2]
3879:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 8828              		.loc 1 3879 0
 8829 0054 7B68     		ldr	r3, [r7, #4]
 8830 0056 1222     		movs	r2, #18
 8831 0058 1A63     		str	r2, [r3, #48]
3880:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 223


 8832              		.loc 1 3880 0
 8833 005a 7B68     		ldr	r3, [r7, #4]
 8834 005c 0022     		movs	r2, #0
 8835 005e 5A63     		str	r2, [r3, #52]
3883:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8836              		.loc 1 3883 0
 8837 0060 7B68     		ldr	r3, [r7, #4]
 8838 0062 0221     		movs	r1, #2
 8839 0064 1800     		movs	r0, r3
 8840 0066 FFF7FEFF 		bl	I2C_Disable_IRQ
3886:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8841              		.loc 1 3886 0
 8842 006a 7B68     		ldr	r3, [r7, #4]
 8843 006c 4022     		movs	r2, #64
 8844 006e 0021     		movs	r1, #0
 8845 0070 9954     		strb	r1, [r3, r2]
3889:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 8846              		.loc 1 3889 0
 8847 0072 7B68     		ldr	r3, [r7, #4]
 8848 0074 1800     		movs	r0, r3
 8849 0076 FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 8850              	.L434:
 8851              		.loc 1 3891 0
 8852 007a C046     		nop
 8853 007c BD46     		mov	sp, r7
 8854 007e 02B0     		add	sp, sp, #8
 8855              		@ sp needed
 8856 0080 80BD     		pop	{r7, pc}
 8857              		.cfi_endproc
 8858              	.LFE89:
 8860              		.section	.text.I2C_ITSlaveSequentialCplt,"ax",%progbits
 8861              		.align	1
 8862              		.syntax unified
 8863              		.code	16
 8864              		.thumb_func
 8865              		.fpu softvfp
 8867              	I2C_ITSlaveSequentialCplt:
 8868              	.LFB90:
3892:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3893:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3894:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
3895:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3896:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3897:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3898:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITSlaveSequentialCplt(I2C_HandleTypeDef *hi2c)
3899:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 8869              		.loc 1 3899 0
 8870              		.cfi_startproc
 8871              		@ args = 0, pretend = 0, frame = 8
 8872              		@ frame_needed = 1, uses_anonymous_args = 0
 8873 0000 80B5     		push	{r7, lr}
 8874              		.cfi_def_cfa_offset 8
 8875              		.cfi_offset 7, -8
 8876              		.cfi_offset 14, -4
 8877 0002 82B0     		sub	sp, sp, #8
 8878              		.cfi_def_cfa_offset 16
 8879 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccqg4Whx.s 			page 224


 8880              		.cfi_def_cfa_register 7
 8881 0006 7860     		str	r0, [r7, #4]
3900:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset I2C handle mode */
3901:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8882              		.loc 1 3901 0
 8883 0008 7B68     		ldr	r3, [r7, #4]
 8884 000a 4222     		movs	r2, #66
 8885 000c 0021     		movs	r1, #0
 8886 000e 9954     		strb	r1, [r3, r2]
3902:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3903:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
 8887              		.loc 1 3903 0
 8888 0010 7B68     		ldr	r3, [r7, #4]
 8889 0012 4122     		movs	r2, #65
 8890 0014 9B5C     		ldrb	r3, [r3, r2]
 8891 0016 DBB2     		uxtb	r3, r3
 8892 0018 292B     		cmp	r3, #41
 8893 001a 14D1     		bne	.L436
3904:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3905:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
3906:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
 8894              		.loc 1 3906 0
 8895 001c 7B68     		ldr	r3, [r7, #4]
 8896 001e 4122     		movs	r2, #65
 8897 0020 2821     		movs	r1, #40
 8898 0022 9954     		strb	r1, [r3, r2]
3907:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 8899              		.loc 1 3907 0
 8900 0024 7B68     		ldr	r3, [r7, #4]
 8901 0026 2122     		movs	r2, #33
 8902 0028 1A63     		str	r2, [r3, #48]
3908:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3909:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts */
3910:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 8903              		.loc 1 3910 0
 8904 002a 7B68     		ldr	r3, [r7, #4]
 8905 002c 0121     		movs	r1, #1
 8906 002e 1800     		movs	r0, r3
 8907 0030 FFF7FEFF 		bl	I2C_Disable_IRQ
3911:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3912:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
3913:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 8908              		.loc 1 3913 0
 8909 0034 7B68     		ldr	r3, [r7, #4]
 8910 0036 4022     		movs	r2, #64
 8911 0038 0021     		movs	r1, #0
 8912 003a 9954     		strb	r1, [r3, r2]
3914:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3915:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the Tx complete callback to inform upper layer of the end of transmit process */
3916:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
 8913              		.loc 1 3916 0
 8914 003c 7B68     		ldr	r3, [r7, #4]
 8915 003e 1800     		movs	r0, r3
 8916 0040 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
3917:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3918:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3919:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
ARM GAS  /tmp/ccqg4Whx.s 			page 225


3920:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3921:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
3922:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
3923:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
3924:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3925:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable Interrupts */
3926:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3927:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3928:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
3929:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3930:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3931:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the Rx complete callback to inform upper layer of the end of receive process */
3932:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
3933:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3934:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 8917              		.loc 1 3934 0
 8918 0044 19E0     		b	.L438
 8919              	.L436:
3919:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 8920              		.loc 1 3919 0
 8921 0046 7B68     		ldr	r3, [r7, #4]
 8922 0048 4122     		movs	r2, #65
 8923 004a 9B5C     		ldrb	r3, [r3, r2]
 8924 004c DBB2     		uxtb	r3, r3
 8925 004e 2A2B     		cmp	r3, #42
 8926 0050 13D1     		bne	.L438
3922:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8927              		.loc 1 3922 0
 8928 0052 7B68     		ldr	r3, [r7, #4]
 8929 0054 4122     		movs	r2, #65
 8930 0056 2821     		movs	r1, #40
 8931 0058 9954     		strb	r1, [r3, r2]
3923:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8932              		.loc 1 3923 0
 8933 005a 7B68     		ldr	r3, [r7, #4]
 8934 005c 2222     		movs	r2, #34
 8935 005e 1A63     		str	r2, [r3, #48]
3926:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8936              		.loc 1 3926 0
 8937 0060 7B68     		ldr	r3, [r7, #4]
 8938 0062 0221     		movs	r1, #2
 8939 0064 1800     		movs	r0, r3
 8940 0066 FFF7FEFF 		bl	I2C_Disable_IRQ
3929:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 8941              		.loc 1 3929 0
 8942 006a 7B68     		ldr	r3, [r7, #4]
 8943 006c 4022     		movs	r2, #64
 8944 006e 0021     		movs	r1, #0
 8945 0070 9954     		strb	r1, [r3, r2]
3932:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 8946              		.loc 1 3932 0
 8947 0072 7B68     		ldr	r3, [r7, #4]
 8948 0074 1800     		movs	r0, r3
 8949 0076 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 8950              	.L438:
 8951              		.loc 1 3934 0
 8952 007a C046     		nop
ARM GAS  /tmp/ccqg4Whx.s 			page 226


 8953 007c BD46     		mov	sp, r7
 8954 007e 02B0     		add	sp, sp, #8
 8955              		@ sp needed
 8956 0080 80BD     		pop	{r7, pc}
 8957              		.cfi_endproc
 8958              	.LFE90:
 8960              		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 8961              		.align	1
 8962              		.syntax unified
 8963              		.code	16
 8964              		.thumb_func
 8965              		.fpu softvfp
 8967              	I2C_ITMasterCplt:
 8968              	.LFB91:
3935:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3936:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
3937:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Master complete process.
3938:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3939:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3940:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
3941:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
3942:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
3943:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 8969              		.loc 1 3943 0
 8970              		.cfi_startproc
 8971              		@ args = 0, pretend = 0, frame = 8
 8972              		@ frame_needed = 1, uses_anonymous_args = 0
 8973 0000 80B5     		push	{r7, lr}
 8974              		.cfi_def_cfa_offset 8
 8975              		.cfi_offset 7, -8
 8976              		.cfi_offset 14, -4
 8977 0002 82B0     		sub	sp, sp, #8
 8978              		.cfi_def_cfa_offset 16
 8979 0004 00AF     		add	r7, sp, #0
 8980              		.cfi_def_cfa_register 7
 8981 0006 7860     		str	r0, [r7, #4]
 8982 0008 3960     		str	r1, [r7]
3944:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear STOP Flag */
3945:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8983              		.loc 1 3945 0
 8984 000a 7B68     		ldr	r3, [r7, #4]
 8985 000c 1B68     		ldr	r3, [r3]
 8986 000e 2022     		movs	r2, #32
 8987 0010 DA61     		str	r2, [r3, #28]
3946:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3947:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
3948:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
 8988              		.loc 1 3948 0
 8989 0012 7B68     		ldr	r3, [r7, #4]
 8990 0014 1B68     		ldr	r3, [r3]
 8991 0016 5A68     		ldr	r2, [r3, #4]
 8992 0018 7B68     		ldr	r3, [r7, #4]
 8993 001a 1B68     		ldr	r3, [r3]
 8994 001c 4549     		ldr	r1, .L449
 8995 001e 0A40     		ands	r2, r1
 8996 0020 5A60     		str	r2, [r3, #4]
3949:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 227


3950:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset handle parameters */
3951:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 8997              		.loc 1 3951 0
 8998 0022 7B68     		ldr	r3, [r7, #4]
 8999 0024 0022     		movs	r2, #0
 9000 0026 1A63     		str	r2, [r3, #48]
3952:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
 9001              		.loc 1 3952 0
 9002 0028 7B68     		ldr	r3, [r7, #4]
 9003 002a 0022     		movs	r2, #0
 9004 002c 5A63     		str	r2, [r3, #52]
3953:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 9005              		.loc 1 3953 0
 9006 002e 7B68     		ldr	r3, [r7, #4]
 9007 0030 414A     		ldr	r2, .L449+4
 9008 0032 DA62     		str	r2, [r3, #44]
3954:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3955:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((ITFlags & I2C_FLAG_AF) != RESET)
 9009              		.loc 1 3955 0
 9010 0034 3B68     		ldr	r3, [r7]
 9011 0036 1022     		movs	r2, #16
 9012 0038 1340     		ands	r3, r2
 9013 003a 09D0     		beq	.L440
3956:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3957:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear NACK Flag */
3958:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 9014              		.loc 1 3958 0
 9015 003c 7B68     		ldr	r3, [r7, #4]
 9016 003e 1B68     		ldr	r3, [r3]
 9017 0040 1022     		movs	r2, #16
 9018 0042 DA61     		str	r2, [r3, #28]
3959:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3960:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set acknowledge error code */
3961:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 9019              		.loc 1 3961 0
 9020 0044 7B68     		ldr	r3, [r7, #4]
 9021 0046 5B6C     		ldr	r3, [r3, #68]
 9022 0048 0422     		movs	r2, #4
 9023 004a 1A43     		orrs	r2, r3
 9024 004c 7B68     		ldr	r3, [r7, #4]
 9025 004e 5A64     		str	r2, [r3, #68]
 9026              	.L440:
3962:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3963:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3964:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Flush TX register */
3965:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
 9027              		.loc 1 3965 0
 9028 0050 7B68     		ldr	r3, [r7, #4]
 9029 0052 1800     		movs	r0, r3
 9030 0054 FFF7FEFF 		bl	I2C_Flush_TXDR
3966:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3967:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Interrupts */
3968:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_RX_IT);
 9031              		.loc 1 3968 0
 9032 0058 7B68     		ldr	r3, [r7, #4]
 9033 005a 0321     		movs	r1, #3
 9034 005c 1800     		movs	r0, r3
ARM GAS  /tmp/ccqg4Whx.s 			page 228


 9035 005e FFF7FEFF 		bl	I2C_Disable_IRQ
3969:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3970:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
3971:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->ErrorCode != HAL_I2C_ERROR_NONE) || (hi2c->State == HAL_I2C_STATE_ABORT))
 9036              		.loc 1 3971 0
 9037 0062 7B68     		ldr	r3, [r7, #4]
 9038 0064 5B6C     		ldr	r3, [r3, #68]
 9039 0066 002B     		cmp	r3, #0
 9040 0068 05D1     		bne	.L441
 9041              		.loc 1 3971 0 is_stmt 0 discriminator 1
 9042 006a 7B68     		ldr	r3, [r7, #4]
 9043 006c 4122     		movs	r2, #65
 9044 006e 9B5C     		ldrb	r3, [r3, r2]
 9045 0070 DBB2     		uxtb	r3, r3
 9046 0072 602B     		cmp	r3, #96
 9047 0074 07D1     		bne	.L442
 9048              	.L441:
3972:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3973:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3974:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
 9049              		.loc 1 3974 0 is_stmt 1
 9050 0076 7B68     		ldr	r3, [r7, #4]
 9051 0078 5A6C     		ldr	r2, [r3, #68]
 9052 007a 7B68     		ldr	r3, [r7, #4]
 9053 007c 1100     		movs	r1, r2
 9054 007e 1800     		movs	r0, r3
 9055 0080 FFF7FEFF 		bl	I2C_ITError
3975:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
3976:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
3977:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
3978:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
3979:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3980:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3981:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
3982:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3983:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
3984:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3985:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
3986:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3987:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3988:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3989:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
3990:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
3991:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
3992:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
3993:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
3994:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3995:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
3996:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3997:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
3998:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3999:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
4000:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4001:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4002:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
4003:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4004:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
ARM GAS  /tmp/ccqg4Whx.s 			page 229


4005:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4006:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4007:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
4008:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4009:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4010:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4011:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
4012:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4013:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4014:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
4015:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4016:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4017:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4018:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4019:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4020:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
4021:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4022:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4023:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
4024:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4025:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4026:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 9056              		.loc 1 4026 0
 9057 0084 52E0     		b	.L448
 9058              	.L442:
3977:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 9059              		.loc 1 3977 0
 9060 0086 7B68     		ldr	r3, [r7, #4]
 9061 0088 4122     		movs	r2, #65
 9062 008a 9B5C     		ldrb	r3, [r3, r2]
 9063 008c DBB2     		uxtb	r3, r3
 9064 008e 212B     		cmp	r3, #33
 9065 0090 23D1     		bne	.L444
3979:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9066              		.loc 1 3979 0
 9067 0092 7B68     		ldr	r3, [r7, #4]
 9068 0094 4122     		movs	r2, #65
 9069 0096 2021     		movs	r1, #32
 9070 0098 9954     		strb	r1, [r3, r2]
3981:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 9071              		.loc 1 3981 0
 9072 009a 7B68     		ldr	r3, [r7, #4]
 9073 009c 4222     		movs	r2, #66
 9074 009e 9B5C     		ldrb	r3, [r3, r2]
 9075 00a0 DBB2     		uxtb	r3, r3
 9076 00a2 402B     		cmp	r3, #64
 9077 00a4 0CD1     		bne	.L445
3983:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9078              		.loc 1 3983 0
 9079 00a6 7B68     		ldr	r3, [r7, #4]
 9080 00a8 4222     		movs	r2, #66
 9081 00aa 0021     		movs	r1, #0
 9082 00ac 9954     		strb	r1, [r3, r2]
3986:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9083              		.loc 1 3986 0
 9084 00ae 7B68     		ldr	r3, [r7, #4]
 9085 00b0 4022     		movs	r2, #64
ARM GAS  /tmp/ccqg4Whx.s 			page 230


 9086 00b2 0021     		movs	r1, #0
 9087 00b4 9954     		strb	r1, [r3, r2]
3989:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 9088              		.loc 1 3989 0
 9089 00b6 7B68     		ldr	r3, [r7, #4]
 9090 00b8 1800     		movs	r0, r3
 9091 00ba FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 9092              		.loc 1 4026 0
 9093 00be 35E0     		b	.L448
 9094              	.L445:
3993:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9095              		.loc 1 3993 0
 9096 00c0 7B68     		ldr	r3, [r7, #4]
 9097 00c2 4222     		movs	r2, #66
 9098 00c4 0021     		movs	r1, #0
 9099 00c6 9954     		strb	r1, [r3, r2]
3996:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9100              		.loc 1 3996 0
 9101 00c8 7B68     		ldr	r3, [r7, #4]
 9102 00ca 4022     		movs	r2, #64
 9103 00cc 0021     		movs	r1, #0
 9104 00ce 9954     		strb	r1, [r3, r2]
3999:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 9105              		.loc 1 3999 0
 9106 00d0 7B68     		ldr	r3, [r7, #4]
 9107 00d2 1800     		movs	r0, r3
 9108 00d4 FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 9109              		.loc 1 4026 0
 9110 00d8 28E0     		b	.L448
 9111              	.L444:
4003:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 9112              		.loc 1 4003 0
 9113 00da 7B68     		ldr	r3, [r7, #4]
 9114 00dc 4122     		movs	r2, #65
 9115 00de 9B5C     		ldrb	r3, [r3, r2]
 9116 00e0 DBB2     		uxtb	r3, r3
 9117 00e2 222B     		cmp	r3, #34
 9118 00e4 22D1     		bne	.L448
4005:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9119              		.loc 1 4005 0
 9120 00e6 7B68     		ldr	r3, [r7, #4]
 9121 00e8 4122     		movs	r2, #65
 9122 00ea 2021     		movs	r1, #32
 9123 00ec 9954     		strb	r1, [r3, r2]
4007:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 9124              		.loc 1 4007 0
 9125 00ee 7B68     		ldr	r3, [r7, #4]
 9126 00f0 4222     		movs	r2, #66
 9127 00f2 9B5C     		ldrb	r3, [r3, r2]
 9128 00f4 DBB2     		uxtb	r3, r3
 9129 00f6 402B     		cmp	r3, #64
 9130 00f8 0CD1     		bne	.L447
4009:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9131              		.loc 1 4009 0
 9132 00fa 7B68     		ldr	r3, [r7, #4]
 9133 00fc 4222     		movs	r2, #66
 9134 00fe 0021     		movs	r1, #0
ARM GAS  /tmp/ccqg4Whx.s 			page 231


 9135 0100 9954     		strb	r1, [r3, r2]
4012:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9136              		.loc 1 4012 0
 9137 0102 7B68     		ldr	r3, [r7, #4]
 9138 0104 4022     		movs	r2, #64
 9139 0106 0021     		movs	r1, #0
 9140 0108 9954     		strb	r1, [r3, r2]
4014:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 9141              		.loc 1 4014 0
 9142 010a 7B68     		ldr	r3, [r7, #4]
 9143 010c 1800     		movs	r0, r3
 9144 010e FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
 9145              		.loc 1 4026 0
 9146 0112 0BE0     		b	.L448
 9147              	.L447:
4018:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9148              		.loc 1 4018 0
 9149 0114 7B68     		ldr	r3, [r7, #4]
 9150 0116 4222     		movs	r2, #66
 9151 0118 0021     		movs	r1, #0
 9152 011a 9954     		strb	r1, [r3, r2]
4021:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9153              		.loc 1 4021 0
 9154 011c 7B68     		ldr	r3, [r7, #4]
 9155 011e 4022     		movs	r2, #64
 9156 0120 0021     		movs	r1, #0
 9157 0122 9954     		strb	r1, [r3, r2]
4023:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 9158              		.loc 1 4023 0
 9159 0124 7B68     		ldr	r3, [r7, #4]
 9160 0126 1800     		movs	r0, r3
 9161 0128 FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 9162              	.L448:
 9163              		.loc 1 4026 0
 9164 012c C046     		nop
 9165 012e BD46     		mov	sp, r7
 9166 0130 02B0     		add	sp, sp, #8
 9167              		@ sp needed
 9168 0132 80BD     		pop	{r7, pc}
 9169              	.L450:
 9170              		.align	2
 9171              	.L449:
 9172 0134 00E800FE 		.word	-33495040
 9173 0138 0000FFFF 		.word	-65536
 9174              		.cfi_endproc
 9175              	.LFE91:
 9177              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 9178              		.align	1
 9179              		.syntax unified
 9180              		.code	16
 9181              		.thumb_func
 9182              		.fpu softvfp
 9184              	I2C_ITSlaveCplt:
 9185              	.LFB92:
4027:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4028:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4029:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
ARM GAS  /tmp/ccqg4Whx.s 			page 232


4030:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4031:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4032:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4033:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4034:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
4035:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 9186              		.loc 1 4035 0
 9187              		.cfi_startproc
 9188              		@ args = 0, pretend = 0, frame = 8
 9189              		@ frame_needed = 1, uses_anonymous_args = 0
 9190 0000 80B5     		push	{r7, lr}
 9191              		.cfi_def_cfa_offset 8
 9192              		.cfi_offset 7, -8
 9193              		.cfi_offset 14, -4
 9194 0002 82B0     		sub	sp, sp, #8
 9195              		.cfi_def_cfa_offset 16
 9196 0004 00AF     		add	r7, sp, #0
 9197              		.cfi_def_cfa_register 7
 9198 0006 7860     		str	r0, [r7, #4]
 9199 0008 3960     		str	r1, [r7]
4036:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear STOP Flag */
4037:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 9200              		.loc 1 4037 0
 9201 000a 7B68     		ldr	r3, [r7, #4]
 9202 000c 1B68     		ldr	r3, [r3]
 9203 000e 2022     		movs	r2, #32
 9204 0010 DA61     		str	r2, [r3, #28]
4038:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4039:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear ADDR flag */
4040:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 9205              		.loc 1 4040 0
 9206 0012 7B68     		ldr	r3, [r7, #4]
 9207 0014 1B68     		ldr	r3, [r3]
 9208 0016 0822     		movs	r2, #8
 9209 0018 DA61     		str	r2, [r3, #28]
4041:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4042:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable all interrupts */
4043:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT | I2C_XFER_RX_IT);
 9210              		.loc 1 4043 0
 9211 001a 7B68     		ldr	r3, [r7, #4]
 9212 001c 0721     		movs	r1, #7
 9213 001e 1800     		movs	r0, r3
 9214 0020 FFF7FEFF 		bl	I2C_Disable_IRQ
4044:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4045:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Address Acknowledge */
4046:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
 9215              		.loc 1 4046 0
 9216 0024 7B68     		ldr	r3, [r7, #4]
 9217 0026 1B68     		ldr	r3, [r3]
 9218 0028 5A68     		ldr	r2, [r3, #4]
 9219 002a 7B68     		ldr	r3, [r7, #4]
 9220 002c 1B68     		ldr	r3, [r3]
 9221 002e 8021     		movs	r1, #128
 9222 0030 0902     		lsls	r1, r1, #8
 9223 0032 0A43     		orrs	r2, r1
 9224 0034 5A60     		str	r2, [r3, #4]
4047:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 233


4048:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
4049:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
 9225              		.loc 1 4049 0
 9226 0036 7B68     		ldr	r3, [r7, #4]
 9227 0038 1B68     		ldr	r3, [r3]
 9228 003a 5A68     		ldr	r2, [r3, #4]
 9229 003c 7B68     		ldr	r3, [r7, #4]
 9230 003e 1B68     		ldr	r3, [r3]
 9231 0040 5B49     		ldr	r1, .L464
 9232 0042 0A40     		ands	r2, r1
 9233 0044 5A60     		str	r2, [r3, #4]
4050:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4051:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Flush TX register */
4052:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
 9234              		.loc 1 4052 0
 9235 0046 7B68     		ldr	r3, [r7, #4]
 9236 0048 1800     		movs	r0, r3
 9237 004a FFF7FEFF 		bl	I2C_Flush_TXDR
4053:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4054:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
4055:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN) ||
 9238              		.loc 1 4055 0
 9239 004e 7B68     		ldr	r3, [r7, #4]
 9240 0050 1B68     		ldr	r3, [r3]
 9241 0052 1A68     		ldr	r2, [r3]
 9242 0054 8023     		movs	r3, #128
 9243 0056 DB01     		lsls	r3, r3, #7
 9244 0058 1A40     		ands	r2, r3
 9245 005a 8023     		movs	r3, #128
 9246 005c DB01     		lsls	r3, r3, #7
 9247 005e 9A42     		cmp	r2, r3
 9248 0060 09D0     		beq	.L452
4056:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN))
 9249              		.loc 1 4056 0 discriminator 1
 9250 0062 7B68     		ldr	r3, [r7, #4]
 9251 0064 1B68     		ldr	r3, [r3]
 9252 0066 1A68     		ldr	r2, [r3]
 9253 0068 8023     		movs	r3, #128
 9254 006a 1B02     		lsls	r3, r3, #8
 9255 006c 1A40     		ands	r2, r3
4055:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN))
 9256              		.loc 1 4055 0 discriminator 1
 9257 006e 8023     		movs	r3, #128
 9258 0070 1B02     		lsls	r3, r3, #8
 9259 0072 9A42     		cmp	r2, r3
 9260 0074 12D1     		bne	.L453
 9261              	.L452:
4057:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4058:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
 9262              		.loc 1 4058 0
 9263 0076 7B68     		ldr	r3, [r7, #4]
 9264 0078 4122     		movs	r2, #65
 9265 007a 9B5C     		ldrb	r3, [r3, r2]
 9266 007c DBB2     		uxtb	r3, r3
 9267 007e 212B     		cmp	r3, #33
 9268 0080 05D1     		bne	.L454
 9269              		.loc 1 4058 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccqg4Whx.s 			page 234


 9270 0082 7B68     		ldr	r3, [r7, #4]
 9271 0084 9B6B     		ldr	r3, [r3, #56]
 9272 0086 1B68     		ldr	r3, [r3]
 9273 0088 5B68     		ldr	r3, [r3, #4]
 9274 008a 9BB2     		uxth	r3, r3
 9275 008c 04E0     		b	.L455
 9276              	.L454:
 9277              		.loc 1 4058 0 discriminator 2
 9278 008e 7B68     		ldr	r3, [r7, #4]
 9279 0090 DB6B     		ldr	r3, [r3, #60]
 9280 0092 1B68     		ldr	r3, [r3]
 9281 0094 5B68     		ldr	r3, [r3, #4]
 9282 0096 9BB2     		uxth	r3, r3
 9283              	.L455:
 9284              		.loc 1 4058 0 discriminator 4
 9285 0098 7A68     		ldr	r2, [r7, #4]
 9286 009a 5385     		strh	r3, [r2, #42]
 9287              	.L453:
4059:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4060:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4061:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
4062:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
 9288              		.loc 1 4062 0 is_stmt 1
 9289 009c 7B68     		ldr	r3, [r7, #4]
 9290 009e 5B8D     		ldrh	r3, [r3, #42]
 9291 00a0 9BB2     		uxth	r3, r3
 9292 00a2 002B     		cmp	r3, #0
 9293 00a4 05D0     		beq	.L456
4063:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4064:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
4065:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 9294              		.loc 1 4065 0
 9295 00a6 7B68     		ldr	r3, [r7, #4]
 9296 00a8 5B6C     		ldr	r3, [r3, #68]
 9297 00aa 0422     		movs	r2, #4
 9298 00ac 1A43     		orrs	r2, r3
 9299 00ae 7B68     		ldr	r3, [r7, #4]
 9300 00b0 5A64     		str	r2, [r3, #68]
 9301              	.L456:
4066:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4067:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4068:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Store Last receive data if any */
4069:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_RXNE) != RESET))
 9302              		.loc 1 4069 0
 9303 00b2 3B68     		ldr	r3, [r7]
 9304 00b4 0422     		movs	r2, #4
 9305 00b6 1340     		ands	r3, r2
 9306 00b8 20D0     		beq	.L457
4070:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4071:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Read data from RXDR */
4072:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 9307              		.loc 1 4072 0
 9308 00ba 7B68     		ldr	r3, [r7, #4]
 9309 00bc 1B68     		ldr	r3, [r3]
 9310 00be 586A     		ldr	r0, [r3, #36]
 9311 00c0 7B68     		ldr	r3, [r7, #4]
 9312 00c2 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccqg4Whx.s 			page 235


 9313 00c4 591C     		adds	r1, r3, #1
 9314 00c6 7A68     		ldr	r2, [r7, #4]
 9315 00c8 5162     		str	r1, [r2, #36]
 9316 00ca C2B2     		uxtb	r2, r0
 9317 00cc 1A70     		strb	r2, [r3]
4073:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4074:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
 9318              		.loc 1 4074 0
 9319 00ce 7B68     		ldr	r3, [r7, #4]
 9320 00d0 1B8D     		ldrh	r3, [r3, #40]
 9321 00d2 002B     		cmp	r3, #0
 9322 00d4 12D0     		beq	.L457
4075:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4076:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 9323              		.loc 1 4076 0
 9324 00d6 7B68     		ldr	r3, [r7, #4]
 9325 00d8 1B8D     		ldrh	r3, [r3, #40]
 9326 00da 013B     		subs	r3, r3, #1
 9327 00dc 9AB2     		uxth	r2, r3
 9328 00de 7B68     		ldr	r3, [r7, #4]
 9329 00e0 1A85     		strh	r2, [r3, #40]
4077:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 9330              		.loc 1 4077 0
 9331 00e2 7B68     		ldr	r3, [r7, #4]
 9332 00e4 5B8D     		ldrh	r3, [r3, #42]
 9333 00e6 9BB2     		uxth	r3, r3
 9334 00e8 013B     		subs	r3, r3, #1
 9335 00ea 9AB2     		uxth	r2, r3
 9336 00ec 7B68     		ldr	r3, [r7, #4]
 9337 00ee 5A85     		strh	r2, [r3, #42]
4078:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4079:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4080:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 9338              		.loc 1 4080 0
 9339 00f0 7B68     		ldr	r3, [r7, #4]
 9340 00f2 5B6C     		ldr	r3, [r3, #68]
 9341 00f4 0422     		movs	r2, #4
 9342 00f6 1A43     		orrs	r2, r3
 9343 00f8 7B68     		ldr	r3, [r7, #4]
 9344 00fa 5A64     		str	r2, [r3, #68]
 9345              	.L457:
4081:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4082:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4083:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4084:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 9346              		.loc 1 4084 0
 9347 00fc 7B68     		ldr	r3, [r7, #4]
 9348 00fe 0022     		movs	r2, #0
 9349 0100 1A63     		str	r2, [r3, #48]
4085:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 9350              		.loc 1 4085 0
 9351 0102 7B68     		ldr	r3, [r7, #4]
 9352 0104 4222     		movs	r2, #66
 9353 0106 0021     		movs	r1, #0
 9354 0108 9954     		strb	r1, [r3, r2]
4086:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 9355              		.loc 1 4086 0
ARM GAS  /tmp/ccqg4Whx.s 			page 236


 9356 010a 7B68     		ldr	r3, [r7, #4]
 9357 010c 0022     		movs	r2, #0
 9358 010e 5A63     		str	r2, [r3, #52]
4087:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4088:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 9359              		.loc 1 4088 0
 9360 0110 7B68     		ldr	r3, [r7, #4]
 9361 0112 5B6C     		ldr	r3, [r3, #68]
 9362 0114 002B     		cmp	r3, #0
 9363 0116 13D0     		beq	.L458
4089:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4090:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4091:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
 9364              		.loc 1 4091 0
 9365 0118 7B68     		ldr	r3, [r7, #4]
 9366 011a 5A6C     		ldr	r2, [r3, #68]
 9367 011c 7B68     		ldr	r3, [r7, #4]
 9368 011e 1100     		movs	r1, r2
 9369 0120 1800     		movs	r0, r3
 9370 0122 FFF7FEFF 		bl	I2C_ITError
4092:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4093:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4094:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
 9371              		.loc 1 4094 0
 9372 0126 7B68     		ldr	r3, [r7, #4]
 9373 0128 4122     		movs	r2, #65
 9374 012a 9B5C     		ldrb	r3, [r3, r2]
 9375 012c DBB2     		uxtb	r3, r3
 9376 012e 282B     		cmp	r3, #40
 9377 0130 3AD1     		bne	.L463
4095:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4096:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call I2C Listen complete process */
4097:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, ITFlags);
 9378              		.loc 1 4097 0
 9379 0132 3A68     		ldr	r2, [r7]
 9380 0134 7B68     		ldr	r3, [r7, #4]
 9381 0136 1100     		movs	r1, r2
 9382 0138 1800     		movs	r0, r3
 9383 013a FFF7FEFF 		bl	I2C_ITListenCplt
4098:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4099:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
4103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
4110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
4112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 237


4116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the Slave Rx Complete callback */
4120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
4121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the Slave Tx Complete callback */
4130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
4131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 9384              		.loc 1 4132 0
 9385 013e 33E0     		b	.L463
 9386              	.L458:
4100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 9387              		.loc 1 4100 0
 9388 0140 7B68     		ldr	r3, [r7, #4]
 9389 0142 DB6A     		ldr	r3, [r3, #44]
 9390 0144 1B4A     		ldr	r2, .L464+4
 9391 0146 9342     		cmp	r3, r2
 9392 0148 0FD0     		beq	.L461
4102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 9393              		.loc 1 4102 0
 9394 014a 7B68     		ldr	r3, [r7, #4]
 9395 014c 194A     		ldr	r2, .L464+4
 9396 014e DA62     		str	r2, [r3, #44]
4103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9397              		.loc 1 4103 0
 9398 0150 7B68     		ldr	r3, [r7, #4]
 9399 0152 4122     		movs	r2, #65
 9400 0154 2021     		movs	r1, #32
 9401 0156 9954     		strb	r1, [r3, r2]
4106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9402              		.loc 1 4106 0
 9403 0158 7B68     		ldr	r3, [r7, #4]
 9404 015a 4022     		movs	r2, #64
 9405 015c 0021     		movs	r1, #0
 9406 015e 9954     		strb	r1, [r3, r2]
4109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 9407              		.loc 1 4109 0
 9408 0160 7B68     		ldr	r3, [r7, #4]
 9409 0162 1800     		movs	r0, r3
 9410 0164 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 9411              		.loc 1 4132 0
 9412 0168 1EE0     		b	.L463
 9413              	.L461:
4112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 9414              		.loc 1 4112 0
 9415 016a 7B68     		ldr	r3, [r7, #4]
 9416 016c 4122     		movs	r2, #65
 9417 016e 9B5C     		ldrb	r3, [r3, r2]
ARM GAS  /tmp/ccqg4Whx.s 			page 238


 9418 0170 DBB2     		uxtb	r3, r3
 9419 0172 222B     		cmp	r3, #34
 9420 0174 0CD1     		bne	.L462
4114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9421              		.loc 1 4114 0
 9422 0176 7B68     		ldr	r3, [r7, #4]
 9423 0178 4122     		movs	r2, #65
 9424 017a 2021     		movs	r1, #32
 9425 017c 9954     		strb	r1, [r3, r2]
4117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9426              		.loc 1 4117 0
 9427 017e 7B68     		ldr	r3, [r7, #4]
 9428 0180 4022     		movs	r2, #64
 9429 0182 0021     		movs	r1, #0
 9430 0184 9954     		strb	r1, [r3, r2]
4120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 9431              		.loc 1 4120 0
 9432 0186 7B68     		ldr	r3, [r7, #4]
 9433 0188 1800     		movs	r0, r3
 9434 018a FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 9435              		.loc 1 4132 0
 9436 018e 0BE0     		b	.L463
 9437              	.L462:
4124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9438              		.loc 1 4124 0
 9439 0190 7B68     		ldr	r3, [r7, #4]
 9440 0192 4122     		movs	r2, #65
 9441 0194 2021     		movs	r1, #32
 9442 0196 9954     		strb	r1, [r3, r2]
4127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9443              		.loc 1 4127 0
 9444 0198 7B68     		ldr	r3, [r7, #4]
 9445 019a 4022     		movs	r2, #64
 9446 019c 0021     		movs	r1, #0
 9447 019e 9954     		strb	r1, [r3, r2]
4130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 9448              		.loc 1 4130 0
 9449 01a0 7B68     		ldr	r3, [r7, #4]
 9450 01a2 1800     		movs	r0, r3
 9451 01a4 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 9452              	.L463:
 9453              		.loc 1 4132 0
 9454 01a8 C046     		nop
 9455 01aa BD46     		mov	sp, r7
 9456 01ac 02B0     		add	sp, sp, #8
 9457              		@ sp needed
 9458 01ae 80BD     		pop	{r7, pc}
 9459              	.L465:
 9460              		.align	2
 9461              	.L464:
 9462 01b0 00E800FE 		.word	-33495040
 9463 01b4 0000FFFF 		.word	-65536
 9464              		.cfi_endproc
 9465              	.LFE92:
 9467              		.section	.text.I2C_ITListenCplt,"ax",%progbits
 9468              		.align	1
 9469              		.syntax unified
ARM GAS  /tmp/ccqg4Whx.s 			page 239


 9470              		.code	16
 9471              		.thumb_func
 9472              		.fpu softvfp
 9474              	I2C_ITListenCplt:
 9475              	.LFB93:
4133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
4136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
4141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 9476              		.loc 1 4141 0
 9477              		.cfi_startproc
 9478              		@ args = 0, pretend = 0, frame = 8
 9479              		@ frame_needed = 1, uses_anonymous_args = 0
 9480 0000 80B5     		push	{r7, lr}
 9481              		.cfi_def_cfa_offset 8
 9482              		.cfi_offset 7, -8
 9483              		.cfi_offset 14, -4
 9484 0002 82B0     		sub	sp, sp, #8
 9485              		.cfi_def_cfa_offset 16
 9486 0004 00AF     		add	r7, sp, #0
 9487              		.cfi_def_cfa_register 7
 9488 0006 7860     		str	r0, [r7, #4]
 9489 0008 3960     		str	r1, [r7]
4142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset handle parameters */
4143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 9490              		.loc 1 4143 0
 9491 000a 7B68     		ldr	r3, [r7, #4]
 9492 000c 244A     		ldr	r2, .L468
 9493 000e DA62     		str	r2, [r3, #44]
4144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 9494              		.loc 1 4144 0
 9495 0010 7B68     		ldr	r3, [r7, #4]
 9496 0012 0022     		movs	r2, #0
 9497 0014 1A63     		str	r2, [r3, #48]
4145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 9498              		.loc 1 4145 0
 9499 0016 7B68     		ldr	r3, [r7, #4]
 9500 0018 4122     		movs	r2, #65
 9501 001a 2021     		movs	r1, #32
 9502 001c 9954     		strb	r1, [r3, r2]
4146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 9503              		.loc 1 4146 0
 9504 001e 7B68     		ldr	r3, [r7, #4]
 9505 0020 4222     		movs	r2, #66
 9506 0022 0021     		movs	r1, #0
 9507 0024 9954     		strb	r1, [r3, r2]
4147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 9508              		.loc 1 4147 0
 9509 0026 7B68     		ldr	r3, [r7, #4]
 9510 0028 0022     		movs	r2, #0
 9511 002a 5A63     		str	r2, [r3, #52]
4148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 240


4149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Store Last receive data if any */
4150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (((ITFlags & I2C_FLAG_RXNE) != RESET))
 9512              		.loc 1 4150 0
 9513 002c 3B68     		ldr	r3, [r7]
 9514 002e 0422     		movs	r2, #4
 9515 0030 1340     		ands	r3, r2
 9516 0032 20D0     		beq	.L467
4151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Read data from RXDR */
4153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 9517              		.loc 1 4153 0
 9518 0034 7B68     		ldr	r3, [r7, #4]
 9519 0036 1B68     		ldr	r3, [r3]
 9520 0038 586A     		ldr	r0, [r3, #36]
 9521 003a 7B68     		ldr	r3, [r7, #4]
 9522 003c 5B6A     		ldr	r3, [r3, #36]
 9523 003e 591C     		adds	r1, r3, #1
 9524 0040 7A68     		ldr	r2, [r7, #4]
 9525 0042 5162     		str	r1, [r2, #36]
 9526 0044 C2B2     		uxtb	r2, r0
 9527 0046 1A70     		strb	r2, [r3]
4154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
 9528              		.loc 1 4155 0
 9529 0048 7B68     		ldr	r3, [r7, #4]
 9530 004a 1B8D     		ldrh	r3, [r3, #40]
 9531 004c 002B     		cmp	r3, #0
 9532 004e 12D0     		beq	.L467
4156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize--;
 9533              		.loc 1 4157 0
 9534 0050 7B68     		ldr	r3, [r7, #4]
 9535 0052 1B8D     		ldrh	r3, [r3, #40]
 9536 0054 013B     		subs	r3, r3, #1
 9537 0056 9AB2     		uxth	r2, r3
 9538 0058 7B68     		ldr	r3, [r7, #4]
 9539 005a 1A85     		strh	r2, [r3, #40]
4158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferCount--;
 9540              		.loc 1 4158 0
 9541 005c 7B68     		ldr	r3, [r7, #4]
 9542 005e 5B8D     		ldrh	r3, [r3, #42]
 9543 0060 9BB2     		uxth	r3, r3
 9544 0062 013B     		subs	r3, r3, #1
 9545 0064 9AB2     		uxth	r2, r3
 9546 0066 7B68     		ldr	r3, [r7, #4]
 9547 0068 5A85     		strh	r2, [r3, #42]
4159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 9548              		.loc 1 4161 0
 9549 006a 7B68     		ldr	r3, [r7, #4]
 9550 006c 5B6C     		ldr	r3, [r3, #68]
 9551 006e 0422     		movs	r2, #4
 9552 0070 1A43     		orrs	r2, r3
 9553 0072 7B68     		ldr	r3, [r7, #4]
 9554 0074 5A64     		str	r2, [r3, #68]
 9555              	.L467:
ARM GAS  /tmp/ccqg4Whx.s 			page 241


4162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable all Interrupts*/
4166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 9556              		.loc 1 4166 0
 9557 0076 7B68     		ldr	r3, [r7, #4]
 9558 0078 0721     		movs	r1, #7
 9559 007a 1800     		movs	r0, r3
 9560 007c FFF7FEFF 		bl	I2C_Disable_IRQ
4167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Clear NACK Flag */
4169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 9561              		.loc 1 4169 0
 9562 0080 7B68     		ldr	r3, [r7, #4]
 9563 0082 1B68     		ldr	r3, [r3]
 9564 0084 1022     		movs	r2, #16
 9565 0086 DA61     		str	r2, [r3, #28]
4170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Process Unlocked */
4172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 9566              		.loc 1 4172 0
 9567 0088 7B68     		ldr	r3, [r7, #4]
 9568 008a 4022     		movs	r2, #64
 9569 008c 0021     		movs	r1, #0
 9570 008e 9954     		strb	r1, [r3, r2]
4173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
 9571              		.loc 1 4175 0
 9572 0090 7B68     		ldr	r3, [r7, #4]
 9573 0092 1800     		movs	r0, r3
 9574 0094 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
4176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 9575              		.loc 1 4176 0
 9576 0098 C046     		nop
 9577 009a BD46     		mov	sp, r7
 9578 009c 02B0     		add	sp, sp, #8
 9579              		@ sp needed
 9580 009e 80BD     		pop	{r7, pc}
 9581              	.L469:
 9582              		.align	2
 9583              	.L468:
 9584 00a0 0000FFFF 		.word	-65536
 9585              		.cfi_endproc
 9586              	.LFE93:
 9588              		.section	.text.I2C_ITError,"ax",%progbits
 9589              		.align	1
 9590              		.syntax unified
 9591              		.code	16
 9592              		.thumb_func
 9593              		.fpu softvfp
 9595              	I2C_ITError:
 9596              	.LFB94:
4177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
ARM GAS  /tmp/ccqg4Whx.s 			page 242


4180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
4182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
4185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 9597              		.loc 1 4185 0
 9598              		.cfi_startproc
 9599              		@ args = 0, pretend = 0, frame = 8
 9600              		@ frame_needed = 1, uses_anonymous_args = 0
 9601 0000 80B5     		push	{r7, lr}
 9602              		.cfi_def_cfa_offset 8
 9603              		.cfi_offset 7, -8
 9604              		.cfi_offset 14, -4
 9605 0002 82B0     		sub	sp, sp, #8
 9606              		.cfi_def_cfa_offset 16
 9607 0004 00AF     		add	r7, sp, #0
 9608              		.cfi_def_cfa_register 7
 9609 0006 7860     		str	r0, [r7, #4]
 9610 0008 3960     		str	r1, [r7]
4186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset handle parameters */
4187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
 9611              		.loc 1 4187 0
 9612 000a 7B68     		ldr	r3, [r7, #4]
 9613 000c 4222     		movs	r2, #66
 9614 000e 0021     		movs	r1, #0
 9615 0010 9954     		strb	r1, [r3, r2]
4188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 9616              		.loc 1 4188 0
 9617 0012 7B68     		ldr	r3, [r7, #4]
 9618 0014 594A     		ldr	r2, .L482
 9619 0016 DA62     		str	r2, [r3, #44]
4189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 9620              		.loc 1 4189 0
 9621 0018 7B68     		ldr	r3, [r7, #4]
 9622 001a 0022     		movs	r2, #0
 9623 001c 5A85     		strh	r2, [r3, #42]
4190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Set new error code */
4192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
 9624              		.loc 1 4192 0
 9625 001e 7B68     		ldr	r3, [r7, #4]
 9626 0020 5A6C     		ldr	r2, [r3, #68]
 9627 0022 3B68     		ldr	r3, [r7]
 9628 0024 1A43     		orrs	r2, r3
 9629 0026 7B68     		ldr	r3, [r7, #4]
 9630 0028 5A64     		str	r2, [r3, #68]
4193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Interrupts */
4195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_LISTEN)         ||
 9631              		.loc 1 4195 0
 9632 002a 7B68     		ldr	r3, [r7, #4]
 9633 002c 4122     		movs	r2, #65
 9634 002e 9B5C     		ldrb	r3, [r3, r2]
 9635 0030 DBB2     		uxtb	r3, r3
 9636 0032 282B     		cmp	r3, #40
 9637 0034 0BD0     		beq	.L471
ARM GAS  /tmp/ccqg4Whx.s 			page 243


4196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 9638              		.loc 1 4196 0 discriminator 1
 9639 0036 7B68     		ldr	r3, [r7, #4]
 9640 0038 4122     		movs	r2, #65
 9641 003a 9B5C     		ldrb	r3, [r3, r2]
 9642 003c DBB2     		uxtb	r3, r3
4195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 9643              		.loc 1 4195 0 discriminator 1
 9644 003e 292B     		cmp	r3, #41
 9645 0040 05D0     		beq	.L471
4197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN))
 9646              		.loc 1 4197 0
 9647 0042 7B68     		ldr	r3, [r7, #4]
 9648 0044 4122     		movs	r2, #65
 9649 0046 9B5C     		ldrb	r3, [r3, r2]
 9650 0048 DBB2     		uxtb	r3, r3
4196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 9651              		.loc 1 4196 0
 9652 004a 2A2B     		cmp	r3, #42
 9653 004c 0FD1     		bne	.L472
 9654              	.L471:
4198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
4200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 9655              		.loc 1 4200 0
 9656 004e 7B68     		ldr	r3, [r7, #4]
 9657 0050 0321     		movs	r1, #3
 9658 0052 1800     		movs	r0, r3
 9659 0054 FFF7FEFF 		bl	I2C_Disable_IRQ
4201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
4203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
 9660              		.loc 1 4203 0
 9661 0058 7B68     		ldr	r3, [r7, #4]
 9662 005a 4122     		movs	r2, #65
 9663 005c 2821     		movs	r1, #40
 9664 005e 9954     		strb	r1, [r3, r2]
4204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9665              		.loc 1 4204 0
 9666 0060 7B68     		ldr	r3, [r7, #4]
 9667 0062 0022     		movs	r2, #0
 9668 0064 1A63     		str	r2, [r3, #48]
4205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 9669              		.loc 1 4205 0
 9670 0066 7B68     		ldr	r3, [r7, #4]
 9671 0068 454A     		ldr	r2, .L482+4
 9672 006a 5A63     		str	r2, [r3, #52]
 9673 006c 14E0     		b	.L473
 9674              	.L472:
4206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable all interrupts */
4210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 9675              		.loc 1 4210 0
 9676 006e 7B68     		ldr	r3, [r7, #4]
 9677 0070 0721     		movs	r1, #7
ARM GAS  /tmp/ccqg4Whx.s 			page 244


 9678 0072 1800     		movs	r0, r3
 9679 0074 FFF7FEFF 		bl	I2C_Disable_IRQ
4211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* If state is an abort treatment on goind, don't change state */
4213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* This change will be do later */
4214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->State != HAL_I2C_STATE_ABORT)
 9680              		.loc 1 4214 0
 9681 0078 7B68     		ldr	r3, [r7, #4]
 9682 007a 4122     		movs	r2, #65
 9683 007c 9B5C     		ldrb	r3, [r3, r2]
 9684 007e DBB2     		uxtb	r3, r3
 9685 0080 602B     		cmp	r3, #96
 9686 0082 03D0     		beq	.L474
4215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
4217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
 9687              		.loc 1 4217 0
 9688 0084 7B68     		ldr	r3, [r7, #4]
 9689 0086 4122     		movs	r2, #65
 9690 0088 2021     		movs	r1, #32
 9691 008a 9954     		strb	r1, [r3, r2]
 9692              	.L474:
4218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9693              		.loc 1 4219 0
 9694 008c 7B68     		ldr	r3, [r7, #4]
 9695 008e 0022     		movs	r2, #0
 9696 0090 1A63     		str	r2, [r3, #48]
4220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 9697              		.loc 1 4220 0
 9698 0092 7B68     		ldr	r3, [r7, #4]
 9699 0094 0022     		movs	r2, #0
 9700 0096 5A63     		str	r2, [r3, #52]
 9701              	.L473:
4221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
4224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
 9702              		.loc 1 4224 0
 9703 0098 7B68     		ldr	r3, [r7, #4]
 9704 009a 1B68     		ldr	r3, [r3]
 9705 009c 1A68     		ldr	r2, [r3]
 9706 009e 8023     		movs	r3, #128
 9707 00a0 DB01     		lsls	r3, r3, #7
 9708 00a2 1A40     		ands	r2, r3
 9709 00a4 8023     		movs	r3, #128
 9710 00a6 DB01     		lsls	r3, r3, #7
 9711 00a8 9A42     		cmp	r2, r3
 9712 00aa 1ED1     		bne	.L475
4225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
 9713              		.loc 1 4226 0
 9714 00ac 7B68     		ldr	r3, [r7, #4]
 9715 00ae 1B68     		ldr	r3, [r3]
 9716 00b0 1A68     		ldr	r2, [r3]
 9717 00b2 7B68     		ldr	r3, [r7, #4]
 9718 00b4 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccqg4Whx.s 			page 245


 9719 00b6 3349     		ldr	r1, .L482+8
 9720 00b8 0A40     		ands	r2, r1
 9721 00ba 1A60     		str	r2, [r3]
4227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the I2C DMA Abort callback :
4229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 9722              		.loc 1 4230 0
 9723 00bc 7B68     		ldr	r3, [r7, #4]
 9724 00be 9B6B     		ldr	r3, [r3, #56]
 9725 00c0 314A     		ldr	r2, .L482+12
 9726 00c2 5A63     		str	r2, [r3, #52]
4231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 9727              		.loc 1 4233 0
 9728 00c4 7B68     		ldr	r3, [r7, #4]
 9729 00c6 4022     		movs	r2, #64
 9730 00c8 0021     		movs	r1, #0
 9731 00ca 9954     		strb	r1, [r3, r2]
4234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Abort DMA TX */
4236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 9732              		.loc 1 4236 0
 9733 00cc 7B68     		ldr	r3, [r7, #4]
 9734 00ce 9B6B     		ldr	r3, [r3, #56]
 9735 00d0 1800     		movs	r0, r3
 9736 00d2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 9737 00d6 031E     		subs	r3, r0, #0
 9738 00d8 4BD0     		beq	.L481
4237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call Directly XferAbortCallback function in case of error */
4239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 9739              		.loc 1 4239 0
 9740 00da 7B68     		ldr	r3, [r7, #4]
 9741 00dc 9B6B     		ldr	r3, [r3, #56]
 9742 00de 5A6B     		ldr	r2, [r3, #52]
 9743 00e0 7B68     		ldr	r3, [r7, #4]
 9744 00e2 9B6B     		ldr	r3, [r3, #56]
 9745 00e4 1800     		movs	r0, r3
 9746 00e6 9047     		blx	r2
 9747              	.LVL1:
4240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
4243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the I2C DMA Abort callback :
4248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Abort DMA RX */
ARM GAS  /tmp/ccqg4Whx.s 			page 246


4255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
4258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_ABORT)
4262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
4270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
4278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 9748              		.loc 1 4279 0
 9749 00e8 43E0     		b	.L481
 9750              	.L475:
4243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 9751              		.loc 1 4243 0
 9752 00ea 7B68     		ldr	r3, [r7, #4]
 9753 00ec 1B68     		ldr	r3, [r3]
 9754 00ee 1A68     		ldr	r2, [r3]
 9755 00f0 8023     		movs	r3, #128
 9756 00f2 1B02     		lsls	r3, r3, #8
 9757 00f4 1A40     		ands	r2, r3
 9758 00f6 8023     		movs	r3, #128
 9759 00f8 1B02     		lsls	r3, r3, #8
 9760 00fa 9A42     		cmp	r2, r3
 9761 00fc 1ED1     		bne	.L478
4245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9762              		.loc 1 4245 0
 9763 00fe 7B68     		ldr	r3, [r7, #4]
 9764 0100 1B68     		ldr	r3, [r3]
 9765 0102 1A68     		ldr	r2, [r3]
 9766 0104 7B68     		ldr	r3, [r7, #4]
 9767 0106 1B68     		ldr	r3, [r3]
 9768 0108 2049     		ldr	r1, .L482+16
 9769 010a 0A40     		ands	r2, r1
 9770 010c 1A60     		str	r2, [r3]
4249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9771              		.loc 1 4249 0
 9772 010e 7B68     		ldr	r3, [r7, #4]
 9773 0110 DB6B     		ldr	r3, [r3, #60]
 9774 0112 1D4A     		ldr	r2, .L482+12
 9775 0114 5A63     		str	r2, [r3, #52]
4252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
ARM GAS  /tmp/ccqg4Whx.s 			page 247


 9776              		.loc 1 4252 0
 9777 0116 7B68     		ldr	r3, [r7, #4]
 9778 0118 4022     		movs	r2, #64
 9779 011a 0021     		movs	r1, #0
 9780 011c 9954     		strb	r1, [r3, r2]
4255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 9781              		.loc 1 4255 0
 9782 011e 7B68     		ldr	r3, [r7, #4]
 9783 0120 DB6B     		ldr	r3, [r3, #60]
 9784 0122 1800     		movs	r0, r3
 9785 0124 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 9786 0128 031E     		subs	r3, r0, #0
 9787 012a 22D0     		beq	.L481
4258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 9788              		.loc 1 4258 0
 9789 012c 7B68     		ldr	r3, [r7, #4]
 9790 012e DB6B     		ldr	r3, [r3, #60]
 9791 0130 5A6B     		ldr	r2, [r3, #52]
 9792 0132 7B68     		ldr	r3, [r7, #4]
 9793 0134 DB6B     		ldr	r3, [r3, #60]
 9794 0136 1800     		movs	r0, r3
 9795 0138 9047     		blx	r2
 9796              	.LVL2:
 9797              		.loc 1 4279 0
 9798 013a 1AE0     		b	.L481
 9799              	.L478:
4261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 9800              		.loc 1 4261 0
 9801 013c 7B68     		ldr	r3, [r7, #4]
 9802 013e 4122     		movs	r2, #65
 9803 0140 9B5C     		ldrb	r3, [r3, r2]
 9804 0142 DBB2     		uxtb	r3, r3
 9805 0144 602B     		cmp	r3, #96
 9806 0146 0CD1     		bne	.L480
4263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9807              		.loc 1 4263 0
 9808 0148 7B68     		ldr	r3, [r7, #4]
 9809 014a 4122     		movs	r2, #65
 9810 014c 2021     		movs	r1, #32
 9811 014e 9954     		strb	r1, [r3, r2]
4266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9812              		.loc 1 4266 0
 9813 0150 7B68     		ldr	r3, [r7, #4]
 9814 0152 4022     		movs	r2, #64
 9815 0154 0021     		movs	r1, #0
 9816 0156 9954     		strb	r1, [r3, r2]
4269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 9817              		.loc 1 4269 0
 9818 0158 7B68     		ldr	r3, [r7, #4]
 9819 015a 1800     		movs	r0, r3
 9820 015c FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 9821              		.loc 1 4279 0
 9822 0160 07E0     		b	.L481
 9823              	.L480:
4274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9824              		.loc 1 4274 0
 9825 0162 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccqg4Whx.s 			page 248


 9826 0164 4022     		movs	r2, #64
 9827 0166 0021     		movs	r1, #0
 9828 0168 9954     		strb	r1, [r3, r2]
4277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 9829              		.loc 1 4277 0
 9830 016a 7B68     		ldr	r3, [r7, #4]
 9831 016c 1800     		movs	r0, r3
 9832 016e FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 9833              	.L481:
 9834              		.loc 1 4279 0
 9835 0172 C046     		nop
 9836 0174 BD46     		mov	sp, r7
 9837 0176 02B0     		add	sp, sp, #8
 9838              		@ sp needed
 9839 0178 80BD     		pop	{r7, pc}
 9840              	.L483:
 9841 017a C046     		.align	2
 9842              	.L482:
 9843 017c 0000FFFF 		.word	-65536
 9844 0180 00000000 		.word	I2C_Slave_ISR_IT
 9845 0184 FFBFFFFF 		.word	-16385
 9846 0188 00000000 		.word	I2C_DMAAbort
 9847 018c FF7FFFFF 		.word	-32769
 9848              		.cfi_endproc
 9849              	.LFE94:
 9851              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
 9852              		.align	1
 9853              		.syntax unified
 9854              		.code	16
 9855              		.thumb_func
 9856              		.fpu softvfp
 9858              	I2C_Flush_TXDR:
 9859              	.LFB95:
4280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
4283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
4287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 9860              		.loc 1 4287 0
 9861              		.cfi_startproc
 9862              		@ args = 0, pretend = 0, frame = 8
 9863              		@ frame_needed = 1, uses_anonymous_args = 0
 9864 0000 80B5     		push	{r7, lr}
 9865              		.cfi_def_cfa_offset 8
 9866              		.cfi_offset 7, -8
 9867              		.cfi_offset 14, -4
 9868 0002 82B0     		sub	sp, sp, #8
 9869              		.cfi_def_cfa_offset 16
 9870 0004 00AF     		add	r7, sp, #0
 9871              		.cfi_def_cfa_register 7
 9872 0006 7860     		str	r0, [r7, #4]
4288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
4289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
4290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
ARM GAS  /tmp/ccqg4Whx.s 			page 249


 9873              		.loc 1 4290 0
 9874 0008 7B68     		ldr	r3, [r7, #4]
 9875 000a 1B68     		ldr	r3, [r3]
 9876 000c 9B69     		ldr	r3, [r3, #24]
 9877 000e 0222     		movs	r2, #2
 9878 0010 1340     		ands	r3, r2
 9879 0012 022B     		cmp	r3, #2
 9880 0014 03D1     		bne	.L485
4291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Instance->TXDR = 0x00U;
 9881              		.loc 1 4292 0
 9882 0016 7B68     		ldr	r3, [r7, #4]
 9883 0018 1B68     		ldr	r3, [r3]
 9884 001a 0022     		movs	r2, #0
 9885 001c 9A62     		str	r2, [r3, #40]
 9886              	.L485:
4293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Flush TX register if not empty */
4296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 9887              		.loc 1 4296 0
 9888 001e 7B68     		ldr	r3, [r7, #4]
 9889 0020 1B68     		ldr	r3, [r3]
 9890 0022 9B69     		ldr	r3, [r3, #24]
 9891 0024 0122     		movs	r2, #1
 9892 0026 1340     		ands	r3, r2
 9893 0028 012B     		cmp	r3, #1
 9894 002a 07D0     		beq	.L487
4297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 9895              		.loc 1 4298 0
 9896 002c 7B68     		ldr	r3, [r7, #4]
 9897 002e 1B68     		ldr	r3, [r3]
 9898 0030 9A69     		ldr	r2, [r3, #24]
 9899 0032 7B68     		ldr	r3, [r7, #4]
 9900 0034 1B68     		ldr	r3, [r3]
 9901 0036 0121     		movs	r1, #1
 9902 0038 0A43     		orrs	r2, r1
 9903 003a 9A61     		str	r2, [r3, #24]
 9904              	.L487:
4299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 9905              		.loc 1 4300 0
 9906 003c C046     		nop
 9907 003e BD46     		mov	sp, r7
 9908 0040 02B0     		add	sp, sp, #8
 9909              		@ sp needed
 9910 0042 80BD     		pop	{r7, pc}
 9911              		.cfi_endproc
 9912              	.LFE95:
 9914              		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 9915              		.align	1
 9916              		.syntax unified
 9917              		.code	16
 9918              		.thumb_func
 9919              		.fpu softvfp
 9921              	I2C_DMAMasterTransmitCplt:
ARM GAS  /tmp/ccqg4Whx.s 			page 250


 9922              	.LFB96:
4301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
4304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hdma DMA handle
4305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
4308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 9923              		.loc 1 4308 0
 9924              		.cfi_startproc
 9925              		@ args = 0, pretend = 0, frame = 16
 9926              		@ frame_needed = 1, uses_anonymous_args = 0
 9927 0000 80B5     		push	{r7, lr}
 9928              		.cfi_def_cfa_offset 8
 9929              		.cfi_offset 7, -8
 9930              		.cfi_offset 14, -4
 9931 0002 84B0     		sub	sp, sp, #16
 9932              		.cfi_def_cfa_offset 24
 9933 0004 00AF     		add	r7, sp, #0
 9934              		.cfi_def_cfa_register 7
 9935 0006 7860     		str	r0, [r7, #4]
4309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 9936              		.loc 1 4309 0
 9937 0008 7B68     		ldr	r3, [r7, #4]
 9938 000a 5B6A     		ldr	r3, [r3, #36]
 9939 000c FB60     		str	r3, [r7, #12]
4310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable DMA Request */
4312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
 9940              		.loc 1 4312 0
 9941 000e FB68     		ldr	r3, [r7, #12]
 9942 0010 1B68     		ldr	r3, [r3]
 9943 0012 1A68     		ldr	r2, [r3]
 9944 0014 FB68     		ldr	r3, [r7, #12]
 9945 0016 1B68     		ldr	r3, [r3]
 9946 0018 1C49     		ldr	r1, .L494
 9947 001a 0A40     		ands	r2, r1
 9948 001c 1A60     		str	r2, [r3]
4313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
4315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
 9949              		.loc 1 4315 0
 9950 001e FB68     		ldr	r3, [r7, #12]
 9951 0020 5B8D     		ldrh	r3, [r3, #42]
 9952 0022 9BB2     		uxth	r3, r3
 9953 0024 002B     		cmp	r3, #0
 9954 0026 05D1     		bne	.L489
4316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable STOP interrupt */
4318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
 9955              		.loc 1 4318 0
 9956 0028 FB68     		ldr	r3, [r7, #12]
 9957 002a 1221     		movs	r1, #18
 9958 002c 1800     		movs	r0, r3
 9959 002e FFF7FEFF 		bl	I2C_Enable_IRQ
4319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccqg4Whx.s 			page 251


4320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
4321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update Buffer pointer */
4324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
4325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the XferSize to transfer */
4327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
4328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
4330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
4334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable the DMA channel */
4337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, hi2c-
4338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable TC interrupts */
4340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
4341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 9960              		.loc 1 4342 0
 9961 0032 26E0     		b	.L493
 9962              	.L489:
4324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9963              		.loc 1 4324 0
 9964 0034 FB68     		ldr	r3, [r7, #12]
 9965 0036 5B6A     		ldr	r3, [r3, #36]
 9966 0038 FA68     		ldr	r2, [r7, #12]
 9967 003a 128D     		ldrh	r2, [r2, #40]
 9968 003c 9A18     		adds	r2, r3, r2
 9969 003e FB68     		ldr	r3, [r7, #12]
 9970 0040 5A62     		str	r2, [r3, #36]
4327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 9971              		.loc 1 4327 0
 9972 0042 FB68     		ldr	r3, [r7, #12]
 9973 0044 5B8D     		ldrh	r3, [r3, #42]
 9974 0046 9BB2     		uxth	r3, r3
 9975 0048 FF2B     		cmp	r3, #255
 9976 004a 03D9     		bls	.L491
4329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 9977              		.loc 1 4329 0
 9978 004c FB68     		ldr	r3, [r7, #12]
 9979 004e FF22     		movs	r2, #255
 9980 0050 1A85     		strh	r2, [r3, #40]
 9981 0052 04E0     		b	.L492
 9982              	.L491:
4333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 9983              		.loc 1 4333 0
 9984 0054 FB68     		ldr	r3, [r7, #12]
 9985 0056 5B8D     		ldrh	r3, [r3, #42]
 9986 0058 9AB2     		uxth	r2, r3
 9987 005a FB68     		ldr	r3, [r7, #12]
 9988 005c 1A85     		strh	r2, [r3, #40]
 9989              	.L492:
ARM GAS  /tmp/ccqg4Whx.s 			page 252


4337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 9990              		.loc 1 4337 0
 9991 005e FB68     		ldr	r3, [r7, #12]
 9992 0060 986B     		ldr	r0, [r3, #56]
 9993 0062 FB68     		ldr	r3, [r7, #12]
 9994 0064 5B6A     		ldr	r3, [r3, #36]
 9995 0066 1900     		movs	r1, r3
 9996 0068 FB68     		ldr	r3, [r7, #12]
 9997 006a 1B68     		ldr	r3, [r3]
 9998 006c 2833     		adds	r3, r3, #40
 9999 006e 1A00     		movs	r2, r3
 10000 0070 FB68     		ldr	r3, [r7, #12]
 10001 0072 1B8D     		ldrh	r3, [r3, #40]
 10002 0074 FFF7FEFF 		bl	HAL_DMA_Start_IT
4340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 10003              		.loc 1 4340 0
 10004 0078 FB68     		ldr	r3, [r7, #12]
 10005 007a 1221     		movs	r1, #18
 10006 007c 1800     		movs	r0, r3
 10007 007e FFF7FEFF 		bl	I2C_Enable_IRQ
 10008              	.L493:
 10009              		.loc 1 4342 0
 10010 0082 C046     		nop
 10011 0084 BD46     		mov	sp, r7
 10012 0086 04B0     		add	sp, sp, #16
 10013              		@ sp needed
 10014 0088 80BD     		pop	{r7, pc}
 10015              	.L495:
 10016 008a C046     		.align	2
 10017              	.L494:
 10018 008c FFBFFFFF 		.word	-16385
 10019              		.cfi_endproc
 10020              	.LFE96:
 10022              		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
 10023              		.align	1
 10024              		.syntax unified
 10025              		.code	16
 10026              		.thumb_func
 10027              		.fpu softvfp
 10029              	I2C_DMASlaveTransmitCplt:
 10030              	.LFB97:
4343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
4346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hdma DMA handle
4347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
4350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10031              		.loc 1 4350 0
 10032              		.cfi_startproc
 10033              		@ args = 0, pretend = 0, frame = 8
 10034              		@ frame_needed = 1, uses_anonymous_args = 0
 10035 0000 80B5     		push	{r7, lr}
 10036              		.cfi_def_cfa_offset 8
 10037              		.cfi_offset 7, -8
 10038              		.cfi_offset 14, -4
ARM GAS  /tmp/ccqg4Whx.s 			page 253


 10039 0002 82B0     		sub	sp, sp, #8
 10040              		.cfi_def_cfa_offset 16
 10041 0004 00AF     		add	r7, sp, #0
 10042              		.cfi_def_cfa_register 7
 10043 0006 7860     		str	r0, [r7, #4]
4351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hdma);
4353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* No specific action, Master fully manage the generation of STOP condition */
4355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Mean that this generation can arrive at any time, at the end or during DMA process */
4356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* So STOP condition should be manage through Interrupt treatment */
4357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10044              		.loc 1 4357 0
 10045 0008 C046     		nop
 10046 000a BD46     		mov	sp, r7
 10047 000c 02B0     		add	sp, sp, #8
 10048              		@ sp needed
 10049 000e 80BD     		pop	{r7, pc}
 10050              		.cfi_endproc
 10051              	.LFE97:
 10053              		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
 10054              		.align	1
 10055              		.syntax unified
 10056              		.code	16
 10057              		.thumb_func
 10058              		.fpu softvfp
 10060              	I2C_DMAMasterReceiveCplt:
 10061              	.LFB98:
4358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
4361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hdma DMA handle
4362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
4365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10062              		.loc 1 4365 0
 10063              		.cfi_startproc
 10064              		@ args = 0, pretend = 0, frame = 16
 10065              		@ frame_needed = 1, uses_anonymous_args = 0
 10066 0000 80B5     		push	{r7, lr}
 10067              		.cfi_def_cfa_offset 8
 10068              		.cfi_offset 7, -8
 10069              		.cfi_offset 14, -4
 10070 0002 84B0     		sub	sp, sp, #16
 10071              		.cfi_def_cfa_offset 24
 10072 0004 00AF     		add	r7, sp, #0
 10073              		.cfi_def_cfa_register 7
 10074 0006 7860     		str	r0, [r7, #4]
4366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 10075              		.loc 1 4366 0
 10076 0008 7B68     		ldr	r3, [r7, #4]
 10077 000a 5B6A     		ldr	r3, [r3, #36]
 10078 000c FB60     		str	r3, [r7, #12]
4367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable DMA Request */
4369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
ARM GAS  /tmp/ccqg4Whx.s 			page 254


 10079              		.loc 1 4369 0
 10080 000e FB68     		ldr	r3, [r7, #12]
 10081 0010 1B68     		ldr	r3, [r3]
 10082 0012 1A68     		ldr	r2, [r3]
 10083 0014 FB68     		ldr	r3, [r7, #12]
 10084 0016 1B68     		ldr	r3, [r3]
 10085 0018 1C49     		ldr	r1, .L503
 10086 001a 0A40     		ands	r2, r1
 10087 001c 1A60     		str	r2, [r3]
4370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
4372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
 10088              		.loc 1 4372 0
 10089 001e FB68     		ldr	r3, [r7, #12]
 10090 0020 5B8D     		ldrh	r3, [r3, #42]
 10091 0022 9BB2     		uxth	r3, r3
 10092 0024 002B     		cmp	r3, #0
 10093 0026 05D1     		bne	.L498
4373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable STOP interrupt */
4375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
 10094              		.loc 1 4375 0
 10095 0028 FB68     		ldr	r3, [r7, #12]
 10096 002a 1221     		movs	r1, #18
 10097 002c 1800     		movs	r0, r3
 10098 002e FFF7FEFF 		bl	I2C_Enable_IRQ
4376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
4378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Update Buffer pointer */
4381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
4382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Set the XferSize to transfer */
4384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
4385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
4387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     else
4389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
4391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable the DMA channel */
4394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, hi2c-
4395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable TC interrupts */
4397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
4398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10099              		.loc 1 4399 0
 10100 0032 26E0     		b	.L502
 10101              	.L498:
4381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 10102              		.loc 1 4381 0
 10103 0034 FB68     		ldr	r3, [r7, #12]
 10104 0036 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccqg4Whx.s 			page 255


 10105 0038 FA68     		ldr	r2, [r7, #12]
 10106 003a 128D     		ldrh	r2, [r2, #40]
 10107 003c 9A18     		adds	r2, r3, r2
 10108 003e FB68     		ldr	r3, [r7, #12]
 10109 0040 5A62     		str	r2, [r3, #36]
4384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 10110              		.loc 1 4384 0
 10111 0042 FB68     		ldr	r3, [r7, #12]
 10112 0044 5B8D     		ldrh	r3, [r3, #42]
 10113 0046 9BB2     		uxth	r3, r3
 10114 0048 FF2B     		cmp	r3, #255
 10115 004a 03D9     		bls	.L500
4386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 10116              		.loc 1 4386 0
 10117 004c FB68     		ldr	r3, [r7, #12]
 10118 004e FF22     		movs	r2, #255
 10119 0050 1A85     		strh	r2, [r3, #40]
 10120 0052 04E0     		b	.L501
 10121              	.L500:
4390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
 10122              		.loc 1 4390 0
 10123 0054 FB68     		ldr	r3, [r7, #12]
 10124 0056 5B8D     		ldrh	r3, [r3, #42]
 10125 0058 9AB2     		uxth	r2, r3
 10126 005a FB68     		ldr	r3, [r7, #12]
 10127 005c 1A85     		strh	r2, [r3, #40]
 10128              	.L501:
4394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
 10129              		.loc 1 4394 0
 10130 005e FB68     		ldr	r3, [r7, #12]
 10131 0060 D86B     		ldr	r0, [r3, #60]
 10132 0062 FB68     		ldr	r3, [r7, #12]
 10133 0064 1B68     		ldr	r3, [r3]
 10134 0066 2433     		adds	r3, r3, #36
 10135 0068 1900     		movs	r1, r3
 10136 006a FB68     		ldr	r3, [r7, #12]
 10137 006c 5B6A     		ldr	r3, [r3, #36]
 10138 006e 1A00     		movs	r2, r3
 10139 0070 FB68     		ldr	r3, [r7, #12]
 10140 0072 1B8D     		ldrh	r3, [r3, #40]
 10141 0074 FFF7FEFF 		bl	HAL_DMA_Start_IT
4397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 10142              		.loc 1 4397 0
 10143 0078 FB68     		ldr	r3, [r7, #12]
 10144 007a 1221     		movs	r1, #18
 10145 007c 1800     		movs	r0, r3
 10146 007e FFF7FEFF 		bl	I2C_Enable_IRQ
 10147              	.L502:
 10148              		.loc 1 4399 0
 10149 0082 C046     		nop
 10150 0084 BD46     		mov	sp, r7
 10151 0086 04B0     		add	sp, sp, #16
 10152              		@ sp needed
 10153 0088 80BD     		pop	{r7, pc}
 10154              	.L504:
 10155 008a C046     		.align	2
 10156              	.L503:
ARM GAS  /tmp/ccqg4Whx.s 			page 256


 10157 008c FF7FFFFF 		.word	-32769
 10158              		.cfi_endproc
 10159              	.LFE98:
 10161              		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
 10162              		.align	1
 10163              		.syntax unified
 10164              		.code	16
 10165              		.thumb_func
 10166              		.fpu softvfp
 10168              	I2C_DMASlaveReceiveCplt:
 10169              	.LFB99:
4400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
4403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hdma DMA handle
4404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
4407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10170              		.loc 1 4407 0
 10171              		.cfi_startproc
 10172              		@ args = 0, pretend = 0, frame = 8
 10173              		@ frame_needed = 1, uses_anonymous_args = 0
 10174 0000 80B5     		push	{r7, lr}
 10175              		.cfi_def_cfa_offset 8
 10176              		.cfi_offset 7, -8
 10177              		.cfi_offset 14, -4
 10178 0002 82B0     		sub	sp, sp, #8
 10179              		.cfi_def_cfa_offset 16
 10180 0004 00AF     		add	r7, sp, #0
 10181              		.cfi_def_cfa_register 7
 10182 0006 7860     		str	r0, [r7, #4]
4408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   UNUSED(hdma);
4410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* No specific action, Master fully manage the generation of STOP condition */
4412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Mean that this generation can arrive at any time, at the end or during DMA process */
4413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* So STOP condition should be manage through Interrupt treatment */
4414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10183              		.loc 1 4414 0
 10184 0008 C046     		nop
 10185 000a BD46     		mov	sp, r7
 10186 000c 02B0     		add	sp, sp, #8
 10187              		@ sp needed
 10188 000e 80BD     		pop	{r7, pc}
 10189              		.cfi_endproc
 10190              	.LFE99:
 10192              		.section	.text.I2C_DMAError,"ax",%progbits
 10193              		.align	1
 10194              		.syntax unified
 10195              		.code	16
 10196              		.thumb_func
 10197              		.fpu softvfp
 10199              	I2C_DMAError:
 10200              	.LFB100:
4415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
ARM GAS  /tmp/ccqg4Whx.s 			page 257


4417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
4418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param hdma DMA handle
4419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
4422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10201              		.loc 1 4422 0
 10202              		.cfi_startproc
 10203              		@ args = 0, pretend = 0, frame = 16
 10204              		@ frame_needed = 1, uses_anonymous_args = 0
 10205 0000 80B5     		push	{r7, lr}
 10206              		.cfi_def_cfa_offset 8
 10207              		.cfi_offset 7, -8
 10208              		.cfi_offset 14, -4
 10209 0002 84B0     		sub	sp, sp, #16
 10210              		.cfi_def_cfa_offset 24
 10211 0004 00AF     		add	r7, sp, #0
 10212              		.cfi_def_cfa_register 7
 10213 0006 7860     		str	r0, [r7, #4]
4423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 10214              		.loc 1 4423 0
 10215 0008 7B68     		ldr	r3, [r7, #4]
 10216 000a 5B6A     		ldr	r3, [r3, #36]
 10217 000c FB60     		str	r3, [r7, #12]
4424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Acknowledge */
4426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
 10218              		.loc 1 4426 0
 10219 000e FB68     		ldr	r3, [r7, #12]
 10220 0010 1B68     		ldr	r3, [r3]
 10221 0012 5A68     		ldr	r2, [r3, #4]
 10222 0014 FB68     		ldr	r3, [r7, #12]
 10223 0016 1B68     		ldr	r3, [r3]
 10224 0018 8021     		movs	r1, #128
 10225 001a 0902     		lsls	r1, r1, #8
 10226 001c 0A43     		orrs	r2, r1
 10227 001e 5A60     		str	r2, [r3, #4]
4427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
4429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
 10228              		.loc 1 4429 0
 10229 0020 FB68     		ldr	r3, [r7, #12]
 10230 0022 1021     		movs	r1, #16
 10231 0024 1800     		movs	r0, r3
 10232 0026 FFF7FEFF 		bl	I2C_ITError
4430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10233              		.loc 1 4430 0
 10234 002a C046     		nop
 10235 002c BD46     		mov	sp, r7
 10236 002e 04B0     		add	sp, sp, #16
 10237              		@ sp needed
 10238 0030 80BD     		pop	{r7, pc}
 10239              		.cfi_endproc
 10240              	.LFE100:
 10242              		.section	.text.I2C_DMAAbort,"ax",%progbits
 10243              		.align	1
 10244              		.syntax unified
ARM GAS  /tmp/ccqg4Whx.s 			page 258


 10245              		.code	16
 10246              		.thumb_func
 10247              		.fpu softvfp
 10249              	I2C_DMAAbort:
 10250              	.LFB101:
4431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
4434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
4435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param hdma DMA handle.
4436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
4439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10251              		.loc 1 4439 0
 10252              		.cfi_startproc
 10253              		@ args = 0, pretend = 0, frame = 16
 10254              		@ frame_needed = 1, uses_anonymous_args = 0
 10255 0000 80B5     		push	{r7, lr}
 10256              		.cfi_def_cfa_offset 8
 10257              		.cfi_offset 7, -8
 10258              		.cfi_offset 14, -4
 10259 0002 84B0     		sub	sp, sp, #16
 10260              		.cfi_def_cfa_offset 24
 10261 0004 00AF     		add	r7, sp, #0
 10262              		.cfi_def_cfa_register 7
 10263 0006 7860     		str	r0, [r7, #4]
4440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 10264              		.loc 1 4440 0
 10265 0008 7B68     		ldr	r3, [r7, #4]
 10266 000a 5B6A     		ldr	r3, [r3, #36]
 10267 000c FB60     		str	r3, [r7, #12]
4441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable Acknowledge */
4443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
 10268              		.loc 1 4443 0
 10269 000e FB68     		ldr	r3, [r7, #12]
 10270 0010 1B68     		ldr	r3, [r3]
 10271 0012 5A68     		ldr	r2, [r3, #4]
 10272 0014 FB68     		ldr	r3, [r7, #12]
 10273 0016 1B68     		ldr	r3, [r3]
 10274 0018 8021     		movs	r1, #128
 10275 001a 0902     		lsls	r1, r1, #8
 10276 001c 0A43     		orrs	r2, r1
 10277 001e 5A60     		str	r2, [r3, #4]
4444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
4446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->hdmatx->XferAbortCallback = NULL;
 10278              		.loc 1 4446 0
 10279 0020 FB68     		ldr	r3, [r7, #12]
 10280 0022 9B6B     		ldr	r3, [r3, #56]
 10281 0024 0022     		movs	r2, #0
 10282 0026 5A63     		str	r2, [r3, #52]
4447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
 10283              		.loc 1 4447 0
 10284 0028 FB68     		ldr	r3, [r7, #12]
 10285 002a DB6B     		ldr	r3, [r3, #60]
ARM GAS  /tmp/ccqg4Whx.s 			page 259


 10286 002c 0022     		movs	r2, #0
 10287 002e 5A63     		str	r2, [r3, #52]
4448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check if come from abort from user */
4450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
 10288              		.loc 1 4450 0
 10289 0030 FB68     		ldr	r3, [r7, #12]
 10290 0032 4122     		movs	r2, #65
 10291 0034 9B5C     		ldrb	r3, [r3, r2]
 10292 0036 DBB2     		uxtb	r3, r3
 10293 0038 602B     		cmp	r3, #96
 10294 003a 08D1     		bne	.L508
4451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 10295              		.loc 1 4452 0
 10296 003c FB68     		ldr	r3, [r7, #12]
 10297 003e 4122     		movs	r2, #65
 10298 0040 2021     		movs	r1, #32
 10299 0042 9954     		strb	r1, [r3, r2]
4453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
 10300              		.loc 1 4455 0
 10301 0044 FB68     		ldr	r3, [r7, #12]
 10302 0046 1800     		movs	r0, r3
 10303 0048 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
4456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
4461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10304              		.loc 1 4462 0
 10305 004c 03E0     		b	.L510
 10306              	.L508:
4460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
 10307              		.loc 1 4460 0
 10308 004e FB68     		ldr	r3, [r7, #12]
 10309 0050 1800     		movs	r0, r3
 10310 0052 FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 10311              	.L510:
 10312              		.loc 1 4462 0
 10313 0056 C046     		nop
 10314 0058 BD46     		mov	sp, r7
 10315 005a 04B0     		add	sp, sp, #16
 10316              		@ sp needed
 10317 005c 80BD     		pop	{r7, pc}
 10318              		.cfi_endproc
 10319              	.LFE101:
 10321              		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 10322              		.align	1
 10323              		.syntax unified
 10324              		.code	16
 10325              		.thumb_func
 10326              		.fpu softvfp
 10328              	I2C_WaitOnFlagUntilTimeout:
ARM GAS  /tmp/ccqg4Whx.s 			page 260


 10329              	.LFB102:
4463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
4466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
4469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
4470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
4475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10330              		.loc 1 4475 0
 10331              		.cfi_startproc
 10332              		@ args = 4, pretend = 0, frame = 16
 10333              		@ frame_needed = 1, uses_anonymous_args = 0
 10334 0000 80B5     		push	{r7, lr}
 10335              		.cfi_def_cfa_offset 8
 10336              		.cfi_offset 7, -8
 10337              		.cfi_offset 14, -4
 10338 0002 84B0     		sub	sp, sp, #16
 10339              		.cfi_def_cfa_offset 24
 10340 0004 00AF     		add	r7, sp, #0
 10341              		.cfi_def_cfa_register 7
 10342 0006 F860     		str	r0, [r7, #12]
 10343 0008 B960     		str	r1, [r7, #8]
 10344 000a 3B60     		str	r3, [r7]
 10345 000c FB1D     		adds	r3, r7, #7
 10346 000e 1A70     		strb	r2, [r3]
4476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 10347              		.loc 1 4476 0
 10348 0010 1BE0     		b	.L512
 10349              	.L515:
4477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check for the Timeout */
4479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
 10350              		.loc 1 4479 0
 10351 0012 3B68     		ldr	r3, [r7]
 10352 0014 0133     		adds	r3, r3, #1
 10353 0016 18D0     		beq	.L512
4480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 10354              		.loc 1 4481 0
 10355 0018 3B68     		ldr	r3, [r7]
 10356 001a 002B     		cmp	r3, #0
 10357 001c 07D0     		beq	.L513
 10358              		.loc 1 4481 0 is_stmt 0 discriminator 1
 10359 001e FFF7FEFF 		bl	HAL_GetTick
 10360 0022 0200     		movs	r2, r0
 10361 0024 BB69     		ldr	r3, [r7, #24]
 10362 0026 D31A     		subs	r3, r2, r3
 10363 0028 3A68     		ldr	r2, [r7]
 10364 002a 9A42     		cmp	r2, r3
 10365 002c 0DD2     		bcs	.L512
 10366              	.L513:
ARM GAS  /tmp/ccqg4Whx.s 			page 261


4482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 10367              		.loc 1 4483 0 is_stmt 1
 10368 002e FB68     		ldr	r3, [r7, #12]
 10369 0030 4122     		movs	r2, #65
 10370 0032 2021     		movs	r1, #32
 10371 0034 9954     		strb	r1, [r3, r2]
4484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 10372              		.loc 1 4484 0
 10373 0036 FB68     		ldr	r3, [r7, #12]
 10374 0038 4222     		movs	r2, #66
 10375 003a 0021     		movs	r1, #0
 10376 003c 9954     		strb	r1, [r3, r2]
4485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
4487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 10377              		.loc 1 4487 0
 10378 003e FB68     		ldr	r3, [r7, #12]
 10379 0040 4022     		movs	r2, #64
 10380 0042 0021     		movs	r1, #0
 10381 0044 9954     		strb	r1, [r3, r2]
4488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 10382              		.loc 1 4488 0
 10383 0046 0323     		movs	r3, #3
 10384 0048 0FE0     		b	.L514
 10385              	.L512:
4476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 10386              		.loc 1 4476 0
 10387 004a FB68     		ldr	r3, [r7, #12]
 10388 004c 1B68     		ldr	r3, [r3]
 10389 004e 9B69     		ldr	r3, [r3, #24]
 10390 0050 BA68     		ldr	r2, [r7, #8]
 10391 0052 1340     		ands	r3, r2
 10392 0054 BA68     		ldr	r2, [r7, #8]
 10393 0056 D31A     		subs	r3, r2, r3
 10394 0058 5A42     		rsbs	r2, r3, #0
 10395 005a 5341     		adcs	r3, r3, r2
 10396 005c DBB2     		uxtb	r3, r3
 10397 005e 1A00     		movs	r2, r3
 10398 0060 FB1D     		adds	r3, r7, #7
 10399 0062 1B78     		ldrb	r3, [r3]
 10400 0064 9A42     		cmp	r2, r3
 10401 0066 D4D0     		beq	.L515
4489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 10402              		.loc 1 4492 0
 10403 0068 0023     		movs	r3, #0
 10404              	.L514:
4493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10405              		.loc 1 4493 0
 10406 006a 1800     		movs	r0, r3
 10407 006c BD46     		mov	sp, r7
 10408 006e 04B0     		add	sp, sp, #16
 10409              		@ sp needed
 10410 0070 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccqg4Whx.s 			page 262


 10411              		.cfi_endproc
 10412              	.LFE102:
 10414              		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 10415              		.align	1
 10416              		.syntax unified
 10417              		.code	16
 10418              		.thumb_func
 10419              		.fpu softvfp
 10421              	I2C_WaitOnTXISFlagUntilTimeout:
 10422              	.LFB103:
4494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
4497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10423              		.loc 1 4504 0
 10424              		.cfi_startproc
 10425              		@ args = 0, pretend = 0, frame = 16
 10426              		@ frame_needed = 1, uses_anonymous_args = 0
 10427 0000 80B5     		push	{r7, lr}
 10428              		.cfi_def_cfa_offset 8
 10429              		.cfi_offset 7, -8
 10430              		.cfi_offset 14, -4
 10431 0002 84B0     		sub	sp, sp, #16
 10432              		.cfi_def_cfa_offset 24
 10433 0004 00AF     		add	r7, sp, #0
 10434              		.cfi_def_cfa_register 7
 10435 0006 F860     		str	r0, [r7, #12]
 10436 0008 B960     		str	r1, [r7, #8]
 10437 000a 7A60     		str	r2, [r7, #4]
4505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 10438              		.loc 1 4505 0
 10439 000c 2BE0     		b	.L517
 10440              	.L521:
4506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check if a NACK is detected */
4508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 10441              		.loc 1 4508 0
 10442 000e 7A68     		ldr	r2, [r7, #4]
 10443 0010 B968     		ldr	r1, [r7, #8]
 10444 0012 FB68     		ldr	r3, [r7, #12]
 10445 0014 1800     		movs	r0, r3
 10446 0016 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 10447 001a 031E     		subs	r3, r0, #0
 10448 001c 01D0     		beq	.L518
4509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 10449              		.loc 1 4510 0
 10450 001e 0123     		movs	r3, #1
 10451 0020 29E0     		b	.L519
 10452              	.L518:
ARM GAS  /tmp/ccqg4Whx.s 			page 263


4511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check for the Timeout */
4514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
 10453              		.loc 1 4514 0
 10454 0022 BB68     		ldr	r3, [r7, #8]
 10455 0024 0133     		adds	r3, r3, #1
 10456 0026 1ED0     		beq	.L517
4515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 10457              		.loc 1 4516 0
 10458 0028 BB68     		ldr	r3, [r7, #8]
 10459 002a 002B     		cmp	r3, #0
 10460 002c 07D0     		beq	.L520
 10461              		.loc 1 4516 0 is_stmt 0 discriminator 1
 10462 002e FFF7FEFF 		bl	HAL_GetTick
 10463 0032 0200     		movs	r2, r0
 10464 0034 7B68     		ldr	r3, [r7, #4]
 10465 0036 D31A     		subs	r3, r2, r3
 10466 0038 BA68     		ldr	r2, [r7, #8]
 10467 003a 9A42     		cmp	r2, r3
 10468 003c 13D2     		bcs	.L517
 10469              	.L520:
4517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 10470              		.loc 1 4518 0 is_stmt 1
 10471 003e FB68     		ldr	r3, [r7, #12]
 10472 0040 5B6C     		ldr	r3, [r3, #68]
 10473 0042 2022     		movs	r2, #32
 10474 0044 1A43     		orrs	r2, r3
 10475 0046 FB68     		ldr	r3, [r7, #12]
 10476 0048 5A64     		str	r2, [r3, #68]
4519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 10477              		.loc 1 4519 0
 10478 004a FB68     		ldr	r3, [r7, #12]
 10479 004c 4122     		movs	r2, #65
 10480 004e 2021     		movs	r1, #32
 10481 0050 9954     		strb	r1, [r3, r2]
4520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 10482              		.loc 1 4520 0
 10483 0052 FB68     		ldr	r3, [r7, #12]
 10484 0054 4222     		movs	r2, #66
 10485 0056 0021     		movs	r1, #0
 10486 0058 9954     		strb	r1, [r3, r2]
4521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         /* Process Unlocked */
4523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 10487              		.loc 1 4523 0
 10488 005a FB68     		ldr	r3, [r7, #12]
 10489 005c 4022     		movs	r2, #64
 10490 005e 0021     		movs	r1, #0
 10491 0060 9954     		strb	r1, [r3, r2]
4524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 10492              		.loc 1 4525 0
 10493 0062 0323     		movs	r3, #3
 10494 0064 07E0     		b	.L519
ARM GAS  /tmp/ccqg4Whx.s 			page 264


 10495              	.L517:
4505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 10496              		.loc 1 4505 0
 10497 0066 FB68     		ldr	r3, [r7, #12]
 10498 0068 1B68     		ldr	r3, [r3]
 10499 006a 9B69     		ldr	r3, [r3, #24]
 10500 006c 0222     		movs	r2, #2
 10501 006e 1340     		ands	r3, r2
 10502 0070 022B     		cmp	r3, #2
 10503 0072 CCD1     		bne	.L521
4526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 10504              		.loc 1 4529 0
 10505 0074 0023     		movs	r3, #0
 10506              	.L519:
4530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10507              		.loc 1 4530 0
 10508 0076 1800     		movs	r0, r3
 10509 0078 BD46     		mov	sp, r7
 10510 007a 04B0     		add	sp, sp, #16
 10511              		@ sp needed
 10512 007c 80BD     		pop	{r7, pc}
 10513              		.cfi_endproc
 10514              	.LFE103:
 10516              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 10517              		.align	1
 10518              		.syntax unified
 10519              		.code	16
 10520              		.thumb_func
 10521              		.fpu softvfp
 10523              	I2C_WaitOnSTOPFlagUntilTimeout:
 10524              	.LFB104:
4531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4533:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
4534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4539:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4541:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10525              		.loc 1 4541 0
 10526              		.cfi_startproc
 10527              		@ args = 0, pretend = 0, frame = 16
 10528              		@ frame_needed = 1, uses_anonymous_args = 0
 10529 0000 80B5     		push	{r7, lr}
 10530              		.cfi_def_cfa_offset 8
 10531              		.cfi_offset 7, -8
 10532              		.cfi_offset 14, -4
 10533 0002 84B0     		sub	sp, sp, #16
 10534              		.cfi_def_cfa_offset 24
 10535 0004 00AF     		add	r7, sp, #0
 10536              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccqg4Whx.s 			page 265


 10537 0006 F860     		str	r0, [r7, #12]
 10538 0008 B960     		str	r1, [r7, #8]
 10539 000a 7A60     		str	r2, [r7, #4]
4542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 10540              		.loc 1 4542 0
 10541 000c 28E0     		b	.L523
 10542              	.L527:
4543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4544:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check if a NACK is detected */
4545:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 10543              		.loc 1 4545 0
 10544 000e 7A68     		ldr	r2, [r7, #4]
 10545 0010 B968     		ldr	r1, [r7, #8]
 10546 0012 FB68     		ldr	r3, [r7, #12]
 10547 0014 1800     		movs	r0, r3
 10548 0016 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 10549 001a 031E     		subs	r3, r0, #0
 10550 001c 01D0     		beq	.L524
4546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 10551              		.loc 1 4547 0
 10552 001e 0123     		movs	r3, #1
 10553 0020 26E0     		b	.L525
 10554              	.L524:
4548:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check for the Timeout */
4551:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 10555              		.loc 1 4551 0
 10556 0022 BB68     		ldr	r3, [r7, #8]
 10557 0024 002B     		cmp	r3, #0
 10558 0026 07D0     		beq	.L526
 10559              		.loc 1 4551 0 is_stmt 0 discriminator 1
 10560 0028 FFF7FEFF 		bl	HAL_GetTick
 10561 002c 0200     		movs	r2, r0
 10562 002e 7B68     		ldr	r3, [r7, #4]
 10563 0030 D31A     		subs	r3, r2, r3
 10564 0032 BA68     		ldr	r2, [r7, #8]
 10565 0034 9A42     		cmp	r2, r3
 10566 0036 13D2     		bcs	.L523
 10567              	.L526:
4552:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 10568              		.loc 1 4553 0 is_stmt 1
 10569 0038 FB68     		ldr	r3, [r7, #12]
 10570 003a 5B6C     		ldr	r3, [r3, #68]
 10571 003c 2022     		movs	r2, #32
 10572 003e 1A43     		orrs	r2, r3
 10573 0040 FB68     		ldr	r3, [r7, #12]
 10574 0042 5A64     		str	r2, [r3, #68]
4554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 10575              		.loc 1 4554 0
 10576 0044 FB68     		ldr	r3, [r7, #12]
 10577 0046 4122     		movs	r2, #65
 10578 0048 2021     		movs	r1, #32
 10579 004a 9954     		strb	r1, [r3, r2]
4555:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
ARM GAS  /tmp/ccqg4Whx.s 			page 266


 10580              		.loc 1 4555 0
 10581 004c FB68     		ldr	r3, [r7, #12]
 10582 004e 4222     		movs	r2, #66
 10583 0050 0021     		movs	r1, #0
 10584 0052 9954     		strb	r1, [r3, r2]
4556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4557:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
4558:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 10585              		.loc 1 4558 0
 10586 0054 FB68     		ldr	r3, [r7, #12]
 10587 0056 4022     		movs	r2, #64
 10588 0058 0021     		movs	r1, #0
 10589 005a 9954     		strb	r1, [r3, r2]
4559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4560:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 10590              		.loc 1 4560 0
 10591 005c 0323     		movs	r3, #3
 10592 005e 07E0     		b	.L525
 10593              	.L523:
4542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 10594              		.loc 1 4542 0
 10595 0060 FB68     		ldr	r3, [r7, #12]
 10596 0062 1B68     		ldr	r3, [r3]
 10597 0064 9B69     		ldr	r3, [r3, #24]
 10598 0066 2022     		movs	r2, #32
 10599 0068 1340     		ands	r3, r2
 10600 006a 202B     		cmp	r3, #32
 10601 006c CFD1     		bne	.L527
4561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4562:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 10602              		.loc 1 4563 0
 10603 006e 0023     		movs	r3, #0
 10604              	.L525:
4564:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10605              		.loc 1 4564 0
 10606 0070 1800     		movs	r0, r3
 10607 0072 BD46     		mov	sp, r7
 10608 0074 04B0     		add	sp, sp, #16
 10609              		@ sp needed
 10610 0076 80BD     		pop	{r7, pc}
 10611              		.cfi_endproc
 10612              	.LFE104:
 10614              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 10615              		.align	1
 10616              		.syntax unified
 10617              		.code	16
 10618              		.thumb_func
 10619              		.fpu softvfp
 10621              	I2C_WaitOnRXNEFlagUntilTimeout:
 10622              	.LFB105:
4565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
4568:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4569:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
ARM GAS  /tmp/ccqg4Whx.s 			page 267


4571:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4572:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4573:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4574:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10623              		.loc 1 4575 0
 10624              		.cfi_startproc
 10625              		@ args = 0, pretend = 0, frame = 16
 10626              		@ frame_needed = 1, uses_anonymous_args = 0
 10627 0000 80B5     		push	{r7, lr}
 10628              		.cfi_def_cfa_offset 8
 10629              		.cfi_offset 7, -8
 10630              		.cfi_offset 14, -4
 10631 0002 84B0     		sub	sp, sp, #16
 10632              		.cfi_def_cfa_offset 24
 10633 0004 00AF     		add	r7, sp, #0
 10634              		.cfi_def_cfa_register 7
 10635 0006 F860     		str	r0, [r7, #12]
 10636 0008 B960     		str	r1, [r7, #8]
 10637 000a 7A60     		str	r2, [r7, #4]
4576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 10638              		.loc 1 4576 0
 10639 000c 48E0     		b	.L529
 10640              	.L534:
4577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check if a NACK is detected */
4579:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 10641              		.loc 1 4579 0
 10642 000e 7A68     		ldr	r2, [r7, #4]
 10643 0010 B968     		ldr	r1, [r7, #8]
 10644 0012 FB68     		ldr	r3, [r7, #12]
 10645 0014 1800     		movs	r0, r3
 10646 0016 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 10647 001a 031E     		subs	r3, r0, #0
 10648 001c 01D0     		beq	.L530
4580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4581:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 10649              		.loc 1 4581 0
 10650 001e 0123     		movs	r3, #1
 10651 0020 46E0     		b	.L531
 10652              	.L530:
4582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4584:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check if a STOPF is detected */
4585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 10653              		.loc 1 4585 0
 10654 0022 FB68     		ldr	r3, [r7, #12]
 10655 0024 1B68     		ldr	r3, [r3]
 10656 0026 9B69     		ldr	r3, [r3, #24]
 10657 0028 2022     		movs	r2, #32
 10658 002a 1340     		ands	r3, r2
 10659 002c 202B     		cmp	r3, #32
 10660 002e 1CD1     		bne	.L532
4586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear STOP Flag */
4588:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 10661              		.loc 1 4588 0
ARM GAS  /tmp/ccqg4Whx.s 			page 268


 10662 0030 FB68     		ldr	r3, [r7, #12]
 10663 0032 1B68     		ldr	r3, [r3]
 10664 0034 2022     		movs	r2, #32
 10665 0036 DA61     		str	r2, [r3, #28]
4589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Clear Configuration Register 2 */
4591:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       I2C_RESET_CR2(hi2c);
 10666              		.loc 1 4591 0
 10667 0038 FB68     		ldr	r3, [r7, #12]
 10668 003a 1B68     		ldr	r3, [r3]
 10669 003c 5A68     		ldr	r2, [r3, #4]
 10670 003e FB68     		ldr	r3, [r7, #12]
 10671 0040 1B68     		ldr	r3, [r3]
 10672 0042 1D49     		ldr	r1, .L535
 10673 0044 0A40     		ands	r2, r1
 10674 0046 5A60     		str	r2, [r3, #4]
4592:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4593:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 10675              		.loc 1 4593 0
 10676 0048 FB68     		ldr	r3, [r7, #12]
 10677 004a 0022     		movs	r2, #0
 10678 004c 5A64     		str	r2, [r3, #68]
4594:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 10679              		.loc 1 4594 0
 10680 004e FB68     		ldr	r3, [r7, #12]
 10681 0050 4122     		movs	r2, #65
 10682 0052 2021     		movs	r1, #32
 10683 0054 9954     		strb	r1, [r3, r2]
4595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 10684              		.loc 1 4595 0
 10685 0056 FB68     		ldr	r3, [r7, #12]
 10686 0058 4222     		movs	r2, #66
 10687 005a 0021     		movs	r1, #0
 10688 005c 9954     		strb	r1, [r3, r2]
4596:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
4598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 10689              		.loc 1 4598 0
 10690 005e FB68     		ldr	r3, [r7, #12]
 10691 0060 4022     		movs	r2, #64
 10692 0062 0021     		movs	r1, #0
 10693 0064 9954     		strb	r1, [r3, r2]
4599:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4600:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_ERROR;
 10694              		.loc 1 4600 0
 10695 0066 0123     		movs	r3, #1
 10696 0068 22E0     		b	.L531
 10697              	.L532:
4601:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4602:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Check for the Timeout */
4604:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 10698              		.loc 1 4604 0
 10699 006a BB68     		ldr	r3, [r7, #8]
 10700 006c 002B     		cmp	r3, #0
 10701 006e 07D0     		beq	.L533
 10702              		.loc 1 4604 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccqg4Whx.s 			page 269


 10703 0070 FFF7FEFF 		bl	HAL_GetTick
 10704 0074 0200     		movs	r2, r0
 10705 0076 7B68     		ldr	r3, [r7, #4]
 10706 0078 D31A     		subs	r3, r2, r3
 10707 007a BA68     		ldr	r2, [r7, #8]
 10708 007c 9A42     		cmp	r2, r3
 10709 007e 0FD2     		bcs	.L529
 10710              	.L533:
4605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4606:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 10711              		.loc 1 4606 0 is_stmt 1
 10712 0080 FB68     		ldr	r3, [r7, #12]
 10713 0082 5B6C     		ldr	r3, [r3, #68]
 10714 0084 2022     		movs	r2, #32
 10715 0086 1A43     		orrs	r2, r3
 10716 0088 FB68     		ldr	r3, [r7, #12]
 10717 008a 5A64     		str	r2, [r3, #68]
4607:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 10718              		.loc 1 4607 0
 10719 008c FB68     		ldr	r3, [r7, #12]
 10720 008e 4122     		movs	r2, #65
 10721 0090 2021     		movs	r1, #32
 10722 0092 9954     		strb	r1, [r3, r2]
4608:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Process Unlocked */
4610:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 10723              		.loc 1 4610 0
 10724 0094 FB68     		ldr	r3, [r7, #12]
 10725 0096 4022     		movs	r2, #64
 10726 0098 0021     		movs	r1, #0
 10727 009a 9954     		strb	r1, [r3, r2]
4611:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 10728              		.loc 1 4612 0
 10729 009c 0323     		movs	r3, #3
 10730 009e 07E0     		b	.L531
 10731              	.L529:
4576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
 10732              		.loc 1 4576 0
 10733 00a0 FB68     		ldr	r3, [r7, #12]
 10734 00a2 1B68     		ldr	r3, [r3]
 10735 00a4 9B69     		ldr	r3, [r3, #24]
 10736 00a6 0422     		movs	r2, #4
 10737 00a8 1340     		ands	r3, r2
 10738 00aa 042B     		cmp	r3, #4
 10739 00ac AFD1     		bne	.L534
4613:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4615:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 10740              		.loc 1 4615 0
 10741 00ae 0023     		movs	r3, #0
 10742              	.L531:
4616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10743              		.loc 1 4616 0
 10744 00b0 1800     		movs	r0, r3
 10745 00b2 BD46     		mov	sp, r7
 10746 00b4 04B0     		add	sp, sp, #16
ARM GAS  /tmp/ccqg4Whx.s 			page 270


 10747              		@ sp needed
 10748 00b6 80BD     		pop	{r7, pc}
 10749              	.L536:
 10750              		.align	2
 10751              	.L535:
 10752 00b8 00E800FE 		.word	-33495040
 10753              		.cfi_endproc
 10754              	.LFE105:
 10756              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 10757              		.align	1
 10758              		.syntax unified
 10759              		.code	16
 10760              		.thumb_func
 10761              		.fpu softvfp
 10763              	I2C_IsAcknowledgeFailed:
 10764              	.LFB106:
4617:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4618:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
4620:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4622:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4623:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4625:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4626:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
4627:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10765              		.loc 1 4627 0
 10766              		.cfi_startproc
 10767              		@ args = 0, pretend = 0, frame = 16
 10768              		@ frame_needed = 1, uses_anonymous_args = 0
 10769 0000 80B5     		push	{r7, lr}
 10770              		.cfi_def_cfa_offset 8
 10771              		.cfi_offset 7, -8
 10772              		.cfi_offset 14, -4
 10773 0002 84B0     		sub	sp, sp, #16
 10774              		.cfi_def_cfa_offset 24
 10775 0004 00AF     		add	r7, sp, #0
 10776              		.cfi_def_cfa_register 7
 10777 0006 F860     		str	r0, [r7, #12]
 10778 0008 B960     		str	r1, [r7, #8]
 10779 000a 7A60     		str	r2, [r7, #4]
4628:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 10780              		.loc 1 4628 0
 10781 000c FB68     		ldr	r3, [r7, #12]
 10782 000e 1B68     		ldr	r3, [r3]
 10783 0010 9B69     		ldr	r3, [r3, #24]
 10784 0012 1022     		movs	r2, #16
 10785 0014 1340     		ands	r3, r2
 10786 0016 102B     		cmp	r3, #16
 10787 0018 48D1     		bne	.L538
4629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4630:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
4631:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
4632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 10788              		.loc 1 4632 0
 10789 001a 1BE0     		b	.L539
ARM GAS  /tmp/ccqg4Whx.s 			page 271


 10790              	.L542:
4633:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Check for the Timeout */
4635:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       if (Timeout != HAL_MAX_DELAY)
 10791              		.loc 1 4635 0
 10792 001c BB68     		ldr	r3, [r7, #8]
 10793 001e 0133     		adds	r3, r3, #1
 10794 0020 18D0     		beq	.L539
4636:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       {
4637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 10795              		.loc 1 4637 0
 10796 0022 BB68     		ldr	r3, [r7, #8]
 10797 0024 002B     		cmp	r3, #0
 10798 0026 07D0     		beq	.L540
 10799              		.loc 1 4637 0 is_stmt 0 discriminator 1
 10800 0028 FFF7FEFF 		bl	HAL_GetTick
 10801 002c 0200     		movs	r2, r0
 10802 002e 7B68     		ldr	r3, [r7, #4]
 10803 0030 D31A     		subs	r3, r2, r3
 10804 0032 BA68     		ldr	r2, [r7, #8]
 10805 0034 9A42     		cmp	r2, r3
 10806 0036 0DD2     		bcs	.L539
 10807              	.L540:
4638:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         {
4639:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 10808              		.loc 1 4639 0 is_stmt 1
 10809 0038 FB68     		ldr	r3, [r7, #12]
 10810 003a 4122     		movs	r2, #65
 10811 003c 2021     		movs	r1, #32
 10812 003e 9954     		strb	r1, [r3, r2]
4640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 10813              		.loc 1 4640 0
 10814 0040 FB68     		ldr	r3, [r7, #12]
 10815 0042 4222     		movs	r2, #66
 10816 0044 0021     		movs	r1, #0
 10817 0046 9954     		strb	r1, [r3, r2]
4641:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           /* Process Unlocked */
4643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
 10818              		.loc 1 4643 0
 10819 0048 FB68     		ldr	r3, [r7, #12]
 10820 004a 4022     		movs	r2, #64
 10821 004c 0021     		movs	r1, #0
 10822 004e 9954     		strb	r1, [r3, r2]
4644:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 10823              		.loc 1 4644 0
 10824 0050 0323     		movs	r3, #3
 10825 0052 2CE0     		b	.L541
 10826              	.L539:
4632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 10827              		.loc 1 4632 0
 10828 0054 FB68     		ldr	r3, [r7, #12]
 10829 0056 1B68     		ldr	r3, [r3]
 10830 0058 9B69     		ldr	r3, [r3, #24]
 10831 005a 2022     		movs	r2, #32
 10832 005c 1340     		ands	r3, r2
 10833 005e 202B     		cmp	r3, #32
ARM GAS  /tmp/ccqg4Whx.s 			page 272


 10834 0060 DCD1     		bne	.L542
4645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****         }
4646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       }
4647:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4649:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear NACKF Flag */
4650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 10835              		.loc 1 4650 0
 10836 0062 FB68     		ldr	r3, [r7, #12]
 10837 0064 1B68     		ldr	r3, [r3]
 10838 0066 1022     		movs	r2, #16
 10839 0068 DA61     		str	r2, [r3, #28]
4651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear STOP Flag */
4653:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 10840              		.loc 1 4653 0
 10841 006a FB68     		ldr	r3, [r7, #12]
 10842 006c 1B68     		ldr	r3, [r3]
 10843 006e 2022     		movs	r2, #32
 10844 0070 DA61     		str	r2, [r3, #28]
4654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4655:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Flush TX register */
4656:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
 10845              		.loc 1 4656 0
 10846 0072 FB68     		ldr	r3, [r7, #12]
 10847 0074 1800     		movs	r0, r3
 10848 0076 FFF7FEFF 		bl	I2C_Flush_TXDR
4657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4658:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
4659:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 10849              		.loc 1 4659 0
 10850 007a FB68     		ldr	r3, [r7, #12]
 10851 007c 1B68     		ldr	r3, [r3]
 10852 007e 5A68     		ldr	r2, [r3, #4]
 10853 0080 FB68     		ldr	r3, [r7, #12]
 10854 0082 1B68     		ldr	r3, [r3]
 10855 0084 0C49     		ldr	r1, .L543
 10856 0086 0A40     		ands	r2, r1
 10857 0088 5A60     		str	r2, [r3, #4]
4660:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 10858              		.loc 1 4661 0
 10859 008a FB68     		ldr	r3, [r7, #12]
 10860 008c 0422     		movs	r2, #4
 10861 008e 5A64     		str	r2, [r3, #68]
4662:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 10862              		.loc 1 4662 0
 10863 0090 FB68     		ldr	r3, [r7, #12]
 10864 0092 4122     		movs	r2, #65
 10865 0094 2021     		movs	r1, #32
 10866 0096 9954     		strb	r1, [r3, r2]
4663:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 10867              		.loc 1 4663 0
 10868 0098 FB68     		ldr	r3, [r7, #12]
 10869 009a 4222     		movs	r2, #66
 10870 009c 0021     		movs	r1, #0
 10871 009e 9954     		strb	r1, [r3, r2]
ARM GAS  /tmp/ccqg4Whx.s 			page 273


4664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4665:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Process Unlocked */
4666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 10872              		.loc 1 4666 0
 10873 00a0 FB68     		ldr	r3, [r7, #12]
 10874 00a2 4022     		movs	r2, #64
 10875 00a4 0021     		movs	r1, #0
 10876 00a6 9954     		strb	r1, [r3, r2]
4667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     return HAL_ERROR;
 10877              		.loc 1 4668 0
 10878 00a8 0123     		movs	r3, #1
 10879 00aa 00E0     		b	.L541
 10880              	.L538:
4669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4670:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 10881              		.loc 1 4670 0
 10882 00ac 0023     		movs	r3, #0
 10883              	.L541:
4671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10884              		.loc 1 4671 0
 10885 00ae 1800     		movs	r0, r3
 10886 00b0 BD46     		mov	sp, r7
 10887 00b2 04B0     		add	sp, sp, #16
 10888              		@ sp needed
 10889 00b4 80BD     		pop	{r7, pc}
 10890              	.L544:
 10891 00b6 C046     		.align	2
 10892              	.L543:
 10893 00b8 00E800FE 		.word	-33495040
 10894              		.cfi_endproc
 10895              	.LFE106:
 10897              		.section	.text.I2C_TransferConfig,"ax",%progbits
 10898              		.align	1
 10899              		.syntax unified
 10900              		.code	16
 10901              		.thumb_func
 10902              		.fpu softvfp
 10904              	I2C_TransferConfig:
 10905              	.LFB107:
4672:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4674:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
4675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4676:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
4677:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
4678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
4679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
4680:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *   This parameter can be one of the following values:
4681:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
4682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
4683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
4684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
4685:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *   This parameter can be one of the following values:
4686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
4687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
4688:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
ARM GAS  /tmp/ccqg4Whx.s 			page 274


4689:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
4690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval None
4691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4692:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c,  uint16_t DevAddress, uint8_t Size, uint32_
4693:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10906              		.loc 1 4693 0
 10907              		.cfi_startproc
 10908              		@ args = 4, pretend = 0, frame = 24
 10909              		@ frame_needed = 1, uses_anonymous_args = 0
 10910 0000 90B5     		push	{r4, r7, lr}
 10911              		.cfi_def_cfa_offset 12
 10912              		.cfi_offset 4, -12
 10913              		.cfi_offset 7, -8
 10914              		.cfi_offset 14, -4
 10915 0002 87B0     		sub	sp, sp, #28
 10916              		.cfi_def_cfa_offset 40
 10917 0004 00AF     		add	r7, sp, #0
 10918              		.cfi_def_cfa_register 7
 10919 0006 F860     		str	r0, [r7, #12]
 10920 0008 0800     		movs	r0, r1
 10921 000a 1100     		movs	r1, r2
 10922 000c 7B60     		str	r3, [r7, #4]
 10923 000e 0A24     		movs	r4, #10
 10924 0010 3B19     		adds	r3, r7, r4
 10925 0012 021C     		adds	r2, r0, #0
 10926 0014 1A80     		strh	r2, [r3]
 10927 0016 0920     		movs	r0, #9
 10928 0018 3B18     		adds	r3, r7, r0
 10929 001a 0A1C     		adds	r2, r1, #0
 10930 001c 1A70     		strb	r2, [r3]
4694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpreg = 0U;
 10931              		.loc 1 4694 0
 10932 001e 0023     		movs	r3, #0
 10933 0020 7B61     		str	r3, [r7, #20]
4695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4696:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Check the parameters */
4697:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
4698:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
4699:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
4700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4701:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Get the CR2 register value */
4702:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   tmpreg = hi2c->Instance->CR2;
 10934              		.loc 1 4702 0
 10935 0022 FB68     		ldr	r3, [r7, #12]
 10936 0024 1B68     		ldr	r3, [r3]
 10937 0026 5B68     		ldr	r3, [r3, #4]
 10938 0028 7B61     		str	r3, [r7, #20]
4703:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* clear tmpreg specific bits */
4705:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   tmpreg &= (uint32_t)~((uint32_t)(I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND
 10939              		.loc 1 4705 0
 10940 002a 7B69     		ldr	r3, [r7, #20]
 10941 002c 0E4A     		ldr	r2, .L546
 10942 002e 1340     		ands	r3, r2
 10943 0030 7B61     		str	r3, [r7, #20]
4706:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* update tmpreg */
ARM GAS  /tmp/ccqg4Whx.s 			page 275


4708:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   tmpreg |= (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << 16) & I2C_CR2_NB
 10944              		.loc 1 4708 0
 10945 0032 3B19     		adds	r3, r7, r4
 10946 0034 1B88     		ldrh	r3, [r3]
 10947 0036 9B05     		lsls	r3, r3, #22
 10948 0038 9A0D     		lsrs	r2, r3, #22
 10949 003a 3B18     		adds	r3, r7, r0
 10950 003c 1B78     		ldrb	r3, [r3]
 10951 003e 1904     		lsls	r1, r3, #16
 10952 0040 FF23     		movs	r3, #255
 10953 0042 1B04     		lsls	r3, r3, #16
 10954 0044 0B40     		ands	r3, r1
 10955 0046 1A43     		orrs	r2, r3
 10956 0048 7B68     		ldr	r3, [r7, #4]
 10957 004a 1A43     		orrs	r2, r3
 10958 004c BB6A     		ldr	r3, [r7, #40]
 10959 004e 1343     		orrs	r3, r2
 10960 0050 7A69     		ldr	r2, [r7, #20]
 10961 0052 1343     		orrs	r3, r2
 10962 0054 7B61     		str	r3, [r7, #20]
4709:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****                        (uint32_t)Mode | (uint32_t)Request);
4710:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4711:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* update CR2 register */
4712:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   hi2c->Instance->CR2 = tmpreg;
 10963              		.loc 1 4712 0
 10964 0056 FB68     		ldr	r3, [r7, #12]
 10965 0058 1B68     		ldr	r3, [r3]
 10966 005a 7A69     		ldr	r2, [r7, #20]
 10967 005c 5A60     		str	r2, [r3, #4]
4713:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 10968              		.loc 1 4713 0
 10969 005e C046     		nop
 10970 0060 BD46     		mov	sp, r7
 10971 0062 07B0     		add	sp, sp, #28
 10972              		@ sp needed
 10973 0064 90BD     		pop	{r4, r7, pc}
 10974              	.L547:
 10975 0066 C046     		.align	2
 10976              	.L546:
 10977 0068 009800FC 		.word	-67069952
 10978              		.cfi_endproc
 10979              	.LFE107:
 10981              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 10982              		.align	1
 10983              		.syntax unified
 10984              		.code	16
 10985              		.thumb_func
 10986              		.fpu softvfp
 10988              	I2C_Enable_IRQ:
 10989              	.LFB108:
4714:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4715:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4716:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
4717:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4719:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
4720:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  /tmp/ccqg4Whx.s 			page 276


4721:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
4723:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 10990              		.loc 1 4723 0
 10991              		.cfi_startproc
 10992              		@ args = 0, pretend = 0, frame = 16
 10993              		@ frame_needed = 1, uses_anonymous_args = 0
 10994 0000 80B5     		push	{r7, lr}
 10995              		.cfi_def_cfa_offset 8
 10996              		.cfi_offset 7, -8
 10997              		.cfi_offset 14, -4
 10998 0002 84B0     		sub	sp, sp, #16
 10999              		.cfi_def_cfa_offset 24
 11000 0004 00AF     		add	r7, sp, #0
 11001              		.cfi_def_cfa_register 7
 11002 0006 7860     		str	r0, [r7, #4]
 11003 0008 0A00     		movs	r2, r1
 11004 000a BB1C     		adds	r3, r7, #2
 11005 000c 1A80     		strh	r2, [r3]
4724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 11006              		.loc 1 4724 0
 11007 000e 0023     		movs	r3, #0
 11008 0010 FB60     		str	r3, [r7, #12]
4725:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 11009              		.loc 1 4726 0
 11010 0012 7B68     		ldr	r3, [r7, #4]
 11011 0014 5A6B     		ldr	r2, [r3, #52]
 11012 0016 314B     		ldr	r3, .L560
 11013 0018 9A42     		cmp	r2, r3
 11014 001a 04D0     		beq	.L549
4727:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (hi2c->XferISR == I2C_Slave_ISR_DMA))
 11015              		.loc 1 4727 0 discriminator 1
 11016 001c 7B68     		ldr	r3, [r7, #4]
 11017 001e 5A6B     		ldr	r2, [r3, #52]
4726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       (hi2c->XferISR == I2C_Slave_ISR_DMA))
 11018              		.loc 1 4726 0 discriminator 1
 11019 0020 2F4B     		ldr	r3, .L560+4
 11020 0022 9A42     		cmp	r2, r3
 11021 0024 27D1     		bne	.L550
 11022              	.L549:
4728:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 11023              		.loc 1 4729 0
 11024 0026 BB1C     		adds	r3, r7, #2
 11025 0028 1B88     		ldrh	r3, [r3]
 11026 002a 0422     		movs	r2, #4
 11027 002c 1340     		ands	r3, r2
 11028 002e 03D0     		beq	.L551
4730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4731:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
4732:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 11029              		.loc 1 4732 0
 11030 0030 FB68     		ldr	r3, [r7, #12]
 11031 0032 B822     		movs	r2, #184
 11032 0034 1343     		orrs	r3, r2
 11033 0036 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 277


 11034              	.L551:
4733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4735:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
 11035              		.loc 1 4735 0
 11036 0038 BB1C     		adds	r3, r7, #2
 11037 003a 1B88     		ldrh	r3, [r3]
 11038 003c 1122     		movs	r2, #17
 11039 003e 1340     		ands	r3, r2
 11040 0040 112B     		cmp	r3, #17
 11041 0042 03D1     		bne	.L552
4736:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
4738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
 11042              		.loc 1 4738 0
 11043 0044 FB68     		ldr	r3, [r7, #12]
 11044 0046 9022     		movs	r2, #144
 11045 0048 1343     		orrs	r3, r2
 11046 004a FB60     		str	r3, [r7, #12]
 11047              	.L552:
4739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4740:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 11048              		.loc 1 4741 0
 11049 004c BB1C     		adds	r3, r7, #2
 11050 004e 1B88     		ldrh	r3, [r3]
 11051 0050 1222     		movs	r2, #18
 11052 0052 1340     		ands	r3, r2
 11053 0054 122B     		cmp	r3, #18
 11054 0056 03D1     		bne	.L553
4742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4743:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable STOP interrupts */
4744:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 11055              		.loc 1 4744 0
 11056 0058 FB68     		ldr	r3, [r7, #12]
 11057 005a 2022     		movs	r2, #32
 11058 005c 1343     		orrs	r3, r2
 11059 005e FB60     		str	r3, [r7, #12]
 11060              	.L553:
4745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
 11061              		.loc 1 4747 0
 11062 0060 BB1C     		adds	r3, r7, #2
 11063 0062 1B88     		ldrh	r3, [r3]
 11064 0064 1222     		movs	r2, #18
 11065 0066 1340     		ands	r3, r2
 11066 0068 122B     		cmp	r3, #18
 11067 006a 29D1     		bne	.L555
4748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable TC interrupts */
4750:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
 11068              		.loc 1 4750 0
 11069 006c FB68     		ldr	r3, [r7, #12]
 11070 006e 4022     		movs	r2, #64
 11071 0070 1343     		orrs	r3, r2
 11072 0072 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccqg4Whx.s 			page 278


4747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
 11073              		.loc 1 4747 0
 11074 0074 24E0     		b	.L555
 11075              	.L550:
4751:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   else
4754:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4755:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 11076              		.loc 1 4755 0
 11077 0076 BB1C     		adds	r3, r7, #2
 11078 0078 1B88     		ldrh	r3, [r3]
 11079 007a 0422     		movs	r2, #4
 11080 007c 1340     		ands	r3, r2
 11081 007e 03D0     		beq	.L556
4756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4757:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
4758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 11082              		.loc 1 4758 0
 11083 0080 FB68     		ldr	r3, [r7, #12]
 11084 0082 B822     		movs	r2, #184
 11085 0084 1343     		orrs	r3, r2
 11086 0086 FB60     		str	r3, [r7, #12]
 11087              	.L556:
4759:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4761:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 11088              		.loc 1 4761 0
 11089 0088 BB1C     		adds	r3, r7, #2
 11090 008a 1B88     		ldrh	r3, [r3]
 11091 008c 0122     		movs	r2, #1
 11092 008e 1340     		ands	r3, r2
 11093 0090 03D0     		beq	.L557
4762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4763:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
4764:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 11094              		.loc 1 4764 0
 11095 0092 FB68     		ldr	r3, [r7, #12]
 11096 0094 F222     		movs	r2, #242
 11097 0096 1343     		orrs	r3, r2
 11098 0098 FB60     		str	r3, [r7, #12]
 11099              	.L557:
4765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4766:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4767:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 11100              		.loc 1 4767 0
 11101 009a BB1C     		adds	r3, r7, #2
 11102 009c 1B88     		ldrh	r3, [r3]
 11103 009e 0222     		movs	r2, #2
 11104 00a0 1340     		ands	r3, r2
 11105 00a2 03D0     		beq	.L558
4768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4769:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
4770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 11106              		.loc 1 4770 0
 11107 00a4 FB68     		ldr	r3, [r7, #12]
 11108 00a6 F422     		movs	r2, #244
ARM GAS  /tmp/ccqg4Whx.s 			page 279


 11109 00a8 1343     		orrs	r3, r2
 11110 00aa FB60     		str	r3, [r7, #12]
 11111              	.L558:
4771:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4772:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4773:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 11112              		.loc 1 4773 0
 11113 00ac BB1C     		adds	r3, r7, #2
 11114 00ae 1B88     		ldrh	r3, [r3]
 11115 00b0 1222     		movs	r2, #18
 11116 00b2 1340     		ands	r3, r2
 11117 00b4 122B     		cmp	r3, #18
 11118 00b6 03D1     		bne	.L555
4774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4775:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Enable STOP interrupts */
4776:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 11119              		.loc 1 4776 0
 11120 00b8 FB68     		ldr	r3, [r7, #12]
 11121 00ba 2022     		movs	r2, #32
 11122 00bc 1343     		orrs	r3, r2
 11123 00be FB60     		str	r3, [r7, #12]
 11124              	.L555:
4777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4778:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4780:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Enable interrupts only at the end */
4781:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
4782:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* all interrupts requested done */
4783:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 11125              		.loc 1 4783 0
 11126 00c0 7B68     		ldr	r3, [r7, #4]
 11127 00c2 1B68     		ldr	r3, [r3]
 11128 00c4 1968     		ldr	r1, [r3]
 11129 00c6 7B68     		ldr	r3, [r7, #4]
 11130 00c8 1B68     		ldr	r3, [r3]
 11131 00ca FA68     		ldr	r2, [r7, #12]
 11132 00cc 0A43     		orrs	r2, r1
 11133 00ce 1A60     		str	r2, [r3]
4784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4785:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 11134              		.loc 1 4785 0
 11135 00d0 0023     		movs	r3, #0
4786:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 11136              		.loc 1 4786 0
 11137 00d2 1800     		movs	r0, r3
 11138 00d4 BD46     		mov	sp, r7
 11139 00d6 04B0     		add	sp, sp, #16
 11140              		@ sp needed
 11141 00d8 80BD     		pop	{r7, pc}
 11142              	.L561:
 11143 00da C046     		.align	2
 11144              	.L560:
 11145 00dc 00000000 		.word	I2C_Master_ISR_DMA
 11146 00e0 00000000 		.word	I2C_Slave_ISR_DMA
 11147              		.cfi_endproc
 11148              	.LFE108:
 11150              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
ARM GAS  /tmp/ccqg4Whx.s 			page 280


 11151              		.align	1
 11152              		.syntax unified
 11153              		.code	16
 11154              		.thumb_func
 11155              		.fpu softvfp
 11157              	I2C_Disable_IRQ:
 11158              	.LFB109:
4787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4788:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** /**
4789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
4790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4791:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4792:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
4793:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   * @retval HAL status
4794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   */
4795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
4796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** {
 11159              		.loc 1 4796 0
 11160              		.cfi_startproc
 11161              		@ args = 0, pretend = 0, frame = 16
 11162              		@ frame_needed = 1, uses_anonymous_args = 0
 11163 0000 80B5     		push	{r7, lr}
 11164              		.cfi_def_cfa_offset 8
 11165              		.cfi_offset 7, -8
 11166              		.cfi_offset 14, -4
 11167 0002 84B0     		sub	sp, sp, #16
 11168              		.cfi_def_cfa_offset 24
 11169 0004 00AF     		add	r7, sp, #0
 11170              		.cfi_def_cfa_register 7
 11171 0006 7860     		str	r0, [r7, #4]
 11172 0008 0A00     		movs	r2, r1
 11173 000a BB1C     		adds	r3, r7, #2
 11174 000c 1A80     		strh	r2, [r3]
4797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 11175              		.loc 1 4797 0
 11176 000e 0023     		movs	r3, #0
 11177 0010 FB60     		str	r3, [r7, #12]
4798:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 11178              		.loc 1 4799 0
 11179 0012 BB1C     		adds	r3, r7, #2
 11180 0014 1B88     		ldrh	r3, [r3]
 11181 0016 0122     		movs	r2, #1
 11182 0018 1340     		ands	r3, r2
 11183 001a 10D0     		beq	.L563
4800:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4801:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
4802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
 11184              		.loc 1 4802 0
 11185 001c FB68     		ldr	r3, [r7, #12]
 11186 001e 4222     		movs	r2, #66
 11187 0020 1343     		orrs	r3, r2
 11188 0022 FB60     		str	r3, [r7, #12]
4803:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4804:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->State & HAL_I2C_STATE_LISTEN) != HAL_I2C_STATE_LISTEN)
 11189              		.loc 1 4804 0
 11190 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccqg4Whx.s 			page 281


 11191 0026 4122     		movs	r2, #65
 11192 0028 9B5C     		ldrb	r3, [r3, r2]
 11193 002a DBB2     		uxtb	r3, r3
 11194 002c 1A00     		movs	r2, r3
 11195 002e 2823     		movs	r3, #40
 11196 0030 1340     		ands	r3, r2
 11197 0032 282B     		cmp	r3, #40
 11198 0034 03D0     		beq	.L563
4805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
4807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 11199              		.loc 1 4807 0
 11200 0036 FB68     		ldr	r3, [r7, #12]
 11201 0038 B022     		movs	r2, #176
 11202 003a 1343     		orrs	r3, r2
 11203 003c FB60     		str	r3, [r7, #12]
 11204              	.L563:
4808:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
4809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4810:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 11205              		.loc 1 4811 0
 11206 003e BB1C     		adds	r3, r7, #2
 11207 0040 1B88     		ldrh	r3, [r3]
 11208 0042 0222     		movs	r2, #2
 11209 0044 1340     		ands	r3, r2
 11210 0046 10D0     		beq	.L564
4812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
4814:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 11211              		.loc 1 4814 0
 11212 0048 FB68     		ldr	r3, [r7, #12]
 11213 004a 4422     		movs	r2, #68
 11214 004c 1343     		orrs	r3, r2
 11215 004e FB60     		str	r3, [r7, #12]
4815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4816:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     if ((hi2c->State & HAL_I2C_STATE_LISTEN) != HAL_I2C_STATE_LISTEN)
 11216              		.loc 1 4816 0
 11217 0050 7B68     		ldr	r3, [r7, #4]
 11218 0052 4122     		movs	r2, #65
 11219 0054 9B5C     		ldrb	r3, [r3, r2]
 11220 0056 DBB2     		uxtb	r3, r3
 11221 0058 1A00     		movs	r2, r3
 11222 005a 2823     		movs	r3, #40
 11223 005c 1340     		ands	r3, r2
 11224 005e 282B     		cmp	r3, #40
 11225 0060 03D0     		beq	.L564
4817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     {
4818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
4819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 11226              		.loc 1 4819 0
 11227 0062 FB68     		ldr	r3, [r7, #12]
 11228 0064 B022     		movs	r2, #176
 11229 0066 1343     		orrs	r3, r2
 11230 0068 FB60     		str	r3, [r7, #12]
 11231              	.L564:
4820:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     }
ARM GAS  /tmp/ccqg4Whx.s 			page 282


4821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4822:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 11232              		.loc 1 4823 0
 11233 006a BB1C     		adds	r3, r7, #2
 11234 006c 1B88     		ldrh	r3, [r3]
 11235 006e 0422     		movs	r2, #4
 11236 0070 1340     		ands	r3, r2
 11237 0072 03D0     		beq	.L565
4824:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4825:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
4826:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 11238              		.loc 1 4826 0
 11239 0074 FB68     		ldr	r3, [r7, #12]
 11240 0076 B822     		movs	r2, #184
 11241 0078 1343     		orrs	r3, r2
 11242 007a FB60     		str	r3, [r7, #12]
 11243              	.L565:
4827:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4829:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
 11244              		.loc 1 4829 0
 11245 007c BB1C     		adds	r3, r7, #2
 11246 007e 1B88     		ldrh	r3, [r3]
 11247 0080 1122     		movs	r2, #17
 11248 0082 1340     		ands	r3, r2
 11249 0084 112B     		cmp	r3, #17
 11250 0086 03D1     		bne	.L566
4830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
4832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
 11251              		.loc 1 4832 0
 11252 0088 FB68     		ldr	r3, [r7, #12]
 11253 008a 9022     		movs	r2, #144
 11254 008c 1343     		orrs	r3, r2
 11255 008e FB60     		str	r3, [r7, #12]
 11256              	.L566:
4833:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4835:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 11257              		.loc 1 4835 0
 11258 0090 BB1C     		adds	r3, r7, #2
 11259 0092 1B88     		ldrh	r3, [r3]
 11260 0094 1222     		movs	r2, #18
 11261 0096 1340     		ands	r3, r2
 11262 0098 122B     		cmp	r3, #18
 11263 009a 03D1     		bne	.L567
4836:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4837:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable STOP interrupts */
4838:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
 11264              		.loc 1 4838 0
 11265 009c FB68     		ldr	r3, [r7, #12]
 11266 009e 2022     		movs	r2, #32
 11267 00a0 1343     		orrs	r3, r2
 11268 00a2 FB60     		str	r3, [r7, #12]
 11269              	.L567:
4839:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
ARM GAS  /tmp/ccqg4Whx.s 			page 283


4840:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
 11270              		.loc 1 4841 0
 11271 00a4 BB1C     		adds	r3, r7, #2
 11272 00a6 1B88     		ldrh	r3, [r3]
 11273 00a8 1222     		movs	r2, #18
 11274 00aa 1340     		ands	r3, r2
 11275 00ac 122B     		cmp	r3, #18
 11276 00ae 03D1     		bne	.L568
4842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   {
4843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     /* Enable TC interrupts */
4844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
 11277              		.loc 1 4844 0
 11278 00b0 FB68     		ldr	r3, [r7, #12]
 11279 00b2 4022     		movs	r2, #64
 11280 00b4 1343     		orrs	r3, r2
 11281 00b6 FB60     		str	r3, [r7, #12]
 11282              	.L568:
4845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   }
4846:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4847:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* Disable interrupts only at the end */
4848:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
4849:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   /* all disable interrupts request are not done */
4850:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 11283              		.loc 1 4850 0
 11284 00b8 7B68     		ldr	r3, [r7, #4]
 11285 00ba 1B68     		ldr	r3, [r3]
 11286 00bc 1A68     		ldr	r2, [r3]
 11287 00be FB68     		ldr	r3, [r7, #12]
 11288 00c0 D943     		mvns	r1, r3
 11289 00c2 7B68     		ldr	r3, [r7, #4]
 11290 00c4 1B68     		ldr	r3, [r3]
 11291 00c6 0A40     		ands	r2, r1
 11292 00c8 1A60     		str	r2, [r3]
4851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** 
4852:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c ****   return HAL_OK;
 11293              		.loc 1 4852 0
 11294 00ca 0023     		movs	r3, #0
4853:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_i2c.c **** }
 11295              		.loc 1 4853 0
 11296 00cc 1800     		movs	r0, r3
 11297 00ce BD46     		mov	sp, r7
 11298 00d0 04B0     		add	sp, sp, #16
 11299              		@ sp needed
 11300 00d2 80BD     		pop	{r7, pc}
 11301              		.cfi_endproc
 11302              	.LFE109:
 11304              		.text
 11305              	.Letext0:
 11306              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 11307              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 11308              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 11309              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 11310              		.file 6 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 11311              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 11312              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 11313              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
ARM GAS  /tmp/ccqg4Whx.s 			page 284


 11314              		.file 10 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/re
 11315              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 11316              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 11317              		.file 13 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
ARM GAS  /tmp/ccqg4Whx.s 			page 285


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_i2c.c
     /tmp/ccqg4Whx.s:16     .text.HAL_I2C_Init:0000000000000000 $t
     /tmp/ccqg4Whx.s:23     .text.HAL_I2C_Init:0000000000000000 HAL_I2C_Init
     /tmp/ccqg4Whx.s:311    .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/ccqg4Whx.s:213    .text.HAL_I2C_Init:0000000000000120 $d
     /tmp/ccqg4Whx.s:220    .text.HAL_I2C_DeInit:0000000000000000 $t
     /tmp/ccqg4Whx.s:227    .text.HAL_I2C_DeInit:0000000000000000 HAL_I2C_DeInit
     /tmp/ccqg4Whx.s:343    .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/ccqg4Whx.s:304    .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/ccqg4Whx.s:336    .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/ccqg4Whx.s:368    .text.HAL_I2C_Master_Transmit:0000000000000000 $t
     /tmp/ccqg4Whx.s:375    .text.HAL_I2C_Master_Transmit:0000000000000000 HAL_I2C_Master_Transmit
     /tmp/ccqg4Whx.s:10328  .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 I2C_WaitOnFlagUntilTimeout
     /tmp/ccqg4Whx.s:10904  .text.I2C_TransferConfig:0000000000000000 I2C_TransferConfig
     /tmp/ccqg4Whx.s:10421  .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 I2C_WaitOnTXISFlagUntilTimeout
     /tmp/ccqg4Whx.s:10523  .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 I2C_WaitOnSTOPFlagUntilTimeout
     /tmp/ccqg4Whx.s:718    .text.HAL_I2C_Master_Transmit:0000000000000224 $d
     /tmp/ccqg4Whx.s:723    .text.HAL_I2C_Master_Receive:0000000000000000 $t
     /tmp/ccqg4Whx.s:730    .text.HAL_I2C_Master_Receive:0000000000000000 HAL_I2C_Master_Receive
     /tmp/ccqg4Whx.s:10621  .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 I2C_WaitOnRXNEFlagUntilTimeout
     /tmp/ccqg4Whx.s:1074   .text.HAL_I2C_Master_Receive:0000000000000224 $d
     /tmp/ccqg4Whx.s:1079   .text.HAL_I2C_Slave_Transmit:0000000000000000 $t
     /tmp/ccqg4Whx.s:1086   .text.HAL_I2C_Slave_Transmit:0000000000000000 HAL_I2C_Slave_Transmit
     /tmp/ccqg4Whx.s:1439   .text.HAL_I2C_Slave_Transmit:000000000000022c $d
     /tmp/ccqg4Whx.s:1444   .text.HAL_I2C_Slave_Receive:0000000000000000 $t
     /tmp/ccqg4Whx.s:1451   .text.HAL_I2C_Slave_Receive:0000000000000000 HAL_I2C_Slave_Receive
     /tmp/ccqg4Whx.s:1795   .text.HAL_I2C_Slave_Receive:000000000000021c $d
     /tmp/ccqg4Whx.s:1800   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:1807   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 HAL_I2C_Master_Transmit_IT
     /tmp/ccqg4Whx.s:10988  .text.I2C_Enable_IRQ:0000000000000000 I2C_Enable_IRQ
     /tmp/ccqg4Whx.s:1973   .text.HAL_I2C_Master_Transmit_IT:00000000000000f4 $d
     /tmp/ccqg4Whx.s:7126   .text.I2C_Master_ISR_IT:0000000000000000 I2C_Master_ISR_IT
     /tmp/ccqg4Whx.s:1979   .text.HAL_I2C_Master_Receive_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:1986   .text.HAL_I2C_Master_Receive_IT:0000000000000000 HAL_I2C_Master_Receive_IT
     /tmp/ccqg4Whx.s:2152   .text.HAL_I2C_Master_Receive_IT:00000000000000f4 $d
     /tmp/ccqg4Whx.s:2158   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:2165   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 HAL_I2C_Slave_Transmit_IT
     /tmp/ccqg4Whx.s:2277   .text.HAL_I2C_Slave_Transmit_IT:000000000000009c $d
     /tmp/ccqg4Whx.s:7506   .text.I2C_Slave_ISR_IT:0000000000000000 I2C_Slave_ISR_IT
     /tmp/ccqg4Whx.s:2284   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:2291   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 HAL_I2C_Slave_Receive_IT
     /tmp/ccqg4Whx.s:2403   .text.HAL_I2C_Slave_Receive_IT:000000000000009c $d
     /tmp/ccqg4Whx.s:2410   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 $t
     /tmp/ccqg4Whx.s:2417   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 HAL_I2C_Master_Transmit_DMA
     /tmp/ccqg4Whx.s:2673   .text.HAL_I2C_Master_Transmit_DMA:0000000000000190 $d
     /tmp/ccqg4Whx.s:7830   .text.I2C_Master_ISR_DMA:0000000000000000 I2C_Master_ISR_DMA
     /tmp/ccqg4Whx.s:9921   .text.I2C_DMAMasterTransmitCplt:0000000000000000 I2C_DMAMasterTransmitCplt
     /tmp/ccqg4Whx.s:10199  .text.I2C_DMAError:0000000000000000 I2C_DMAError
     /tmp/ccqg4Whx.s:2682   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 $t
     /tmp/ccqg4Whx.s:2689   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 HAL_I2C_Master_Receive_DMA
     /tmp/ccqg4Whx.s:2945   .text.HAL_I2C_Master_Receive_DMA:0000000000000190 $d
     /tmp/ccqg4Whx.s:10060  .text.I2C_DMAMasterReceiveCplt:0000000000000000 I2C_DMAMasterReceiveCplt
     /tmp/ccqg4Whx.s:2954   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 $t
     /tmp/ccqg4Whx.s:2961   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Transmit_DMA
     /tmp/ccqg4Whx.s:3128   .text.HAL_I2C_Slave_Transmit_DMA:00000000000000f4 $d
     /tmp/ccqg4Whx.s:8071   .text.I2C_Slave_ISR_DMA:0000000000000000 I2C_Slave_ISR_DMA
ARM GAS  /tmp/ccqg4Whx.s 			page 286


     /tmp/ccqg4Whx.s:10029  .text.I2C_DMASlaveTransmitCplt:0000000000000000 I2C_DMASlaveTransmitCplt
     /tmp/ccqg4Whx.s:3137   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 $t
     /tmp/ccqg4Whx.s:3144   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 HAL_I2C_Slave_Receive_DMA
     /tmp/ccqg4Whx.s:3311   .text.HAL_I2C_Slave_Receive_DMA:00000000000000f4 $d
     /tmp/ccqg4Whx.s:10168  .text.I2C_DMASlaveReceiveCplt:0000000000000000 I2C_DMASlaveReceiveCplt
     /tmp/ccqg4Whx.s:3320   .text.HAL_I2C_Mem_Write:0000000000000000 $t
     /tmp/ccqg4Whx.s:3327   .text.HAL_I2C_Mem_Write:0000000000000000 HAL_I2C_Mem_Write
     /tmp/ccqg4Whx.s:8223   .text.I2C_RequestMemoryWrite:0000000000000000 I2C_RequestMemoryWrite
     /tmp/ccqg4Whx.s:3725   .text.HAL_I2C_Mem_Write:000000000000027c $d
     /tmp/ccqg4Whx.s:3730   .text.HAL_I2C_Mem_Read:0000000000000000 $t
     /tmp/ccqg4Whx.s:3737   .text.HAL_I2C_Mem_Read:0000000000000000 HAL_I2C_Mem_Read
     /tmp/ccqg4Whx.s:8378   .text.I2C_RequestMemoryRead:0000000000000000 I2C_RequestMemoryRead
     /tmp/ccqg4Whx.s:4132   .text.HAL_I2C_Mem_Read:000000000000027c $d
     /tmp/ccqg4Whx.s:4137   .text.HAL_I2C_Mem_Write_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:4144   .text.HAL_I2C_Mem_Write_IT:0000000000000000 HAL_I2C_Mem_Write_IT
     /tmp/ccqg4Whx.s:4377   .text.HAL_I2C_Mem_Write_IT:000000000000015c $d
     /tmp/ccqg4Whx.s:4383   .text.HAL_I2C_Mem_Read_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:4390   .text.HAL_I2C_Mem_Read_IT:0000000000000000 HAL_I2C_Mem_Read_IT
     /tmp/ccqg4Whx.s:4624   .text.HAL_I2C_Mem_Read_IT:0000000000000160 $d
     /tmp/ccqg4Whx.s:4630   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 $t
     /tmp/ccqg4Whx.s:4637   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 HAL_I2C_Mem_Write_DMA
     /tmp/ccqg4Whx.s:4921   .text.HAL_I2C_Mem_Write_DMA:00000000000001b8 $d
     /tmp/ccqg4Whx.s:4929   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 $t
     /tmp/ccqg4Whx.s:4936   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 HAL_I2C_Mem_Read_DMA
     /tmp/ccqg4Whx.s:5221   .text.HAL_I2C_Mem_Read_DMA:00000000000001b8 $d
     /tmp/ccqg4Whx.s:5229   .text.HAL_I2C_IsDeviceReady:0000000000000000 $t
     /tmp/ccqg4Whx.s:5236   .text.HAL_I2C_IsDeviceReady:0000000000000000 HAL_I2C_IsDeviceReady
     /tmp/ccqg4Whx.s:5541   .text.HAL_I2C_IsDeviceReady:00000000000001cc $d
     /tmp/ccqg4Whx.s:5546   .text.HAL_I2C_Master_Sequential_Transmit_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:5553   .text.HAL_I2C_Master_Sequential_Transmit_IT:0000000000000000 HAL_I2C_Master_Sequential_Transmit_IT
     /tmp/ccqg4Whx.s:5716   .text.HAL_I2C_Master_Sequential_Transmit_IT:00000000000000ec $d
     /tmp/ccqg4Whx.s:5721   .text.HAL_I2C_Master_Sequential_Receive_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:5728   .text.HAL_I2C_Master_Sequential_Receive_IT:0000000000000000 HAL_I2C_Master_Sequential_Receive_IT
     /tmp/ccqg4Whx.s:5891   .text.HAL_I2C_Master_Sequential_Receive_IT:00000000000000ec $d
     /tmp/ccqg4Whx.s:5896   .text.HAL_I2C_Slave_Sequential_Transmit_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:5903   .text.HAL_I2C_Slave_Sequential_Transmit_IT:0000000000000000 HAL_I2C_Slave_Sequential_Transmit_IT
     /tmp/ccqg4Whx.s:11157  .text.I2C_Disable_IRQ:0000000000000000 I2C_Disable_IRQ
     /tmp/ccqg4Whx.s:6066   .text.HAL_I2C_Slave_Sequential_Transmit_IT:00000000000000ec $d
     /tmp/ccqg4Whx.s:6072   .text.HAL_I2C_Slave_Sequential_Receive_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:6079   .text.HAL_I2C_Slave_Sequential_Receive_IT:0000000000000000 HAL_I2C_Slave_Sequential_Receive_IT
     /tmp/ccqg4Whx.s:6241   .text.HAL_I2C_Slave_Sequential_Receive_IT:00000000000000ec $d
     /tmp/ccqg4Whx.s:6247   .text.HAL_I2C_EnableListen_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:6254   .text.HAL_I2C_EnableListen_IT:0000000000000000 HAL_I2C_EnableListen_IT
     /tmp/ccqg4Whx.s:6306   .text.HAL_I2C_EnableListen_IT:000000000000003c $d
     /tmp/ccqg4Whx.s:6311   .text.HAL_I2C_DisableListen_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:6318   .text.HAL_I2C_DisableListen_IT:0000000000000000 HAL_I2C_DisableListen_IT
     /tmp/ccqg4Whx.s:6395   .text.HAL_I2C_Master_Abort_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:6402   .text.HAL_I2C_Master_Abort_IT:0000000000000000 HAL_I2C_Master_Abort_IT
     /tmp/ccqg4Whx.s:6496   .text.HAL_I2C_EV_IRQHandler:0000000000000000 $t
     /tmp/ccqg4Whx.s:6503   .text.HAL_I2C_EV_IRQHandler:0000000000000000 HAL_I2C_EV_IRQHandler
     /tmp/ccqg4Whx.s:6552   .text.HAL_I2C_ER_IRQHandler:0000000000000000 $t
     /tmp/ccqg4Whx.s:6559   .text.HAL_I2C_ER_IRQHandler:0000000000000000 HAL_I2C_ER_IRQHandler
     /tmp/ccqg4Whx.s:9595   .text.I2C_ITError:0000000000000000 I2C_ITError
     /tmp/ccqg4Whx.s:6683   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 $t
     /tmp/ccqg4Whx.s:6690   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 HAL_I2C_MasterTxCpltCallback
     /tmp/ccqg4Whx.s:6715   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/ccqg4Whx.s:6722   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
ARM GAS  /tmp/ccqg4Whx.s 			page 287


     /tmp/ccqg4Whx.s:6747   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 $t
     /tmp/ccqg4Whx.s:6754   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 HAL_I2C_SlaveTxCpltCallback
     /tmp/ccqg4Whx.s:6779   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 $t
     /tmp/ccqg4Whx.s:6786   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/ccqg4Whx.s:6811   .text.HAL_I2C_AddrCallback:0000000000000000 $t
     /tmp/ccqg4Whx.s:6818   .text.HAL_I2C_AddrCallback:0000000000000000 HAL_I2C_AddrCallback
     /tmp/ccqg4Whx.s:6851   .text.HAL_I2C_ListenCpltCallback:0000000000000000 $t
     /tmp/ccqg4Whx.s:6858   .text.HAL_I2C_ListenCpltCallback:0000000000000000 HAL_I2C_ListenCpltCallback
     /tmp/ccqg4Whx.s:6883   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 $t
     /tmp/ccqg4Whx.s:6890   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 HAL_I2C_MemTxCpltCallback
     /tmp/ccqg4Whx.s:6915   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 $t
     /tmp/ccqg4Whx.s:6922   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 HAL_I2C_MemRxCpltCallback
     /tmp/ccqg4Whx.s:6947   .text.HAL_I2C_ErrorCallback:0000000000000000 $t
     /tmp/ccqg4Whx.s:6954   .text.HAL_I2C_ErrorCallback:0000000000000000 HAL_I2C_ErrorCallback
     /tmp/ccqg4Whx.s:6979   .text.HAL_I2C_AbortCpltCallback:0000000000000000 $t
     /tmp/ccqg4Whx.s:6986   .text.HAL_I2C_AbortCpltCallback:0000000000000000 HAL_I2C_AbortCpltCallback
     /tmp/ccqg4Whx.s:7011   .text.HAL_I2C_GetState:0000000000000000 $t
     /tmp/ccqg4Whx.s:7018   .text.HAL_I2C_GetState:0000000000000000 HAL_I2C_GetState
     /tmp/ccqg4Whx.s:7048   .text.HAL_I2C_GetMode:0000000000000000 $t
     /tmp/ccqg4Whx.s:7055   .text.HAL_I2C_GetMode:0000000000000000 HAL_I2C_GetMode
     /tmp/ccqg4Whx.s:7085   .text.HAL_I2C_GetError:0000000000000000 $t
     /tmp/ccqg4Whx.s:7092   .text.HAL_I2C_GetError:0000000000000000 HAL_I2C_GetError
     /tmp/ccqg4Whx.s:7120   .text.I2C_Master_ISR_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:9858   .text.I2C_Flush_TXDR:0000000000000000 I2C_Flush_TXDR
     /tmp/ccqg4Whx.s:8766   .text.I2C_ITMasterSequentialCplt:0000000000000000 I2C_ITMasterSequentialCplt
     /tmp/ccqg4Whx.s:8967   .text.I2C_ITMasterCplt:0000000000000000 I2C_ITMasterCplt
     /tmp/ccqg4Whx.s:7495   .text.I2C_Master_ISR_IT:0000000000000248 $d
     /tmp/ccqg4Whx.s:7500   .text.I2C_Slave_ISR_IT:0000000000000000 $t
     /tmp/ccqg4Whx.s:9474   .text.I2C_ITListenCplt:0000000000000000 I2C_ITListenCplt
     /tmp/ccqg4Whx.s:8867   .text.I2C_ITSlaveSequentialCplt:0000000000000000 I2C_ITSlaveSequentialCplt
     /tmp/ccqg4Whx.s:8531   .text.I2C_ITAddrCplt:0000000000000000 I2C_ITAddrCplt
     /tmp/ccqg4Whx.s:9184   .text.I2C_ITSlaveCplt:0000000000000000 I2C_ITSlaveCplt
     /tmp/ccqg4Whx.s:7819   .text.I2C_Slave_ISR_IT:00000000000001dc $d
     /tmp/ccqg4Whx.s:7824   .text.I2C_Master_ISR_DMA:0000000000000000 $t
     /tmp/ccqg4Whx.s:8065   .text.I2C_Slave_ISR_DMA:0000000000000000 $t
     /tmp/ccqg4Whx.s:8217   .text.I2C_RequestMemoryWrite:0000000000000000 $t
     /tmp/ccqg4Whx.s:8372   .text.I2C_RequestMemoryRead:0000000000000000 $t
     /tmp/ccqg4Whx.s:8525   .text.I2C_ITAddrCplt:0000000000000000 $t
     /tmp/ccqg4Whx.s:8760   .text.I2C_ITMasterSequentialCplt:0000000000000000 $t
     /tmp/ccqg4Whx.s:8861   .text.I2C_ITSlaveSequentialCplt:0000000000000000 $t
     /tmp/ccqg4Whx.s:8961   .text.I2C_ITMasterCplt:0000000000000000 $t
     /tmp/ccqg4Whx.s:9172   .text.I2C_ITMasterCplt:0000000000000134 $d
     /tmp/ccqg4Whx.s:9178   .text.I2C_ITSlaveCplt:0000000000000000 $t
     /tmp/ccqg4Whx.s:9462   .text.I2C_ITSlaveCplt:00000000000001b0 $d
     /tmp/ccqg4Whx.s:9468   .text.I2C_ITListenCplt:0000000000000000 $t
     /tmp/ccqg4Whx.s:9584   .text.I2C_ITListenCplt:00000000000000a0 $d
     /tmp/ccqg4Whx.s:9589   .text.I2C_ITError:0000000000000000 $t
     /tmp/ccqg4Whx.s:9843   .text.I2C_ITError:000000000000017c $d
     /tmp/ccqg4Whx.s:10249  .text.I2C_DMAAbort:0000000000000000 I2C_DMAAbort
     /tmp/ccqg4Whx.s:9852   .text.I2C_Flush_TXDR:0000000000000000 $t
     /tmp/ccqg4Whx.s:9915   .text.I2C_DMAMasterTransmitCplt:0000000000000000 $t
     /tmp/ccqg4Whx.s:10018  .text.I2C_DMAMasterTransmitCplt:000000000000008c $d
     /tmp/ccqg4Whx.s:10023  .text.I2C_DMASlaveTransmitCplt:0000000000000000 $t
     /tmp/ccqg4Whx.s:10054  .text.I2C_DMAMasterReceiveCplt:0000000000000000 $t
     /tmp/ccqg4Whx.s:10157  .text.I2C_DMAMasterReceiveCplt:000000000000008c $d
     /tmp/ccqg4Whx.s:10162  .text.I2C_DMASlaveReceiveCplt:0000000000000000 $t
     /tmp/ccqg4Whx.s:10193  .text.I2C_DMAError:0000000000000000 $t
ARM GAS  /tmp/ccqg4Whx.s 			page 288


     /tmp/ccqg4Whx.s:10243  .text.I2C_DMAAbort:0000000000000000 $t
     /tmp/ccqg4Whx.s:10322  .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccqg4Whx.s:10415  .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 $t
     /tmp/ccqg4Whx.s:10763  .text.I2C_IsAcknowledgeFailed:0000000000000000 I2C_IsAcknowledgeFailed
     /tmp/ccqg4Whx.s:10517  .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 $t
     /tmp/ccqg4Whx.s:10615  .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 $t
     /tmp/ccqg4Whx.s:10752  .text.I2C_WaitOnRXNEFlagUntilTimeout:00000000000000b8 $d
     /tmp/ccqg4Whx.s:10757  .text.I2C_IsAcknowledgeFailed:0000000000000000 $t
     /tmp/ccqg4Whx.s:10893  .text.I2C_IsAcknowledgeFailed:00000000000000b8 $d
     /tmp/ccqg4Whx.s:10898  .text.I2C_TransferConfig:0000000000000000 $t
     /tmp/ccqg4Whx.s:10977  .text.I2C_TransferConfig:0000000000000068 $d
     /tmp/ccqg4Whx.s:10982  .text.I2C_Enable_IRQ:0000000000000000 $t
     /tmp/ccqg4Whx.s:11145  .text.I2C_Enable_IRQ:00000000000000dc $d
     /tmp/ccqg4Whx.s:11151  .text.I2C_Disable_IRQ:0000000000000000 $t
                           .group:0000000000000000 wm4.0.b7c3d577b02d87ac381ee43eef398462
                           .group:0000000000000000 wm4.main.h.42.3939338cba6ab0a8b761d08be8206d51
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.b0c07d2233f75e3b04f03d95093d88ca
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
ARM GAS  /tmp/ccqg4Whx.s 			page 289


                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart.h.38.e5eada3cdf37ca88de33bd21ddd21a5e
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart_ex.h.38.9430c2ca5ec832677dbe7308c46115fd
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
