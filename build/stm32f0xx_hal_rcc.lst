ARM GAS  /tmp/cccmP2QM.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_RCC_DeInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_RCC_DeInit:
  24              	.LFB37:
  25              		.file 1 "cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c"
   1:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
   2:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
   3:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @file    stm32f0xx_hal_rcc.c
   4:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @author  MCD Application Team
   5:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *       
  11:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim                
  12:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  13:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  15:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  16:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, USART, TIM, USB FS, etc..)
  32:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  33:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC Limitations #####
ARM GAS  /tmp/cccmP2QM.s 			page 2


  34:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  35:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  36:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       from/to registers.
  39:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  42:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  43:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       Workarounds:
  44:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  47:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
  48:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  49:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @attention
  50:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  51:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  53:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      without specific prior written permission.
  63:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  64:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  75:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************  
  76:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** */
  77:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  78:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #include "stm32f0xx_hal.h"
  80:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  81:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @addtogroup STM32F0xx_HAL_Driver
  82:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  83:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  84:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  85:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** * @brief RCC HAL module driver
  87:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  88:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  89:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  90:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
ARM GAS  /tmp/cccmP2QM.s 			page 3


  91:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  92:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  * @{
  96:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  */
  97:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  98:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  99:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim    
 132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSE, HSI, HSI14, HSI48, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, 
 138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       AHB and APB1).
 139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the PLL as System clock source.
 143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI14 (high-speed internal), 14 MHz factory-trimmed RC used directly to clock 
 146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the ADC peripheral.
 147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/cccmP2QM.s 			page 4


 148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source.
 150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) PLL (clocked by HSI, HSI48 or HSE), featuring different output clocks:
 157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The first output is used to generate the high speed system clock (up to 48 MHz)
 158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The second output is used to generate the clock for the USB FS (48 MHz)
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The third output may be used to generate the clock for the TIM, I2C and USART 
 160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             peripherals (up to 48 MHz)
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M0 NMI 
 166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           HSE and PLL.
 174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) clock is derived
 177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For the STM32F0xx devices, the maximum frequency of the SYSCLK, HCLK and PCLK1 is 48 MHz,
 193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prefetch is disabled.
 197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /*
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           | Latency       | SYSCLK clock frequency (MHz)  |
ARM GAS  /tmp/cccmP2QM.s 			page 5


 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSE and PLL OFF
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - AHB, APB1 prescaler set to 1.
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupts disabled
 220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - Peripheral clocks
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  26              		.loc 1 226 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  36              		.loc 1 228 0
  37 0004 144B     		ldr	r3, .L2
  38 0006 1A68     		ldr	r2, [r3]
  39 0008 134B     		ldr	r3, .L2
  40 000a 8121     		movs	r1, #129
  41 000c 0A43     		orrs	r2, r1
  42 000e 1A60     		str	r2, [r3]
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0] and MCOSEL[2:0] bits */
 231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE | RCC_CFGR_MCO);
  43              		.loc 1 231 0
  44 0010 114B     		ldr	r3, .L2
  45 0012 5A68     		ldr	r2, [r3, #4]
  46 0014 104B     		ldr	r3, .L2
  47 0016 1149     		ldr	r1, .L2+4
  48 0018 0A40     		ands	r2, r1
  49 001a 5A60     		str	r2, [r3, #4]
 232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
  50              		.loc 1 234 0
  51 001c 0E4B     		ldr	r3, .L2
  52 001e 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/cccmP2QM.s 			page 6


  53 0020 0D4B     		ldr	r3, .L2
  54 0022 0F49     		ldr	r1, .L2+8
  55 0024 0A40     		ands	r2, r1
  56 0026 1A60     		str	r2, [r3]
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  57              		.loc 1 237 0
  58 0028 0B4B     		ldr	r3, .L2
  59 002a 1A68     		ldr	r2, [r3]
  60 002c 0A4B     		ldr	r3, .L2
  61 002e 0D49     		ldr	r1, .L2+12
  62 0030 0A40     		ands	r2, r1
  63 0032 1A60     		str	r2, [r3]
 238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR register */
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  64              		.loc 1 240 0
  65 0034 084B     		ldr	r3, .L2
  66 0036 0022     		movs	r2, #0
  67 0038 5A60     		str	r2, [r3, #4]
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR2 register */
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
  68              		.loc 1 243 0
  69 003a 074B     		ldr	r3, .L2
  70 003c 0022     		movs	r2, #0
  71 003e DA62     		str	r2, [r3, #44]
 244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR3 register */
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
  72              		.loc 1 246 0
  73 0040 054B     		ldr	r3, .L2
  74 0042 0022     		movs	r2, #0
  75 0044 1A63     		str	r2, [r3, #48]
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Disable all interrupts */
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  76              		.loc 1 249 0
  77 0046 044B     		ldr	r3, .L2
  78 0048 0022     		movs	r2, #0
  79 004a 9A60     		str	r2, [r3, #8]
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  80              		.loc 1 252 0
  81 004c 064B     		ldr	r3, .L2+16
  82 004e 074A     		ldr	r2, .L2+20
  83 0050 1A60     		str	r2, [r3]
 253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
  84              		.loc 1 253 0
  85 0052 C046     		nop
  86 0054 BD46     		mov	sp, r7
  87              		@ sp needed
  88 0056 80BD     		pop	{r7, pc}
  89              	.L3:
  90              		.align	2
ARM GAS  /tmp/cccmP2QM.s 			page 7


  91              	.L2:
  92 0058 00100240 		.word	1073876992
  93 005c 0CF8FFF0 		.word	-251660276
  94 0060 FFFFF6FE 		.word	-17367041
  95 0064 FFFFFBFF 		.word	-262145
  96 0068 00000000 		.word	SystemCoreClock
  97 006c 00127A00 		.word	8000000
  98              		.cfi_endproc
  99              	.LFE37:
 101              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 102              		.align	1
 103              		.global	HAL_RCC_OscConfig
 104              		.syntax unified
 105              		.code	16
 106              		.thumb_func
 107              		.fpu softvfp
 109              	HAL_RCC_OscConfig:
 110              	.LFB38:
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 111              		.loc 1 270 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 24
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 80B5     		push	{r7, lr}
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 7, -8
 118              		.cfi_offset 14, -4
 119 0002 86B0     		sub	sp, sp, #24
 120              		.cfi_def_cfa_offset 32
 121 0004 00AF     		add	r7, sp, #0
 122              		.cfi_def_cfa_register 7
 123 0006 7860     		str	r0, [r7, #4]
 271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 124              		.loc 1 271 0
 125 0008 0023     		movs	r3, #0
 126 000a 3B61     		str	r3, [r7, #16]
 272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/cccmP2QM.s 			page 8


 277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 127              		.loc 1 278 0
 128 000c 7B68     		ldr	r3, [r7, #4]
 129 000e 1B68     		ldr	r3, [r3]
 130 0010 0122     		movs	r2, #1
 131 0012 1340     		ands	r3, r2
 132 0014 00D1     		bne	.LCB89
 133 0016 8DE0     		b	.L5	@long jump
 134              	.LCB89:
 279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 135              		.loc 1 284 0
 136 0018 C54B     		ldr	r3, .L76
 137 001a 5B68     		ldr	r3, [r3, #4]
 138 001c 0C22     		movs	r2, #12
 139 001e 1340     		ands	r3, r2
 140 0020 042B     		cmp	r3, #4
 141 0022 0ED0     		beq	.L6
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 142              		.loc 1 285 0
 143 0024 C24B     		ldr	r3, .L76
 144 0026 5B68     		ldr	r3, [r3, #4]
 145 0028 0C22     		movs	r2, #12
 146 002a 1340     		ands	r3, r2
 147 002c 082B     		cmp	r3, #8
 148 002e 16D1     		bne	.L7
 149              		.loc 1 285 0 is_stmt 0 discriminator 1
 150 0030 BF4B     		ldr	r3, .L76
 151 0032 5A68     		ldr	r2, [r3, #4]
 152 0034 C023     		movs	r3, #192
 153 0036 5B02     		lsls	r3, r3, #9
 154 0038 1A40     		ands	r2, r3
 155 003a 8023     		movs	r3, #128
 156 003c 5B02     		lsls	r3, r3, #9
 157 003e 9A42     		cmp	r2, r3
 158 0040 0DD1     		bne	.L7
 159              	.L6:
 286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 160              		.loc 1 287 0 is_stmt 1
 161 0042 BB4B     		ldr	r3, .L76
 162 0044 1A68     		ldr	r2, [r3]
 163 0046 8023     		movs	r3, #128
 164 0048 9B02     		lsls	r3, r3, #10
 165 004a 1340     		ands	r3, r2
 166 004c 00D1     		bne	.LCB118
 167 004e 70E0     		b	.L74	@long jump
 168              	.LCB118:
 169              		.loc 1 287 0 is_stmt 0 discriminator 1
 170 0050 7B68     		ldr	r3, [r7, #4]
 171 0052 5B68     		ldr	r3, [r3, #4]
 172 0054 002B     		cmp	r3, #0
ARM GAS  /tmp/cccmP2QM.s 			page 9


 173 0056 00D0     		beq	.LCB122
 174 0058 6BE0     		b	.L74	@long jump
 175              	.LCB122:
 288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 176              		.loc 1 289 0 is_stmt 1
 177 005a 0123     		movs	r3, #1
 178 005c 29E3     		b	.L9
 179              	.L7:
 290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 180              		.loc 1 295 0
 181 005e 7B68     		ldr	r3, [r7, #4]
 182 0060 5B68     		ldr	r3, [r3, #4]
 183 0062 012B     		cmp	r3, #1
 184 0064 07D1     		bne	.L10
 185              		.loc 1 295 0 is_stmt 0 discriminator 1
 186 0066 B24B     		ldr	r3, .L76
 187 0068 1A68     		ldr	r2, [r3]
 188 006a B14B     		ldr	r3, .L76
 189 006c 8021     		movs	r1, #128
 190 006e 4902     		lsls	r1, r1, #9
 191 0070 0A43     		orrs	r2, r1
 192 0072 1A60     		str	r2, [r3]
 193 0074 2FE0     		b	.L11
 194              	.L10:
 195              		.loc 1 295 0 discriminator 2
 196 0076 7B68     		ldr	r3, [r7, #4]
 197 0078 5B68     		ldr	r3, [r3, #4]
 198 007a 002B     		cmp	r3, #0
 199 007c 0CD1     		bne	.L12
 200              		.loc 1 295 0 discriminator 3
 201 007e AC4B     		ldr	r3, .L76
 202 0080 1A68     		ldr	r2, [r3]
 203 0082 AB4B     		ldr	r3, .L76
 204 0084 AB49     		ldr	r1, .L76+4
 205 0086 0A40     		ands	r2, r1
 206 0088 1A60     		str	r2, [r3]
 207 008a A94B     		ldr	r3, .L76
 208 008c 1A68     		ldr	r2, [r3]
 209 008e A84B     		ldr	r3, .L76
 210 0090 A949     		ldr	r1, .L76+8
 211 0092 0A40     		ands	r2, r1
 212 0094 1A60     		str	r2, [r3]
 213 0096 1EE0     		b	.L11
 214              	.L12:
 215              		.loc 1 295 0 discriminator 4
 216 0098 7B68     		ldr	r3, [r7, #4]
 217 009a 5B68     		ldr	r3, [r3, #4]
 218 009c 052B     		cmp	r3, #5
 219 009e 0ED1     		bne	.L13
 220              		.loc 1 295 0 discriminator 5
 221 00a0 A34B     		ldr	r3, .L76
ARM GAS  /tmp/cccmP2QM.s 			page 10


 222 00a2 1A68     		ldr	r2, [r3]
 223 00a4 A24B     		ldr	r3, .L76
 224 00a6 8021     		movs	r1, #128
 225 00a8 C902     		lsls	r1, r1, #11
 226 00aa 0A43     		orrs	r2, r1
 227 00ac 1A60     		str	r2, [r3]
 228 00ae A04B     		ldr	r3, .L76
 229 00b0 1A68     		ldr	r2, [r3]
 230 00b2 9F4B     		ldr	r3, .L76
 231 00b4 8021     		movs	r1, #128
 232 00b6 4902     		lsls	r1, r1, #9
 233 00b8 0A43     		orrs	r2, r1
 234 00ba 1A60     		str	r2, [r3]
 235 00bc 0BE0     		b	.L11
 236              	.L13:
 237              		.loc 1 295 0 discriminator 6
 238 00be 9C4B     		ldr	r3, .L76
 239 00c0 1A68     		ldr	r2, [r3]
 240 00c2 9B4B     		ldr	r3, .L76
 241 00c4 9B49     		ldr	r1, .L76+4
 242 00c6 0A40     		ands	r2, r1
 243 00c8 1A60     		str	r2, [r3]
 244 00ca 994B     		ldr	r3, .L76
 245 00cc 1A68     		ldr	r2, [r3]
 246 00ce 984B     		ldr	r3, .L76
 247 00d0 9949     		ldr	r1, .L76+8
 248 00d2 0A40     		ands	r2, r1
 249 00d4 1A60     		str	r2, [r3]
 250              	.L11:
 296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Check the HSE State */
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 251              		.loc 1 299 0 is_stmt 1
 252 00d6 7B68     		ldr	r3, [r7, #4]
 253 00d8 5B68     		ldr	r3, [r3, #4]
 254 00da 002B     		cmp	r3, #0
 255 00dc 14D0     		beq	.L14
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 256              		.loc 1 302 0
 257 00de FFF7FEFF 		bl	HAL_GetTick
 258 00e2 0300     		movs	r3, r0
 259 00e4 3B61     		str	r3, [r7, #16]
 303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is ready */
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 260              		.loc 1 305 0
 261 00e6 08E0     		b	.L15
 262              	.L16:
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 263              		.loc 1 307 0
 264 00e8 FFF7FEFF 		bl	HAL_GetTick
 265 00ec 0200     		movs	r2, r0
 266 00ee 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/cccmP2QM.s 			page 11


 267 00f0 D31A     		subs	r3, r2, r3
 268 00f2 642B     		cmp	r3, #100
 269 00f4 01D9     		bls	.L15
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 270              		.loc 1 309 0
 271 00f6 0323     		movs	r3, #3
 272 00f8 DBE2     		b	.L9
 273              	.L15:
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 274              		.loc 1 305 0
 275 00fa 8D4B     		ldr	r3, .L76
 276 00fc 1A68     		ldr	r2, [r3]
 277 00fe 8023     		movs	r3, #128
 278 0100 9B02     		lsls	r3, r3, #10
 279 0102 1340     		ands	r3, r2
 280 0104 F0D0     		beq	.L16
 281 0106 15E0     		b	.L5
 282              	.L14:
 310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 283              		.loc 1 316 0
 284 0108 FFF7FEFF 		bl	HAL_GetTick
 285 010c 0300     		movs	r3, r0
 286 010e 3B61     		str	r3, [r7, #16]
 317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 287              		.loc 1 319 0
 288 0110 08E0     		b	.L17
 289              	.L18:
 320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 290              		.loc 1 321 0
 291 0112 FFF7FEFF 		bl	HAL_GetTick
 292 0116 0200     		movs	r2, r0
 293 0118 3B69     		ldr	r3, [r7, #16]
 294 011a D31A     		subs	r3, r2, r3
 295 011c 642B     		cmp	r3, #100
 296 011e 01D9     		bls	.L17
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 297              		.loc 1 323 0
 298 0120 0323     		movs	r3, #3
 299 0122 C6E2     		b	.L9
 300              	.L17:
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 301              		.loc 1 319 0
 302 0124 824B     		ldr	r3, .L76
 303 0126 1A68     		ldr	r2, [r3]
 304 0128 8023     		movs	r3, #128
 305 012a 9B02     		lsls	r3, r3, #10
ARM GAS  /tmp/cccmP2QM.s 			page 12


 306 012c 1340     		ands	r3, r2
 307 012e F0D1     		bne	.L18
 308 0130 00E0     		b	.L5
 309              	.L74:
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 310              		.loc 1 287 0
 311 0132 C046     		nop
 312              	.L5:
 324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 313              		.loc 1 330 0
 314 0134 7B68     		ldr	r3, [r7, #4]
 315 0136 1B68     		ldr	r3, [r3]
 316 0138 0222     		movs	r2, #2
 317 013a 1340     		ands	r3, r2
 318 013c 00D1     		bne	.LCB269
 319 013e 6CE0     		b	.L19	@long jump
 320              	.LCB269:
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 321              		.loc 1 337 0
 322 0140 7B4B     		ldr	r3, .L76
 323 0142 5B68     		ldr	r3, [r3, #4]
 324 0144 0C22     		movs	r2, #12
 325 0146 1340     		ands	r3, r2
 326 0148 0ED0     		beq	.L20
 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 327              		.loc 1 338 0
 328 014a 794B     		ldr	r3, .L76
 329 014c 5B68     		ldr	r3, [r3, #4]
 330 014e 0C22     		movs	r2, #12
 331 0150 1340     		ands	r3, r2
 332 0152 082B     		cmp	r3, #8
 333 0154 1FD1     		bne	.L21
 334              		.loc 1 338 0 is_stmt 0 discriminator 1
 335 0156 764B     		ldr	r3, .L76
 336 0158 5A68     		ldr	r2, [r3, #4]
 337 015a C023     		movs	r3, #192
 338 015c 5B02     		lsls	r3, r3, #9
 339 015e 1A40     		ands	r2, r3
 340 0160 8023     		movs	r3, #128
 341 0162 1B02     		lsls	r3, r3, #8
 342 0164 9A42     		cmp	r2, r3
 343 0166 16D1     		bne	.L21
 344              	.L20:
 339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
ARM GAS  /tmp/cccmP2QM.s 			page 13


 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 345              		.loc 1 341 0 is_stmt 1
 346 0168 714B     		ldr	r3, .L76
 347 016a 1B68     		ldr	r3, [r3]
 348 016c 0222     		movs	r2, #2
 349 016e 1340     		ands	r3, r2
 350 0170 05D0     		beq	.L22
 351              		.loc 1 341 0 is_stmt 0 discriminator 1
 352 0172 7B68     		ldr	r3, [r7, #4]
 353 0174 DB68     		ldr	r3, [r3, #12]
 354 0176 012B     		cmp	r3, #1
 355 0178 01D0     		beq	.L22
 342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 356              		.loc 1 343 0 is_stmt 1
 357 017a 0123     		movs	r3, #1
 358 017c 99E2     		b	.L9
 359              	.L22:
 344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 360              		.loc 1 349 0
 361 017e 6C4B     		ldr	r3, .L76
 362 0180 1B68     		ldr	r3, [r3]
 363 0182 F822     		movs	r2, #248
 364 0184 9343     		bics	r3, r2
 365 0186 1900     		movs	r1, r3
 366 0188 7B68     		ldr	r3, [r7, #4]
 367 018a 1B69     		ldr	r3, [r3, #16]
 368 018c DA00     		lsls	r2, r3, #3
 369 018e 684B     		ldr	r3, .L76
 370 0190 0A43     		orrs	r2, r1
 371 0192 1A60     		str	r2, [r3]
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 372              		.loc 1 341 0
 373 0194 41E0     		b	.L19
 374              	.L21:
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI State */
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 375              		.loc 1 355 0
 376 0196 7B68     		ldr	r3, [r7, #4]
 377 0198 DB68     		ldr	r3, [r3, #12]
 378 019a 002B     		cmp	r3, #0
 379 019c 24D0     		beq	.L23
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 380              		.loc 1 358 0
 381 019e 644B     		ldr	r3, .L76
 382 01a0 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/cccmP2QM.s 			page 14


 383 01a2 634B     		ldr	r3, .L76
 384 01a4 0121     		movs	r1, #1
 385 01a6 0A43     		orrs	r2, r1
 386 01a8 1A60     		str	r2, [r3]
 359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 387              		.loc 1 361 0
 388 01aa FFF7FEFF 		bl	HAL_GetTick
 389 01ae 0300     		movs	r3, r0
 390 01b0 3B61     		str	r3, [r7, #16]
 362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is ready */
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 391              		.loc 1 364 0
 392 01b2 08E0     		b	.L24
 393              	.L25:
 365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 394              		.loc 1 366 0
 395 01b4 FFF7FEFF 		bl	HAL_GetTick
 396 01b8 0200     		movs	r2, r0
 397 01ba 3B69     		ldr	r3, [r7, #16]
 398 01bc D31A     		subs	r3, r2, r3
 399 01be 022B     		cmp	r3, #2
 400 01c0 01D9     		bls	.L24
 367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 401              		.loc 1 368 0
 402 01c2 0323     		movs	r3, #3
 403 01c4 75E2     		b	.L9
 404              	.L24:
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 405              		.loc 1 364 0
 406 01c6 5A4B     		ldr	r3, .L76
 407 01c8 1B68     		ldr	r3, [r3]
 408 01ca 0222     		movs	r2, #2
 409 01cc 1340     		ands	r3, r2
 410 01ce F1D0     		beq	.L25
 369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                 
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 411              		.loc 1 373 0
 412 01d0 574B     		ldr	r3, .L76
 413 01d2 1B68     		ldr	r3, [r3]
 414 01d4 F822     		movs	r2, #248
 415 01d6 9343     		bics	r3, r2
 416 01d8 1900     		movs	r1, r3
 417 01da 7B68     		ldr	r3, [r7, #4]
 418 01dc 1B69     		ldr	r3, [r3, #16]
 419 01de DA00     		lsls	r2, r3, #3
 420 01e0 534B     		ldr	r3, .L76
 421 01e2 0A43     		orrs	r2, r1
 422 01e4 1A60     		str	r2, [r3]
 423 01e6 18E0     		b	.L19
ARM GAS  /tmp/cccmP2QM.s 			page 15


 424              	.L23:
 374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 425              		.loc 1 378 0
 426 01e8 514B     		ldr	r3, .L76
 427 01ea 1A68     		ldr	r2, [r3]
 428 01ec 504B     		ldr	r3, .L76
 429 01ee 0121     		movs	r1, #1
 430 01f0 8A43     		bics	r2, r1
 431 01f2 1A60     		str	r2, [r3]
 379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 432              		.loc 1 381 0
 433 01f4 FFF7FEFF 		bl	HAL_GetTick
 434 01f8 0300     		movs	r3, r0
 435 01fa 3B61     		str	r3, [r7, #16]
 382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 436              		.loc 1 384 0
 437 01fc 08E0     		b	.L26
 438              	.L27:
 385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 439              		.loc 1 386 0
 440 01fe FFF7FEFF 		bl	HAL_GetTick
 441 0202 0200     		movs	r2, r0
 442 0204 3B69     		ldr	r3, [r7, #16]
 443 0206 D31A     		subs	r3, r2, r3
 444 0208 022B     		cmp	r3, #2
 445 020a 01D9     		bls	.L26
 387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 446              		.loc 1 388 0
 447 020c 0323     		movs	r3, #3
 448 020e 50E2     		b	.L9
 449              	.L26:
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 450              		.loc 1 384 0
 451 0210 474B     		ldr	r3, .L76
 452 0212 1B68     		ldr	r3, [r3]
 453 0214 0222     		movs	r2, #2
 454 0216 1340     		ands	r3, r2
 455 0218 F1D1     		bne	.L27
 456              	.L19:
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 457              		.loc 1 395 0
ARM GAS  /tmp/cccmP2QM.s 			page 16


 458 021a 7B68     		ldr	r3, [r7, #4]
 459 021c 1B68     		ldr	r3, [r3]
 460 021e 0822     		movs	r2, #8
 461 0220 1340     		ands	r3, r2
 462 0222 36D0     		beq	.L28
 396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSI State */
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 463              		.loc 1 401 0
 464 0224 7B68     		ldr	r3, [r7, #4]
 465 0226 DB69     		ldr	r3, [r3, #28]
 466 0228 002B     		cmp	r3, #0
 467 022a 19D0     		beq	.L29
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 468              		.loc 1 404 0
 469 022c 404B     		ldr	r3, .L76
 470 022e 5A6A     		ldr	r2, [r3, #36]
 471 0230 3F4B     		ldr	r3, .L76
 472 0232 0121     		movs	r1, #1
 473 0234 0A43     		orrs	r2, r1
 474 0236 5A62     		str	r2, [r3, #36]
 405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 475              		.loc 1 407 0
 476 0238 FFF7FEFF 		bl	HAL_GetTick
 477 023c 0300     		movs	r3, r0
 478 023e 3B61     		str	r3, [r7, #16]
 408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 479              		.loc 1 410 0
 480 0240 08E0     		b	.L30
 481              	.L31:
 411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 482              		.loc 1 412 0
 483 0242 FFF7FEFF 		bl	HAL_GetTick
 484 0246 0200     		movs	r2, r0
 485 0248 3B69     		ldr	r3, [r7, #16]
 486 024a D31A     		subs	r3, r2, r3
 487 024c 022B     		cmp	r3, #2
 488 024e 01D9     		bls	.L30
 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 489              		.loc 1 414 0
 490 0250 0323     		movs	r3, #3
 491 0252 2EE2     		b	.L9
 492              	.L30:
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 493              		.loc 1 410 0
 494 0254 364B     		ldr	r3, .L76
ARM GAS  /tmp/cccmP2QM.s 			page 17


 495 0256 5B6A     		ldr	r3, [r3, #36]
 496 0258 0222     		movs	r2, #2
 497 025a 1340     		ands	r3, r2
 498 025c F1D0     		beq	.L31
 499 025e 18E0     		b	.L28
 500              	.L29:
 415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 501              		.loc 1 421 0
 502 0260 334B     		ldr	r3, .L76
 503 0262 5A6A     		ldr	r2, [r3, #36]
 504 0264 324B     		ldr	r3, .L76
 505 0266 0121     		movs	r1, #1
 506 0268 8A43     		bics	r2, r1
 507 026a 5A62     		str	r2, [r3, #36]
 422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 508              		.loc 1 424 0
 509 026c FFF7FEFF 		bl	HAL_GetTick
 510 0270 0300     		movs	r3, r0
 511 0272 3B61     		str	r3, [r7, #16]
 425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 512              		.loc 1 427 0
 513 0274 08E0     		b	.L32
 514              	.L33:
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 515              		.loc 1 429 0
 516 0276 FFF7FEFF 		bl	HAL_GetTick
 517 027a 0200     		movs	r2, r0
 518 027c 3B69     		ldr	r3, [r7, #16]
 519 027e D31A     		subs	r3, r2, r3
 520 0280 022B     		cmp	r3, #2
 521 0282 01D9     		bls	.L32
 430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 522              		.loc 1 431 0
 523 0284 0323     		movs	r3, #3
 524 0286 14E2     		b	.L9
 525              	.L32:
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 526              		.loc 1 427 0
 527 0288 294B     		ldr	r3, .L76
 528 028a 5B6A     		ldr	r3, [r3, #36]
 529 028c 0222     		movs	r2, #2
 530 028e 1340     		ands	r3, r2
 531 0290 F1D1     		bne	.L33
 532              	.L28:
 432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
ARM GAS  /tmp/cccmP2QM.s 			page 18


 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 533              		.loc 1 437 0
 534 0292 7B68     		ldr	r3, [r7, #4]
 535 0294 1B68     		ldr	r3, [r3]
 536 0296 0422     		movs	r2, #4
 537 0298 1340     		ands	r3, r2
 538 029a 00D1     		bne	.LCB482
 539 029c B6E0     		b	.L34	@long jump
 540              	.LCB482:
 541              	.LBB2:
 438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 542              		.loc 1 439 0
 543 029e 1723     		movs	r3, #23
 544 02a0 FB18     		adds	r3, r7, r3
 545 02a2 0022     		movs	r2, #0
 546 02a4 1A70     		strb	r2, [r3]
 440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 547              		.loc 1 446 0
 548 02a6 224B     		ldr	r3, .L76
 549 02a8 DA69     		ldr	r2, [r3, #28]
 550 02aa 8023     		movs	r3, #128
 551 02ac 5B05     		lsls	r3, r3, #21
 552 02ae 1340     		ands	r3, r2
 553 02b0 11D1     		bne	.L35
 554              	.LBB3:
 447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 555              		.loc 1 448 0
 556 02b2 1F4B     		ldr	r3, .L76
 557 02b4 DA69     		ldr	r2, [r3, #28]
 558 02b6 1E4B     		ldr	r3, .L76
 559 02b8 8021     		movs	r1, #128
 560 02ba 4905     		lsls	r1, r1, #21
 561 02bc 0A43     		orrs	r2, r1
 562 02be DA61     		str	r2, [r3, #28]
 563 02c0 1B4B     		ldr	r3, .L76
 564 02c2 DA69     		ldr	r2, [r3, #28]
 565 02c4 8023     		movs	r3, #128
 566 02c6 5B05     		lsls	r3, r3, #21
 567 02c8 1340     		ands	r3, r2
 568 02ca FB60     		str	r3, [r7, #12]
 569 02cc FB68     		ldr	r3, [r7, #12]
 570              	.LBE3:
 449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pwrclkchanged = SET;
 571              		.loc 1 449 0
 572 02ce 1723     		movs	r3, #23
ARM GAS  /tmp/cccmP2QM.s 			page 19


 573 02d0 FB18     		adds	r3, r7, r3
 574 02d2 0122     		movs	r2, #1
 575 02d4 1A70     		strb	r2, [r3]
 576              	.L35:
 450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 577              		.loc 1 452 0
 578 02d6 194B     		ldr	r3, .L76+12
 579 02d8 1A68     		ldr	r2, [r3]
 580 02da 8023     		movs	r3, #128
 581 02dc 5B00     		lsls	r3, r3, #1
 582 02de 1340     		ands	r3, r2
 583 02e0 1AD1     		bne	.L36
 453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 584              		.loc 1 455 0
 585 02e2 164B     		ldr	r3, .L76+12
 586 02e4 1A68     		ldr	r2, [r3]
 587 02e6 154B     		ldr	r3, .L76+12
 588 02e8 8021     		movs	r1, #128
 589 02ea 4900     		lsls	r1, r1, #1
 590 02ec 0A43     		orrs	r2, r1
 591 02ee 1A60     		str	r2, [r3]
 456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 592              		.loc 1 458 0
 593 02f0 FFF7FEFF 		bl	HAL_GetTick
 594 02f4 0300     		movs	r3, r0
 595 02f6 3B61     		str	r3, [r7, #16]
 459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 596              		.loc 1 460 0
 597 02f8 08E0     		b	.L37
 598              	.L38:
 461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 599              		.loc 1 462 0
 600 02fa FFF7FEFF 		bl	HAL_GetTick
 601 02fe 0200     		movs	r2, r0
 602 0300 3B69     		ldr	r3, [r7, #16]
 603 0302 D31A     		subs	r3, r2, r3
 604 0304 642B     		cmp	r3, #100
 605 0306 01D9     		bls	.L37
 463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 606              		.loc 1 464 0
 607 0308 0323     		movs	r3, #3
 608 030a D2E1     		b	.L9
 609              	.L37:
 460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 610              		.loc 1 460 0
 611 030c 0B4B     		ldr	r3, .L76+12
 612 030e 1A68     		ldr	r2, [r3]
 613 0310 8023     		movs	r3, #128
ARM GAS  /tmp/cccmP2QM.s 			page 20


 614 0312 5B00     		lsls	r3, r3, #1
 615 0314 1340     		ands	r3, r2
 616 0316 F0D0     		beq	.L38
 617              	.L36:
 465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 618              		.loc 1 470 0
 619 0318 7B68     		ldr	r3, [r7, #4]
 620 031a 9B68     		ldr	r3, [r3, #8]
 621 031c 012B     		cmp	r3, #1
 622 031e 0FD1     		bne	.L39
 623              		.loc 1 470 0 is_stmt 0 discriminator 1
 624 0320 034B     		ldr	r3, .L76
 625 0322 1A6A     		ldr	r2, [r3, #32]
 626 0324 024B     		ldr	r3, .L76
 627 0326 0121     		movs	r1, #1
 628 0328 0A43     		orrs	r2, r1
 629 032a 1A62     		str	r2, [r3, #32]
 630 032c 36E0     		b	.L40
 631              	.L77:
 632 032e C046     		.align	2
 633              	.L76:
 634 0330 00100240 		.word	1073876992
 635 0334 FFFFFEFF 		.word	-65537
 636 0338 FFFFFBFF 		.word	-262145
 637 033c 00700040 		.word	1073770496
 638              	.L39:
 639              		.loc 1 470 0 discriminator 2
 640 0340 7B68     		ldr	r3, [r7, #4]
 641 0342 9B68     		ldr	r3, [r3, #8]
 642 0344 002B     		cmp	r3, #0
 643 0346 0CD1     		bne	.L41
 644              		.loc 1 470 0 discriminator 3
 645 0348 CA4B     		ldr	r3, .L78
 646 034a 1A6A     		ldr	r2, [r3, #32]
 647 034c C94B     		ldr	r3, .L78
 648 034e 0121     		movs	r1, #1
 649 0350 8A43     		bics	r2, r1
 650 0352 1A62     		str	r2, [r3, #32]
 651 0354 C74B     		ldr	r3, .L78
 652 0356 1A6A     		ldr	r2, [r3, #32]
 653 0358 C64B     		ldr	r3, .L78
 654 035a 0421     		movs	r1, #4
 655 035c 8A43     		bics	r2, r1
 656 035e 1A62     		str	r2, [r3, #32]
 657 0360 1CE0     		b	.L40
 658              	.L41:
 659              		.loc 1 470 0 discriminator 4
 660 0362 7B68     		ldr	r3, [r7, #4]
 661 0364 9B68     		ldr	r3, [r3, #8]
 662 0366 052B     		cmp	r3, #5
 663 0368 0CD1     		bne	.L42
 664              		.loc 1 470 0 discriminator 5
ARM GAS  /tmp/cccmP2QM.s 			page 21


 665 036a C24B     		ldr	r3, .L78
 666 036c 1A6A     		ldr	r2, [r3, #32]
 667 036e C14B     		ldr	r3, .L78
 668 0370 0421     		movs	r1, #4
 669 0372 0A43     		orrs	r2, r1
 670 0374 1A62     		str	r2, [r3, #32]
 671 0376 BF4B     		ldr	r3, .L78
 672 0378 1A6A     		ldr	r2, [r3, #32]
 673 037a BE4B     		ldr	r3, .L78
 674 037c 0121     		movs	r1, #1
 675 037e 0A43     		orrs	r2, r1
 676 0380 1A62     		str	r2, [r3, #32]
 677 0382 0BE0     		b	.L40
 678              	.L42:
 679              		.loc 1 470 0 discriminator 6
 680 0384 BB4B     		ldr	r3, .L78
 681 0386 1A6A     		ldr	r2, [r3, #32]
 682 0388 BA4B     		ldr	r3, .L78
 683 038a 0121     		movs	r1, #1
 684 038c 8A43     		bics	r2, r1
 685 038e 1A62     		str	r2, [r3, #32]
 686 0390 B84B     		ldr	r3, .L78
 687 0392 1A6A     		ldr	r2, [r3, #32]
 688 0394 B74B     		ldr	r3, .L78
 689 0396 0421     		movs	r1, #4
 690 0398 8A43     		bics	r2, r1
 691 039a 1A62     		str	r2, [r3, #32]
 692              	.L40:
 471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 693              		.loc 1 472 0 is_stmt 1
 694 039c 7B68     		ldr	r3, [r7, #4]
 695 039e 9B68     		ldr	r3, [r3, #8]
 696 03a0 002B     		cmp	r3, #0
 697 03a2 14D0     		beq	.L43
 473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 698              		.loc 1 475 0
 699 03a4 FFF7FEFF 		bl	HAL_GetTick
 700 03a8 0300     		movs	r3, r0
 701 03aa 3B61     		str	r3, [r7, #16]
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 702              		.loc 1 478 0
 703 03ac 09E0     		b	.L44
 704              	.L45:
 479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 705              		.loc 1 480 0
 706 03ae FFF7FEFF 		bl	HAL_GetTick
 707 03b2 0200     		movs	r2, r0
 708 03b4 3B69     		ldr	r3, [r7, #16]
 709 03b6 D31A     		subs	r3, r2, r3
 710 03b8 AF4A     		ldr	r2, .L78+4
 711 03ba 9342     		cmp	r3, r2
ARM GAS  /tmp/cccmP2QM.s 			page 22


 712 03bc 01D9     		bls	.L44
 481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 713              		.loc 1 482 0
 714 03be 0323     		movs	r3, #3
 715 03c0 77E1     		b	.L9
 716              	.L44:
 478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 717              		.loc 1 478 0
 718 03c2 AC4B     		ldr	r3, .L78
 719 03c4 1B6A     		ldr	r3, [r3, #32]
 720 03c6 0222     		movs	r2, #2
 721 03c8 1340     		ands	r3, r2
 722 03ca F0D0     		beq	.L45
 723 03cc 13E0     		b	.L46
 724              	.L43:
 483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 725              		.loc 1 489 0
 726 03ce FFF7FEFF 		bl	HAL_GetTick
 727 03d2 0300     		movs	r3, r0
 728 03d4 3B61     		str	r3, [r7, #16]
 490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 729              		.loc 1 492 0
 730 03d6 09E0     		b	.L47
 731              	.L48:
 493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 732              		.loc 1 494 0
 733 03d8 FFF7FEFF 		bl	HAL_GetTick
 734 03dc 0200     		movs	r2, r0
 735 03de 3B69     		ldr	r3, [r7, #16]
 736 03e0 D31A     		subs	r3, r2, r3
 737 03e2 A54A     		ldr	r2, .L78+4
 738 03e4 9342     		cmp	r3, r2
 739 03e6 01D9     		bls	.L47
 495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 740              		.loc 1 496 0
 741 03e8 0323     		movs	r3, #3
 742 03ea 62E1     		b	.L9
 743              	.L47:
 492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 744              		.loc 1 492 0
 745 03ec A14B     		ldr	r3, .L78
 746 03ee 1B6A     		ldr	r3, [r3, #32]
 747 03f0 0222     		movs	r2, #2
 748 03f2 1340     		ands	r3, r2
 749 03f4 F0D1     		bne	.L48
 750              	.L46:
ARM GAS  /tmp/cccmP2QM.s 			page 23


 497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 751              		.loc 1 502 0
 752 03f6 1723     		movs	r3, #23
 753 03f8 FB18     		adds	r3, r7, r3
 754 03fa 1B78     		ldrb	r3, [r3]
 755 03fc 012B     		cmp	r3, #1
 756 03fe 05D1     		bne	.L34
 503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 757              		.loc 1 504 0
 758 0400 9C4B     		ldr	r3, .L78
 759 0402 DA69     		ldr	r2, [r3, #28]
 760 0404 9B4B     		ldr	r3, .L78
 761 0406 9D49     		ldr	r1, .L78+8
 762 0408 0A40     		ands	r2, r1
 763 040a DA61     		str	r2, [r3, #28]
 764              	.L34:
 765              	.LBE2:
 505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 766              		.loc 1 509 0
 767 040c 7B68     		ldr	r3, [r7, #4]
 768 040e 1B68     		ldr	r3, [r3]
 769 0410 1022     		movs	r2, #16
 770 0412 1340     		ands	r3, r2
 771 0414 63D0     		beq	.L49
 510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the HSI14 State */
 516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 772              		.loc 1 516 0
 773 0416 7B68     		ldr	r3, [r7, #4]
 774 0418 5B69     		ldr	r3, [r3, #20]
 775 041a 012B     		cmp	r3, #1
 776 041c 2AD1     		bne	.L50
 517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 777              		.loc 1 519 0
 778 041e 954B     		ldr	r3, .L78
 779 0420 5A6B     		ldr	r2, [r3, #52]
 780 0422 944B     		ldr	r3, .L78
 781 0424 0421     		movs	r1, #4
 782 0426 0A43     		orrs	r2, r1
 783 0428 5A63     		str	r2, [r3, #52]
 520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/cccmP2QM.s 			page 24


 521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_ENABLE();
 784              		.loc 1 522 0
 785 042a 924B     		ldr	r3, .L78
 786 042c 5A6B     		ldr	r2, [r3, #52]
 787 042e 914B     		ldr	r3, .L78
 788 0430 0121     		movs	r1, #1
 789 0432 0A43     		orrs	r2, r1
 790 0434 5A63     		str	r2, [r3, #52]
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 791              		.loc 1 525 0
 792 0436 FFF7FEFF 		bl	HAL_GetTick
 793 043a 0300     		movs	r3, r0
 794 043c 3B61     		str	r3, [r7, #16]
 526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 795              		.loc 1 528 0
 796 043e 08E0     		b	.L51
 797              	.L52:
 529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 798              		.loc 1 530 0
 799 0440 FFF7FEFF 		bl	HAL_GetTick
 800 0444 0200     		movs	r2, r0
 801 0446 3B69     		ldr	r3, [r7, #16]
 802 0448 D31A     		subs	r3, r2, r3
 803 044a 022B     		cmp	r3, #2
 804 044c 01D9     		bls	.L51
 531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 805              		.loc 1 532 0
 806 044e 0323     		movs	r3, #3
 807 0450 2FE1     		b	.L9
 808              	.L51:
 528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 809              		.loc 1 528 0
 810 0452 884B     		ldr	r3, .L78
 811 0454 5B6B     		ldr	r3, [r3, #52]
 812 0456 0222     		movs	r2, #2
 813 0458 1340     		ands	r3, r2
 814 045a F1D0     		beq	.L52
 533:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       } 
 535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 815              		.loc 1 537 0
 816 045c 854B     		ldr	r3, .L78
 817 045e 5B6B     		ldr	r3, [r3, #52]
 818 0460 F822     		movs	r2, #248
 819 0462 9343     		bics	r3, r2
 820 0464 1900     		movs	r1, r3
 821 0466 7B68     		ldr	r3, [r7, #4]
 822 0468 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/cccmP2QM.s 			page 25


 823 046a DA00     		lsls	r2, r3, #3
 824 046c 814B     		ldr	r3, .L78
 825 046e 0A43     		orrs	r2, r1
 826 0470 5A63     		str	r2, [r3, #52]
 827 0472 34E0     		b	.L49
 828              	.L50:
 538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 539:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 829              		.loc 1 539 0
 830 0474 7B68     		ldr	r3, [r7, #4]
 831 0476 5B69     		ldr	r3, [r3, #20]
 832 0478 0533     		adds	r3, r3, #5
 833 047a 11D1     		bne	.L53
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 541:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 834              		.loc 1 542 0
 835 047c 7D4B     		ldr	r3, .L78
 836 047e 5A6B     		ldr	r2, [r3, #52]
 837 0480 7C4B     		ldr	r3, .L78
 838 0482 0421     		movs	r1, #4
 839 0484 8A43     		bics	r2, r1
 840 0486 5A63     		str	r2, [r3, #52]
 543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 544:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 545:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 841              		.loc 1 545 0
 842 0488 7A4B     		ldr	r3, .L78
 843 048a 5B6B     		ldr	r3, [r3, #52]
 844 048c F822     		movs	r2, #248
 845 048e 9343     		bics	r3, r2
 846 0490 1900     		movs	r1, r3
 847 0492 7B68     		ldr	r3, [r7, #4]
 848 0494 9B69     		ldr	r3, [r3, #24]
 849 0496 DA00     		lsls	r2, r3, #3
 850 0498 764B     		ldr	r3, .L78
 851 049a 0A43     		orrs	r2, r1
 852 049c 5A63     		str	r2, [r3, #52]
 853 049e 1EE0     		b	.L49
 854              	.L53:
 546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 548:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 855              		.loc 1 550 0
 856 04a0 744B     		ldr	r3, .L78
 857 04a2 5A6B     		ldr	r2, [r3, #52]
 858 04a4 734B     		ldr	r3, .L78
 859 04a6 0421     		movs	r1, #4
 860 04a8 0A43     		orrs	r2, r1
 861 04aa 5A63     		str	r2, [r3, #52]
 551:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 552:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_DISABLE();
 862              		.loc 1 553 0
 863 04ac 714B     		ldr	r3, .L78
ARM GAS  /tmp/cccmP2QM.s 			page 26


 864 04ae 5A6B     		ldr	r2, [r3, #52]
 865 04b0 704B     		ldr	r3, .L78
 866 04b2 0121     		movs	r1, #1
 867 04b4 8A43     		bics	r2, r1
 868 04b6 5A63     		str	r2, [r3, #52]
 554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 555:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 869              		.loc 1 556 0
 870 04b8 FFF7FEFF 		bl	HAL_GetTick
 871 04bc 0300     		movs	r3, r0
 872 04be 3B61     		str	r3, [r7, #16]
 557:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 558:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 873              		.loc 1 559 0
 874 04c0 08E0     		b	.L54
 875              	.L55:
 560:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 876              		.loc 1 561 0
 877 04c2 FFF7FEFF 		bl	HAL_GetTick
 878 04c6 0200     		movs	r2, r0
 879 04c8 3B69     		ldr	r3, [r7, #16]
 880 04ca D31A     		subs	r3, r2, r3
 881 04cc 022B     		cmp	r3, #2
 882 04ce 01D9     		bls	.L54
 562:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 883              		.loc 1 563 0
 884 04d0 0323     		movs	r3, #3
 885 04d2 EEE0     		b	.L9
 886              	.L54:
 559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 887              		.loc 1 559 0
 888 04d4 674B     		ldr	r3, .L78
 889 04d6 5B6B     		ldr	r3, [r3, #52]
 890 04d8 0222     		movs	r2, #2
 891 04da 1340     		ands	r3, r2
 892 04dc F1D1     		bne	.L55
 893              	.L49:
 564:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 568:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 569:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 571:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 894              		.loc 1 571 0
 895 04de 7B68     		ldr	r3, [r7, #4]
 896 04e0 1B68     		ldr	r3, [r3]
 897 04e2 2022     		movs	r2, #32
 898 04e4 1340     		ands	r3, r2
 899 04e6 5CD0     		beq	.L56
 572:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 573:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
ARM GAS  /tmp/cccmP2QM.s 			page 27


 574:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 900              		.loc 1 577 0
 901 04e8 624B     		ldr	r3, .L78
 902 04ea 5B68     		ldr	r3, [r3, #4]
 903 04ec 0C22     		movs	r2, #12
 904 04ee 1340     		ands	r3, r2
 905 04f0 0C2B     		cmp	r3, #12
 906 04f2 0ED0     		beq	.L57
 578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 907              		.loc 1 578 0 discriminator 1
 908 04f4 5F4B     		ldr	r3, .L78
 909 04f6 5B68     		ldr	r3, [r3, #4]
 910 04f8 0C22     		movs	r2, #12
 911 04fa 1340     		ands	r3, r2
 577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 912              		.loc 1 577 0 discriminator 1
 913 04fc 082B     		cmp	r3, #8
 914 04fe 14D1     		bne	.L58
 915              		.loc 1 578 0
 916 0500 5C4B     		ldr	r3, .L78
 917 0502 5A68     		ldr	r2, [r3, #4]
 918 0504 C023     		movs	r3, #192
 919 0506 5B02     		lsls	r3, r3, #9
 920 0508 1A40     		ands	r2, r3
 921 050a C023     		movs	r3, #192
 922 050c 5B02     		lsls	r3, r3, #9
 923 050e 9A42     		cmp	r2, r3
 924 0510 0BD1     		bne	.L58
 925              	.L57:
 579:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 926              		.loc 1 580 0
 927 0512 584B     		ldr	r3, .L78
 928 0514 5A6B     		ldr	r2, [r3, #52]
 929 0516 8023     		movs	r3, #128
 930 0518 5B02     		lsls	r3, r3, #9
 931 051a 1340     		ands	r3, r2
 932 051c 40D0     		beq	.L75
 933              		.loc 1 580 0 is_stmt 0 discriminator 1
 934 051e 7B68     		ldr	r3, [r7, #4]
 935 0520 1B6A     		ldr	r3, [r3, #32]
 936 0522 012B     		cmp	r3, #1
 937 0524 3CD0     		beq	.L75
 581:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 938              		.loc 1 582 0 is_stmt 1
 939 0526 0123     		movs	r3, #1
 940 0528 C3E0     		b	.L9
 941              	.L58:
 583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 584:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 State */
ARM GAS  /tmp/cccmP2QM.s 			page 28


 588:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 942              		.loc 1 588 0
 943 052a 7B68     		ldr	r3, [r7, #4]
 944 052c 1B6A     		ldr	r3, [r3, #32]
 945 052e 002B     		cmp	r3, #0
 946 0530 1BD0     		beq	.L60
 589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 591:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_ENABLE();
 947              		.loc 1 591 0
 948 0532 504B     		ldr	r3, .L78
 949 0534 5A6B     		ldr	r2, [r3, #52]
 950 0536 4F4B     		ldr	r3, .L78
 951 0538 8021     		movs	r1, #128
 952 053a 4902     		lsls	r1, r1, #9
 953 053c 0A43     		orrs	r2, r1
 954 053e 5A63     		str	r2, [r3, #52]
 592:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 593:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 594:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 955              		.loc 1 594 0
 956 0540 FFF7FEFF 		bl	HAL_GetTick
 957 0544 0300     		movs	r3, r0
 958 0546 3B61     		str	r3, [r7, #16]
 595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 596:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 959              		.loc 1 597 0
 960 0548 08E0     		b	.L61
 961              	.L62:
 598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 599:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 962              		.loc 1 599 0
 963 054a FFF7FEFF 		bl	HAL_GetTick
 964 054e 0200     		movs	r2, r0
 965 0550 3B69     		ldr	r3, [r7, #16]
 966 0552 D31A     		subs	r3, r2, r3
 967 0554 022B     		cmp	r3, #2
 968 0556 01D9     		bls	.L61
 600:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 601:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 969              		.loc 1 601 0
 970 0558 0323     		movs	r3, #3
 971 055a AAE0     		b	.L9
 972              	.L61:
 597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 973              		.loc 1 597 0
 974 055c 454B     		ldr	r3, .L78
 975 055e 5A6B     		ldr	r2, [r3, #52]
 976 0560 8023     		movs	r3, #128
 977 0562 5B02     		lsls	r3, r3, #9
 978 0564 1340     		ands	r3, r2
 979 0566 F0D0     		beq	.L62
 980 0568 1BE0     		b	.L56
 981              	.L60:
 602:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         } 
ARM GAS  /tmp/cccmP2QM.s 			page 29


 604:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 606:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 607:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 608:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_DISABLE();
 982              		.loc 1 608 0
 983 056a 424B     		ldr	r3, .L78
 984 056c 5A6B     		ldr	r2, [r3, #52]
 985 056e 414B     		ldr	r3, .L78
 986 0570 4349     		ldr	r1, .L78+12
 987 0572 0A40     		ands	r2, r1
 988 0574 5A63     		str	r2, [r3, #52]
 609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 610:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 611:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 989              		.loc 1 611 0
 990 0576 FFF7FEFF 		bl	HAL_GetTick
 991 057a 0300     		movs	r3, r0
 992 057c 3B61     		str	r3, [r7, #16]
 612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 613:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 993              		.loc 1 614 0
 994 057e 08E0     		b	.L63
 995              	.L64:
 615:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 996              		.loc 1 616 0
 997 0580 FFF7FEFF 		bl	HAL_GetTick
 998 0584 0200     		movs	r2, r0
 999 0586 3B69     		ldr	r3, [r7, #16]
 1000 0588 D31A     		subs	r3, r2, r3
 1001 058a 022B     		cmp	r3, #2
 1002 058c 01D9     		bls	.L63
 617:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 618:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1003              		.loc 1 618 0
 1004 058e 0323     		movs	r3, #3
 1005 0590 8FE0     		b	.L9
 1006              	.L63:
 614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1007              		.loc 1 614 0
 1008 0592 384B     		ldr	r3, .L78
 1009 0594 5A6B     		ldr	r2, [r3, #52]
 1010 0596 8023     		movs	r3, #128
 1011 0598 5B02     		lsls	r3, r3, #9
 1012 059a 1340     		ands	r3, r2
 1013 059c F0D1     		bne	.L64
 1014 059e 00E0     		b	.L56
 1015              	.L75:
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1016              		.loc 1 580 0
 1017 05a0 C046     		nop
 1018              	.L56:
 619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 620:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
ARM GAS  /tmp/cccmP2QM.s 			page 30


 622:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 623:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 625:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        
 626:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 627:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 628:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1019              		.loc 1 629 0
 1020 05a2 7B68     		ldr	r3, [r7, #4]
 1021 05a4 5B6A     		ldr	r3, [r3, #36]
 1022 05a6 002B     		cmp	r3, #0
 1023 05a8 00D1     		bne	.LCB955
 1024 05aa 81E0     		b	.L65	@long jump
 1025              	.LCB955:
 630:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 631:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1026              		.loc 1 632 0
 1027 05ac 314B     		ldr	r3, .L78
 1028 05ae 5B68     		ldr	r3, [r3, #4]
 1029 05b0 0C22     		movs	r2, #12
 1030 05b2 1340     		ands	r3, r2
 1031 05b4 082B     		cmp	r3, #8
 1032 05b6 00D1     		bne	.LCB961
 1033 05b8 78E0     		b	.L66	@long jump
 1034              	.LCB961:
 633:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     { 
 634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1035              		.loc 1 634 0
 1036 05ba 7B68     		ldr	r3, [r7, #4]
 1037 05bc 5B6A     		ldr	r3, [r3, #36]
 1038 05be 022B     		cmp	r3, #2
 1039 05c0 4CD1     		bne	.L67
 635:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 636:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Check the parameters */
 637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 638:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 639:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 641:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1040              		.loc 1 642 0
 1041 05c2 2C4B     		ldr	r3, .L78
 1042 05c4 1A68     		ldr	r2, [r3]
 1043 05c6 2B4B     		ldr	r3, .L78
 1044 05c8 2E49     		ldr	r1, .L78+16
 1045 05ca 0A40     		ands	r2, r1
 1046 05cc 1A60     		str	r2, [r3]
 643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 644:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1047              		.loc 1 645 0
 1048 05ce FFF7FEFF 		bl	HAL_GetTick
 1049 05d2 0300     		movs	r3, r0
 1050 05d4 3B61     		str	r3, [r7, #16]
 646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
ARM GAS  /tmp/cccmP2QM.s 			page 31


 647:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1051              		.loc 1 648 0
 1052 05d6 08E0     		b	.L68
 1053              	.L69:
 649:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1054              		.loc 1 650 0
 1055 05d8 FFF7FEFF 		bl	HAL_GetTick
 1056 05dc 0200     		movs	r2, r0
 1057 05de 3B69     		ldr	r3, [r7, #16]
 1058 05e0 D31A     		subs	r3, r2, r3
 1059 05e2 022B     		cmp	r3, #2
 1060 05e4 01D9     		bls	.L68
 651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1061              		.loc 1 652 0
 1062 05e6 0323     		movs	r3, #3
 1063 05e8 63E0     		b	.L9
 1064              	.L68:
 648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1065              		.loc 1 648 0
 1066 05ea 224B     		ldr	r3, .L78
 1067 05ec 1A68     		ldr	r2, [r3]
 1068 05ee 8023     		movs	r3, #128
 1069 05f0 9B04     		lsls	r3, r3, #18
 1070 05f2 1340     		ands	r3, r2
 1071 05f4 F0D1     		bne	.L69
 653:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 655:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 656:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1072              		.loc 1 657 0
 1073 05f6 1F4B     		ldr	r3, .L78
 1074 05f8 DB6A     		ldr	r3, [r3, #44]
 1075 05fa 0F22     		movs	r2, #15
 1076 05fc 9343     		bics	r3, r2
 1077 05fe 1900     		movs	r1, r3
 1078 0600 7B68     		ldr	r3, [r7, #4]
 1079 0602 1A6B     		ldr	r2, [r3, #48]
 1080 0604 1B4B     		ldr	r3, .L78
 1081 0606 0A43     		orrs	r2, r1
 1082 0608 DA62     		str	r2, [r3, #44]
 1083 060a 1A4B     		ldr	r3, .L78
 1084 060c 5B68     		ldr	r3, [r3, #4]
 1085 060e 1E4A     		ldr	r2, .L78+20
 1086 0610 1340     		ands	r3, r2
 1087 0612 1900     		movs	r1, r3
 1088 0614 7B68     		ldr	r3, [r7, #4]
 1089 0616 DA6A     		ldr	r2, [r3, #44]
 1090 0618 7B68     		ldr	r3, [r7, #4]
 1091 061a 9B6A     		ldr	r3, [r3, #40]
 1092 061c 1A43     		orrs	r2, r3
 1093 061e 154B     		ldr	r3, .L78
 1094 0620 0A43     		orrs	r2, r1
 1095 0622 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/cccmP2QM.s 			page 32


 658:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 659:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 660:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the main PLL. */
 661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1096              		.loc 1 661 0
 1097 0624 134B     		ldr	r3, .L78
 1098 0626 1A68     		ldr	r2, [r3]
 1099 0628 124B     		ldr	r3, .L78
 1100 062a 8021     		movs	r1, #128
 1101 062c 4904     		lsls	r1, r1, #17
 1102 062e 0A43     		orrs	r2, r1
 1103 0630 1A60     		str	r2, [r3]
 662:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 663:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1104              		.loc 1 664 0
 1105 0632 FFF7FEFF 		bl	HAL_GetTick
 1106 0636 0300     		movs	r3, r0
 1107 0638 3B61     		str	r3, [r7, #16]
 665:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is ready */
 667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1108              		.loc 1 667 0
 1109 063a 08E0     		b	.L70
 1110              	.L71:
 668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1111              		.loc 1 669 0
 1112 063c FFF7FEFF 		bl	HAL_GetTick
 1113 0640 0200     		movs	r2, r0
 1114 0642 3B69     		ldr	r3, [r7, #16]
 1115 0644 D31A     		subs	r3, r2, r3
 1116 0646 022B     		cmp	r3, #2
 1117 0648 01D9     		bls	.L70
 670:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1118              		.loc 1 671 0
 1119 064a 0323     		movs	r3, #3
 1120 064c 31E0     		b	.L9
 1121              	.L70:
 667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1122              		.loc 1 667 0
 1123 064e 094B     		ldr	r3, .L78
 1124 0650 1A68     		ldr	r2, [r3]
 1125 0652 8023     		movs	r3, #128
 1126 0654 9B04     		lsls	r3, r3, #18
 1127 0656 1340     		ands	r3, r2
 1128 0658 F0D0     		beq	.L71
 1129 065a 29E0     		b	.L65
 1130              	.L67:
 672:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 674:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 676:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 677:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
ARM GAS  /tmp/cccmP2QM.s 			page 33


 1131              		.loc 1 678 0
 1132 065c 054B     		ldr	r3, .L78
 1133 065e 1A68     		ldr	r2, [r3]
 1134 0660 044B     		ldr	r3, .L78
 1135 0662 0849     		ldr	r1, .L78+16
 1136 0664 0A40     		ands	r2, r1
 1137 0666 1A60     		str	r2, [r3]
 679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  
 680:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 681:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1138              		.loc 1 681 0
 1139 0668 FFF7FEFF 		bl	HAL_GetTick
 1140 066c 0300     		movs	r3, r0
 1141 066e 3B61     		str	r3, [r7, #16]
 682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1142              		.loc 1 684 0
 1143 0670 15E0     		b	.L72
 1144              	.L79:
 1145 0672 C046     		.align	2
 1146              	.L78:
 1147 0674 00100240 		.word	1073876992
 1148 0678 88130000 		.word	5000
 1149 067c FFFFFFEF 		.word	-268435457
 1150 0680 FFFFFEFF 		.word	-65537
 1151 0684 FFFFFFFE 		.word	-16777217
 1152 0688 FF7FC2FF 		.word	-4030465
 1153              	.L73:
 685:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1154              		.loc 1 686 0
 1155 068c FFF7FEFF 		bl	HAL_GetTick
 1156 0690 0200     		movs	r2, r0
 1157 0692 3B69     		ldr	r3, [r7, #16]
 1158 0694 D31A     		subs	r3, r2, r3
 1159 0696 022B     		cmp	r3, #2
 1160 0698 01D9     		bls	.L72
 687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 688:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1161              		.loc 1 688 0
 1162 069a 0323     		movs	r3, #3
 1163 069c 09E0     		b	.L9
 1164              	.L72:
 684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1165              		.loc 1 684 0
 1166 069e 074B     		ldr	r3, .L80
 1167 06a0 1A68     		ldr	r2, [r3]
 1168 06a2 8023     		movs	r3, #128
 1169 06a4 9B04     		lsls	r3, r3, #18
 1170 06a6 1340     		ands	r3, r2
 1171 06a8 F0D1     		bne	.L73
 1172 06aa 01E0     		b	.L65
 1173              	.L66:
 689:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
ARM GAS  /tmp/cccmP2QM.s 			page 34


 692:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 693:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 1174              		.loc 1 695 0
 1175 06ac 0123     		movs	r3, #1
 1176 06ae 00E0     		b	.L9
 1177              	.L65:
 696:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 697:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 698:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 699:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 1178              		.loc 1 699 0
 1179 06b0 0023     		movs	r3, #0
 1180              	.L9:
 700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1181              		.loc 1 700 0
 1182 06b2 1800     		movs	r0, r3
 1183 06b4 BD46     		mov	sp, r7
 1184 06b6 06B0     		add	sp, sp, #24
 1185              		@ sp needed
 1186 06b8 80BD     		pop	{r7, pc}
 1187              	.L81:
 1188 06ba C046     		.align	2
 1189              	.L80:
 1190 06bc 00100240 		.word	1073876992
 1191              		.cfi_endproc
 1192              	.LFE38:
 1194              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1195              		.align	1
 1196              		.global	HAL_RCC_ClockConfig
 1197              		.syntax unified
 1198              		.code	16
 1199              		.thumb_func
 1200              		.fpu softvfp
 1202              	HAL_RCC_ClockConfig:
 1203              	.LFB39:
 701:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 702:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 703:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 705:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 706:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 708:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 709:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 710:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 711:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 712:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 713:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 714:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 715:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 716:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
 717:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 719:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 720:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
ARM GAS  /tmp/cccmP2QM.s 			page 35


 721:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         currently used as system clock source.
 723:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 725:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1204              		.loc 1 726 0
 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 16
 1207              		@ frame_needed = 1, uses_anonymous_args = 0
 1208 0000 80B5     		push	{r7, lr}
 1209              		.cfi_def_cfa_offset 8
 1210              		.cfi_offset 7, -8
 1211              		.cfi_offset 14, -4
 1212 0002 84B0     		sub	sp, sp, #16
 1213              		.cfi_def_cfa_offset 24
 1214 0004 00AF     		add	r7, sp, #0
 1215              		.cfi_def_cfa_register 7
 1216 0006 7860     		str	r0, [r7, #4]
 1217 0008 3960     		str	r1, [r7]
 727:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1218              		.loc 1 727 0
 1219 000a 0023     		movs	r3, #0
 1220 000c FB60     		str	r3, [r7, #12]
 728:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 731:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 732:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 735:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 736:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     (HCLK) of the device. */
 737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1221              		.loc 1 739 0
 1222 000e 7B4B     		ldr	r3, .L104
 1223 0010 1B68     		ldr	r3, [r3]
 1224 0012 0122     		movs	r2, #1
 1225 0014 1340     		ands	r3, r2
 1226 0016 3A68     		ldr	r2, [r7]
 1227 0018 9A42     		cmp	r2, r3
 1228 001a 11D9     		bls	.L83
 740:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1229              		.loc 1 742 0
 1230 001c 774B     		ldr	r3, .L104
 1231 001e 1B68     		ldr	r3, [r3]
 1232 0020 0122     		movs	r2, #1
 1233 0022 9343     		bics	r3, r2
 1234 0024 1900     		movs	r1, r3
 1235 0026 754B     		ldr	r3, .L104
 1236 0028 3A68     		ldr	r2, [r7]
 1237 002a 0A43     		orrs	r2, r1
 1238 002c 1A60     		str	r2, [r3]
ARM GAS  /tmp/cccmP2QM.s 			page 36


 743:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 744:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1239              		.loc 1 746 0
 1240 002e 734B     		ldr	r3, .L104
 1241 0030 1B68     		ldr	r3, [r3]
 1242 0032 0122     		movs	r2, #1
 1243 0034 1340     		ands	r3, r2
 1244 0036 3A68     		ldr	r2, [r7]
 1245 0038 9A42     		cmp	r2, r3
 1246 003a 01D0     		beq	.L83
 747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 1247              		.loc 1 748 0
 1248 003c 0123     		movs	r3, #1
 1249 003e D8E0     		b	.L84
 1250              	.L83:
 749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 750:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 751:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1251              		.loc 1 753 0
 1252 0040 7B68     		ldr	r3, [r7, #4]
 1253 0042 1B68     		ldr	r3, [r3]
 1254 0044 0222     		movs	r2, #2
 1255 0046 1340     		ands	r3, r2
 1256 0048 09D0     		beq	.L85
 754:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 755:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1257              		.loc 1 756 0
 1258 004a 6D4B     		ldr	r3, .L104+4
 1259 004c 5B68     		ldr	r3, [r3, #4]
 1260 004e F022     		movs	r2, #240
 1261 0050 9343     		bics	r3, r2
 1262 0052 1900     		movs	r1, r3
 1263 0054 7B68     		ldr	r3, [r7, #4]
 1264 0056 9A68     		ldr	r2, [r3, #8]
 1265 0058 694B     		ldr	r3, .L104+4
 1266 005a 0A43     		orrs	r2, r1
 1267 005c 5A60     		str	r2, [r3, #4]
 1268              	.L85:
 757:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 759:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1269              		.loc 1 760 0
 1270 005e 7B68     		ldr	r3, [r7, #4]
 1271 0060 1B68     		ldr	r3, [r3]
 1272 0062 0122     		movs	r2, #1
 1273 0064 1340     		ands	r3, r2
 1274 0066 00D1     		bne	.LCB1194
 1275 0068 89E0     		b	.L86	@long jump
 1276              	.LCB1194:
 761:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
ARM GAS  /tmp/cccmP2QM.s 			page 37


 762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 763:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 764:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1277              		.loc 1 765 0
 1278 006a 7B68     		ldr	r3, [r7, #4]
 1279 006c 5B68     		ldr	r3, [r3, #4]
 1280 006e 012B     		cmp	r3, #1
 1281 0070 07D1     		bne	.L87
 766:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 767:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1282              		.loc 1 768 0
 1283 0072 634B     		ldr	r3, .L104+4
 1284 0074 1A68     		ldr	r2, [r3]
 1285 0076 8023     		movs	r3, #128
 1286 0078 9B02     		lsls	r3, r3, #10
 1287 007a 1340     		ands	r3, r2
 1288 007c 20D1     		bne	.L88
 769:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1289              		.loc 1 770 0
 1290 007e 0123     		movs	r3, #1
 1291 0080 B7E0     		b	.L84
 1292              	.L87:
 771:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 772:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 773:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1293              		.loc 1 774 0
 1294 0082 7B68     		ldr	r3, [r7, #4]
 1295 0084 5B68     		ldr	r3, [r3, #4]
 1296 0086 022B     		cmp	r3, #2
 1297 0088 07D1     		bne	.L89
 775:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 776:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1298              		.loc 1 777 0
 1299 008a 5D4B     		ldr	r3, .L104+4
 1300 008c 1A68     		ldr	r2, [r3]
 1301 008e 8023     		movs	r3, #128
 1302 0090 9B04     		lsls	r3, r3, #18
 1303 0092 1340     		ands	r3, r2
 1304 0094 14D1     		bne	.L88
 778:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1305              		.loc 1 779 0
 1306 0096 0123     		movs	r3, #1
 1307 0098 ABE0     		b	.L84
 1308              	.L89:
 780:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 781:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 782:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 783:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI48 is selected as System Clock Source */
 784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 1309              		.loc 1 784 0
 1310 009a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cccmP2QM.s 			page 38


 1311 009c 5B68     		ldr	r3, [r3, #4]
 1312 009e 032B     		cmp	r3, #3
 1313 00a0 07D1     		bne	.L90
 785:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 786:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 ready flag */
 787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 1314              		.loc 1 787 0
 1315 00a2 574B     		ldr	r3, .L104+4
 1316 00a4 5A6B     		ldr	r2, [r3, #52]
 1317 00a6 8023     		movs	r3, #128
 1318 00a8 5B02     		lsls	r3, r3, #9
 1319 00aa 1340     		ands	r3, r2
 1320 00ac 08D1     		bne	.L88
 788:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1321              		.loc 1 789 0
 1322 00ae 0123     		movs	r3, #1
 1323 00b0 9FE0     		b	.L84
 1324              	.L90:
 790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 791:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 792:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 793:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1325              		.loc 1 797 0
 1326 00b2 534B     		ldr	r3, .L104+4
 1327 00b4 1B68     		ldr	r3, [r3]
 1328 00b6 0222     		movs	r2, #2
 1329 00b8 1340     		ands	r3, r2
 1330 00ba 01D1     		bne	.L88
 798:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1331              		.loc 1 799 0
 1332 00bc 0123     		movs	r3, #1
 1333 00be 98E0     		b	.L84
 1334              	.L88:
 800:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 801:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1335              		.loc 1 802 0
 1336 00c0 4F4B     		ldr	r3, .L104+4
 1337 00c2 5B68     		ldr	r3, [r3, #4]
 1338 00c4 0322     		movs	r2, #3
 1339 00c6 9343     		bics	r3, r2
 1340 00c8 1900     		movs	r1, r3
 1341 00ca 7B68     		ldr	r3, [r7, #4]
 1342 00cc 5A68     		ldr	r2, [r3, #4]
 1343 00ce 4C4B     		ldr	r3, .L104+4
 1344 00d0 0A43     		orrs	r2, r1
 1345 00d2 5A60     		str	r2, [r3, #4]
 803:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 804:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Get Start Tick */
 805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1346              		.loc 1 805 0
ARM GAS  /tmp/cccmP2QM.s 			page 39


 1347 00d4 FFF7FEFF 		bl	HAL_GetTick
 1348 00d8 0300     		movs	r3, r0
 1349 00da FB60     		str	r3, [r7, #12]
 806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1350              		.loc 1 807 0
 1351 00dc 7B68     		ldr	r3, [r7, #4]
 1352 00de 5B68     		ldr	r3, [r3, #4]
 1353 00e0 012B     		cmp	r3, #1
 1354 00e2 11D1     		bne	.L91
 808:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 1355              		.loc 1 809 0
 1356 00e4 09E0     		b	.L92
 1357              	.L93:
 810:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1358              		.loc 1 811 0
 1359 00e6 FFF7FEFF 		bl	HAL_GetTick
 1360 00ea 0200     		movs	r2, r0
 1361 00ec FB68     		ldr	r3, [r7, #12]
 1362 00ee D31A     		subs	r3, r2, r3
 1363 00f0 444A     		ldr	r2, .L104+8
 1364 00f2 9342     		cmp	r3, r2
 1365 00f4 01D9     		bls	.L92
 812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1366              		.loc 1 813 0
 1367 00f6 0323     		movs	r3, #3
 1368 00f8 7BE0     		b	.L84
 1369              	.L92:
 809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1370              		.loc 1 809 0
 1371 00fa 414B     		ldr	r3, .L104+4
 1372 00fc 5B68     		ldr	r3, [r3, #4]
 1373 00fe 0C22     		movs	r2, #12
 1374 0100 1340     		ands	r3, r2
 1375 0102 042B     		cmp	r3, #4
 1376 0104 EFD1     		bne	.L93
 1377 0106 3AE0     		b	.L86
 1378              	.L91:
 814:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 816:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1379              		.loc 1 817 0
 1380 0108 7B68     		ldr	r3, [r7, #4]
 1381 010a 5B68     		ldr	r3, [r3, #4]
 1382 010c 022B     		cmp	r3, #2
 1383 010e 11D1     		bne	.L94
 818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1384              		.loc 1 819 0
 1385 0110 09E0     		b	.L95
 1386              	.L96:
 820:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
ARM GAS  /tmp/cccmP2QM.s 			page 40


 1387              		.loc 1 821 0
 1388 0112 FFF7FEFF 		bl	HAL_GetTick
 1389 0116 0200     		movs	r2, r0
 1390 0118 FB68     		ldr	r3, [r7, #12]
 1391 011a D31A     		subs	r3, r2, r3
 1392 011c 394A     		ldr	r2, .L104+8
 1393 011e 9342     		cmp	r3, r2
 1394 0120 01D9     		bls	.L95
 822:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1395              		.loc 1 823 0
 1396 0122 0323     		movs	r3, #3
 1397 0124 65E0     		b	.L84
 1398              	.L95:
 819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1399              		.loc 1 819 0
 1400 0126 364B     		ldr	r3, .L104+4
 1401 0128 5B68     		ldr	r3, [r3, #4]
 1402 012a 0C22     		movs	r2, #12
 1403 012c 1340     		ands	r3, r2
 1404 012e 082B     		cmp	r3, #8
 1405 0130 EFD1     		bne	.L96
 1406 0132 24E0     		b	.L86
 1407              	.L94:
 824:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 825:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 826:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 827:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 1408              		.loc 1 828 0
 1409 0134 7B68     		ldr	r3, [r7, #4]
 1410 0136 5B68     		ldr	r3, [r3, #4]
 1411 0138 032B     		cmp	r3, #3
 1412 013a 1BD1     		bne	.L100
 829:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 1413              		.loc 1 830 0
 1414 013c 09E0     		b	.L98
 1415              	.L99:
 831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1416              		.loc 1 832 0
 1417 013e FFF7FEFF 		bl	HAL_GetTick
 1418 0142 0200     		movs	r2, r0
 1419 0144 FB68     		ldr	r3, [r7, #12]
 1420 0146 D31A     		subs	r3, r2, r3
 1421 0148 2E4A     		ldr	r2, .L104+8
 1422 014a 9342     		cmp	r3, r2
 1423 014c 01D9     		bls	.L98
 833:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1424              		.loc 1 834 0
 1425 014e 0323     		movs	r3, #3
 1426 0150 4FE0     		b	.L84
 1427              	.L98:
 830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1428              		.loc 1 830 0
ARM GAS  /tmp/cccmP2QM.s 			page 41


 1429 0152 2B4B     		ldr	r3, .L104+4
 1430 0154 5B68     		ldr	r3, [r3, #4]
 1431 0156 0C22     		movs	r2, #12
 1432 0158 1340     		ands	r3, r2
 1433 015a 0C2B     		cmp	r3, #12
 1434 015c EFD1     		bne	.L99
 1435 015e 0EE0     		b	.L86
 1436              	.L101:
 835:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 836:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 837:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 838:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 839:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 840:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1437              		.loc 1 843 0
 1438 0160 FFF7FEFF 		bl	HAL_GetTick
 1439 0164 0200     		movs	r2, r0
 1440 0166 FB68     		ldr	r3, [r7, #12]
 1441 0168 D31A     		subs	r3, r2, r3
 1442 016a 264A     		ldr	r2, .L104+8
 1443 016c 9342     		cmp	r3, r2
 1444 016e 01D9     		bls	.L100
 844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1445              		.loc 1 845 0
 1446 0170 0323     		movs	r3, #3
 1447 0172 3EE0     		b	.L84
 1448              	.L100:
 841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1449              		.loc 1 841 0
 1450 0174 224B     		ldr	r3, .L104+4
 1451 0176 5B68     		ldr	r3, [r3, #4]
 1452 0178 0C22     		movs	r2, #12
 1453 017a 1340     		ands	r3, r2
 1454 017c F0D1     		bne	.L101
 1455              	.L86:
 846:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 847:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 848:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }      
 849:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 850:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1456              		.loc 1 851 0
 1457 017e 1F4B     		ldr	r3, .L104
 1458 0180 1B68     		ldr	r3, [r3]
 1459 0182 0122     		movs	r2, #1
 1460 0184 1340     		ands	r3, r2
 1461 0186 3A68     		ldr	r2, [r7]
 1462 0188 9A42     		cmp	r2, r3
 1463 018a 11D2     		bcs	.L102
 852:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 853:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 854:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1464              		.loc 1 854 0
ARM GAS  /tmp/cccmP2QM.s 			page 42


 1465 018c 1B4B     		ldr	r3, .L104
 1466 018e 1B68     		ldr	r3, [r3]
 1467 0190 0122     		movs	r2, #1
 1468 0192 9343     		bics	r3, r2
 1469 0194 1900     		movs	r1, r3
 1470 0196 194B     		ldr	r3, .L104
 1471 0198 3A68     		ldr	r2, [r7]
 1472 019a 0A43     		orrs	r2, r1
 1473 019c 1A60     		str	r2, [r3]
 855:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 856:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 857:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 858:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1474              		.loc 1 858 0
 1475 019e 174B     		ldr	r3, .L104
 1476 01a0 1B68     		ldr	r3, [r3]
 1477 01a2 0122     		movs	r2, #1
 1478 01a4 1340     		ands	r3, r2
 1479 01a6 3A68     		ldr	r2, [r7]
 1480 01a8 9A42     		cmp	r2, r3
 1481 01aa 01D0     		beq	.L102
 859:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 860:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 1482              		.loc 1 860 0
 1483 01ac 0123     		movs	r3, #1
 1484 01ae 20E0     		b	.L84
 1485              	.L102:
 861:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 862:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 863:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 864:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 865:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1486              		.loc 1 865 0
 1487 01b0 7B68     		ldr	r3, [r7, #4]
 1488 01b2 1B68     		ldr	r3, [r3]
 1489 01b4 0422     		movs	r2, #4
 1490 01b6 1340     		ands	r3, r2
 1491 01b8 09D0     		beq	.L103
 866:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 867:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 868:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 1492              		.loc 1 868 0
 1493 01ba 114B     		ldr	r3, .L104+4
 1494 01bc 5B68     		ldr	r3, [r3, #4]
 1495 01be 124A     		ldr	r2, .L104+12
 1496 01c0 1340     		ands	r3, r2
 1497 01c2 1900     		movs	r1, r3
 1498 01c4 7B68     		ldr	r3, [r7, #4]
 1499 01c6 DA68     		ldr	r2, [r3, #12]
 1500 01c8 0D4B     		ldr	r3, .L104+4
 1501 01ca 0A43     		orrs	r2, r1
 1502 01cc 5A60     		str	r2, [r3, #4]
 1503              	.L103:
 869:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 870:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 871:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 872:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
ARM GAS  /tmp/cccmP2QM.s 			page 43


 1504              		.loc 1 872 0
 1505 01ce FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1506 01d2 0100     		movs	r1, r0
 1507 01d4 0A4B     		ldr	r3, .L104+4
 1508 01d6 5B68     		ldr	r3, [r3, #4]
 1509 01d8 1B09     		lsrs	r3, r3, #4
 1510 01da 0F22     		movs	r2, #15
 1511 01dc 1340     		ands	r3, r2
 1512 01de 0B4A     		ldr	r2, .L104+16
 1513 01e0 D35C     		ldrb	r3, [r2, r3]
 1514 01e2 0A00     		movs	r2, r1
 1515 01e4 DA40     		lsrs	r2, r2, r3
 1516 01e6 0A4B     		ldr	r3, .L104+20
 1517 01e8 1A60     		str	r2, [r3]
 873:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 874:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 875:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 1518              		.loc 1 875 0
 1519 01ea 0020     		movs	r0, #0
 1520 01ec FFF7FEFF 		bl	HAL_InitTick
 876:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 877:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 1521              		.loc 1 877 0
 1522 01f0 0023     		movs	r3, #0
 1523              	.L84:
 878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1524              		.loc 1 878 0
 1525 01f2 1800     		movs	r0, r3
 1526 01f4 BD46     		mov	sp, r7
 1527 01f6 04B0     		add	sp, sp, #16
 1528              		@ sp needed
 1529 01f8 80BD     		pop	{r7, pc}
 1530              	.L105:
 1531 01fa C046     		.align	2
 1532              	.L104:
 1533 01fc 00200240 		.word	1073881088
 1534 0200 00100240 		.word	1073876992
 1535 0204 88130000 		.word	5000
 1536 0208 FFF8FFFF 		.word	-1793
 1537 020c 00000000 		.word	AHBPrescTable
 1538 0210 00000000 		.word	SystemCoreClock
 1539              		.cfi_endproc
 1540              	.LFE39:
 1542              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1543              		.align	1
 1544              		.global	HAL_RCC_MCOConfig
 1545              		.syntax unified
 1546              		.code	16
 1547              		.thumb_func
 1548              		.fpu softvfp
 1550              	HAL_RCC_MCOConfig:
 1551              	.LFB40:
 879:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 880:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 881:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 882:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 883:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/cccmP2QM.s 			page 44


 884:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 885:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 886:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 887:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim   
 888:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 889:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 890:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================  
 891:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 892:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 893:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     frequencies.
 894:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 895:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 896:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 897:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 898:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 899:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 900:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 901:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 902:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 903:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 904:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 905:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 906:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 907:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 908:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 909:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 910:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 911:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 912:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 913:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 914:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 915:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @if STM32F042x6
 916:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 917:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 918:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F048xx
 919:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 920:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 921:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F071xB
 922:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 923:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 924:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F072xB
 925:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 926:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 927:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F078xx
 928:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 929:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 930:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F091xC
 931:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 932:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 933:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F098xx
 934:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 935:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 936:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030x6
 937:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 938:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030xC
 939:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 940:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F031x6
ARM GAS  /tmp/cccmP2QM.s 			page 45


 941:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 942:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F038xx
 943:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 944:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070x6
 945:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 946:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070xB
 947:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 948:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endif
 949:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 950:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 951:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 952:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 953:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 954:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 955:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 956:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 957:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 958:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 959:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 960:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 961:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 962:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
 963:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 964:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 965:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 966:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 967:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 968:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 969:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 970:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 971:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 972:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 973:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 974:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 975:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 976:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 977:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 978:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 979:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 980:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 981:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 982:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 983:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 984:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
 985:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 986:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1552              		.loc 1 986 0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 40
 1555              		@ frame_needed = 1, uses_anonymous_args = 0
 1556 0000 80B5     		push	{r7, lr}
 1557              		.cfi_def_cfa_offset 8
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 8AB0     		sub	sp, sp, #40
 1561              		.cfi_def_cfa_offset 48
 1562 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cccmP2QM.s 			page 46


 1563              		.cfi_def_cfa_register 7
 1564 0006 F860     		str	r0, [r7, #12]
 1565 0008 B960     		str	r1, [r7, #8]
 1566 000a 7A60     		str	r2, [r7, #4]
 987:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 988:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 989:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 990:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 991:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 992:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 993:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 994:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 995:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1567              		.loc 1 995 0
 1568 000c 1420     		movs	r0, #20
 1569 000e 3B18     		adds	r3, r7, r0
 1570 0010 0222     		movs	r2, #2
 1571 0012 5A60     		str	r2, [r3, #4]
 996:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1572              		.loc 1 996 0
 1573 0014 3B18     		adds	r3, r7, r0
 1574 0016 0322     		movs	r2, #3
 1575 0018 DA60     		str	r2, [r3, #12]
 997:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1576              		.loc 1 997 0
 1577 001a 3B18     		adds	r3, r7, r0
 1578 001c 0022     		movs	r2, #0
 1579 001e 9A60     		str	r2, [r3, #8]
 998:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1580              		.loc 1 998 0
 1581 0020 3B18     		adds	r3, r7, r0
 1582 0022 8022     		movs	r2, #128
 1583 0024 5200     		lsls	r2, r2, #1
 1584 0026 1A60     		str	r2, [r3]
 999:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1585              		.loc 1 999 0
 1586 0028 3B18     		adds	r3, r7, r0
 1587 002a 0022     		movs	r2, #0
 1588 002c 1A61     		str	r2, [r3, #16]
 1589              	.LBB4:
1000:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1001:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1002:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1590              		.loc 1 1002 0
 1591 002e 124B     		ldr	r3, .L107
 1592 0030 5A69     		ldr	r2, [r3, #20]
 1593 0032 114B     		ldr	r3, .L107
 1594 0034 8021     		movs	r1, #128
 1595 0036 8902     		lsls	r1, r1, #10
 1596 0038 0A43     		orrs	r2, r1
 1597 003a 5A61     		str	r2, [r3, #20]
 1598 003c 0E4B     		ldr	r3, .L107
 1599 003e 5A69     		ldr	r2, [r3, #20]
 1600 0040 8023     		movs	r3, #128
 1601 0042 9B02     		lsls	r3, r3, #10
 1602 0044 1340     		ands	r3, r2
 1603 0046 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/cccmP2QM.s 			page 47


 1604 0048 3B69     		ldr	r3, [r7, #16]
 1605              	.LBE4:
1003:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1004:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1606              		.loc 1 1004 0
 1607 004a 3A18     		adds	r2, r7, r0
 1608 004c 9023     		movs	r3, #144
 1609 004e DB05     		lsls	r3, r3, #23
 1610 0050 1100     		movs	r1, r2
 1611 0052 1800     		movs	r0, r3
 1612 0054 FFF7FEFF 		bl	HAL_GPIO_Init
1005:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1006:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO clock source */
1007:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1613              		.loc 1 1007 0
 1614 0058 074B     		ldr	r3, .L107
 1615 005a 5B68     		ldr	r3, [r3, #4]
 1616 005c 074A     		ldr	r2, .L107+4
 1617 005e 1340     		ands	r3, r2
 1618 0060 1900     		movs	r1, r3
 1619 0062 BA68     		ldr	r2, [r7, #8]
 1620 0064 7B68     		ldr	r3, [r7, #4]
 1621 0066 1A43     		orrs	r2, r3
 1622 0068 034B     		ldr	r3, .L107
 1623 006a 0A43     		orrs	r2, r1
 1624 006c 5A60     		str	r2, [r3, #4]
1008:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1625              		.loc 1 1008 0
 1626 006e C046     		nop
 1627 0070 BD46     		mov	sp, r7
 1628 0072 0AB0     		add	sp, sp, #40
 1629              		@ sp needed
 1630 0074 80BD     		pop	{r7, pc}
 1631              	.L108:
 1632 0076 C046     		.align	2
 1633              	.L107:
 1634 0078 00100240 		.word	1073876992
 1635 007c FFFFFF80 		.word	-2130706433
 1636              		.cfi_endproc
 1637              	.LFE40:
 1639              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1640              		.align	1
 1641              		.global	HAL_RCC_EnableCSS
 1642              		.syntax unified
 1643              		.code	16
 1644              		.thumb_func
 1645              		.fpu softvfp
 1647              	HAL_RCC_EnableCSS:
 1648              	.LFB41:
1009:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1010:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1011:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1012:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1013:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1014:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1015:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
1016:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         the Cortex-M0 NMI (Non-Maskable Interrupt) exception vector.  
ARM GAS  /tmp/cccmP2QM.s 			page 48


1017:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1018:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1019:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1020:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1649              		.loc 1 1020 0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 0
 1652              		@ frame_needed = 1, uses_anonymous_args = 0
 1653 0000 80B5     		push	{r7, lr}
 1654              		.cfi_def_cfa_offset 8
 1655              		.cfi_offset 7, -8
 1656              		.cfi_offset 14, -4
 1657 0002 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
1021:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 1659              		.loc 1 1021 0
 1660 0004 044B     		ldr	r3, .L110
 1661 0006 1A68     		ldr	r2, [r3]
 1662 0008 034B     		ldr	r3, .L110
 1663 000a 8021     		movs	r1, #128
 1664 000c 0903     		lsls	r1, r1, #12
 1665 000e 0A43     		orrs	r2, r1
 1666 0010 1A60     		str	r2, [r3]
1022:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1667              		.loc 1 1022 0
 1668 0012 C046     		nop
 1669 0014 BD46     		mov	sp, r7
 1670              		@ sp needed
 1671 0016 80BD     		pop	{r7, pc}
 1672              	.L111:
 1673              		.align	2
 1674              	.L110:
 1675 0018 00100240 		.word	1073876992
 1676              		.cfi_endproc
 1677              	.LFE41:
 1679              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1680              		.align	1
 1681              		.global	HAL_RCC_DisableCSS
 1682              		.syntax unified
 1683              		.code	16
 1684              		.thumb_func
 1685              		.fpu softvfp
 1687              	HAL_RCC_DisableCSS:
 1688              	.LFB42:
1023:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1024:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1025:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1026:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1027:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1028:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1029:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1689              		.loc 1 1029 0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 0
 1692              		@ frame_needed = 1, uses_anonymous_args = 0
 1693 0000 80B5     		push	{r7, lr}
 1694              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cccmP2QM.s 			page 49


 1695              		.cfi_offset 7, -8
 1696              		.cfi_offset 14, -4
 1697 0002 00AF     		add	r7, sp, #0
 1698              		.cfi_def_cfa_register 7
1030:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON) ;
 1699              		.loc 1 1030 0
 1700 0004 044B     		ldr	r3, .L113
 1701 0006 1A68     		ldr	r2, [r3]
 1702 0008 034B     		ldr	r3, .L113
 1703 000a 0449     		ldr	r1, .L113+4
 1704 000c 0A40     		ands	r2, r1
 1705 000e 1A60     		str	r2, [r3]
1031:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1706              		.loc 1 1031 0
 1707 0010 C046     		nop
 1708 0012 BD46     		mov	sp, r7
 1709              		@ sp needed
 1710 0014 80BD     		pop	{r7, pc}
 1711              	.L114:
 1712 0016 C046     		.align	2
 1713              	.L113:
 1714 0018 00100240 		.word	1073876992
 1715 001c FFFFF7FF 		.word	-524289
 1716              		.cfi_endproc
 1717              	.LFE42:
 1719              		.global	__aeabi_uidiv
 1720              		.section	.rodata
 1721              		.align	2
 1722              	.LC0:
 1723 0000 02       		.byte	2
 1724 0001 03       		.byte	3
 1725 0002 04       		.byte	4
 1726 0003 05       		.byte	5
 1727 0004 06       		.byte	6
 1728 0005 07       		.byte	7
 1729 0006 08       		.byte	8
 1730 0007 09       		.byte	9
 1731 0008 0A       		.byte	10
 1732 0009 0B       		.byte	11
 1733 000a 0C       		.byte	12
 1734 000b 0D       		.byte	13
 1735 000c 0E       		.byte	14
 1736 000d 0F       		.byte	15
 1737 000e 10       		.byte	16
 1738 000f 10       		.byte	16
 1739              		.align	2
 1740              	.LC1:
 1741 0010 01       		.byte	1
 1742 0011 02       		.byte	2
 1743 0012 03       		.byte	3
 1744 0013 04       		.byte	4
 1745 0014 05       		.byte	5
 1746 0015 06       		.byte	6
 1747 0016 07       		.byte	7
 1748 0017 08       		.byte	8
 1749 0018 09       		.byte	9
 1750 0019 0A       		.byte	10
ARM GAS  /tmp/cccmP2QM.s 			page 50


 1751 001a 0B       		.byte	11
 1752 001b 0C       		.byte	12
 1753 001c 0D       		.byte	13
 1754 001d 0E       		.byte	14
 1755 001e 0F       		.byte	15
 1756 001f 10       		.byte	16
 1757              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1758              		.align	1
 1759              		.global	HAL_RCC_GetSysClockFreq
 1760              		.syntax unified
 1761              		.code	16
 1762              		.thumb_func
 1763              		.fpu softvfp
 1765              	HAL_RCC_GetSysClockFreq:
 1766              	.LFB43:
1032:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1033:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1034:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
1035:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1036:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1037:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         constant and the selected clock source:
1038:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1039:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
1040:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1041:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1042:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or depending on STM32F0xxxx devices either a value based
1043:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           on HSI_VALUE divided by 2 or HSI_VALUE divided by PREDIV factor(*) multiplied by the 
1044:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           PLL factor.
1045:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1046:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1047:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               in voltage and temperature.
1048:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1049:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1050:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1051:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                have wrong result.
1052:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                  
1053:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1054:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         value for HSE crystal.
1055:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1056:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
1057:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1058:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1059:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1060:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1061:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         
1062:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval SYSCLK frequency
1063:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1064:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1065:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1767              		.loc 1 1065 0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 56
 1770              		@ frame_needed = 1, uses_anonymous_args = 0
 1771 0000 90B5     		push	{r4, r7, lr}
 1772              		.cfi_def_cfa_offset 12
 1773              		.cfi_offset 4, -12
 1774              		.cfi_offset 7, -8
ARM GAS  /tmp/cccmP2QM.s 			page 51


 1775              		.cfi_offset 14, -4
 1776 0002 8FB0     		sub	sp, sp, #60
 1777              		.cfi_def_cfa_offset 72
 1778 0004 00AF     		add	r7, sp, #0
 1779              		.cfi_def_cfa_register 7
1066:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 1780              		.loc 1 1066 0
 1781 0006 1423     		movs	r3, #20
 1782 0008 FB18     		adds	r3, r7, r3
 1783 000a 374A     		ldr	r2, .L126
 1784 000c 13CA     		ldmia	r2!, {r0, r1, r4}
 1785 000e 13C3     		stmia	r3!, {r0, r1, r4}
 1786 0010 1268     		ldr	r2, [r2]
 1787 0012 1A60     		str	r2, [r3]
1067:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                          10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
1068:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 1788              		.loc 1 1068 0
 1789 0014 3B1D     		adds	r3, r7, #4
 1790 0016 354A     		ldr	r2, .L126+4
 1791 0018 13CA     		ldmia	r2!, {r0, r1, r4}
 1792 001a 13C3     		stmia	r3!, {r0, r1, r4}
 1793 001c 1268     		ldr	r2, [r2]
 1794 001e 1A60     		str	r2, [r3]
1069:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                            9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
1070:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1071:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 1795              		.loc 1 1071 0
 1796 0020 0023     		movs	r3, #0
 1797 0022 FB62     		str	r3, [r7, #44]
 1798 0024 0023     		movs	r3, #0
 1799 0026 BB62     		str	r3, [r7, #40]
 1800 0028 0023     		movs	r3, #0
 1801 002a 7B63     		str	r3, [r7, #52]
 1802 002c 0023     		movs	r3, #0
 1803 002e 7B62     		str	r3, [r7, #36]
1072:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1804              		.loc 1 1072 0
 1805 0030 0023     		movs	r3, #0
 1806 0032 3B63     		str	r3, [r7, #48]
1073:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1074:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1807              		.loc 1 1074 0
 1808 0034 2E4B     		ldr	r3, .L126+8
 1809 0036 5B68     		ldr	r3, [r3, #4]
 1810 0038 FB62     		str	r3, [r7, #44]
1075:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1076:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1077:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1811              		.loc 1 1077 0
 1812 003a FB6A     		ldr	r3, [r7, #44]
 1813 003c 0C22     		movs	r2, #12
 1814 003e 1340     		ands	r3, r2
 1815 0040 082B     		cmp	r3, #8
 1816 0042 06D0     		beq	.L117
 1817 0044 0C2B     		cmp	r3, #12
 1818 0046 43D0     		beq	.L118
 1819 0048 042B     		cmp	r3, #4
ARM GAS  /tmp/cccmP2QM.s 			page 52


 1820 004a 44D1     		bne	.L125
1078:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1079:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1080:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1081:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1821              		.loc 1 1081 0
 1822 004c 294B     		ldr	r3, .L126+12
 1823 004e 3B63     		str	r3, [r7, #48]
1082:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1824              		.loc 1 1082 0
 1825 0050 44E0     		b	.L120
 1826              	.L117:
1083:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1084:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1085:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1086:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER
 1827              		.loc 1 1086 0
 1828 0052 FB6A     		ldr	r3, [r7, #44]
 1829 0054 9B0C     		lsrs	r3, r3, #18
 1830 0056 0F22     		movs	r2, #15
 1831 0058 1340     		ands	r3, r2
 1832 005a 1422     		movs	r2, #20
 1833 005c BA18     		adds	r2, r7, r2
 1834 005e D35C     		ldrb	r3, [r2, r3]
 1835 0060 7B62     		str	r3, [r7, #36]
1087:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BIT
 1836              		.loc 1 1087 0
 1837 0062 234B     		ldr	r3, .L126+8
 1838 0064 DB6A     		ldr	r3, [r3, #44]
 1839 0066 0F22     		movs	r2, #15
 1840 0068 1340     		ands	r3, r2
 1841 006a 3A1D     		adds	r2, r7, #4
 1842 006c D35C     		ldrb	r3, [r2, r3]
 1843 006e BB62     		str	r3, [r7, #40]
1088:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 1844              		.loc 1 1088 0
 1845 0070 FA6A     		ldr	r2, [r7, #44]
 1846 0072 C023     		movs	r3, #192
 1847 0074 5B02     		lsls	r3, r3, #9
 1848 0076 1A40     		ands	r2, r3
 1849 0078 8023     		movs	r3, #128
 1850 007a 5B02     		lsls	r3, r3, #9
 1851 007c 9A42     		cmp	r2, r3
 1852 007e 09D1     		bne	.L121
1089:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1090:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
1091:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 1853              		.loc 1 1091 0
 1854 0080 B96A     		ldr	r1, [r7, #40]
 1855 0082 1C48     		ldr	r0, .L126+12
 1856 0084 FFF7FEFF 		bl	__aeabi_uidiv
 1857              	.LVL0:
 1858 0088 0300     		movs	r3, r0
 1859 008a 1A00     		movs	r2, r3
 1860 008c 7B6A     		ldr	r3, [r7, #36]
 1861 008e 5343     		muls	r3, r2
 1862 0090 7B63     		str	r3, [r7, #52]
ARM GAS  /tmp/cccmP2QM.s 			page 53


 1863 0092 1AE0     		b	.L122
 1864              	.L121:
1092:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1093:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI48_PREDIV)
1094:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
 1865              		.loc 1 1094 0
 1866 0094 FA6A     		ldr	r2, [r7, #44]
 1867 0096 C023     		movs	r3, #192
 1868 0098 5B02     		lsls	r3, r3, #9
 1869 009a 1A40     		ands	r2, r3
 1870 009c C023     		movs	r3, #192
 1871 009e 5B02     		lsls	r3, r3, #9
 1872 00a0 9A42     		cmp	r2, r3
 1873 00a2 09D1     		bne	.L123
1095:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1096:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI48 used as PLL clock source : PLLCLK = HSI48/PREDIV * PLLMUL */
1097:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSI48_VALUE / prediv) * pllmul;
 1874              		.loc 1 1097 0
 1875 00a4 B96A     		ldr	r1, [r7, #40]
 1876 00a6 1448     		ldr	r0, .L126+16
 1877 00a8 FFF7FEFF 		bl	__aeabi_uidiv
 1878              	.LVL1:
 1879 00ac 0300     		movs	r3, r0
 1880 00ae 1A00     		movs	r2, r3
 1881 00b0 7B6A     		ldr	r3, [r7, #36]
 1882 00b2 5343     		muls	r3, r2
 1883 00b4 7B63     		str	r3, [r7, #52]
 1884 00b6 08E0     		b	.L122
 1885              	.L123:
1098:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1099:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
1100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
1101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) 
1103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
 1886              		.loc 1 1104 0
 1887 00b8 B96A     		ldr	r1, [r7, #40]
 1888 00ba 0E48     		ldr	r0, .L126+12
 1889 00bc FFF7FEFF 		bl	__aeabi_uidiv
 1890              	.LVL2:
 1891 00c0 0300     		movs	r3, r0
 1892 00c2 1A00     		movs	r2, r3
 1893 00c4 7B6A     		ldr	r3, [r7, #36]
 1894 00c6 5343     		muls	r3, r2
 1895 00c8 7B63     		str	r3, [r7, #52]
 1896              	.L122:
1105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
1106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1U) * pllmul);
1108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = pllclk;
 1897              		.loc 1 1110 0
 1898 00ca 7B6B     		ldr	r3, [r7, #52]
 1899 00cc 3B63     		str	r3, [r7, #48]
1111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
ARM GAS  /tmp/cccmP2QM.s 			page 54


 1900              		.loc 1 1111 0
 1901 00ce 05E0     		b	.L120
 1902              	.L118:
1112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
1114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI48:    /* HSI48 used as system clock source */
1115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI48_VALUE;
 1903              		.loc 1 1116 0
 1904 00d0 094B     		ldr	r3, .L126+16
 1905 00d2 3B63     		str	r3, [r7, #48]
1117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1906              		.loc 1 1117 0
 1907 00d4 02E0     		b	.L120
 1908              	.L125:
1118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
1120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     default: /* HSI used as system clock */
1122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1909              		.loc 1 1123 0
 1910 00d6 074B     		ldr	r3, .L126+12
 1911 00d8 3B63     		str	r3, [r7, #48]
1124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1912              		.loc 1 1124 0
 1913 00da C046     		nop
 1914              	.L120:
1125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return sysclockfreq;
 1915              		.loc 1 1127 0
 1916 00dc 3B6B     		ldr	r3, [r7, #48]
1128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1917              		.loc 1 1128 0
 1918 00de 1800     		movs	r0, r3
 1919 00e0 BD46     		mov	sp, r7
 1920 00e2 0FB0     		add	sp, sp, #60
 1921              		@ sp needed
 1922 00e4 90BD     		pop	{r4, r7, pc}
 1923              	.L127:
 1924 00e6 C046     		.align	2
 1925              	.L126:
 1926 00e8 00000000 		.word	.LC0
 1927 00ec 10000000 		.word	.LC1
 1928 00f0 00100240 		.word	1073876992
 1929 00f4 00127A00 		.word	8000000
 1930 00f8 006CDC02 		.word	48000000
 1931              		.cfi_endproc
 1932              	.LFE43:
 1934              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1935              		.align	1
 1936              		.global	HAL_RCC_GetHCLKFreq
 1937              		.syntax unified
 1938              		.code	16
 1939              		.thumb_func
 1940              		.fpu softvfp
ARM GAS  /tmp/cccmP2QM.s 			page 55


 1942              	HAL_RCC_GetHCLKFreq:
 1943              	.LFB44:
1129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * 
1135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated within this function
1137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HCLK frequency
1138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1944              		.loc 1 1140 0
 1945              		.cfi_startproc
 1946              		@ args = 0, pretend = 0, frame = 0
 1947              		@ frame_needed = 1, uses_anonymous_args = 0
 1948 0000 80B5     		push	{r7, lr}
 1949              		.cfi_def_cfa_offset 8
 1950              		.cfi_offset 7, -8
 1951              		.cfi_offset 14, -4
 1952 0002 00AF     		add	r7, sp, #0
 1953              		.cfi_def_cfa_register 7
1141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return SystemCoreClock;
 1954              		.loc 1 1141 0
 1955 0004 024B     		ldr	r3, .L130
 1956 0006 1B68     		ldr	r3, [r3]
1142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1957              		.loc 1 1142 0
 1958 0008 1800     		movs	r0, r3
 1959 000a BD46     		mov	sp, r7
 1960              		@ sp needed
 1961 000c 80BD     		pop	{r7, pc}
 1962              	.L131:
 1963 000e C046     		.align	2
 1964              	.L130:
 1965 0010 00000000 		.word	SystemCoreClock
 1966              		.cfi_endproc
 1967              	.LFE44:
 1969              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1970              		.align	1
 1971              		.global	HAL_RCC_GetPCLK1Freq
 1972              		.syntax unified
 1973              		.code	16
 1974              		.thumb_func
 1975              		.fpu softvfp
 1977              	HAL_RCC_GetPCLK1Freq:
 1978              	.LFB45:
1143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval PCLK1 frequency
1149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
ARM GAS  /tmp/cccmP2QM.s 			page 56


1151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1979              		.loc 1 1151 0
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 0
 1982              		@ frame_needed = 1, uses_anonymous_args = 0
 1983 0000 80B5     		push	{r7, lr}
 1984              		.cfi_def_cfa_offset 8
 1985              		.cfi_offset 7, -8
 1986              		.cfi_offset 14, -4
 1987 0002 00AF     		add	r7, sp, #0
 1988              		.cfi_def_cfa_register 7
1152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNU
 1989              		.loc 1 1153 0
 1990 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1991 0008 0100     		movs	r1, r0
 1992 000a 064B     		ldr	r3, .L134
 1993 000c 5B68     		ldr	r3, [r3, #4]
 1994 000e 1B0A     		lsrs	r3, r3, #8
 1995 0010 0722     		movs	r2, #7
 1996 0012 1340     		ands	r3, r2
 1997 0014 044A     		ldr	r2, .L134+4
 1998 0016 D35C     		ldrb	r3, [r2, r3]
 1999 0018 D940     		lsrs	r1, r1, r3
 2000 001a 0B00     		movs	r3, r1
1154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }    
 2001              		.loc 1 1154 0
 2002 001c 1800     		movs	r0, r3
 2003 001e BD46     		mov	sp, r7
 2004              		@ sp needed
 2005 0020 80BD     		pop	{r7, pc}
 2006              	.L135:
 2007 0022 C046     		.align	2
 2008              	.L134:
 2009 0024 00100240 		.word	1073876992
 2010 0028 00000000 		.word	APBPrescTable
 2011              		.cfi_endproc
 2012              	.LFE45:
 2014              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2015              		.align	1
 2016              		.global	HAL_RCC_GetOscConfig
 2017              		.syntax unified
 2018              		.code	16
 2019              		.thumb_func
 2020              		.fpu softvfp
 2022              	HAL_RCC_GetOscConfig:
 2023              	.LFB46:
1155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * will be configured.
1161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
ARM GAS  /tmp/cccmP2QM.s 			page 57


 2024              		.loc 1 1164 0
 2025              		.cfi_startproc
 2026              		@ args = 0, pretend = 0, frame = 8
 2027              		@ frame_needed = 1, uses_anonymous_args = 0
 2028 0000 80B5     		push	{r7, lr}
 2029              		.cfi_def_cfa_offset 8
 2030              		.cfi_offset 7, -8
 2031              		.cfi_offset 14, -4
 2032 0002 82B0     		sub	sp, sp, #8
 2033              		.cfi_def_cfa_offset 16
 2034 0004 00AF     		add	r7, sp, #0
 2035              		.cfi_def_cfa_register 7
 2036 0006 7860     		str	r0, [r7, #4]
1165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2037              		.loc 1 1169 0
 2038 0008 7B68     		ldr	r3, [r7, #4]
 2039 000a 1F22     		movs	r2, #31
 2040 000c 1A60     		str	r2, [r3]
1170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSI14;
1171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType |= RCC_OSCILLATORTYPE_HSI48;
 2041              		.loc 1 1172 0
 2042 000e 7B68     		ldr	r3, [r7, #4]
 2043 0010 1B68     		ldr	r3, [r3]
 2044 0012 2022     		movs	r2, #32
 2045 0014 1A43     		orrs	r2, r3
 2046 0016 7B68     		ldr	r3, [r7, #4]
 2047 0018 1A60     		str	r2, [r3]
1173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2048              		.loc 1 1177 0
 2049 001a 4E4B     		ldr	r3, .L151
 2050 001c 1A68     		ldr	r2, [r3]
 2051 001e 8023     		movs	r3, #128
 2052 0020 DB02     		lsls	r3, r3, #11
 2053 0022 1A40     		ands	r2, r3
 2054 0024 8023     		movs	r3, #128
 2055 0026 DB02     		lsls	r3, r3, #11
 2056 0028 9A42     		cmp	r2, r3
 2057 002a 03D1     		bne	.L137
1178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2058              		.loc 1 1179 0
 2059 002c 7B68     		ldr	r3, [r7, #4]
 2060 002e 0522     		movs	r2, #5
 2061 0030 5A60     		str	r2, [r3, #4]
 2062 0032 0FE0     		b	.L138
 2063              	.L137:
1180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
ARM GAS  /tmp/cccmP2QM.s 			page 58


 2064              		.loc 1 1181 0
 2065 0034 474B     		ldr	r3, .L151
 2066 0036 1A68     		ldr	r2, [r3]
 2067 0038 8023     		movs	r3, #128
 2068 003a 5B02     		lsls	r3, r3, #9
 2069 003c 1A40     		ands	r2, r3
 2070 003e 8023     		movs	r3, #128
 2071 0040 5B02     		lsls	r3, r3, #9
 2072 0042 9A42     		cmp	r2, r3
 2073 0044 03D1     		bne	.L139
1182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2074              		.loc 1 1183 0
 2075 0046 7B68     		ldr	r3, [r7, #4]
 2076 0048 0122     		movs	r2, #1
 2077 004a 5A60     		str	r2, [r3, #4]
 2078 004c 02E0     		b	.L138
 2079              	.L139:
1184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2080              		.loc 1 1187 0
 2081 004e 7B68     		ldr	r3, [r7, #4]
 2082 0050 0022     		movs	r2, #0
 2083 0052 5A60     		str	r2, [r3, #4]
 2084              	.L138:
1188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2085              		.loc 1 1191 0
 2086 0054 3F4B     		ldr	r3, .L151
 2087 0056 1B68     		ldr	r3, [r3]
 2088 0058 0122     		movs	r2, #1
 2089 005a 1340     		ands	r3, r2
 2090 005c 012B     		cmp	r3, #1
 2091 005e 03D1     		bne	.L140
1192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2092              		.loc 1 1193 0
 2093 0060 7B68     		ldr	r3, [r7, #4]
 2094 0062 0122     		movs	r2, #1
 2095 0064 DA60     		str	r2, [r3, #12]
 2096 0066 02E0     		b	.L141
 2097              	.L140:
1194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2098              		.loc 1 1197 0
 2099 0068 7B68     		ldr	r3, [r7, #4]
 2100 006a 0022     		movs	r2, #0
 2101 006c DA60     		str	r2, [r3, #12]
 2102              	.L141:
1198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
ARM GAS  /tmp/cccmP2QM.s 			page 59


1200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_B
 2103              		.loc 1 1200 0
 2104 006e 394B     		ldr	r3, .L151
 2105 0070 1B68     		ldr	r3, [r3]
 2106 0072 DB08     		lsrs	r3, r3, #3
 2107 0074 1F22     		movs	r2, #31
 2108 0076 1A40     		ands	r2, r3
 2109 0078 7B68     		ldr	r3, [r7, #4]
 2110 007a 1A61     		str	r2, [r3, #16]
1201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2111              		.loc 1 1203 0
 2112 007c 354B     		ldr	r3, .L151
 2113 007e 1B6A     		ldr	r3, [r3, #32]
 2114 0080 0422     		movs	r2, #4
 2115 0082 1340     		ands	r3, r2
 2116 0084 042B     		cmp	r3, #4
 2117 0086 03D1     		bne	.L142
1204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2118              		.loc 1 1205 0
 2119 0088 7B68     		ldr	r3, [r7, #4]
 2120 008a 0522     		movs	r2, #5
 2121 008c 9A60     		str	r2, [r3, #8]
 2122 008e 0CE0     		b	.L143
 2123              	.L142:
1206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2124              		.loc 1 1207 0
 2125 0090 304B     		ldr	r3, .L151
 2126 0092 1B6A     		ldr	r3, [r3, #32]
 2127 0094 0122     		movs	r2, #1
 2128 0096 1340     		ands	r3, r2
 2129 0098 012B     		cmp	r3, #1
 2130 009a 03D1     		bne	.L144
1208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2131              		.loc 1 1209 0
 2132 009c 7B68     		ldr	r3, [r7, #4]
 2133 009e 0122     		movs	r2, #1
 2134 00a0 9A60     		str	r2, [r3, #8]
 2135 00a2 02E0     		b	.L143
 2136              	.L144:
1210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2137              		.loc 1 1213 0
 2138 00a4 7B68     		ldr	r3, [r7, #4]
 2139 00a6 0022     		movs	r2, #0
 2140 00a8 9A60     		str	r2, [r3, #8]
 2141              	.L143:
1214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
ARM GAS  /tmp/cccmP2QM.s 			page 60


 2142              		.loc 1 1217 0
 2143 00aa 2A4B     		ldr	r3, .L151
 2144 00ac 5B6A     		ldr	r3, [r3, #36]
 2145 00ae 0122     		movs	r2, #1
 2146 00b0 1340     		ands	r3, r2
 2147 00b2 012B     		cmp	r3, #1
 2148 00b4 03D1     		bne	.L145
1218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2149              		.loc 1 1219 0
 2150 00b6 7B68     		ldr	r3, [r7, #4]
 2151 00b8 0122     		movs	r2, #1
 2152 00ba DA61     		str	r2, [r3, #28]
 2153 00bc 02E0     		b	.L146
 2154              	.L145:
1220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2155              		.loc 1 1223 0
 2156 00be 7B68     		ldr	r3, [r7, #4]
 2157 00c0 0022     		movs	r2, #0
 2158 00c2 DA61     		str	r2, [r3, #28]
 2159              	.L146:
1224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI14 configuration -----------------------------------------------*/
1227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR2 & RCC_CR2_HSI14ON) == RCC_CR2_HSI14ON)
 2160              		.loc 1 1227 0
 2161 00c4 234B     		ldr	r3, .L151
 2162 00c6 5B6B     		ldr	r3, [r3, #52]
 2163 00c8 0122     		movs	r2, #1
 2164 00ca 1340     		ands	r3, r2
 2165 00cc 012B     		cmp	r3, #1
 2166 00ce 03D1     		bne	.L147
1228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_ON;
 2167              		.loc 1 1229 0
 2168 00d0 7B68     		ldr	r3, [r7, #4]
 2169 00d2 0122     		movs	r2, #1
 2170 00d4 5A61     		str	r2, [r3, #20]
 2171 00d6 02E0     		b	.L148
 2172              	.L147:
1230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_OFF;
 2173              		.loc 1 1233 0
 2174 00d8 7B68     		ldr	r3, [r7, #4]
 2175 00da 0022     		movs	r2, #0
 2176 00dc 5A61     		str	r2, [r3, #20]
 2177              	.L148:
1234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI14CalibrationValue = (uint32_t)((RCC->CR2 & RCC_CR2_HSI14TRIM) >> RCC_HSI14
 2178              		.loc 1 1236 0
 2179 00de 1D4B     		ldr	r3, .L151
ARM GAS  /tmp/cccmP2QM.s 			page 61


 2180 00e0 5B6B     		ldr	r3, [r3, #52]
 2181 00e2 DB08     		lsrs	r3, r3, #3
 2182 00e4 1F22     		movs	r2, #31
 2183 00e6 1A40     		ands	r2, r3
 2184 00e8 7B68     		ldr	r3, [r7, #4]
 2185 00ea 9A61     		str	r2, [r3, #24]
1237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI48 configuration if any-----------------------------------------*/
1240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = __HAL_RCC_GET_HSI48_STATE();
 2186              		.loc 1 1240 0
 2187 00ec 194B     		ldr	r3, .L151
 2188 00ee 5A6B     		ldr	r2, [r3, #52]
 2189 00f0 8023     		movs	r3, #128
 2190 00f2 5B02     		lsls	r3, r3, #9
 2191 00f4 1340     		ands	r3, r2
 2192 00f6 5A1E     		subs	r2, r3, #1
 2193 00f8 9341     		sbcs	r3, r3, r2
 2194 00fa DBB2     		uxtb	r3, r3
 2195 00fc 1A00     		movs	r2, r3
 2196 00fe 7B68     		ldr	r3, [r7, #4]
 2197 0100 1A62     		str	r2, [r3, #32]
1241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2198              		.loc 1 1244 0
 2199 0102 144B     		ldr	r3, .L151
 2200 0104 1A68     		ldr	r2, [r3]
 2201 0106 8023     		movs	r3, #128
 2202 0108 5B04     		lsls	r3, r3, #17
 2203 010a 1A40     		ands	r2, r3
 2204 010c 8023     		movs	r3, #128
 2205 010e 5B04     		lsls	r3, r3, #17
 2206 0110 9A42     		cmp	r2, r3
 2207 0112 03D1     		bne	.L149
1245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2208              		.loc 1 1246 0
 2209 0114 7B68     		ldr	r3, [r7, #4]
 2210 0116 0222     		movs	r2, #2
 2211 0118 5A62     		str	r2, [r3, #36]
 2212 011a 02E0     		b	.L150
 2213              	.L149:
1247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2214              		.loc 1 1250 0
 2215 011c 7B68     		ldr	r3, [r7, #4]
 2216 011e 0122     		movs	r2, #1
 2217 0120 5A62     		str	r2, [r3, #36]
 2218              	.L150:
1251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2219              		.loc 1 1252 0
 2220 0122 0C4B     		ldr	r3, .L151
ARM GAS  /tmp/cccmP2QM.s 			page 62


 2221 0124 5A68     		ldr	r2, [r3, #4]
 2222 0126 C023     		movs	r3, #192
 2223 0128 5B02     		lsls	r3, r3, #9
 2224 012a 1A40     		ands	r2, r3
 2225 012c 7B68     		ldr	r3, [r7, #4]
 2226 012e 9A62     		str	r2, [r3, #40]
1253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2227              		.loc 1 1253 0
 2228 0130 084B     		ldr	r3, .L151
 2229 0132 5A68     		ldr	r2, [r3, #4]
 2230 0134 F023     		movs	r3, #240
 2231 0136 9B03     		lsls	r3, r3, #14
 2232 0138 1A40     		ands	r2, r3
 2233 013a 7B68     		ldr	r3, [r7, #4]
 2234 013c DA62     		str	r2, [r3, #44]
1254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 2235              		.loc 1 1254 0
 2236 013e 054B     		ldr	r3, .L151
 2237 0140 DB6A     		ldr	r3, [r3, #44]
 2238 0142 0F22     		movs	r2, #15
 2239 0144 1A40     		ands	r2, r3
 2240 0146 7B68     		ldr	r3, [r7, #4]
 2241 0148 1A63     		str	r2, [r3, #48]
1255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2242              		.loc 1 1255 0
 2243 014a C046     		nop
 2244 014c BD46     		mov	sp, r7
 2245 014e 02B0     		add	sp, sp, #8
 2246              		@ sp needed
 2247 0150 80BD     		pop	{r7, pc}
 2248              	.L152:
 2249 0152 C046     		.align	2
 2250              	.L151:
 2251 0154 00100240 		.word	1073876992
 2252              		.cfi_endproc
 2253              	.LFE46:
 2255              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2256              		.align	1
 2257              		.global	HAL_RCC_GetClockConfig
 2258              		.syntax unified
 2259              		.code	16
 2260              		.thumb_func
 2261              		.fpu softvfp
 2263              	HAL_RCC_GetClockConfig:
 2264              	.LFB47:
1256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * contains the current clock configuration.
1262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2265              		.loc 1 1266 0
ARM GAS  /tmp/cccmP2QM.s 			page 63


 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 8
 2268              		@ frame_needed = 1, uses_anonymous_args = 0
 2269 0000 80B5     		push	{r7, lr}
 2270              		.cfi_def_cfa_offset 8
 2271              		.cfi_offset 7, -8
 2272              		.cfi_offset 14, -4
 2273 0002 82B0     		sub	sp, sp, #8
 2274              		.cfi_def_cfa_offset 16
 2275 0004 00AF     		add	r7, sp, #0
 2276              		.cfi_def_cfa_register 7
 2277 0006 7860     		str	r0, [r7, #4]
 2278 0008 3960     		str	r1, [r7]
1267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1;
 2279              		.loc 1 1272 0
 2280 000a 7B68     		ldr	r3, [r7, #4]
 2281 000c 0722     		movs	r2, #7
 2282 000e 1A60     		str	r2, [r3]
1273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2283              		.loc 1 1275 0
 2284 0010 0E4B     		ldr	r3, .L154
 2285 0012 5B68     		ldr	r3, [r3, #4]
 2286 0014 0322     		movs	r2, #3
 2287 0016 1A40     		ands	r2, r3
 2288 0018 7B68     		ldr	r3, [r7, #4]
 2289 001a 5A60     		str	r2, [r3, #4]
1276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2290              		.loc 1 1278 0
 2291 001c 0B4B     		ldr	r3, .L154
 2292 001e 5B68     		ldr	r3, [r3, #4]
 2293 0020 F022     		movs	r2, #240
 2294 0022 1A40     		ands	r2, r3
 2295 0024 7B68     		ldr	r3, [r7, #4]
 2296 0026 9A60     		str	r2, [r3, #8]
1279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE);   
 2297              		.loc 1 1281 0
 2298 0028 084B     		ldr	r3, .L154
 2299 002a 5A68     		ldr	r2, [r3, #4]
 2300 002c E023     		movs	r3, #224
 2301 002e DB00     		lsls	r3, r3, #3
 2302 0030 1A40     		ands	r2, r3
 2303 0032 7B68     		ldr	r3, [r7, #4]
 2304 0034 DA60     		str	r2, [r3, #12]
1282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2305              		.loc 1 1283 0
ARM GAS  /tmp/cccmP2QM.s 			page 64


 2306 0036 064B     		ldr	r3, .L154+4
 2307 0038 1B68     		ldr	r3, [r3]
 2308 003a 0122     		movs	r2, #1
 2309 003c 1A40     		ands	r2, r3
 2310 003e 3B68     		ldr	r3, [r7]
 2311 0040 1A60     		str	r2, [r3]
1284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2312              		.loc 1 1284 0
 2313 0042 C046     		nop
 2314 0044 BD46     		mov	sp, r7
 2315 0046 02B0     		add	sp, sp, #8
 2316              		@ sp needed
 2317 0048 80BD     		pop	{r7, pc}
 2318              	.L155:
 2319 004a C046     		.align	2
 2320              	.L154:
 2321 004c 00100240 		.word	1073876992
 2322 0050 00200240 		.word	1073881088
 2323              		.cfi_endproc
 2324              	.LFE47:
 2326              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2327              		.align	1
 2328              		.global	HAL_RCC_NMI_IRQHandler
 2329              		.syntax unified
 2330              		.code	16
 2331              		.thumb_func
 2332              		.fpu softvfp
 2334              	HAL_RCC_NMI_IRQHandler:
 2335              	.LFB48:
1285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2336              		.loc 1 1292 0
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 1, uses_anonymous_args = 0
 2340 0000 80B5     		push	{r7, lr}
 2341              		.cfi_def_cfa_offset 8
 2342              		.cfi_offset 7, -8
 2343              		.cfi_offset 14, -4
 2344 0002 00AF     		add	r7, sp, #0
 2345              		.cfi_def_cfa_register 7
1293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2346              		.loc 1 1294 0
 2347 0004 064B     		ldr	r3, .L159
 2348 0006 9B68     		ldr	r3, [r3, #8]
 2349 0008 8022     		movs	r2, #128
 2350 000a 1340     		ands	r3, r2
 2351 000c 802B     		cmp	r3, #128
 2352 000e 04D1     		bne	.L158
1295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
ARM GAS  /tmp/cccmP2QM.s 			page 65


1296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2353              		.loc 1 1297 0
 2354 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
1299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2355              		.loc 1 1300 0
 2356 0014 034B     		ldr	r3, .L159+4
 2357 0016 8022     		movs	r2, #128
 2358 0018 1A70     		strb	r2, [r3]
 2359              	.L158:
1301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2360              		.loc 1 1302 0
 2361 001a C046     		nop
 2362 001c BD46     		mov	sp, r7
 2363              		@ sp needed
 2364 001e 80BD     		pop	{r7, pc}
 2365              	.L160:
 2366              		.align	2
 2367              	.L159:
 2368 0020 00100240 		.word	1073876992
 2369 0024 0A100240 		.word	1073877002
 2370              		.cfi_endproc
 2371              	.LFE48:
 2373              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2374              		.align	1
 2375              		.weak	HAL_RCC_CSSCallback
 2376              		.syntax unified
 2377              		.code	16
 2378              		.thumb_func
 2379              		.fpu softvfp
 2381              	HAL_RCC_CSSCallback:
 2382              	.LFB49:
1303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval none
1307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2383              		.loc 1 1309 0
 2384              		.cfi_startproc
 2385              		@ args = 0, pretend = 0, frame = 0
 2386              		@ frame_needed = 1, uses_anonymous_args = 0
 2387 0000 80B5     		push	{r7, lr}
 2388              		.cfi_def_cfa_offset 8
 2389              		.cfi_offset 7, -8
 2390              		.cfi_offset 14, -4
 2391 0002 00AF     		add	r7, sp, #0
 2392              		.cfi_def_cfa_register 7
1310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     */ 
1313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2393              		.loc 1 1313 0
ARM GAS  /tmp/cccmP2QM.s 			page 66


 2394 0004 C046     		nop
 2395 0006 BD46     		mov	sp, r7
 2396              		@ sp needed
 2397 0008 80BD     		pop	{r7, pc}
 2398              		.cfi_endproc
 2399              	.LFE49:
 2401              		.text
 2402              	.Letext0:
 2403              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 2404              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 2405              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 2406              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 2407              		.file 6 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2408              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 2409              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 2410              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 2411              		.file 10 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/re
 2412              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2413              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2414              		.file 13 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
ARM GAS  /tmp/cccmP2QM.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_rcc.c
     /tmp/cccmP2QM.s:16     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/cccmP2QM.s:23     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/cccmP2QM.s:92     .text.HAL_RCC_DeInit:0000000000000058 $d
     /tmp/cccmP2QM.s:102    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/cccmP2QM.s:109    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/cccmP2QM.s:634    .text.HAL_RCC_OscConfig:0000000000000330 $d
     /tmp/cccmP2QM.s:640    .text.HAL_RCC_OscConfig:0000000000000340 $t
     /tmp/cccmP2QM.s:1147   .text.HAL_RCC_OscConfig:0000000000000674 $d
     /tmp/cccmP2QM.s:1155   .text.HAL_RCC_OscConfig:000000000000068c $t
     /tmp/cccmP2QM.s:1190   .text.HAL_RCC_OscConfig:00000000000006bc $d
     /tmp/cccmP2QM.s:1195   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/cccmP2QM.s:1202   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/cccmP2QM.s:1765   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/cccmP2QM.s:1533   .text.HAL_RCC_ClockConfig:00000000000001fc $d
     /tmp/cccmP2QM.s:1543   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/cccmP2QM.s:1550   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/cccmP2QM.s:1634   .text.HAL_RCC_MCOConfig:0000000000000078 $d
     /tmp/cccmP2QM.s:1640   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/cccmP2QM.s:1647   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/cccmP2QM.s:1675   .text.HAL_RCC_EnableCSS:0000000000000018 $d
     /tmp/cccmP2QM.s:1680   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/cccmP2QM.s:1687   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/cccmP2QM.s:1714   .text.HAL_RCC_DisableCSS:0000000000000018 $d
     /tmp/cccmP2QM.s:1721   .rodata:0000000000000000 $d
     /tmp/cccmP2QM.s:1758   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/cccmP2QM.s:1926   .text.HAL_RCC_GetSysClockFreq:00000000000000e8 $d
     /tmp/cccmP2QM.s:1935   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/cccmP2QM.s:1942   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/cccmP2QM.s:1965   .text.HAL_RCC_GetHCLKFreq:0000000000000010 $d
     /tmp/cccmP2QM.s:1970   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/cccmP2QM.s:1977   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/cccmP2QM.s:2009   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/cccmP2QM.s:2015   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/cccmP2QM.s:2022   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/cccmP2QM.s:2251   .text.HAL_RCC_GetOscConfig:0000000000000154 $d
     /tmp/cccmP2QM.s:2256   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/cccmP2QM.s:2263   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/cccmP2QM.s:2321   .text.HAL_RCC_GetClockConfig:000000000000004c $d
     /tmp/cccmP2QM.s:2327   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/cccmP2QM.s:2334   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/cccmP2QM.s:2381   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/cccmP2QM.s:2368   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
     /tmp/cccmP2QM.s:2374   .text.HAL_RCC_CSSCallback:0000000000000000 $t
                           .group:0000000000000000 wm4.0.b7c3d577b02d87ac381ee43eef398462
                           .group:0000000000000000 wm4.main.h.42.3939338cba6ab0a8b761d08be8206d51
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.b0c07d2233f75e3b04f03d95093d88ca
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
ARM GAS  /tmp/cccmP2QM.s 			page 68


                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart.h.38.e5eada3cdf37ca88de33bd21ddd21a5e
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart_ex.h.38.9430c2ca5ec832677dbe7308c46115fd
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_InitTick
AHBPrescTable
HAL_GPIO_Init
__aeabi_uidiv
APBPrescTable
