ARM GAS  /tmp/cceoDgSv.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_RCC_DeInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_RCC_DeInit:
  24              	.LFB37:
  25              		.file 1 "cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c"
   1:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
   2:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
   3:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @file    stm32f0xx_hal_rcc.c
   4:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @author  MCD Application Team
   5:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *       
  11:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim                
  12:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  13:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  15:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  16:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, USART, TIM, USB FS, etc..)
  32:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  33:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC Limitations #####
ARM GAS  /tmp/cceoDgSv.s 			page 2


  34:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  35:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  36:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       from/to registers.
  39:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  42:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  43:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       Workarounds:
  44:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  47:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
  48:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  49:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @attention
  50:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  51:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  53:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      without specific prior written permission.
  63:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  64:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  75:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************  
  76:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** */
  77:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  78:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #include "stm32f0xx_hal.h"
  80:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  81:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @addtogroup STM32F0xx_HAL_Driver
  82:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  83:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  84:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  85:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** * @brief RCC HAL module driver
  87:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  88:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  89:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  90:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
ARM GAS  /tmp/cceoDgSv.s 			page 3


  91:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  92:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  * @{
  96:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  */
  97:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  98:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  99:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim    
 132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSE, HSI, HSI14, HSI48, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, 
 138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       AHB and APB1).
 139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the PLL as System clock source.
 143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI14 (high-speed internal), 14 MHz factory-trimmed RC used directly to clock 
 146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the ADC peripheral.
 147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/cceoDgSv.s 			page 4


 148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source.
 150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) PLL (clocked by HSI, HSI48 or HSE), featuring different output clocks:
 157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The first output is used to generate the high speed system clock (up to 48 MHz)
 158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The second output is used to generate the clock for the USB FS (48 MHz)
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The third output may be used to generate the clock for the TIM, I2C and USART 
 160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             peripherals (up to 48 MHz)
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M0 NMI 
 166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           HSE and PLL.
 174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) clock is derived
 177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For the STM32F0xx devices, the maximum frequency of the SYSCLK, HCLK and PCLK1 is 48 MHz,
 193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prefetch is disabled.
 197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /*
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           | Latency       | SYSCLK clock frequency (MHz)  |
ARM GAS  /tmp/cceoDgSv.s 			page 5


 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSE and PLL OFF
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - AHB, APB1 prescaler set to 1.
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupts disabled
 220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - Peripheral clocks
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  26              		.loc 1 226 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  31              		.loc 1 228 0
  32 0000 0C4B     		ldr	r3, .L2
  33 0002 1A68     		ldr	r2, [r3]
  34 0004 8121     		movs	r1, #129
  35 0006 0A43     		orrs	r2, r1
  36 0008 1A60     		str	r2, [r3]
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0] and MCOSEL[2:0] bits */
 231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE | RCC_CFGR_MCO);
  37              		.loc 1 231 0
  38 000a 5A68     		ldr	r2, [r3, #4]
  39 000c 0A49     		ldr	r1, .L2+4
  40 000e 0A40     		ands	r2, r1
  41 0010 5A60     		str	r2, [r3, #4]
 232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
  42              		.loc 1 234 0
  43 0012 1A68     		ldr	r2, [r3]
  44 0014 0949     		ldr	r1, .L2+8
  45 0016 0A40     		ands	r2, r1
  46 0018 1A60     		str	r2, [r3]
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  47              		.loc 1 237 0
  48 001a 1A68     		ldr	r2, [r3]
  49 001c 0849     		ldr	r1, .L2+12
ARM GAS  /tmp/cceoDgSv.s 			page 6


  50 001e 0A40     		ands	r2, r1
  51 0020 1A60     		str	r2, [r3]
 238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR register */
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  52              		.loc 1 240 0
  53 0022 0022     		movs	r2, #0
  54 0024 5A60     		str	r2, [r3, #4]
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR2 register */
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
  55              		.loc 1 243 0
  56 0026 DA62     		str	r2, [r3, #44]
 244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR3 register */
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
  57              		.loc 1 246 0
  58 0028 1A63     		str	r2, [r3, #48]
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Disable all interrupts */
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  59              		.loc 1 249 0
  60 002a 9A60     		str	r2, [r3, #8]
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  61              		.loc 1 252 0
  62 002c 054B     		ldr	r3, .L2+16
  63 002e 064A     		ldr	r2, .L2+20
  64 0030 1A60     		str	r2, [r3]
 253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
  65              		.loc 1 253 0
  66              		@ sp needed
  67 0032 7047     		bx	lr
  68              	.L3:
  69              		.align	2
  70              	.L2:
  71 0034 00100240 		.word	1073876992
  72 0038 0CF8FFF0 		.word	-251660276
  73 003c FFFFF6FE 		.word	-17367041
  74 0040 FFFFFBFF 		.word	-262145
  75 0044 00000000 		.word	SystemCoreClock
  76 0048 00127A00 		.word	8000000
  77              		.cfi_endproc
  78              	.LFE37:
  80              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  81              		.align	1
  82              		.global	HAL_RCC_OscConfig
  83              		.syntax unified
  84              		.code	16
  85              		.thumb_func
  86              		.fpu softvfp
  88              	HAL_RCC_OscConfig:
  89              	.LFB38:
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
ARM GAS  /tmp/cceoDgSv.s 			page 7


 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  90              		.loc 1 270 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              	.LVL0:
  95 0000 70B5     		push	{r4, r5, r6, lr}
  96              		.cfi_def_cfa_offset 16
  97              		.cfi_offset 4, -16
  98              		.cfi_offset 5, -12
  99              		.cfi_offset 6, -8
 100              		.cfi_offset 14, -4
 101 0002 82B0     		sub	sp, sp, #8
 102              		.cfi_def_cfa_offset 24
 103 0004 0400     		movs	r4, r0
 104              	.LVL1:
 271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 105              		.loc 1 278 0
 106 0006 0368     		ldr	r3, [r0]
 107 0008 DB07     		lsls	r3, r3, #31
 108 000a 2BD5     		bpl	.L5
 279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 109              		.loc 1 284 0
 110 000c B34B     		ldr	r3, .L109
 111 000e 5A68     		ldr	r2, [r3, #4]
 112 0010 0C23     		movs	r3, #12
 113 0012 1340     		ands	r3, r2
 114 0014 042B     		cmp	r3, #4
 115 0016 1DD0     		beq	.L6
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 116              		.loc 1 285 0
 117 0018 B04B     		ldr	r3, .L109
ARM GAS  /tmp/cceoDgSv.s 			page 8


 118 001a 5A68     		ldr	r2, [r3, #4]
 119 001c 0C23     		movs	r3, #12
 120 001e 1340     		ands	r3, r2
 121 0020 082B     		cmp	r3, #8
 122 0022 0ED0     		beq	.L92
 123              	.L7:
 286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 124              		.loc 1 295 0
 125 0024 6368     		ldr	r3, [r4, #4]
 126 0026 012B     		cmp	r3, #1
 127 0028 41D0     		beq	.L93
 128              		.loc 1 295 0 is_stmt 0 discriminator 2
 129 002a 002B     		cmp	r3, #0
 130 002c 56D1     		bne	.L11
 131              		.loc 1 295 0 discriminator 3
 132 002e AB4B     		ldr	r3, .L109
 133 0030 1A68     		ldr	r2, [r3]
 134 0032 AB49     		ldr	r1, .L109+4
 135 0034 0A40     		ands	r2, r1
 136 0036 1A60     		str	r2, [r3]
 137 0038 1A68     		ldr	r2, [r3]
 138 003a AA49     		ldr	r1, .L109+8
 139 003c 0A40     		ands	r2, r1
 140 003e 1A60     		str	r2, [r3]
 141 0040 3BE0     		b	.L10
 142              	.L92:
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 143              		.loc 1 285 0 is_stmt 1 discriminator 1
 144 0042 A64B     		ldr	r3, .L109
 145 0044 5B68     		ldr	r3, [r3, #4]
 146 0046 C022     		movs	r2, #192
 147 0048 5202     		lsls	r2, r2, #9
 148 004a 1340     		ands	r3, r2
 149 004c 8022     		movs	r2, #128
 150 004e 5202     		lsls	r2, r2, #9
 151 0050 9342     		cmp	r3, r2
 152 0052 E7D1     		bne	.L7
 153              	.L6:
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 154              		.loc 1 287 0
 155 0054 A14B     		ldr	r3, .L109
 156 0056 1B68     		ldr	r3, [r3]
 157 0058 9B03     		lsls	r3, r3, #14
 158 005a 03D5     		bpl	.L5
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 159              		.loc 1 287 0 is_stmt 0 discriminator 1
 160 005c 6368     		ldr	r3, [r4, #4]
 161 005e 002B     		cmp	r3, #0
ARM GAS  /tmp/cceoDgSv.s 			page 9


 162 0060 00D1     		bne	.LCB118
 163 0062 39E2     		b	.L94	@long jump
 164              	.LCB118:
 165              	.LVL2:
 166              	.L5:
 296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Check the HSE State */
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is ready */
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 167              		.loc 1 330 0 is_stmt 1
 168 0064 2368     		ldr	r3, [r4]
 169 0066 9B07     		lsls	r3, r3, #30
 170 0068 78D5     		bpl	.L18
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 171              		.loc 1 337 0
 172 006a 9C4B     		ldr	r3, .L109
 173 006c 5B68     		ldr	r3, [r3, #4]
 174 006e 0C22     		movs	r2, #12
 175 0070 1A42     		tst	r2, r3
 176 0072 62D0     		beq	.L19
ARM GAS  /tmp/cceoDgSv.s 			page 10


 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 177              		.loc 1 338 0
 178 0074 994B     		ldr	r3, .L109
 179 0076 5A68     		ldr	r2, [r3, #4]
 180 0078 0C23     		movs	r3, #12
 181 007a 1340     		ands	r3, r2
 182 007c 082B     		cmp	r3, #8
 183 007e 53D0     		beq	.L95
 184              	.L20:
 339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI State */
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 185              		.loc 1 355 0
 186 0080 E368     		ldr	r3, [r4, #12]
 187 0082 002B     		cmp	r3, #0
 188 0084 00D1     		bne	.LCB144
 189 0086 8BE0     		b	.L22	@long jump
 190              	.LCB144:
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 191              		.loc 1 358 0
 192 0088 944A     		ldr	r2, .L109
 193 008a 1368     		ldr	r3, [r2]
 194 008c 0121     		movs	r1, #1
 195 008e 0B43     		orrs	r3, r1
 196 0090 1360     		str	r3, [r2]
 359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 197              		.loc 1 361 0
 198 0092 FFF7FEFF 		bl	HAL_GetTick
 199              	.LVL3:
 200 0096 0500     		movs	r5, r0
 201              	.LVL4:
 202              	.L23:
 362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is ready */
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 203              		.loc 1 364 0
 204 0098 904B     		ldr	r3, .L109
 205 009a 1B68     		ldr	r3, [r3]
 206 009c 9B07     		lsls	r3, r3, #30
ARM GAS  /tmp/cceoDgSv.s 			page 11


 207 009e 76D4     		bmi	.L96
 365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 208              		.loc 1 366 0
 209 00a0 FFF7FEFF 		bl	HAL_GetTick
 210              	.LVL5:
 211 00a4 401B     		subs	r0, r0, r5
 212 00a6 0228     		cmp	r0, #2
 213 00a8 F6D9     		bls	.L23
 367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 214              		.loc 1 368 0
 215 00aa 0320     		movs	r0, #3
 216 00ac 17E2     		b	.L8
 217              	.LVL6:
 218              	.L93:
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 219              		.loc 1 295 0 discriminator 1
 220 00ae 8B4A     		ldr	r2, .L109
 221 00b0 1168     		ldr	r1, [r2]
 222 00b2 8023     		movs	r3, #128
 223 00b4 5B02     		lsls	r3, r3, #9
 224 00b6 0B43     		orrs	r3, r1
 225 00b8 1360     		str	r3, [r2]
 226              	.L10:
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 227              		.loc 1 299 0
 228 00ba 6368     		ldr	r3, [r4, #4]
 229 00bc 002B     		cmp	r3, #0
 230 00be 25D0     		beq	.L13
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 231              		.loc 1 302 0
 232 00c0 FFF7FEFF 		bl	HAL_GetTick
 233              	.LVL7:
 234 00c4 0500     		movs	r5, r0
 235              	.LVL8:
 236              	.L14:
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 237              		.loc 1 305 0
 238 00c6 854B     		ldr	r3, .L109
 239 00c8 1B68     		ldr	r3, [r3]
 240 00ca 9B03     		lsls	r3, r3, #14
 241 00cc CAD4     		bmi	.L5
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 242              		.loc 1 307 0
 243 00ce FFF7FEFF 		bl	HAL_GetTick
 244              	.LVL9:
 245 00d2 401B     		subs	r0, r0, r5
 246 00d4 6428     		cmp	r0, #100
 247 00d6 F6D9     		bls	.L14
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 248              		.loc 1 309 0
 249 00d8 0320     		movs	r0, #3
 250 00da 00E2     		b	.L8
 251              	.LVL10:
 252              	.L11:
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
ARM GAS  /tmp/cceoDgSv.s 			page 12


 253              		.loc 1 295 0 discriminator 4
 254 00dc 052B     		cmp	r3, #5
 255 00de 09D0     		beq	.L97
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 256              		.loc 1 295 0 is_stmt 0 discriminator 6
 257 00e0 7E4B     		ldr	r3, .L109
 258 00e2 1A68     		ldr	r2, [r3]
 259 00e4 7E49     		ldr	r1, .L109+4
 260 00e6 0A40     		ands	r2, r1
 261 00e8 1A60     		str	r2, [r3]
 262 00ea 1A68     		ldr	r2, [r3]
 263 00ec 7D49     		ldr	r1, .L109+8
 264 00ee 0A40     		ands	r2, r1
 265 00f0 1A60     		str	r2, [r3]
 266 00f2 E2E7     		b	.L10
 267              	.L97:
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 268              		.loc 1 295 0 discriminator 5
 269 00f4 794B     		ldr	r3, .L109
 270 00f6 1968     		ldr	r1, [r3]
 271 00f8 8022     		movs	r2, #128
 272 00fa D202     		lsls	r2, r2, #11
 273 00fc 0A43     		orrs	r2, r1
 274 00fe 1A60     		str	r2, [r3]
 275 0100 1968     		ldr	r1, [r3]
 276 0102 8022     		movs	r2, #128
 277 0104 5202     		lsls	r2, r2, #9
 278 0106 0A43     		orrs	r2, r1
 279 0108 1A60     		str	r2, [r3]
 280 010a D6E7     		b	.L10
 281              	.L13:
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 282              		.loc 1 316 0 is_stmt 1
 283 010c FFF7FEFF 		bl	HAL_GetTick
 284              	.LVL11:
 285 0110 0500     		movs	r5, r0
 286              	.LVL12:
 287              	.L16:
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 288              		.loc 1 319 0
 289 0112 724B     		ldr	r3, .L109
 290 0114 1B68     		ldr	r3, [r3]
 291 0116 9B03     		lsls	r3, r3, #14
 292 0118 A4D5     		bpl	.L5
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 293              		.loc 1 321 0
 294 011a FFF7FEFF 		bl	HAL_GetTick
 295              	.LVL13:
 296 011e 401B     		subs	r0, r0, r5
 297 0120 6428     		cmp	r0, #100
 298 0122 F6D9     		bls	.L16
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 299              		.loc 1 323 0
 300 0124 0320     		movs	r0, #3
 301 0126 DAE1     		b	.L8
 302              	.LVL14:
 303              	.L95:
ARM GAS  /tmp/cceoDgSv.s 			page 13


 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 304              		.loc 1 338 0 discriminator 1
 305 0128 6C4B     		ldr	r3, .L109
 306 012a 5B68     		ldr	r3, [r3, #4]
 307 012c C022     		movs	r2, #192
 308 012e 5202     		lsls	r2, r2, #9
 309 0130 1340     		ands	r3, r2
 310 0132 8022     		movs	r2, #128
 311 0134 1202     		lsls	r2, r2, #8
 312 0136 9342     		cmp	r3, r2
 313 0138 A2D1     		bne	.L20
 314              	.L19:
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 315              		.loc 1 341 0
 316 013a 684B     		ldr	r3, .L109
 317 013c 1B68     		ldr	r3, [r3]
 318 013e 9B07     		lsls	r3, r3, #30
 319 0140 04D5     		bpl	.L21
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 320              		.loc 1 341 0 is_stmt 0 discriminator 1
 321 0142 E368     		ldr	r3, [r4, #12]
 322 0144 012B     		cmp	r3, #1
 323 0146 01D0     		beq	.L21
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 324              		.loc 1 343 0 is_stmt 1
 325 0148 0120     		movs	r0, #1
 326 014a C8E1     		b	.L8
 327              	.L21:
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 328              		.loc 1 349 0
 329 014c 6349     		ldr	r1, .L109
 330 014e 0B68     		ldr	r3, [r1]
 331 0150 F822     		movs	r2, #248
 332 0152 9343     		bics	r3, r2
 333 0154 2269     		ldr	r2, [r4, #16]
 334 0156 D200     		lsls	r2, r2, #3
 335 0158 1343     		orrs	r3, r2
 336 015a 0B60     		str	r3, [r1]
 337              	.L18:
 369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                 
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
ARM GAS  /tmp/cceoDgSv.s 			page 14


 387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 338              		.loc 1 395 0
 339 015c 2368     		ldr	r3, [r4]
 340 015e 1B07     		lsls	r3, r3, #28
 341 0160 44D5     		bpl	.L27
 396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSI State */
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 342              		.loc 1 401 0
 343 0162 E369     		ldr	r3, [r4, #28]
 344 0164 002B     		cmp	r3, #0
 345 0166 2ED0     		beq	.L28
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 346              		.loc 1 404 0
 347 0168 5C4A     		ldr	r2, .L109
 348 016a 536A     		ldr	r3, [r2, #36]
 349 016c 0121     		movs	r1, #1
 350 016e 0B43     		orrs	r3, r1
 351 0170 5362     		str	r3, [r2, #36]
 405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 352              		.loc 1 407 0
 353 0172 FFF7FEFF 		bl	HAL_GetTick
 354              	.LVL15:
 355 0176 0500     		movs	r5, r0
 356              	.LVL16:
 357              	.L29:
 408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 358              		.loc 1 410 0
 359 0178 584B     		ldr	r3, .L109
 360 017a 5B6A     		ldr	r3, [r3, #36]
 361 017c 9B07     		lsls	r3, r3, #30
 362 017e 35D4     		bmi	.L27
 411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 363              		.loc 1 412 0
 364 0180 FFF7FEFF 		bl	HAL_GetTick
 365              	.LVL17:
 366 0184 401B     		subs	r0, r0, r5
 367 0186 0228     		cmp	r0, #2
 368 0188 F6D9     		bls	.L29
ARM GAS  /tmp/cceoDgSv.s 			page 15


 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 369              		.loc 1 414 0
 370 018a 0320     		movs	r0, #3
 371 018c A7E1     		b	.L8
 372              	.L96:
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 373              		.loc 1 373 0
 374 018e 5349     		ldr	r1, .L109
 375 0190 0B68     		ldr	r3, [r1]
 376 0192 F822     		movs	r2, #248
 377 0194 9343     		bics	r3, r2
 378 0196 2269     		ldr	r2, [r4, #16]
 379 0198 D200     		lsls	r2, r2, #3
 380 019a 1343     		orrs	r3, r2
 381 019c 0B60     		str	r3, [r1]
 382 019e DDE7     		b	.L18
 383              	.LVL18:
 384              	.L22:
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 385              		.loc 1 378 0
 386 01a0 4E4A     		ldr	r2, .L109
 387 01a2 1368     		ldr	r3, [r2]
 388 01a4 0121     		movs	r1, #1
 389 01a6 8B43     		bics	r3, r1
 390 01a8 1360     		str	r3, [r2]
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 391              		.loc 1 381 0
 392 01aa FFF7FEFF 		bl	HAL_GetTick
 393              	.LVL19:
 394 01ae 0500     		movs	r5, r0
 395              	.LVL20:
 396              	.L25:
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 397              		.loc 1 384 0
 398 01b0 4A4B     		ldr	r3, .L109
 399 01b2 1B68     		ldr	r3, [r3]
 400 01b4 9B07     		lsls	r3, r3, #30
 401 01b6 D1D5     		bpl	.L18
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 402              		.loc 1 386 0
 403 01b8 FFF7FEFF 		bl	HAL_GetTick
 404              	.LVL21:
 405 01bc 401B     		subs	r0, r0, r5
 406 01be 0228     		cmp	r0, #2
 407 01c0 F6D9     		bls	.L25
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 408              		.loc 1 388 0
 409 01c2 0320     		movs	r0, #3
 410 01c4 8BE1     		b	.L8
 411              	.LVL22:
 412              	.L28:
 415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
ARM GAS  /tmp/cceoDgSv.s 			page 16


 420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 413              		.loc 1 421 0
 414 01c6 454A     		ldr	r2, .L109
 415 01c8 536A     		ldr	r3, [r2, #36]
 416 01ca 0121     		movs	r1, #1
 417 01cc 8B43     		bics	r3, r1
 418 01ce 5362     		str	r3, [r2, #36]
 422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 419              		.loc 1 424 0
 420 01d0 FFF7FEFF 		bl	HAL_GetTick
 421              	.LVL23:
 422 01d4 0500     		movs	r5, r0
 423              	.LVL24:
 424              	.L31:
 425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 425              		.loc 1 427 0
 426 01d6 414B     		ldr	r3, .L109
 427 01d8 5B6A     		ldr	r3, [r3, #36]
 428 01da 9B07     		lsls	r3, r3, #30
 429 01dc 06D5     		bpl	.L27
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 430              		.loc 1 429 0
 431 01de FFF7FEFF 		bl	HAL_GetTick
 432              	.LVL25:
 433 01e2 401B     		subs	r0, r0, r5
 434 01e4 0228     		cmp	r0, #2
 435 01e6 F6D9     		bls	.L31
 430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 436              		.loc 1 431 0
 437 01e8 0320     		movs	r0, #3
 438 01ea 78E1     		b	.L8
 439              	.LVL26:
 440              	.L27:
 432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 441              		.loc 1 437 0
 442 01ec 2368     		ldr	r3, [r4]
 443 01ee 5B07     		lsls	r3, r3, #29
 444 01f0 00D4     		bmi	.LCB427
 445 01f2 7FE0     		b	.L33	@long jump
 446              	.LCB427:
 447              	.LVL27:
 448              	.LBB2:
 438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
ARM GAS  /tmp/cceoDgSv.s 			page 17


 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 449              		.loc 1 446 0
 450 01f4 394B     		ldr	r3, .L109
 451 01f6 DB69     		ldr	r3, [r3, #28]
 452 01f8 DB00     		lsls	r3, r3, #3
 453 01fa 1DD4     		bmi	.L78
 454              	.LBB3:
 447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 455              		.loc 1 448 0
 456 01fc 374A     		ldr	r2, .L109
 457 01fe D169     		ldr	r1, [r2, #28]
 458 0200 8020     		movs	r0, #128
 459 0202 4005     		lsls	r0, r0, #21
 460 0204 0143     		orrs	r1, r0
 461 0206 D161     		str	r1, [r2, #28]
 462 0208 D369     		ldr	r3, [r2, #28]
 463 020a 0340     		ands	r3, r0
 464 020c 0193     		str	r3, [sp, #4]
 465 020e 019B     		ldr	r3, [sp, #4]
 466              	.LVL28:
 467              	.LBE3:
 449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pwrclkchanged = SET;
 468              		.loc 1 449 0
 469 0210 0125     		movs	r5, #1
 470              	.LVL29:
 471              	.L34:
 450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 472              		.loc 1 452 0
 473 0212 354B     		ldr	r3, .L109+12
 474 0214 1B68     		ldr	r3, [r3]
 475 0216 DB05     		lsls	r3, r3, #23
 476 0218 10D5     		bpl	.L98
 477              	.L35:
 453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/cceoDgSv.s 			page 18


 469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 478              		.loc 1 470 0
 479 021a A368     		ldr	r3, [r4, #8]
 480 021c 012B     		cmp	r3, #1
 481 021e 21D0     		beq	.L99
 482              		.loc 1 470 0 is_stmt 0 discriminator 2
 483 0220 002B     		cmp	r3, #0
 484 0222 36D1     		bne	.L40
 485              		.loc 1 470 0 discriminator 3
 486 0224 2D4B     		ldr	r3, .L109
 487 0226 1A6A     		ldr	r2, [r3, #32]
 488 0228 0121     		movs	r1, #1
 489 022a 8A43     		bics	r2, r1
 490 022c 1A62     		str	r2, [r3, #32]
 491 022e 1A6A     		ldr	r2, [r3, #32]
 492 0230 0331     		adds	r1, r1, #3
 493 0232 8A43     		bics	r2, r1
 494 0234 1A62     		str	r2, [r3, #32]
 495 0236 1AE0     		b	.L39
 496              	.LVL30:
 497              	.L78:
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 498              		.loc 1 439 0 is_stmt 1
 499 0238 0025     		movs	r5, #0
 500 023a EAE7     		b	.L34
 501              	.LVL31:
 502              	.L98:
 455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 503              		.loc 1 455 0
 504 023c 2A4A     		ldr	r2, .L109+12
 505 023e 1168     		ldr	r1, [r2]
 506 0240 8023     		movs	r3, #128
 507 0242 5B00     		lsls	r3, r3, #1
 508 0244 0B43     		orrs	r3, r1
 509 0246 1360     		str	r3, [r2]
 458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 510              		.loc 1 458 0
 511 0248 FFF7FEFF 		bl	HAL_GetTick
 512              	.LVL32:
 513 024c 0600     		movs	r6, r0
 514              	.LVL33:
 515              	.L36:
 460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 516              		.loc 1 460 0
 517 024e 264B     		ldr	r3, .L109+12
 518 0250 1B68     		ldr	r3, [r3]
 519 0252 DB05     		lsls	r3, r3, #23
 520 0254 E1D4     		bmi	.L35
 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 521              		.loc 1 462 0
 522 0256 FFF7FEFF 		bl	HAL_GetTick
 523              	.LVL34:
 524 025a 801B     		subs	r0, r0, r6
 525 025c 6428     		cmp	r0, #100
 526 025e F6D9     		bls	.L36
 464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
ARM GAS  /tmp/cceoDgSv.s 			page 19


 527              		.loc 1 464 0
 528 0260 0320     		movs	r0, #3
 529 0262 3CE1     		b	.L8
 530              	.LVL35:
 531              	.L99:
 532              		.loc 1 470 0 discriminator 1
 533 0264 1D4A     		ldr	r2, .L109
 534 0266 136A     		ldr	r3, [r2, #32]
 535 0268 0121     		movs	r1, #1
 536 026a 0B43     		orrs	r3, r1
 537 026c 1362     		str	r3, [r2, #32]
 538              	.L39:
 471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 539              		.loc 1 472 0
 540 026e A368     		ldr	r3, [r4, #8]
 541 0270 002B     		cmp	r3, #0
 542 0272 24D0     		beq	.L42
 473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 543              		.loc 1 475 0
 544 0274 FFF7FEFF 		bl	HAL_GetTick
 545              	.LVL36:
 546 0278 0600     		movs	r6, r0
 547              	.LVL37:
 548              	.L43:
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 549              		.loc 1 478 0
 550 027a 184B     		ldr	r3, .L109
 551 027c 1B6A     		ldr	r3, [r3, #32]
 552 027e 9B07     		lsls	r3, r3, #30
 553 0280 36D4     		bmi	.L45
 479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 554              		.loc 1 480 0
 555 0282 FFF7FEFF 		bl	HAL_GetTick
 556              	.LVL38:
 557 0286 801B     		subs	r0, r0, r6
 558 0288 184B     		ldr	r3, .L109+16
 559 028a 9842     		cmp	r0, r3
 560 028c F5D9     		bls	.L43
 481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 561              		.loc 1 482 0
 562 028e 0320     		movs	r0, #3
 563 0290 25E1     		b	.L8
 564              	.LVL39:
 565              	.L40:
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 566              		.loc 1 470 0 discriminator 4
 567 0292 052B     		cmp	r3, #5
 568 0294 09D0     		beq	.L100
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 569              		.loc 1 470 0 is_stmt 0 discriminator 6
ARM GAS  /tmp/cceoDgSv.s 			page 20


 570 0296 114B     		ldr	r3, .L109
 571 0298 1A6A     		ldr	r2, [r3, #32]
 572 029a 0121     		movs	r1, #1
 573 029c 8A43     		bics	r2, r1
 574 029e 1A62     		str	r2, [r3, #32]
 575 02a0 1A6A     		ldr	r2, [r3, #32]
 576 02a2 0331     		adds	r1, r1, #3
 577 02a4 8A43     		bics	r2, r1
 578 02a6 1A62     		str	r2, [r3, #32]
 579 02a8 E1E7     		b	.L39
 580              	.L100:
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 581              		.loc 1 470 0 discriminator 5
 582 02aa 0C4B     		ldr	r3, .L109
 583 02ac 1A6A     		ldr	r2, [r3, #32]
 584 02ae 0421     		movs	r1, #4
 585 02b0 0A43     		orrs	r2, r1
 586 02b2 1A62     		str	r2, [r3, #32]
 587 02b4 1A6A     		ldr	r2, [r3, #32]
 588 02b6 0339     		subs	r1, r1, #3
 589 02b8 0A43     		orrs	r2, r1
 590 02ba 1A62     		str	r2, [r3, #32]
 591 02bc D7E7     		b	.L39
 592              	.L42:
 483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 593              		.loc 1 489 0 is_stmt 1
 594 02be FFF7FEFF 		bl	HAL_GetTick
 595              	.LVL40:
 596 02c2 0600     		movs	r6, r0
 597              	.LVL41:
 598              	.L46:
 490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 599              		.loc 1 492 0
 600 02c4 054B     		ldr	r3, .L109
 601 02c6 1B6A     		ldr	r3, [r3, #32]
 602 02c8 9B07     		lsls	r3, r3, #30
 603 02ca 11D5     		bpl	.L45
 493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 604              		.loc 1 494 0
 605 02cc FFF7FEFF 		bl	HAL_GetTick
 606              	.LVL42:
 607 02d0 801B     		subs	r0, r0, r6
 608 02d2 064B     		ldr	r3, .L109+16
 609 02d4 9842     		cmp	r0, r3
 610 02d6 F5D9     		bls	.L46
 495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 611              		.loc 1 496 0
ARM GAS  /tmp/cceoDgSv.s 			page 21


 612 02d8 0320     		movs	r0, #3
 613 02da 00E1     		b	.L8
 614              	.L110:
 615              		.align	2
 616              	.L109:
 617 02dc 00100240 		.word	1073876992
 618 02e0 FFFFFEFF 		.word	-65537
 619 02e4 FFFFFBFF 		.word	-262145
 620 02e8 00700040 		.word	1073770496
 621 02ec 88130000 		.word	5000
 622              	.L45:
 497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 623              		.loc 1 502 0
 624 02f0 012D     		cmp	r5, #1
 625 02f2 3AD0     		beq	.L101
 626              	.LVL43:
 627              	.L33:
 628              	.LBE2:
 503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 629              		.loc 1 509 0
 630 02f4 2368     		ldr	r3, [r4]
 631 02f6 DB06     		lsls	r3, r3, #27
 632 02f8 10D5     		bpl	.L48
 510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the HSI14 State */
 516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 633              		.loc 1 516 0
 634 02fa 6369     		ldr	r3, [r4, #20]
 635 02fc 012B     		cmp	r3, #1
 636 02fe 3AD0     		beq	.L102
 517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_ENABLE();
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
ARM GAS  /tmp/cceoDgSv.s 			page 22


 529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 533:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       } 
 535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 539:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 637              		.loc 1 539 0
 638 0300 0533     		adds	r3, r3, #5
 639 0302 58D1     		bne	.L52
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 541:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 640              		.loc 1 542 0
 641 0304 784A     		ldr	r2, .L111
 642 0306 536B     		ldr	r3, [r2, #52]
 643 0308 0421     		movs	r1, #4
 644 030a 8B43     		bics	r3, r1
 645 030c 5363     		str	r3, [r2, #52]
 543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 544:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 545:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 646              		.loc 1 545 0
 647 030e 536B     		ldr	r3, [r2, #52]
 648 0310 F431     		adds	r1, r1, #244
 649 0312 8B43     		bics	r3, r1
 650 0314 A169     		ldr	r1, [r4, #24]
 651 0316 C900     		lsls	r1, r1, #3
 652 0318 0B43     		orrs	r3, r1
 653 031a 5363     		str	r3, [r2, #52]
 654              	.L48:
 546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 548:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 551:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 552:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_DISABLE();
 554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 555:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 557:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 558:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 560:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 562:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 564:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
ARM GAS  /tmp/cceoDgSv.s 			page 23


 568:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 569:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 571:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 655              		.loc 1 571 0
 656 031c 2368     		ldr	r3, [r4]
 657 031e 9B06     		lsls	r3, r3, #26
 658 0320 00D4     		bmi	.LCB657
 659 0322 82E0     		b	.L55	@long jump
 660              	.LCB657:
 572:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 573:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 574:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 661              		.loc 1 577 0
 662 0324 704B     		ldr	r3, .L111
 663 0326 5A68     		ldr	r2, [r3, #4]
 664 0328 0C23     		movs	r3, #12
 665 032a 1340     		ands	r3, r2
 666 032c 0C2B     		cmp	r3, #12
 667 032e 60D0     		beq	.L56
 578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 668              		.loc 1 578 0 discriminator 1
 669 0330 6D4B     		ldr	r3, .L111
 670 0332 5A68     		ldr	r2, [r3, #4]
 671 0334 0C23     		movs	r3, #12
 672 0336 1340     		ands	r3, r2
 577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 673              		.loc 1 577 0 discriminator 1
 674 0338 082B     		cmp	r3, #8
 675 033a 53D0     		beq	.L103
 676              	.L57:
 579:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 581:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 584:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 State */
 588:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 677              		.loc 1 588 0
 678 033c 236A     		ldr	r3, [r4, #32]
 679 033e 002B     		cmp	r3, #0
 680 0340 60D0     		beq	.L58
 589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 591:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_ENABLE();
 681              		.loc 1 591 0
 682 0342 694A     		ldr	r2, .L111
 683 0344 516B     		ldr	r1, [r2, #52]
 684 0346 8023     		movs	r3, #128
 685 0348 5B02     		lsls	r3, r3, #9
 686 034a 0B43     		orrs	r3, r1
ARM GAS  /tmp/cceoDgSv.s 			page 24


 687 034c 5363     		str	r3, [r2, #52]
 592:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 593:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 594:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 688              		.loc 1 594 0
 689 034e FFF7FEFF 		bl	HAL_GetTick
 690              	.LVL44:
 691 0352 0500     		movs	r5, r0
 692              	.LVL45:
 693              	.L59:
 595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 596:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 694              		.loc 1 597 0
 695 0354 644B     		ldr	r3, .L111
 696 0356 5B6B     		ldr	r3, [r3, #52]
 697 0358 DB03     		lsls	r3, r3, #15
 698 035a 66D4     		bmi	.L55
 598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 599:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 699              		.loc 1 599 0
 700 035c FFF7FEFF 		bl	HAL_GetTick
 701              	.LVL46:
 702 0360 401B     		subs	r0, r0, r5
 703 0362 0228     		cmp	r0, #2
 704 0364 F6D9     		bls	.L59
 600:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 601:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 705              		.loc 1 601 0
 706 0366 0320     		movs	r0, #3
 707 0368 B9E0     		b	.L8
 708              	.LVL47:
 709              	.L101:
 710              	.LBB4:
 504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 711              		.loc 1 504 0
 712 036a 5F4A     		ldr	r2, .L111
 713 036c D369     		ldr	r3, [r2, #28]
 714 036e 5F49     		ldr	r1, .L111+4
 715 0370 0B40     		ands	r3, r1
 716 0372 D361     		str	r3, [r2, #28]
 717 0374 BEE7     		b	.L33
 718              	.LVL48:
 719              	.L102:
 720              	.LBE4:
 519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 721              		.loc 1 519 0
 722 0376 5C4B     		ldr	r3, .L111
 723 0378 5A6B     		ldr	r2, [r3, #52]
 724 037a 0421     		movs	r1, #4
 725 037c 0A43     		orrs	r2, r1
 726 037e 5A63     		str	r2, [r3, #52]
 522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 727              		.loc 1 522 0
 728 0380 5A6B     		ldr	r2, [r3, #52]
 729 0382 0339     		subs	r1, r1, #3
 730 0384 0A43     		orrs	r2, r1
ARM GAS  /tmp/cceoDgSv.s 			page 25


 731 0386 5A63     		str	r2, [r3, #52]
 525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 732              		.loc 1 525 0
 733 0388 FFF7FEFF 		bl	HAL_GetTick
 734              	.LVL49:
 735 038c 0500     		movs	r5, r0
 736              	.LVL50:
 737              	.L50:
 528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 738              		.loc 1 528 0
 739 038e 564B     		ldr	r3, .L111
 740 0390 5B6B     		ldr	r3, [r3, #52]
 741 0392 9B07     		lsls	r3, r3, #30
 742 0394 06D4     		bmi	.L104
 530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 743              		.loc 1 530 0
 744 0396 FFF7FEFF 		bl	HAL_GetTick
 745              	.LVL51:
 746 039a 401B     		subs	r0, r0, r5
 747 039c 0228     		cmp	r0, #2
 748 039e F6D9     		bls	.L50
 532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 749              		.loc 1 532 0
 750 03a0 0320     		movs	r0, #3
 751 03a2 9CE0     		b	.L8
 752              	.L104:
 537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 753              		.loc 1 537 0
 754 03a4 5049     		ldr	r1, .L111
 755 03a6 4B6B     		ldr	r3, [r1, #52]
 756 03a8 F822     		movs	r2, #248
 757 03aa 9343     		bics	r3, r2
 758 03ac A269     		ldr	r2, [r4, #24]
 759 03ae D200     		lsls	r2, r2, #3
 760 03b0 1343     		orrs	r3, r2
 761 03b2 4B63     		str	r3, [r1, #52]
 762 03b4 B2E7     		b	.L48
 763              	.LVL52:
 764              	.L52:
 550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 765              		.loc 1 550 0
 766 03b6 4C4B     		ldr	r3, .L111
 767 03b8 5A6B     		ldr	r2, [r3, #52]
 768 03ba 0421     		movs	r1, #4
 769 03bc 0A43     		orrs	r2, r1
 770 03be 5A63     		str	r2, [r3, #52]
 553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 771              		.loc 1 553 0
 772 03c0 5A6B     		ldr	r2, [r3, #52]
 773 03c2 0339     		subs	r1, r1, #3
 774 03c4 8A43     		bics	r2, r1
 775 03c6 5A63     		str	r2, [r3, #52]
 556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 776              		.loc 1 556 0
 777 03c8 FFF7FEFF 		bl	HAL_GetTick
 778              	.LVL53:
 779 03cc 0500     		movs	r5, r0
ARM GAS  /tmp/cceoDgSv.s 			page 26


 780              	.LVL54:
 781              	.L53:
 559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 782              		.loc 1 559 0
 783 03ce 464B     		ldr	r3, .L111
 784 03d0 5B6B     		ldr	r3, [r3, #52]
 785 03d2 9B07     		lsls	r3, r3, #30
 786 03d4 A2D5     		bpl	.L48
 561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 787              		.loc 1 561 0
 788 03d6 FFF7FEFF 		bl	HAL_GetTick
 789              	.LVL55:
 790 03da 401B     		subs	r0, r0, r5
 791 03dc 0228     		cmp	r0, #2
 792 03de F6D9     		bls	.L53
 563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 793              		.loc 1 563 0
 794 03e0 0320     		movs	r0, #3
 795 03e2 7CE0     		b	.L8
 796              	.LVL56:
 797              	.L103:
 578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 798              		.loc 1 578 0
 799 03e4 404B     		ldr	r3, .L111
 800 03e6 5B68     		ldr	r3, [r3, #4]
 801 03e8 C022     		movs	r2, #192
 802 03ea 5202     		lsls	r2, r2, #9
 803 03ec 1340     		ands	r3, r2
 804 03ee 9342     		cmp	r3, r2
 805 03f0 A4D1     		bne	.L57
 806              	.L56:
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 807              		.loc 1 580 0
 808 03f2 3D4B     		ldr	r3, .L111
 809 03f4 5B6B     		ldr	r3, [r3, #52]
 810 03f6 DB03     		lsls	r3, r3, #15
 811 03f8 17D5     		bpl	.L55
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 812              		.loc 1 580 0 is_stmt 0 discriminator 1
 813 03fa 236A     		ldr	r3, [r4, #32]
 814 03fc 012B     		cmp	r3, #1
 815 03fe 14D0     		beq	.L55
 582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 816              		.loc 1 582 0 is_stmt 1
 817 0400 0120     		movs	r0, #1
 818 0402 6CE0     		b	.L8
 819              	.L58:
 602:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         } 
 604:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 606:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 607:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 608:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_DISABLE();
 820              		.loc 1 608 0
 821 0404 384A     		ldr	r2, .L111
 822 0406 536B     		ldr	r3, [r2, #52]
ARM GAS  /tmp/cceoDgSv.s 			page 27


 823 0408 3949     		ldr	r1, .L111+8
 824 040a 0B40     		ands	r3, r1
 825 040c 5363     		str	r3, [r2, #52]
 609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 610:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 611:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 826              		.loc 1 611 0
 827 040e FFF7FEFF 		bl	HAL_GetTick
 828              	.LVL57:
 829 0412 0500     		movs	r5, r0
 830              	.LVL58:
 831              	.L61:
 612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 613:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 832              		.loc 1 614 0
 833 0414 344B     		ldr	r3, .L111
 834 0416 5B6B     		ldr	r3, [r3, #52]
 835 0418 DB03     		lsls	r3, r3, #15
 836 041a 06D5     		bpl	.L55
 615:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 837              		.loc 1 616 0
 838 041c FFF7FEFF 		bl	HAL_GetTick
 839              	.LVL59:
 840 0420 401B     		subs	r0, r0, r5
 841 0422 0228     		cmp	r0, #2
 842 0424 F6D9     		bls	.L61
 617:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 618:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 843              		.loc 1 618 0
 844 0426 0320     		movs	r0, #3
 845 0428 59E0     		b	.L8
 846              	.LVL60:
 847              	.L55:
 619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 620:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 622:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 623:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 625:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        
 626:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 627:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 628:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 848              		.loc 1 629 0
 849 042a 636A     		ldr	r3, [r4, #36]
 850 042c 002B     		cmp	r3, #0
 851 042e 55D0     		beq	.L87
 630:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 631:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 852              		.loc 1 632 0
 853 0430 2D4A     		ldr	r2, .L111
 854 0432 5168     		ldr	r1, [r2, #4]
 855 0434 0C22     		movs	r2, #12
ARM GAS  /tmp/cceoDgSv.s 			page 28


 856 0436 0A40     		ands	r2, r1
 857 0438 082A     		cmp	r2, #8
 858 043a 52D0     		beq	.L88
 633:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     { 
 634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 859              		.loc 1 634 0
 860 043c 022B     		cmp	r3, #2
 861 043e 12D0     		beq	.L105
 635:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 636:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Check the parameters */
 637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 638:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 639:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 641:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 644:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 647:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 649:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 653:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 655:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 656:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 658:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 659:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 660:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the main PLL. */
 661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 662:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 663:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 665:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is ready */
 667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 670:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 672:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 674:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 676:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 677:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 862              		.loc 1 678 0
 863 0440 294A     		ldr	r2, .L111
 864 0442 1368     		ldr	r3, [r2]
 865 0444 2B49     		ldr	r1, .L111+12
 866 0446 0B40     		ands	r3, r1
ARM GAS  /tmp/cceoDgSv.s 			page 29


 867 0448 1360     		str	r3, [r2]
 679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  
 680:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 681:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 868              		.loc 1 681 0
 869 044a FFF7FEFF 		bl	HAL_GetTick
 870              	.LVL61:
 871 044e 0400     		movs	r4, r0
 872              	.LVL62:
 873              	.L68:
 682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 874              		.loc 1 684 0
 875 0450 254B     		ldr	r3, .L111
 876 0452 1B68     		ldr	r3, [r3]
 877 0454 9B01     		lsls	r3, r3, #6
 878 0456 3DD5     		bpl	.L106
 685:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 879              		.loc 1 686 0
 880 0458 FFF7FEFF 		bl	HAL_GetTick
 881              	.LVL63:
 882 045c 001B     		subs	r0, r0, r4
 883 045e 0228     		cmp	r0, #2
 884 0460 F6D9     		bls	.L68
 687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 688:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 885              		.loc 1 688 0
 886 0462 0320     		movs	r0, #3
 887 0464 3BE0     		b	.L8
 888              	.LVL64:
 889              	.L105:
 642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 890              		.loc 1 642 0
 891 0466 204A     		ldr	r2, .L111
 892 0468 1368     		ldr	r3, [r2]
 893 046a 2249     		ldr	r1, .L111+12
 894 046c 0B40     		ands	r3, r1
 895 046e 1360     		str	r3, [r2]
 645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 896              		.loc 1 645 0
 897 0470 FFF7FEFF 		bl	HAL_GetTick
 898              	.LVL65:
 899 0474 0500     		movs	r5, r0
 900              	.LVL66:
 901              	.L64:
 648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 902              		.loc 1 648 0
 903 0476 1C4B     		ldr	r3, .L111
 904 0478 1B68     		ldr	r3, [r3]
 905 047a 9B01     		lsls	r3, r3, #6
 906 047c 06D5     		bpl	.L107
 650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 907              		.loc 1 650 0
 908 047e FFF7FEFF 		bl	HAL_GetTick
 909              	.LVL67:
ARM GAS  /tmp/cceoDgSv.s 			page 30


 910 0482 401B     		subs	r0, r0, r5
 911 0484 0228     		cmp	r0, #2
 912 0486 F6D9     		bls	.L64
 652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 913              		.loc 1 652 0
 914 0488 0320     		movs	r0, #3
 915 048a 28E0     		b	.L8
 916              	.L107:
 657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 917              		.loc 1 657 0
 918 048c 164B     		ldr	r3, .L111
 919 048e DA6A     		ldr	r2, [r3, #44]
 920 0490 0F21     		movs	r1, #15
 921 0492 8A43     		bics	r2, r1
 922 0494 216B     		ldr	r1, [r4, #48]
 923 0496 0A43     		orrs	r2, r1
 924 0498 DA62     		str	r2, [r3, #44]
 925 049a 5A68     		ldr	r2, [r3, #4]
 926 049c 1649     		ldr	r1, .L111+16
 927 049e 0A40     		ands	r2, r1
 928 04a0 E16A     		ldr	r1, [r4, #44]
 929 04a2 A06A     		ldr	r0, [r4, #40]
 930 04a4 0143     		orrs	r1, r0
 931 04a6 0A43     		orrs	r2, r1
 932 04a8 5A60     		str	r2, [r3, #4]
 661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 933              		.loc 1 661 0
 934 04aa 1968     		ldr	r1, [r3]
 935 04ac 8022     		movs	r2, #128
 936 04ae 5204     		lsls	r2, r2, #17
 937 04b0 0A43     		orrs	r2, r1
 938 04b2 1A60     		str	r2, [r3]
 664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 939              		.loc 1 664 0
 940 04b4 FFF7FEFF 		bl	HAL_GetTick
 941              	.LVL68:
 942 04b8 0400     		movs	r4, r0
 943              	.LVL69:
 944              	.L66:
 667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 945              		.loc 1 667 0
 946 04ba 0B4B     		ldr	r3, .L111
 947 04bc 1B68     		ldr	r3, [r3]
 948 04be 9B01     		lsls	r3, r3, #6
 949 04c0 06D4     		bmi	.L108
 669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 950              		.loc 1 669 0
 951 04c2 FFF7FEFF 		bl	HAL_GetTick
 952              	.LVL70:
 953 04c6 001B     		subs	r0, r0, r4
 954 04c8 0228     		cmp	r0, #2
 955 04ca F6D9     		bls	.L66
 671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 956              		.loc 1 671 0
 957 04cc 0320     		movs	r0, #3
 958 04ce 06E0     		b	.L8
 959              	.L108:
ARM GAS  /tmp/cceoDgSv.s 			page 31


 689:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 692:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 693:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 696:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 697:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 698:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 699:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 960              		.loc 1 699 0
 961 04d0 0020     		movs	r0, #0
 962 04d2 04E0     		b	.L8
 963              	.L106:
 964 04d4 0020     		movs	r0, #0
 965 04d6 02E0     		b	.L8
 966              	.LVL71:
 967              	.L94:
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 968              		.loc 1 289 0
 969 04d8 0120     		movs	r0, #1
 970              	.LVL72:
 971 04da 00E0     		b	.L8
 972              	.LVL73:
 973              	.L87:
 974              		.loc 1 699 0
 975 04dc 0020     		movs	r0, #0
 976              	.LVL74:
 977              	.L8:
 700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 978              		.loc 1 700 0
 979 04de 02B0     		add	sp, sp, #8
 980              		@ sp needed
 981 04e0 70BD     		pop	{r4, r5, r6, pc}
 982              	.LVL75:
 983              	.L88:
 695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 984              		.loc 1 695 0
 985 04e2 0120     		movs	r0, #1
 986 04e4 FBE7     		b	.L8
 987              	.L112:
 988 04e6 C046     		.align	2
 989              	.L111:
 990 04e8 00100240 		.word	1073876992
 991 04ec FFFFFFEF 		.word	-268435457
 992 04f0 FFFFFEFF 		.word	-65537
 993 04f4 FFFFFFFE 		.word	-16777217
 994 04f8 FF7FC2FF 		.word	-4030465
 995              		.cfi_endproc
 996              	.LFE38:
 998              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 999              		.align	1
 1000              		.global	HAL_RCC_MCOConfig
 1001              		.syntax unified
 1002              		.code	16
 1003              		.thumb_func
ARM GAS  /tmp/cceoDgSv.s 			page 32


 1004              		.fpu softvfp
 1006              	HAL_RCC_MCOConfig:
 1007              	.LFB40:
 701:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 702:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 703:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 705:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 706:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 708:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 709:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 710:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 711:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 712:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 713:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 714:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 715:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 716:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
 717:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 719:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 720:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 721:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         currently used as system clock source.
 723:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 725:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 727:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 728:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 731:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 732:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 735:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 736:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     (HCLK) of the device. */
 737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 740:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 743:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 744:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 750:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 751:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 754:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
ARM GAS  /tmp/cceoDgSv.s 			page 33


 755:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 757:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 759:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 761:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 763:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 764:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 766:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 767:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 769:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 771:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 772:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 773:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 775:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 776:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 778:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 780:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 781:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 782:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 783:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI48 is selected as System Clock Source */
 784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 785:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 786:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 ready flag */
 787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 788:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 791:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 792:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 793:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 798:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 800:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 801:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 803:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 804:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Get Start Tick */
 805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 808:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 810:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
ARM GAS  /tmp/cceoDgSv.s 			page 34


 812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 814:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 816:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 820:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 822:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 824:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 825:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 826:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 827:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 829:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 833:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 835:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 836:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 837:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 838:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 839:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 840:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 846:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 847:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 848:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }      
 849:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 850:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 852:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 853:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 854:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 855:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 856:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 857:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 858:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 859:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 860:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 861:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 862:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 863:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 864:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 865:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 866:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 867:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 868:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
ARM GAS  /tmp/cceoDgSv.s 			page 35


 869:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 870:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 871:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 872:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 873:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 874:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 875:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 876:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 877:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 879:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 880:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 881:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 882:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 883:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 884:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 885:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 886:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 887:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim   
 888:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 889:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 890:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================  
 891:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 892:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 893:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     frequencies.
 894:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 895:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 896:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 897:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 898:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 899:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 900:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 901:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 902:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 903:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 904:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 905:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 906:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 907:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 908:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 909:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 910:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 911:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 912:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 913:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 914:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 915:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @if STM32F042x6
 916:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 917:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 918:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F048xx
 919:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 920:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 921:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F071xB
 922:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 923:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 924:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F072xB
 925:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
ARM GAS  /tmp/cceoDgSv.s 			page 36


 926:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 927:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F078xx
 928:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 929:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 930:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F091xC
 931:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 932:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 933:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F098xx
 934:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 935:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 936:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030x6
 937:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 938:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030xC
 939:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 940:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F031x6
 941:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 942:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F038xx
 943:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 944:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070x6
 945:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 946:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070xB
 947:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 948:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endif
 949:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 950:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 951:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 952:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 953:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 954:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 955:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 956:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 957:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 958:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 959:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 960:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 961:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 962:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
 963:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 964:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 965:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 966:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 967:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 968:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 969:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 970:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 971:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 972:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 973:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 974:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 975:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 976:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 977:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 978:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 979:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 980:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 981:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 982:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
ARM GAS  /tmp/cceoDgSv.s 			page 37


 983:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 984:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
 985:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 986:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1008              		.loc 1 986 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 24
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012              	.LVL76:
 1013 0000 70B5     		push	{r4, r5, r6, lr}
 1014              		.cfi_def_cfa_offset 16
 1015              		.cfi_offset 4, -16
 1016              		.cfi_offset 5, -12
 1017              		.cfi_offset 6, -8
 1018              		.cfi_offset 14, -4
 1019 0002 86B0     		sub	sp, sp, #24
 1020              		.cfi_def_cfa_offset 40
 1021 0004 0D00     		movs	r5, r1
 1022 0006 1600     		movs	r6, r2
 987:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 988:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 989:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 990:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 991:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 992:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 993:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 994:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 995:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1023              		.loc 1 995 0
 1024 0008 0223     		movs	r3, #2
 1025 000a 0293     		str	r3, [sp, #8]
 996:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1026              		.loc 1 996 0
 1027 000c 0133     		adds	r3, r3, #1
 1028 000e 0493     		str	r3, [sp, #16]
 997:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1029              		.loc 1 997 0
 1030 0010 0023     		movs	r3, #0
 1031 0012 0393     		str	r3, [sp, #12]
 998:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1032              		.loc 1 998 0
 1033 0014 8022     		movs	r2, #128
 1034              	.LVL77:
 1035 0016 5200     		lsls	r2, r2, #1
 1036 0018 0192     		str	r2, [sp, #4]
 999:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1037              		.loc 1 999 0
 1038 001a 0593     		str	r3, [sp, #20]
 1039              	.LBB5:
1000:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1001:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1002:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1040              		.loc 1 1002 0
 1041 001c 0B4C     		ldr	r4, .L114
 1042 001e 6269     		ldr	r2, [r4, #20]
 1043 0020 8021     		movs	r1, #128
 1044              	.LVL78:
ARM GAS  /tmp/cceoDgSv.s 			page 38


 1045 0022 8902     		lsls	r1, r1, #10
 1046 0024 0A43     		orrs	r2, r1
 1047 0026 6261     		str	r2, [r4, #20]
 1048 0028 6369     		ldr	r3, [r4, #20]
 1049 002a 0B40     		ands	r3, r1
 1050 002c 0093     		str	r3, [sp]
 1051 002e 009B     		ldr	r3, [sp]
 1052              	.LBE5:
1003:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1004:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1053              		.loc 1 1004 0
 1054 0030 9020     		movs	r0, #144
 1055              	.LVL79:
 1056 0032 01A9     		add	r1, sp, #4
 1057 0034 C005     		lsls	r0, r0, #23
 1058 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1059              	.LVL80:
1005:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1006:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO clock source */
1007:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1060              		.loc 1 1007 0
 1061 003a 6268     		ldr	r2, [r4, #4]
 1062 003c 044B     		ldr	r3, .L114+4
 1063 003e 1A40     		ands	r2, r3
 1064 0040 3543     		orrs	r5, r6
 1065              	.LVL81:
 1066 0042 2A43     		orrs	r2, r5
 1067 0044 6260     		str	r2, [r4, #4]
1008:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1068              		.loc 1 1008 0
 1069 0046 06B0     		add	sp, sp, #24
 1070              		@ sp needed
 1071              	.LVL82:
 1072 0048 70BD     		pop	{r4, r5, r6, pc}
 1073              	.L115:
 1074 004a C046     		.align	2
 1075              	.L114:
 1076 004c 00100240 		.word	1073876992
 1077 0050 FFFFFF80 		.word	-2130706433
 1078              		.cfi_endproc
 1079              	.LFE40:
 1081              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1082              		.align	1
 1083              		.global	HAL_RCC_EnableCSS
 1084              		.syntax unified
 1085              		.code	16
 1086              		.thumb_func
 1087              		.fpu softvfp
 1089              	HAL_RCC_EnableCSS:
 1090              	.LFB41:
1009:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1010:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1011:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1012:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1013:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1014:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1015:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
ARM GAS  /tmp/cceoDgSv.s 			page 39


1016:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         the Cortex-M0 NMI (Non-Maskable Interrupt) exception vector.  
1017:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1018:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1019:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1020:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1091              		.loc 1 1020 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
1021:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 1096              		.loc 1 1021 0
 1097 0000 034A     		ldr	r2, .L117
 1098 0002 1168     		ldr	r1, [r2]
 1099 0004 8023     		movs	r3, #128
 1100 0006 1B03     		lsls	r3, r3, #12
 1101 0008 0B43     		orrs	r3, r1
 1102 000a 1360     		str	r3, [r2]
1022:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1103              		.loc 1 1022 0
 1104              		@ sp needed
 1105 000c 7047     		bx	lr
 1106              	.L118:
 1107 000e C046     		.align	2
 1108              	.L117:
 1109 0010 00100240 		.word	1073876992
 1110              		.cfi_endproc
 1111              	.LFE41:
 1113              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1114              		.align	1
 1115              		.global	HAL_RCC_DisableCSS
 1116              		.syntax unified
 1117              		.code	16
 1118              		.thumb_func
 1119              		.fpu softvfp
 1121              	HAL_RCC_DisableCSS:
 1122              	.LFB42:
1023:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1024:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1025:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1026:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1027:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1028:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1029:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1123              		.loc 1 1029 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
1030:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON) ;
 1128              		.loc 1 1030 0
 1129 0000 024A     		ldr	r2, .L120
 1130 0002 1368     		ldr	r3, [r2]
 1131 0004 0249     		ldr	r1, .L120+4
 1132 0006 0B40     		ands	r3, r1
 1133 0008 1360     		str	r3, [r2]
1031:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
ARM GAS  /tmp/cceoDgSv.s 			page 40


 1134              		.loc 1 1031 0
 1135              		@ sp needed
 1136 000a 7047     		bx	lr
 1137              	.L121:
 1138              		.align	2
 1139              	.L120:
 1140 000c 00100240 		.word	1073876992
 1141 0010 FFFFF7FF 		.word	-524289
 1142              		.cfi_endproc
 1143              	.LFE42:
 1145              		.global	__aeabi_uidiv
 1146              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1147              		.align	1
 1148              		.global	HAL_RCC_GetSysClockFreq
 1149              		.syntax unified
 1150              		.code	16
 1151              		.thumb_func
 1152              		.fpu softvfp
 1154              	HAL_RCC_GetSysClockFreq:
 1155              	.LFB43:
1032:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1033:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1034:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
1035:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1036:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1037:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         constant and the selected clock source:
1038:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1039:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
1040:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1041:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1042:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or depending on STM32F0xxxx devices either a value based
1043:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           on HSI_VALUE divided by 2 or HSI_VALUE divided by PREDIV factor(*) multiplied by the 
1044:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           PLL factor.
1045:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1046:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1047:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               in voltage and temperature.
1048:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1049:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1050:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1051:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                have wrong result.
1052:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                  
1053:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1054:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         value for HSE crystal.
1055:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1056:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
1057:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1058:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1059:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1060:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1061:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         
1062:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval SYSCLK frequency
1063:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1064:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1065:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1156              		.loc 1 1065 0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/cceoDgSv.s 			page 41


 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160 0000 30B5     		push	{r4, r5, lr}
 1161              		.cfi_def_cfa_offset 12
 1162              		.cfi_offset 4, -12
 1163              		.cfi_offset 5, -8
 1164              		.cfi_offset 14, -4
 1165 0002 89B0     		sub	sp, sp, #36
 1166              		.cfi_def_cfa_offset 48
1066:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 1167              		.loc 1 1066 0
 1168 0004 04AA     		add	r2, sp, #16
 1169 0006 1F4B     		ldr	r3, .L131
 1170 0008 1800     		movs	r0, r3
 1171 000a 32C8     		ldmia	r0!, {r1, r4, r5}
 1172 000c 32C2     		stmia	r2!, {r1, r4, r5}
 1173 000e 1100     		movs	r1, r2
 1174 0010 0268     		ldr	r2, [r0]
 1175 0012 0A60     		str	r2, [r1]
1067:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                          10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
1068:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 1176              		.loc 1 1068 0
 1177 0014 6A46     		mov	r2, sp
 1178 0016 1033     		adds	r3, r3, #16
 1179 0018 13CB     		ldmia	r3!, {r0, r1, r4}
 1180 001a 13C2     		stmia	r2!, {r0, r1, r4}
 1181 001c 1B68     		ldr	r3, [r3]
 1182 001e 1360     		str	r3, [r2]
 1183              	.LVL83:
1069:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                            9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
1070:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1071:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
1072:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
1073:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1074:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1184              		.loc 1 1074 0
 1185 0020 194B     		ldr	r3, .L131+4
 1186 0022 5A68     		ldr	r2, [r3, #4]
 1187              	.LVL84:
1075:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1076:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1077:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1188              		.loc 1 1077 0
 1189 0024 0C23     		movs	r3, #12
 1190 0026 1340     		ands	r3, r2
 1191 0028 082B     		cmp	r3, #8
 1192 002a 04D0     		beq	.L124
 1193 002c 0C2B     		cmp	r3, #12
 1194 002e 26D0     		beq	.L128
1078:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1079:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1080:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1081:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1195              		.loc 1 1081 0
 1196 0030 1648     		ldr	r0, .L131+8
 1197              	.LVL85:
 1198              	.L122:
1082:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
ARM GAS  /tmp/cceoDgSv.s 			page 42


1083:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1084:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1085:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1086:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER
1087:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BIT
1088:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
1089:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1090:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
1091:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
1092:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1093:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI48_PREDIV)
1094:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
1095:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1096:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI48 used as PLL clock source : PLLCLK = HSI48/PREDIV * PLLMUL */
1097:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSI48_VALUE / prediv) * pllmul;
1098:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1099:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
1100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
1101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) 
1103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
1105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
1106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1U) * pllmul);
1108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = pllclk;
1111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
1114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI48:    /* HSI48 used as system clock source */
1115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI48_VALUE;
1117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
1120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     default: /* HSI used as system clock */
1122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return sysclockfreq;
1128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1199              		.loc 1 1128 0
 1200 0032 09B0     		add	sp, sp, #36
 1201              		@ sp needed
 1202 0034 30BD     		pop	{r4, r5, pc}
 1203              	.LVL86:
 1204              	.L124:
1086:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BIT
 1205              		.loc 1 1086 0
 1206 0036 910C     		lsrs	r1, r2, #18
 1207 0038 0F23     		movs	r3, #15
 1208 003a 1940     		ands	r1, r3
ARM GAS  /tmp/cceoDgSv.s 			page 43


 1209 003c 04A8     		add	r0, sp, #16
 1210 003e 445C     		ldrb	r4, [r0, r1]
 1211              	.LVL87:
1087:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 1212              		.loc 1 1087 0
 1213 0040 1149     		ldr	r1, .L131+4
 1214 0042 C96A     		ldr	r1, [r1, #44]
 1215 0044 0B40     		ands	r3, r1
 1216 0046 6946     		mov	r1, sp
 1217 0048 C95C     		ldrb	r1, [r1, r3]
 1218              	.LVL88:
1088:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1219              		.loc 1 1088 0
 1220 004a C023     		movs	r3, #192
 1221 004c 5B02     		lsls	r3, r3, #9
 1222 004e 1A40     		ands	r2, r3
 1223              	.LVL89:
 1224 0050 8023     		movs	r3, #128
 1225 0052 5B02     		lsls	r3, r3, #9
 1226 0054 9A42     		cmp	r2, r3
 1227 0056 08D0     		beq	.L129
1094:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1228              		.loc 1 1094 0
 1229 0058 C023     		movs	r3, #192
 1230 005a 5B02     		lsls	r3, r3, #9
 1231 005c 9A42     		cmp	r2, r3
 1232 005e 09D0     		beq	.L130
1104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
 1233              		.loc 1 1104 0
 1234 0060 0A48     		ldr	r0, .L131+8
 1235 0062 FFF7FEFF 		bl	__aeabi_uidiv
 1236              	.LVL90:
 1237 0066 6043     		muls	r0, r4
 1238              	.LVL91:
 1239 0068 E3E7     		b	.L122
 1240              	.LVL92:
 1241              	.L129:
1091:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1242              		.loc 1 1091 0
 1243 006a 0848     		ldr	r0, .L131+8
 1244 006c FFF7FEFF 		bl	__aeabi_uidiv
 1245              	.LVL93:
 1246 0070 6043     		muls	r0, r4
 1247              	.LVL94:
 1248 0072 DEE7     		b	.L122
 1249              	.LVL95:
 1250              	.L130:
1097:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1251              		.loc 1 1097 0
 1252 0074 0648     		ldr	r0, .L131+12
 1253 0076 FFF7FEFF 		bl	__aeabi_uidiv
 1254              	.LVL96:
 1255 007a 6043     		muls	r0, r4
 1256              	.LVL97:
 1257 007c D9E7     		b	.L122
 1258              	.LVL98:
 1259              	.L128:
ARM GAS  /tmp/cceoDgSv.s 			page 44


1116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1260              		.loc 1 1116 0
 1261 007e 0448     		ldr	r0, .L131+12
 1262              	.LVL99:
1127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1263              		.loc 1 1127 0
 1264 0080 D7E7     		b	.L122
 1265              	.L132:
 1266 0082 C046     		.align	2
 1267              	.L131:
 1268 0084 00000000 		.word	.LANCHOR0
 1269 0088 00100240 		.word	1073876992
 1270 008c 00127A00 		.word	8000000
 1271 0090 006CDC02 		.word	48000000
 1272              		.cfi_endproc
 1273              	.LFE43:
 1275              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1276              		.align	1
 1277              		.global	HAL_RCC_ClockConfig
 1278              		.syntax unified
 1279              		.code	16
 1280              		.thumb_func
 1281              		.fpu softvfp
 1283              	HAL_RCC_ClockConfig:
 1284              	.LFB39:
 726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1285              		.loc 1 726 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 0
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289              	.LVL100:
 1290 0000 70B5     		push	{r4, r5, r6, lr}
 1291              		.cfi_def_cfa_offset 16
 1292              		.cfi_offset 4, -16
 1293              		.cfi_offset 5, -12
 1294              		.cfi_offset 6, -8
 1295              		.cfi_offset 14, -4
 1296 0002 0500     		movs	r5, r0
 1297 0004 0C00     		movs	r4, r1
 1298              	.LVL101:
 739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1299              		.loc 1 739 0
 1300 0006 594B     		ldr	r3, .L170
 1301 0008 1A68     		ldr	r2, [r3]
 1302 000a 0123     		movs	r3, #1
 1303 000c 1340     		ands	r3, r2
 1304 000e 8B42     		cmp	r3, r1
 1305 0010 0BD2     		bcs	.L134
 742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1306              		.loc 1 742 0
 1307 0012 5649     		ldr	r1, .L170
 1308              	.LVL102:
 1309 0014 0B68     		ldr	r3, [r1]
 1310 0016 0122     		movs	r2, #1
 1311 0018 9343     		bics	r3, r2
 1312 001a 2343     		orrs	r3, r4
 1313 001c 0B60     		str	r3, [r1]
ARM GAS  /tmp/cceoDgSv.s 			page 45


 746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1314              		.loc 1 746 0
 1315 001e 0B68     		ldr	r3, [r1]
 1316 0020 1A40     		ands	r2, r3
 1317 0022 A242     		cmp	r2, r4
 1318 0024 01D0     		beq	.L134
 748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 1319              		.loc 1 748 0
 1320 0026 0120     		movs	r0, #1
 1321              	.LVL103:
 1322              	.L135:
 878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1323              		.loc 1 878 0
 1324              		@ sp needed
 1325              	.LVL104:
 1326              	.LVL105:
 1327 0028 70BD     		pop	{r4, r5, r6, pc}
 1328              	.LVL106:
 1329              	.L134:
 753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1330              		.loc 1 753 0
 1331 002a 2B68     		ldr	r3, [r5]
 1332 002c 9B07     		lsls	r3, r3, #30
 1333 002e 06D5     		bpl	.L136
 756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1334              		.loc 1 756 0
 1335 0030 4F4A     		ldr	r2, .L170+4
 1336 0032 5368     		ldr	r3, [r2, #4]
 1337 0034 F021     		movs	r1, #240
 1338 0036 8B43     		bics	r3, r1
 1339 0038 A968     		ldr	r1, [r5, #8]
 1340 003a 0B43     		orrs	r3, r1
 1341 003c 5360     		str	r3, [r2, #4]
 1342              	.L136:
 760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1343              		.loc 1 760 0
 1344 003e 2B68     		ldr	r3, [r5]
 1345 0040 DB07     		lsls	r3, r3, #31
 1346 0042 63D5     		bpl	.L137
 765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1347              		.loc 1 765 0
 1348 0044 6B68     		ldr	r3, [r5, #4]
 1349 0046 012B     		cmp	r3, #1
 1350 0048 09D0     		beq	.L166
 774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1351              		.loc 1 774 0
 1352 004a 022B     		cmp	r3, #2
 1353 004c 28D0     		beq	.L167
 784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1354              		.loc 1 784 0
 1355 004e 032B     		cmp	r3, #3
 1356 0050 2CD0     		beq	.L168
 797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1357              		.loc 1 797 0
 1358 0052 474A     		ldr	r2, .L170+4
 1359 0054 1268     		ldr	r2, [r2]
 1360 0056 9207     		lsls	r2, r2, #30
ARM GAS  /tmp/cceoDgSv.s 			page 46


 1361 0058 05D4     		bmi	.L139
 799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1362              		.loc 1 799 0
 1363 005a 0120     		movs	r0, #1
 1364              	.LVL107:
 1365 005c E4E7     		b	.L135
 1366              	.LVL108:
 1367              	.L166:
 768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1368              		.loc 1 768 0
 1369 005e 444A     		ldr	r2, .L170+4
 1370 0060 1268     		ldr	r2, [r2]
 1371 0062 9203     		lsls	r2, r2, #14
 1372 0064 7FD5     		bpl	.L169
 1373              	.L139:
 802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1374              		.loc 1 802 0
 1375 0066 4249     		ldr	r1, .L170+4
 1376 0068 4A68     		ldr	r2, [r1, #4]
 1377 006a 0320     		movs	r0, #3
 1378              	.LVL109:
 1379 006c 8243     		bics	r2, r0
 1380 006e 1343     		orrs	r3, r2
 1381 0070 4B60     		str	r3, [r1, #4]
 805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1382              		.loc 1 805 0
 1383 0072 FFF7FEFF 		bl	HAL_GetTick
 1384              	.LVL110:
 1385 0076 0600     		movs	r6, r0
 1386              	.LVL111:
 807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1387              		.loc 1 807 0
 1388 0078 6B68     		ldr	r3, [r5, #4]
 1389 007a 012B     		cmp	r3, #1
 1390 007c 1CD0     		beq	.L142
 817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1391              		.loc 1 817 0
 1392 007e 022B     		cmp	r3, #2
 1393 0080 28D0     		beq	.L145
 828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1394              		.loc 1 828 0
 1395 0082 032B     		cmp	r3, #3
 1396 0084 34D0     		beq	.L148
 1397              	.LVL112:
 1398              	.L149:
 841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1399              		.loc 1 841 0
 1400 0086 3A4B     		ldr	r3, .L170+4
 1401 0088 5B68     		ldr	r3, [r3, #4]
 1402 008a 0C22     		movs	r2, #12
 1403 008c 1A42     		tst	r2, r3
 1404 008e 3DD0     		beq	.L137
 843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1405              		.loc 1 843 0
 1406 0090 FFF7FEFF 		bl	HAL_GetTick
 1407              	.LVL113:
 1408 0094 801B     		subs	r0, r0, r6
ARM GAS  /tmp/cceoDgSv.s 			page 47


 1409 0096 374B     		ldr	r3, .L170+8
 1410 0098 9842     		cmp	r0, r3
 1411 009a F4D9     		bls	.L149
 845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1412              		.loc 1 845 0
 1413 009c 0320     		movs	r0, #3
 1414 009e C3E7     		b	.L135
 1415              	.LVL114:
 1416              	.L167:
 777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1417              		.loc 1 777 0
 1418 00a0 334A     		ldr	r2, .L170+4
 1419 00a2 1268     		ldr	r2, [r2]
 1420 00a4 9201     		lsls	r2, r2, #6
 1421 00a6 DED4     		bmi	.L139
 779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1422              		.loc 1 779 0
 1423 00a8 0120     		movs	r0, #1
 1424              	.LVL115:
 1425 00aa BDE7     		b	.L135
 1426              	.LVL116:
 1427              	.L168:
 787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1428              		.loc 1 787 0
 1429 00ac 304A     		ldr	r2, .L170+4
 1430 00ae 526B     		ldr	r2, [r2, #52]
 1431 00b0 D203     		lsls	r2, r2, #15
 1432 00b2 D8D4     		bmi	.L139
 789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1433              		.loc 1 789 0
 1434 00b4 0120     		movs	r0, #1
 1435              	.LVL117:
 1436 00b6 B7E7     		b	.L135
 1437              	.LVL118:
 1438              	.L142:
 809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1439              		.loc 1 809 0
 1440 00b8 2D4B     		ldr	r3, .L170+4
 1441 00ba 5A68     		ldr	r2, [r3, #4]
 1442 00bc 0C23     		movs	r3, #12
 1443 00be 1340     		ands	r3, r2
 1444 00c0 042B     		cmp	r3, #4
 1445 00c2 23D0     		beq	.L137
 811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1446              		.loc 1 811 0
 1447 00c4 FFF7FEFF 		bl	HAL_GetTick
 1448              	.LVL119:
 1449 00c8 801B     		subs	r0, r0, r6
 1450 00ca 2A4B     		ldr	r3, .L170+8
 1451 00cc 9842     		cmp	r0, r3
 1452 00ce F3D9     		bls	.L142
 813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1453              		.loc 1 813 0
 1454 00d0 0320     		movs	r0, #3
 1455 00d2 A9E7     		b	.L135
 1456              	.L145:
 819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
ARM GAS  /tmp/cceoDgSv.s 			page 48


 1457              		.loc 1 819 0
 1458 00d4 264B     		ldr	r3, .L170+4
 1459 00d6 5A68     		ldr	r2, [r3, #4]
 1460 00d8 0C23     		movs	r3, #12
 1461 00da 1340     		ands	r3, r2
 1462 00dc 082B     		cmp	r3, #8
 1463 00de 15D0     		beq	.L137
 821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1464              		.loc 1 821 0
 1465 00e0 FFF7FEFF 		bl	HAL_GetTick
 1466              	.LVL120:
 1467 00e4 801B     		subs	r0, r0, r6
 1468 00e6 234B     		ldr	r3, .L170+8
 1469 00e8 9842     		cmp	r0, r3
 1470 00ea F3D9     		bls	.L145
 823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1471              		.loc 1 823 0
 1472 00ec 0320     		movs	r0, #3
 1473 00ee 9BE7     		b	.L135
 1474              	.L148:
 830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 1475              		.loc 1 830 0
 1476 00f0 1F4B     		ldr	r3, .L170+4
 1477 00f2 5A68     		ldr	r2, [r3, #4]
 1478 00f4 0C23     		movs	r3, #12
 1479 00f6 1340     		ands	r3, r2
 1480 00f8 0C2B     		cmp	r3, #12
 1481 00fa 07D0     		beq	.L137
 832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 1482              		.loc 1 832 0
 1483 00fc FFF7FEFF 		bl	HAL_GetTick
 1484              	.LVL121:
 1485 0100 801B     		subs	r0, r0, r6
 1486 0102 1C4B     		ldr	r3, .L170+8
 1487 0104 9842     		cmp	r0, r3
 1488 0106 F3D9     		bls	.L148
 834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 1489              		.loc 1 834 0
 1490 0108 0320     		movs	r0, #3
 1491 010a 8DE7     		b	.L135
 1492              	.LVL122:
 1493              	.L137:
 851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 1494              		.loc 1 851 0
 1495 010c 174B     		ldr	r3, .L170
 1496 010e 1A68     		ldr	r2, [r3]
 1497 0110 0123     		movs	r3, #1
 1498 0112 1340     		ands	r3, r2
 1499 0114 A342     		cmp	r3, r4
 1500 0116 0BD9     		bls	.L152
 854:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1501              		.loc 1 854 0
 1502 0118 1449     		ldr	r1, .L170
 1503 011a 0B68     		ldr	r3, [r1]
 1504 011c 0122     		movs	r2, #1
 1505 011e 9343     		bics	r3, r2
 1506 0120 2343     		orrs	r3, r4
ARM GAS  /tmp/cceoDgSv.s 			page 49


 1507 0122 0B60     		str	r3, [r1]
 858:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 1508              		.loc 1 858 0
 1509 0124 0B68     		ldr	r3, [r1]
 1510 0126 1A40     		ands	r2, r3
 1511 0128 A242     		cmp	r2, r4
 1512 012a 01D0     		beq	.L152
 860:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 1513              		.loc 1 860 0
 1514 012c 0120     		movs	r0, #1
 1515 012e 7BE7     		b	.L135
 1516              	.L152:
 865:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1517              		.loc 1 865 0
 1518 0130 2B68     		ldr	r3, [r5]
 1519 0132 5B07     		lsls	r3, r3, #29
 1520 0134 06D5     		bpl	.L153
 868:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1521              		.loc 1 868 0
 1522 0136 0E4A     		ldr	r2, .L170+4
 1523 0138 5368     		ldr	r3, [r2, #4]
 1524 013a 0F49     		ldr	r1, .L170+12
 1525 013c 0B40     		ands	r3, r1
 1526 013e E968     		ldr	r1, [r5, #12]
 1527 0140 0B43     		orrs	r3, r1
 1528 0142 5360     		str	r3, [r2, #4]
 1529              	.L153:
 872:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1530              		.loc 1 872 0
 1531 0144 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1532              	.LVL123:
 1533 0148 094B     		ldr	r3, .L170+4
 1534 014a 5A68     		ldr	r2, [r3, #4]
 1535 014c 1209     		lsrs	r2, r2, #4
 1536 014e 0F23     		movs	r3, #15
 1537 0150 1340     		ands	r3, r2
 1538 0152 0A4A     		ldr	r2, .L170+16
 1539 0154 D35C     		ldrb	r3, [r2, r3]
 1540 0156 D840     		lsrs	r0, r0, r3
 1541 0158 094B     		ldr	r3, .L170+20
 1542 015a 1860     		str	r0, [r3]
 875:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 1543              		.loc 1 875 0
 1544 015c 0020     		movs	r0, #0
 1545 015e FFF7FEFF 		bl	HAL_InitTick
 1546              	.LVL124:
 877:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1547              		.loc 1 877 0
 1548 0162 0020     		movs	r0, #0
 1549 0164 60E7     		b	.L135
 1550              	.LVL125:
 1551              	.L169:
 770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 1552              		.loc 1 770 0
 1553 0166 0120     		movs	r0, #1
 1554              	.LVL126:
 1555 0168 5EE7     		b	.L135
ARM GAS  /tmp/cceoDgSv.s 			page 50


 1556              	.L171:
 1557 016a C046     		.align	2
 1558              	.L170:
 1559 016c 00200240 		.word	1073881088
 1560 0170 00100240 		.word	1073876992
 1561 0174 88130000 		.word	5000
 1562 0178 FFF8FFFF 		.word	-1793
 1563 017c 00000000 		.word	AHBPrescTable
 1564 0180 00000000 		.word	SystemCoreClock
 1565              		.cfi_endproc
 1566              	.LFE39:
 1568              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1569              		.align	1
 1570              		.global	HAL_RCC_GetHCLKFreq
 1571              		.syntax unified
 1572              		.code	16
 1573              		.thumb_func
 1574              		.fpu softvfp
 1576              	HAL_RCC_GetHCLKFreq:
 1577              	.LFB44:
1129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * 
1135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated within this function
1137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HCLK frequency
1138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1578              		.loc 1 1140 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              		@ link register save eliminated.
1141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return SystemCoreClock;
 1583              		.loc 1 1141 0
 1584 0000 014B     		ldr	r3, .L173
 1585 0002 1868     		ldr	r0, [r3]
1142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1586              		.loc 1 1142 0
 1587              		@ sp needed
 1588 0004 7047     		bx	lr
 1589              	.L174:
 1590 0006 C046     		.align	2
 1591              	.L173:
 1592 0008 00000000 		.word	SystemCoreClock
 1593              		.cfi_endproc
 1594              	.LFE44:
 1596              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1597              		.align	1
 1598              		.global	HAL_RCC_GetPCLK1Freq
 1599              		.syntax unified
 1600              		.code	16
 1601              		.thumb_func
ARM GAS  /tmp/cceoDgSv.s 			page 51


 1602              		.fpu softvfp
 1604              	HAL_RCC_GetPCLK1Freq:
 1605              	.LFB45:
1143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval PCLK1 frequency
1149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1606              		.loc 1 1151 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610 0000 10B5     		push	{r4, lr}
 1611              		.cfi_def_cfa_offset 8
 1612              		.cfi_offset 4, -8
 1613              		.cfi_offset 14, -4
1152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNU
 1614              		.loc 1 1153 0
 1615 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1616              	.LVL127:
 1617 0006 044B     		ldr	r3, .L176
 1618 0008 5A68     		ldr	r2, [r3, #4]
 1619 000a 120A     		lsrs	r2, r2, #8
 1620 000c 0723     		movs	r3, #7
 1621 000e 1340     		ands	r3, r2
 1622 0010 024A     		ldr	r2, .L176+4
 1623 0012 D35C     		ldrb	r3, [r2, r3]
 1624 0014 D840     		lsrs	r0, r0, r3
1154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }    
 1625              		.loc 1 1154 0
 1626              		@ sp needed
 1627 0016 10BD     		pop	{r4, pc}
 1628              	.L177:
 1629              		.align	2
 1630              	.L176:
 1631 0018 00100240 		.word	1073876992
 1632 001c 00000000 		.word	APBPrescTable
 1633              		.cfi_endproc
 1634              	.LFE45:
 1636              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1637              		.align	1
 1638              		.global	HAL_RCC_GetOscConfig
 1639              		.syntax unified
 1640              		.code	16
 1641              		.thumb_func
 1642              		.fpu softvfp
 1644              	HAL_RCC_GetOscConfig:
 1645              	.LFB46:
1155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
ARM GAS  /tmp/cceoDgSv.s 			page 52


1159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * will be configured.
1161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1646              		.loc 1 1164 0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 0
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
 1650              		@ link register save eliminated.
 1651              	.LVL128:
1165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
1170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSI14;
1171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType |= RCC_OSCILLATORTYPE_HSI48;
 1652              		.loc 1 1172 0
 1653 0000 3F23     		movs	r3, #63
 1654 0002 0360     		str	r3, [r0]
1173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1655              		.loc 1 1177 0
 1656 0004 324B     		ldr	r3, .L194
 1657 0006 1B68     		ldr	r3, [r3]
 1658 0008 5B03     		lsls	r3, r3, #13
 1659 000a 40D5     		bpl	.L179
1178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1660              		.loc 1 1179 0
 1661 000c 0523     		movs	r3, #5
 1662 000e 4360     		str	r3, [r0, #4]
 1663              	.L180:
1180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1664              		.loc 1 1191 0
 1665 0010 2F4B     		ldr	r3, .L194
 1666 0012 1B68     		ldr	r3, [r3]
 1667 0014 DB07     		lsls	r3, r3, #31
 1668 0016 44D5     		bpl	.L182
1192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
ARM GAS  /tmp/cceoDgSv.s 			page 53


1193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1669              		.loc 1 1193 0
 1670 0018 0123     		movs	r3, #1
 1671 001a C360     		str	r3, [r0, #12]
 1672              	.L183:
1194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_B
 1673              		.loc 1 1200 0
 1674 001c 2C49     		ldr	r1, .L194
 1675 001e 0A68     		ldr	r2, [r1]
 1676 0020 D208     		lsrs	r2, r2, #3
 1677 0022 1F23     		movs	r3, #31
 1678 0024 1340     		ands	r3, r2
 1679 0026 0361     		str	r3, [r0, #16]
1201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1680              		.loc 1 1203 0
 1681 0028 0B6A     		ldr	r3, [r1, #32]
 1682 002a 5B07     		lsls	r3, r3, #29
 1683 002c 3CD5     		bpl	.L184
1204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1684              		.loc 1 1205 0
 1685 002e 0523     		movs	r3, #5
 1686 0030 8360     		str	r3, [r0, #8]
 1687              	.L185:
1206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1688              		.loc 1 1217 0
 1689 0032 274B     		ldr	r3, .L194
 1690 0034 5B6A     		ldr	r3, [r3, #36]
 1691 0036 DB07     		lsls	r3, r3, #31
 1692 0038 40D5     		bpl	.L187
1218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1693              		.loc 1 1219 0
 1694 003a 0123     		movs	r3, #1
 1695 003c C361     		str	r3, [r0, #28]
 1696              	.L188:
1220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
ARM GAS  /tmp/cceoDgSv.s 			page 54


1222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI14 configuration -----------------------------------------------*/
1227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR2 & RCC_CR2_HSI14ON) == RCC_CR2_HSI14ON)
 1697              		.loc 1 1227 0
 1698 003e 244B     		ldr	r3, .L194
 1699 0040 5B6B     		ldr	r3, [r3, #52]
 1700 0042 DB07     		lsls	r3, r3, #31
 1701 0044 3DD5     		bpl	.L189
1228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_ON;
 1702              		.loc 1 1229 0
 1703 0046 0123     		movs	r3, #1
 1704 0048 4361     		str	r3, [r0, #20]
 1705              	.L190:
1230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_OFF;
1234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI14CalibrationValue = (uint32_t)((RCC->CR2 & RCC_CR2_HSI14TRIM) >> RCC_HSI14
 1706              		.loc 1 1236 0
 1707 004a 214A     		ldr	r2, .L194
 1708 004c 516B     		ldr	r1, [r2, #52]
 1709 004e C908     		lsrs	r1, r1, #3
 1710 0050 1F23     		movs	r3, #31
 1711 0052 0B40     		ands	r3, r1
 1712 0054 8361     		str	r3, [r0, #24]
1237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI48 configuration if any-----------------------------------------*/
1240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = __HAL_RCC_GET_HSI48_STATE();
 1713              		.loc 1 1240 0
 1714 0056 536B     		ldr	r3, [r2, #52]
 1715 0058 8021     		movs	r1, #128
 1716 005a 4902     		lsls	r1, r1, #9
 1717 005c 0B40     		ands	r3, r1
 1718 005e 591E     		subs	r1, r3, #1
 1719 0060 8B41     		sbcs	r3, r3, r1
 1720 0062 0362     		str	r3, [r0, #32]
1241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1721              		.loc 1 1244 0
 1722 0064 1368     		ldr	r3, [r2]
 1723 0066 DB01     		lsls	r3, r3, #7
 1724 0068 2ED4     		bmi	.L193
1245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
ARM GAS  /tmp/cceoDgSv.s 			page 55


 1725              		.loc 1 1250 0
 1726 006a 0123     		movs	r3, #1
 1727 006c 4362     		str	r3, [r0, #36]
 1728              	.L192:
1251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 1729              		.loc 1 1252 0
 1730 006e 184B     		ldr	r3, .L194
 1731 0070 5A68     		ldr	r2, [r3, #4]
 1732 0072 C021     		movs	r1, #192
 1733 0074 4902     		lsls	r1, r1, #9
 1734 0076 0A40     		ands	r2, r1
 1735 0078 8262     		str	r2, [r0, #40]
1253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 1736              		.loc 1 1253 0
 1737 007a 5A68     		ldr	r2, [r3, #4]
 1738 007c F021     		movs	r1, #240
 1739 007e 8903     		lsls	r1, r1, #14
 1740 0080 0A40     		ands	r2, r1
 1741 0082 C262     		str	r2, [r0, #44]
1254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 1742              		.loc 1 1254 0
 1743 0084 DA6A     		ldr	r2, [r3, #44]
 1744 0086 0F23     		movs	r3, #15
 1745 0088 1340     		ands	r3, r2
 1746 008a 0363     		str	r3, [r0, #48]
1255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1747              		.loc 1 1255 0
 1748              		@ sp needed
 1749 008c 7047     		bx	lr
 1750              	.L179:
1181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1751              		.loc 1 1181 0
 1752 008e 104B     		ldr	r3, .L194
 1753 0090 1B68     		ldr	r3, [r3]
 1754 0092 DB03     		lsls	r3, r3, #15
 1755 0094 02D5     		bpl	.L181
1183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1756              		.loc 1 1183 0
 1757 0096 0123     		movs	r3, #1
 1758 0098 4360     		str	r3, [r0, #4]
 1759 009a B9E7     		b	.L180
 1760              	.L181:
1187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1761              		.loc 1 1187 0
 1762 009c 0023     		movs	r3, #0
 1763 009e 4360     		str	r3, [r0, #4]
 1764 00a0 B6E7     		b	.L180
 1765              	.L182:
1197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1766              		.loc 1 1197 0
 1767 00a2 0023     		movs	r3, #0
 1768 00a4 C360     		str	r3, [r0, #12]
 1769 00a6 B9E7     		b	.L183
 1770              	.L184:
1207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1771              		.loc 1 1207 0
ARM GAS  /tmp/cceoDgSv.s 			page 56


 1772 00a8 094B     		ldr	r3, .L194
 1773 00aa 1B6A     		ldr	r3, [r3, #32]
 1774 00ac DB07     		lsls	r3, r3, #31
 1775 00ae 02D5     		bpl	.L186
1209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1776              		.loc 1 1209 0
 1777 00b0 0123     		movs	r3, #1
 1778 00b2 8360     		str	r3, [r0, #8]
 1779 00b4 BDE7     		b	.L185
 1780              	.L186:
1213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1781              		.loc 1 1213 0
 1782 00b6 0023     		movs	r3, #0
 1783 00b8 8360     		str	r3, [r0, #8]
 1784 00ba BAE7     		b	.L185
 1785              	.L187:
1223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1786              		.loc 1 1223 0
 1787 00bc 0023     		movs	r3, #0
 1788 00be C361     		str	r3, [r0, #28]
 1789 00c0 BDE7     		b	.L188
 1790              	.L189:
1233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1791              		.loc 1 1233 0
 1792 00c2 0023     		movs	r3, #0
 1793 00c4 4361     		str	r3, [r0, #20]
 1794 00c6 C0E7     		b	.L190
 1795              	.L193:
1246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1796              		.loc 1 1246 0
 1797 00c8 0223     		movs	r3, #2
 1798 00ca 4362     		str	r3, [r0, #36]
 1799 00cc CFE7     		b	.L192
 1800              	.L195:
 1801 00ce C046     		.align	2
 1802              	.L194:
 1803 00d0 00100240 		.word	1073876992
 1804              		.cfi_endproc
 1805              	.LFE46:
 1807              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1808              		.align	1
 1809              		.global	HAL_RCC_GetClockConfig
 1810              		.syntax unified
 1811              		.code	16
 1812              		.thumb_func
 1813              		.fpu softvfp
 1815              	HAL_RCC_GetClockConfig:
 1816              	.LFB47:
1256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * contains the current clock configuration.
1262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
ARM GAS  /tmp/cceoDgSv.s 			page 57


1265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1817              		.loc 1 1266 0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 0
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 1821              	.LVL129:
 1822 0000 10B5     		push	{r4, lr}
 1823              		.cfi_def_cfa_offset 8
 1824              		.cfi_offset 4, -8
 1825              		.cfi_offset 14, -4
1267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1;
 1826              		.loc 1 1272 0
 1827 0002 0723     		movs	r3, #7
 1828 0004 0360     		str	r3, [r0]
1273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 1829              		.loc 1 1275 0
 1830 0006 0A4B     		ldr	r3, .L197
 1831 0008 5C68     		ldr	r4, [r3, #4]
 1832 000a 0322     		movs	r2, #3
 1833 000c 2240     		ands	r2, r4
 1834 000e 4260     		str	r2, [r0, #4]
1276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 1835              		.loc 1 1278 0
 1836 0010 5C68     		ldr	r4, [r3, #4]
 1837 0012 F022     		movs	r2, #240
 1838 0014 2240     		ands	r2, r4
 1839 0016 8260     		str	r2, [r0, #8]
1279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE);   
 1840              		.loc 1 1281 0
 1841 0018 5B68     		ldr	r3, [r3, #4]
 1842 001a E022     		movs	r2, #224
 1843 001c D200     		lsls	r2, r2, #3
 1844 001e 1340     		ands	r3, r2
 1845 0020 C360     		str	r3, [r0, #12]
1282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 1846              		.loc 1 1283 0
 1847 0022 044B     		ldr	r3, .L197+4
 1848 0024 1A68     		ldr	r2, [r3]
 1849 0026 0123     		movs	r3, #1
 1850 0028 1340     		ands	r3, r2
 1851 002a 0B60     		str	r3, [r1]
1284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1852              		.loc 1 1284 0
 1853              		@ sp needed
ARM GAS  /tmp/cceoDgSv.s 			page 58


 1854 002c 10BD     		pop	{r4, pc}
 1855              	.L198:
 1856 002e C046     		.align	2
 1857              	.L197:
 1858 0030 00100240 		.word	1073876992
 1859 0034 00200240 		.word	1073881088
 1860              		.cfi_endproc
 1861              	.LFE47:
 1863              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 1864              		.align	1
 1865              		.weak	HAL_RCC_CSSCallback
 1866              		.syntax unified
 1867              		.code	16
 1868              		.thumb_func
 1869              		.fpu softvfp
 1871              	HAL_RCC_CSSCallback:
 1872              	.LFB49:
1285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
1293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
1299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
1303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval none
1307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1873              		.loc 1 1309 0
 1874              		.cfi_startproc
 1875              		@ args = 0, pretend = 0, frame = 0
 1876              		@ frame_needed = 0, uses_anonymous_args = 0
 1877              		@ link register save eliminated.
1310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     */ 
1313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1878              		.loc 1 1313 0
 1879              		@ sp needed
 1880 0000 7047     		bx	lr
 1881              		.cfi_endproc
 1882              	.LFE49:
 1884              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
ARM GAS  /tmp/cceoDgSv.s 			page 59


 1885              		.align	1
 1886              		.global	HAL_RCC_NMI_IRQHandler
 1887              		.syntax unified
 1888              		.code	16
 1889              		.thumb_func
 1890              		.fpu softvfp
 1892              	HAL_RCC_NMI_IRQHandler:
 1893              	.LFB48:
1292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 1894              		.loc 1 1292 0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898 0000 10B5     		push	{r4, lr}
 1899              		.cfi_def_cfa_offset 8
 1900              		.cfi_offset 4, -8
 1901              		.cfi_offset 14, -4
1294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 1902              		.loc 1 1294 0
 1903 0002 054B     		ldr	r3, .L203
 1904 0004 9B68     		ldr	r3, [r3, #8]
 1905 0006 1B06     		lsls	r3, r3, #24
 1906 0008 00D4     		bmi	.L202
 1907              	.L200:
1302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1908              		.loc 1 1302 0
 1909              		@ sp needed
 1910 000a 10BD     		pop	{r4, pc}
 1911              	.L202:
1297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 1912              		.loc 1 1297 0
 1913 000c FFF7FEFF 		bl	HAL_RCC_CSSCallback
 1914              	.LVL130:
1300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 1915              		.loc 1 1300 0
 1916 0010 024B     		ldr	r3, .L203+4
 1917 0012 8022     		movs	r2, #128
 1918 0014 1A70     		strb	r2, [r3]
1302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 1919              		.loc 1 1302 0
 1920 0016 F8E7     		b	.L200
 1921              	.L204:
 1922              		.align	2
 1923              	.L203:
 1924 0018 00100240 		.word	1073876992
 1925 001c 0A100240 		.word	1073877002
 1926              		.cfi_endproc
 1927              	.LFE48:
 1929              		.section	.rodata
 1930              		.align	2
 1931              		.set	.LANCHOR0,. + 0
 1932              	.LC0:
 1933 0000 02       		.byte	2
 1934 0001 03       		.byte	3
 1935 0002 04       		.byte	4
 1936 0003 05       		.byte	5
 1937 0004 06       		.byte	6
ARM GAS  /tmp/cceoDgSv.s 			page 60


 1938 0005 07       		.byte	7
 1939 0006 08       		.byte	8
 1940 0007 09       		.byte	9
 1941 0008 0A       		.byte	10
 1942 0009 0B       		.byte	11
 1943 000a 0C       		.byte	12
 1944 000b 0D       		.byte	13
 1945 000c 0E       		.byte	14
 1946 000d 0F       		.byte	15
 1947 000e 10       		.byte	16
 1948 000f 10       		.byte	16
 1949              	.LC1:
 1950 0010 01       		.byte	1
 1951 0011 02       		.byte	2
 1952 0012 03       		.byte	3
 1953 0013 04       		.byte	4
 1954 0014 05       		.byte	5
 1955 0015 06       		.byte	6
 1956 0016 07       		.byte	7
 1957 0017 08       		.byte	8
 1958 0018 09       		.byte	9
 1959 0019 0A       		.byte	10
 1960 001a 0B       		.byte	11
 1961 001b 0C       		.byte	12
 1962 001c 0D       		.byte	13
 1963 001d 0E       		.byte	14
 1964 001e 0F       		.byte	15
 1965 001f 10       		.byte	16
 1966              		.text
 1967              	.Letext0:
 1968              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 1969              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 1970              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1971              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1972              		.file 6 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1973              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 1974              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 1975              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 1976              		.file 10 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/re
 1977              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1978              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1979              		.file 13 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1980              		.file 14 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/cceoDgSv.s 			page 61


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_rcc.c
     /tmp/cceoDgSv.s:16     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/cceoDgSv.s:23     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/cceoDgSv.s:71     .text.HAL_RCC_DeInit:0000000000000034 $d
     /tmp/cceoDgSv.s:81     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/cceoDgSv.s:88     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/cceoDgSv.s:617    .text.HAL_RCC_OscConfig:00000000000002dc $d
     /tmp/cceoDgSv.s:624    .text.HAL_RCC_OscConfig:00000000000002f0 $t
     /tmp/cceoDgSv.s:990    .text.HAL_RCC_OscConfig:00000000000004e8 $d
     /tmp/cceoDgSv.s:999    .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/cceoDgSv.s:1006   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/cceoDgSv.s:1076   .text.HAL_RCC_MCOConfig:000000000000004c $d
     /tmp/cceoDgSv.s:1082   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/cceoDgSv.s:1089   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/cceoDgSv.s:1109   .text.HAL_RCC_EnableCSS:0000000000000010 $d
     /tmp/cceoDgSv.s:1114   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/cceoDgSv.s:1121   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/cceoDgSv.s:1140   .text.HAL_RCC_DisableCSS:000000000000000c $d
     /tmp/cceoDgSv.s:1147   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/cceoDgSv.s:1154   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/cceoDgSv.s:1268   .text.HAL_RCC_GetSysClockFreq:0000000000000084 $d
     /tmp/cceoDgSv.s:1276   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/cceoDgSv.s:1283   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/cceoDgSv.s:1559   .text.HAL_RCC_ClockConfig:000000000000016c $d
     /tmp/cceoDgSv.s:1569   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/cceoDgSv.s:1576   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/cceoDgSv.s:1592   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
     /tmp/cceoDgSv.s:1597   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/cceoDgSv.s:1604   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/cceoDgSv.s:1631   .text.HAL_RCC_GetPCLK1Freq:0000000000000018 $d
     /tmp/cceoDgSv.s:1637   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/cceoDgSv.s:1644   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/cceoDgSv.s:1803   .text.HAL_RCC_GetOscConfig:00000000000000d0 $d
     /tmp/cceoDgSv.s:1808   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/cceoDgSv.s:1815   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/cceoDgSv.s:1858   .text.HAL_RCC_GetClockConfig:0000000000000030 $d
     /tmp/cceoDgSv.s:1864   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/cceoDgSv.s:1871   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/cceoDgSv.s:1885   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/cceoDgSv.s:1892   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/cceoDgSv.s:1924   .text.HAL_RCC_NMI_IRQHandler:0000000000000018 $d
     /tmp/cceoDgSv.s:1930   .rodata:0000000000000000 $d
                           .group:0000000000000000 wm4.0.f4162676b8f623651f7a1199aa7e48f7
                           .group:0000000000000000 wm4.main.h.42.f591c98852cf8b31b9d28a7417223f7f
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.e02fa95cc55e74dee1039d0a6f374aae
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
ARM GAS  /tmp/cceoDgSv.s 			page 62


                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_GPIO_Init
__aeabi_uidiv
HAL_InitTick
AHBPrescTable
APBPrescTable
