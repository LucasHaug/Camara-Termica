ARM GAS  /tmp/cc0ftZwI.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_rcc_ex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RCCEx_PeriphCLKConfig,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_RCCEx_PeriphCLKConfig
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_RCCEx_PeriphCLKConfig:
  24              	.LFB37:
  25              		.file 1 "cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c"
   1:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
   2:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   ******************************************************************************
   3:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @file    stm32f0xx_hal_rcc_ex.c
   4:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @author  MCD Application Team
   5:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief   Extended RCC HAL module driver.
   6:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *          This file provides firmware functions to manage the following 
   7:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *          functionalities RCC extension peripheral:
   8:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *           + Extended Peripheral Control functions
   9:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *           + Extended Clock Recovery System Control functions
  10:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *
  11:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   ******************************************************************************
  12:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @attention
  13:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *
  14:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  15:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *
  16:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  17:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * are permitted provided that the following conditions are met:
  18:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *      this list of conditions and the following disclaimer.
  20:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  22:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *      and/or other materials provided with the distribution.
  23:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *      may be used to endorse or promote products derived from this software
  25:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *      without specific prior written permission.
  26:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *
  27:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  31:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  32:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  33:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/cc0ftZwI.s 			page 2


  34:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *
  38:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   ******************************************************************************  
  39:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */ 
  40:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
  41:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /* Includes ------------------------------------------------------------------*/
  42:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #include "stm32f0xx_hal.h"
  43:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
  44:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /** @addtogroup STM32F0xx_HAL_Driver
  45:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @{
  46:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
  47:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
  48:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #ifdef HAL_RCC_MODULE_ENABLED
  49:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
  50:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /** @defgroup RCCEx RCCEx
  51:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief RCC Extension HAL module driver.
  52:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @{
  53:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
  54:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
  55:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  56:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /* Private define ------------------------------------------------------------*/
  57:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(CRS)
  58:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Private_Constants RCCEx Private Constants
  59:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @{
  60:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
  61:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /* Bit position in register */
  62:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #define CRS_CFGR_FELIM_BITNUMBER    16
  63:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #define CRS_CR_TRIM_BITNUMBER       8
  64:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #define CRS_ISR_FECAP_BITNUMBER     16
  65:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
  66:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @}
  67:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
  68:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* CRS */
  69:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
  70:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /* Private macro -------------------------------------------------------------*/
  71:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Private_Macros RCCEx Private Macros
  72:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @{
  73:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
  74:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
  75:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @}
  76:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
  77:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
  78:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /* Private variables ---------------------------------------------------------*/
  79:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  80:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /* Private functions ---------------------------------------------------------*/
  81:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
  82:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions RCCEx Exported Functions
  83:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @{
  84:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
  85:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
  86:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions_Group1 Extended Peripheral Control functions 
  87:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief    Extended Peripheral Control functions
  88:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  *
  89:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** @verbatim
  90:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  ===============================================================================
ARM GAS  /tmp/cc0ftZwI.s 			page 3


  91:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****                 ##### Extended Peripheral Control functions  #####
  92:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  ===============================================================================  
  93:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     [..]
  94:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
  95:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     frequencies.
  96:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     [..] 
  97:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     (@) Important note: Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to
  98:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         select the RTC clock source; in this case the Backup domain will be reset in  
  99:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         order to modify the RTC Clock source, as consequence RTC registers (including 
 100:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         the backup registers) are set to their reset values.
 101:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       
 102:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** @endverbatim
 103:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @{
 104:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 105:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 106:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 107:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief  Initializes the RCC extended peripherals clocks according to the specified
 108:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *         parameters in the RCC_PeriphCLKInitTypeDef.
 109:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
 110:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *         contains the configuration information for the Extended Peripherals clocks
 111:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *         (USART, RTC, I2C, CEC and USB).
 112:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *
 113:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @note   Care must be taken when @ref HAL_RCCEx_PeriphCLKConfig() is used to select 
 114:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *         the RTC clock source; in this case the Backup domain will be reset in  
 115:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *         order to modify the RTC Clock source, as consequence RTC registers (including 
 116:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *         the backup registers) and RCC_BDCR register are set to their reset values.
 117:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *
 118:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval HAL status
 119:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 120:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 121:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
  26              		.loc 1 121 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 86B0     		sub	sp, sp, #24
  35              		.cfi_def_cfa_offset 32
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 7860     		str	r0, [r7, #4]
 122:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t tickstart = 0U;
  39              		.loc 1 122 0
  40 0008 0023     		movs	r3, #0
  41 000a 3B61     		str	r3, [r7, #16]
 123:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t temp_reg = 0U;
  42              		.loc 1 123 0
  43 000c 0023     		movs	r3, #0
  44 000e FB60     		str	r3, [r7, #12]
 124:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 125:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Check the parameters */
 126:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 127:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 128:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /*---------------------------- RTC configuration -------------------------------*/
ARM GAS  /tmp/cc0ftZwI.s 			page 4


 129:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
  45              		.loc 1 129 0
  46 0010 7B68     		ldr	r3, [r7, #4]
  47 0012 1A68     		ldr	r2, [r3]
  48 0014 8023     		movs	r3, #128
  49 0016 5B02     		lsls	r3, r3, #9
  50 0018 1340     		ands	r3, r2
  51 001a 00D1     		bne	.LCB23
  52 001c 8FE0     		b	.L2	@long jump
  53              	.LCB23:
  54              	.LBB2:
 130:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 131:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* check for RTC Parameters used to output RTCCLK */
 132:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
 133:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 134:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     FlagStatus       pwrclkchanged = RESET;
  55              		.loc 1 134 0
  56 001e 1723     		movs	r3, #23
  57 0020 FB18     		adds	r3, r7, r3
  58 0022 0022     		movs	r2, #0
  59 0024 1A70     		strb	r2, [r3]
 135:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 136:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* As soon as function is called to change RTC clock source, activation of the 
 137:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****        power domain is done. */
 138:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Requires to enable write access to Backup Domain of necessary */
 139:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
  60              		.loc 1 139 0
  61 0026 6F4B     		ldr	r3, .L16
  62 0028 DA69     		ldr	r2, [r3, #28]
  63 002a 8023     		movs	r3, #128
  64 002c 5B05     		lsls	r3, r3, #21
  65 002e 1340     		ands	r3, r2
  66 0030 11D1     		bne	.L3
  67              	.LBB3:
 140:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 141:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     __HAL_RCC_PWR_CLK_ENABLE();
  68              		.loc 1 141 0
  69 0032 6C4B     		ldr	r3, .L16
  70 0034 DA69     		ldr	r2, [r3, #28]
  71 0036 6B4B     		ldr	r3, .L16
  72 0038 8021     		movs	r1, #128
  73 003a 4905     		lsls	r1, r1, #21
  74 003c 0A43     		orrs	r2, r1
  75 003e DA61     		str	r2, [r3, #28]
  76 0040 684B     		ldr	r3, .L16
  77 0042 DA69     		ldr	r2, [r3, #28]
  78 0044 8023     		movs	r3, #128
  79 0046 5B05     		lsls	r3, r3, #21
  80 0048 1340     		ands	r3, r2
  81 004a BB60     		str	r3, [r7, #8]
  82 004c BB68     		ldr	r3, [r7, #8]
  83              	.LBE3:
 142:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       pwrclkchanged = SET;
  84              		.loc 1 142 0
  85 004e 1723     		movs	r3, #23
  86 0050 FB18     		adds	r3, r7, r3
  87 0052 0122     		movs	r2, #1
ARM GAS  /tmp/cc0ftZwI.s 			page 5


  88 0054 1A70     		strb	r2, [r3]
  89              	.L3:
 143:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 144:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 145:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
  90              		.loc 1 145 0
  91 0056 644B     		ldr	r3, .L16+4
  92 0058 1A68     		ldr	r2, [r3]
  93 005a 8023     		movs	r3, #128
  94 005c 5B00     		lsls	r3, r3, #1
  95 005e 1340     		ands	r3, r2
  96 0060 1AD1     		bne	.L4
 146:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 147:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Enable write access to Backup domain */
 148:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
  97              		.loc 1 148 0
  98 0062 614B     		ldr	r3, .L16+4
  99 0064 1A68     		ldr	r2, [r3]
 100 0066 604B     		ldr	r3, .L16+4
 101 0068 8021     		movs	r1, #128
 102 006a 4900     		lsls	r1, r1, #1
 103 006c 0A43     		orrs	r2, r1
 104 006e 1A60     		str	r2, [r3]
 149:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       
 150:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Wait for Backup domain Write protection disable */
 151:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       tickstart = HAL_GetTick();
 105              		.loc 1 151 0
 106 0070 FFF7FEFF 		bl	HAL_GetTick
 107 0074 0300     		movs	r3, r0
 108 0076 3B61     		str	r3, [r7, #16]
 152:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 109              		.loc 1 153 0
 110 0078 08E0     		b	.L5
 111              	.L7:
 154:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 155:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 112              		.loc 1 155 0
 113 007a FFF7FEFF 		bl	HAL_GetTick
 114 007e 0200     		movs	r2, r0
 115 0080 3B69     		ldr	r3, [r7, #16]
 116 0082 D31A     		subs	r3, r2, r3
 117 0084 642B     		cmp	r3, #100
 118 0086 01D9     		bls	.L5
 156:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 157:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           return HAL_TIMEOUT;
 119              		.loc 1 157 0
 120 0088 0323     		movs	r3, #3
 121 008a A6E0     		b	.L6
 122              	.L5:
 153:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 123              		.loc 1 153 0
 124 008c 564B     		ldr	r3, .L16+4
 125 008e 1A68     		ldr	r2, [r3]
 126 0090 8023     		movs	r3, #128
 127 0092 5B00     		lsls	r3, r3, #1
 128 0094 1340     		ands	r3, r2
ARM GAS  /tmp/cc0ftZwI.s 			page 6


 129 0096 F0D0     		beq	.L7
 130              	.L4:
 158:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         }
 159:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 160:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 161:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 162:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
 163:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 131              		.loc 1 163 0
 132 0098 524B     		ldr	r3, .L16
 133 009a 1A6A     		ldr	r2, [r3, #32]
 134 009c C023     		movs	r3, #192
 135 009e 9B00     		lsls	r3, r3, #2
 136 00a0 1340     		ands	r3, r2
 137 00a2 FB60     		str	r3, [r7, #12]
 164:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
 138              		.loc 1 164 0
 139 00a4 FB68     		ldr	r3, [r7, #12]
 140 00a6 002B     		cmp	r3, #0
 141 00a8 34D0     		beq	.L8
 142              		.loc 1 164 0 is_stmt 0 discriminator 1
 143 00aa 7B68     		ldr	r3, [r7, #4]
 144 00ac 5A68     		ldr	r2, [r3, #4]
 145 00ae C023     		movs	r3, #192
 146 00b0 9B00     		lsls	r3, r3, #2
 147 00b2 1340     		ands	r3, r2
 148 00b4 FA68     		ldr	r2, [r7, #12]
 149 00b6 9A42     		cmp	r2, r3
 150 00b8 2CD0     		beq	.L8
 165:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 166:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
 167:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 151              		.loc 1 167 0 is_stmt 1
 152 00ba 4A4B     		ldr	r3, .L16
 153 00bc 1B6A     		ldr	r3, [r3, #32]
 154 00be 4B4A     		ldr	r2, .L16+8
 155 00c0 1340     		ands	r3, r2
 156 00c2 FB60     		str	r3, [r7, #12]
 168:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 169:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_FORCE();
 157              		.loc 1 169 0
 158 00c4 474B     		ldr	r3, .L16
 159 00c6 1A6A     		ldr	r2, [r3, #32]
 160 00c8 464B     		ldr	r3, .L16
 161 00ca 8021     		movs	r1, #128
 162 00cc 4902     		lsls	r1, r1, #9
 163 00ce 0A43     		orrs	r2, r1
 164 00d0 1A62     		str	r2, [r3, #32]
 170:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 165              		.loc 1 170 0
 166 00d2 444B     		ldr	r3, .L16
 167 00d4 1A6A     		ldr	r2, [r3, #32]
 168 00d6 434B     		ldr	r3, .L16
 169 00d8 4549     		ldr	r1, .L16+12
 170 00da 0A40     		ands	r2, r1
 171 00dc 1A62     		str	r2, [r3, #32]
 171:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Restore the Content of BDCR register */
ARM GAS  /tmp/cc0ftZwI.s 			page 7


 172:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       RCC->BDCR = temp_reg;
 172              		.loc 1 172 0
 173 00de 414B     		ldr	r3, .L16
 174 00e0 FA68     		ldr	r2, [r7, #12]
 175 00e2 1A62     		str	r2, [r3, #32]
 173:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       
 174:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Wait for LSERDY if LSE was enabled */
 175:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 176              		.loc 1 175 0
 177 00e4 FB68     		ldr	r3, [r7, #12]
 178 00e6 0122     		movs	r2, #1
 179 00e8 1340     		ands	r3, r2
 180 00ea 13D0     		beq	.L8
 176:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 177:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         /* Get Start Tick */
 178:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         tickstart = HAL_GetTick();
 181              		.loc 1 178 0
 182 00ec FFF7FEFF 		bl	HAL_GetTick
 183 00f0 0300     		movs	r3, r0
 184 00f2 3B61     		str	r3, [r7, #16]
 179:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         
 180:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         /* Wait till LSE is ready */  
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 185              		.loc 1 181 0
 186 00f4 09E0     		b	.L9
 187              	.L10:
 182:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 183:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 188              		.loc 1 183 0
 189 00f6 FFF7FEFF 		bl	HAL_GetTick
 190 00fa 0200     		movs	r2, r0
 191 00fc 3B69     		ldr	r3, [r7, #16]
 192 00fe D31A     		subs	r3, r2, r3
 193 0100 3C4A     		ldr	r2, .L16+16
 194 0102 9342     		cmp	r3, r2
 195 0104 01D9     		bls	.L9
 184:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           {
 185:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****             return HAL_TIMEOUT;
 196              		.loc 1 185 0
 197 0106 0323     		movs	r3, #3
 198 0108 67E0     		b	.L6
 199              	.L9:
 181:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 200              		.loc 1 181 0
 201 010a 364B     		ldr	r3, .L16
 202 010c 1B6A     		ldr	r3, [r3, #32]
 203 010e 0222     		movs	r2, #2
 204 0110 1340     		ands	r3, r2
 205 0112 F0D0     		beq	.L10
 206              	.L8:
 186:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           }
 187:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         }
 188:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 189:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 190:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 207              		.loc 1 190 0
 208 0114 334B     		ldr	r3, .L16
ARM GAS  /tmp/cc0ftZwI.s 			page 8


 209 0116 1B6A     		ldr	r3, [r3, #32]
 210 0118 344A     		ldr	r2, .L16+8
 211 011a 1340     		ands	r3, r2
 212 011c 1900     		movs	r1, r3
 213 011e 7B68     		ldr	r3, [r7, #4]
 214 0120 5A68     		ldr	r2, [r3, #4]
 215 0122 304B     		ldr	r3, .L16
 216 0124 0A43     		orrs	r2, r1
 217 0126 1A62     		str	r2, [r3, #32]
 191:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 192:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Require to disable power clock if necessary */
 193:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(pwrclkchanged == SET)
 218              		.loc 1 193 0
 219 0128 1723     		movs	r3, #23
 220 012a FB18     		adds	r3, r7, r3
 221 012c 1B78     		ldrb	r3, [r3]
 222 012e 012B     		cmp	r3, #1
 223 0130 05D1     		bne	.L2
 194:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 195:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 224              		.loc 1 195 0
 225 0132 2C4B     		ldr	r3, .L16
 226 0134 DA69     		ldr	r2, [r3, #28]
 227 0136 2B4B     		ldr	r3, .L16
 228 0138 2F49     		ldr	r1, .L16+20
 229 013a 0A40     		ands	r2, r1
 230 013c DA61     		str	r2, [r3, #28]
 231              	.L2:
 232              	.LBE2:
 196:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 197:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 198:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 199:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /*------------------------------- USART1 Configuration ------------------------*/ 
 200:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 233              		.loc 1 200 0
 234 013e 7B68     		ldr	r3, [r7, #4]
 235 0140 1B68     		ldr	r3, [r3]
 236 0142 0122     		movs	r2, #1
 237 0144 1340     		ands	r3, r2
 238 0146 09D0     		beq	.L11
 201:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 202:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check the parameters */
 203:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
 204:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 205:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Configure the USART1 clock source */
 206:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 239              		.loc 1 206 0
 240 0148 264B     		ldr	r3, .L16
 241 014a 1B6B     		ldr	r3, [r3, #48]
 242 014c 0322     		movs	r2, #3
 243 014e 9343     		bics	r3, r2
 244 0150 1900     		movs	r1, r3
 245 0152 7B68     		ldr	r3, [r7, #4]
 246 0154 9A68     		ldr	r2, [r3, #8]
 247 0156 234B     		ldr	r3, .L16
 248 0158 0A43     		orrs	r2, r1
 249 015a 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/cc0ftZwI.s 			page 9


 250              	.L11:
 207:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 208:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 209:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 210:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 211:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /*----------------------------- USART2 Configuration --------------------------*/ 
 212:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 251              		.loc 1 212 0
 252 015c 7B68     		ldr	r3, [r7, #4]
 253 015e 1B68     		ldr	r3, [r3]
 254 0160 0222     		movs	r2, #2
 255 0162 1340     		ands	r3, r2
 256 0164 09D0     		beq	.L12
 213:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 214:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check the parameters */
 215:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));
 216:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 217:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Configure the USART2 clock source */
 218:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 257              		.loc 1 218 0
 258 0166 1F4B     		ldr	r3, .L16
 259 0168 1B6B     		ldr	r3, [r3, #48]
 260 016a 244A     		ldr	r2, .L16+24
 261 016c 1340     		ands	r3, r2
 262 016e 1900     		movs	r1, r3
 263 0170 7B68     		ldr	r3, [r7, #4]
 264 0172 DA68     		ldr	r2, [r3, #12]
 265 0174 1B4B     		ldr	r3, .L16
 266 0176 0A43     		orrs	r2, r1
 267 0178 1A63     		str	r2, [r3, #48]
 268              	.L12:
 219:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 220:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* STM32F071xB || STM32F072xB || STM32F078xx || */
 221:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****        /* STM32F091xC || STM32F098xx */
 222:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 223:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(STM32F091xC) || defined(STM32F098xx)
 224:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /*----------------------------- USART3 Configuration --------------------------*/ 
 225:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 226:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 227:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check the parameters */
 228:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));
 229:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 230:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Configure the USART3 clock source */
 231:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 232:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 233:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* STM32F091xC || STM32F098xx */  
 234:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 235:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /*------------------------------ I2C1 Configuration ------------------------*/ 
 236:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 269              		.loc 1 236 0
 270 017a 7B68     		ldr	r3, [r7, #4]
 271 017c 1B68     		ldr	r3, [r3]
 272 017e 2022     		movs	r2, #32
 273 0180 1340     		ands	r3, r2
 274 0182 09D0     		beq	.L13
 237:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 238:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check the parameters */
ARM GAS  /tmp/cc0ftZwI.s 			page 10


 239:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
 240:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 241:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Configure the I2C1 clock source */
 242:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 275              		.loc 1 242 0
 276 0184 174B     		ldr	r3, .L16
 277 0186 1B6B     		ldr	r3, [r3, #48]
 278 0188 1022     		movs	r2, #16
 279 018a 9343     		bics	r3, r2
 280 018c 1900     		movs	r1, r3
 281 018e 7B68     		ldr	r3, [r7, #4]
 282 0190 1A69     		ldr	r2, [r3, #16]
 283 0192 144B     		ldr	r3, .L16
 284 0194 0A43     		orrs	r2, r1
 285 0196 1A63     		str	r2, [r3, #48]
 286              	.L13:
 243:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 244:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 245:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) ||
 246:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /*------------------------------ USB Configuration ------------------------*/ 
 247:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 287              		.loc 1 247 0
 288 0198 7B68     		ldr	r3, [r7, #4]
 289 019a 1A68     		ldr	r2, [r3]
 290 019c 8023     		movs	r3, #128
 291 019e 9B02     		lsls	r3, r3, #10
 292 01a0 1340     		ands	r3, r2
 293 01a2 09D0     		beq	.L14
 248:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 249:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check the parameters */
 250:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
 251:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 252:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Configure the USB clock source */
 253:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 294              		.loc 1 253 0
 295 01a4 0F4B     		ldr	r3, .L16
 296 01a6 1B6B     		ldr	r3, [r3, #48]
 297 01a8 8022     		movs	r2, #128
 298 01aa 9343     		bics	r3, r2
 299 01ac 1900     		movs	r1, r3
 300 01ae 7B68     		ldr	r3, [r7, #4]
 301 01b0 9A69     		ldr	r2, [r3, #24]
 302 01b2 0C4B     		ldr	r3, .L16
 303 01b4 0A43     		orrs	r2, r1
 304 01b6 1A63     		str	r2, [r3, #48]
 305              	.L14:
 254:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 255:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F070xB || STM32F070x6 */
 256:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 257:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(STM32F042x6) || defined(STM32F048xx)\
 258:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  || defined(STM32F051x8) || defined(STM32F058xx)\
 259:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 260:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 261:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /*------------------------------ CEC clock Configuration -------------------*/ 
 262:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 306              		.loc 1 262 0
 307 01b8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc0ftZwI.s 			page 11


 308 01ba 1A68     		ldr	r2, [r3]
 309 01bc 8023     		movs	r3, #128
 310 01be DB00     		lsls	r3, r3, #3
 311 01c0 1340     		ands	r3, r2
 312 01c2 09D0     		beq	.L15
 263:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 264:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check the parameters */
 265:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));
 266:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 267:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Configure the CEC clock source */
 268:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 313              		.loc 1 268 0
 314 01c4 074B     		ldr	r3, .L16
 315 01c6 1B6B     		ldr	r3, [r3, #48]
 316 01c8 4022     		movs	r2, #64
 317 01ca 9343     		bics	r3, r2
 318 01cc 1900     		movs	r1, r3
 319 01ce 7B68     		ldr	r3, [r7, #4]
 320 01d0 5A69     		ldr	r2, [r3, #20]
 321 01d2 044B     		ldr	r3, .L16
 322 01d4 0A43     		orrs	r2, r1
 323 01d6 1A63     		str	r2, [r3, #48]
 324              	.L15:
 269:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 270:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* STM32F042x6 || STM32F048xx ||                */
 271:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****        /* STM32F051x8 || STM32F058xx ||                */
 272:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****        /* STM32F071xB || STM32F072xB || STM32F078xx || */
 273:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****        /* STM32F091xC || STM32F098xx */
 274:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 275:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   return HAL_OK;
 325              		.loc 1 275 0
 326 01d8 0023     		movs	r3, #0
 327              	.L6:
 276:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 328              		.loc 1 276 0
 329 01da 1800     		movs	r0, r3
 330 01dc BD46     		mov	sp, r7
 331 01de 06B0     		add	sp, sp, #24
 332              		@ sp needed
 333 01e0 80BD     		pop	{r7, pc}
 334              	.L17:
 335 01e2 C046     		.align	2
 336              	.L16:
 337 01e4 00100240 		.word	1073876992
 338 01e8 00700040 		.word	1073770496
 339 01ec FFFCFFFF 		.word	-769
 340 01f0 FFFFFEFF 		.word	-65537
 341 01f4 88130000 		.word	5000
 342 01f8 FFFFFFEF 		.word	-268435457
 343 01fc FFFFFCFF 		.word	-196609
 344              		.cfi_endproc
 345              	.LFE37:
 347              		.section	.text.HAL_RCCEx_GetPeriphCLKConfig,"ax",%progbits
 348              		.align	1
 349              		.global	HAL_RCCEx_GetPeriphCLKConfig
 350              		.syntax unified
 351              		.code	16
ARM GAS  /tmp/cc0ftZwI.s 			page 12


 352              		.thumb_func
 353              		.fpu softvfp
 355              	HAL_RCCEx_GetPeriphCLKConfig:
 356              	.LFB38:
 277:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 278:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 279:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal
 280:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * RCC configuration registers.
 281:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @param  PeriphClkInit pointer to an RCC_PeriphCLKInitTypeDef structure that
 282:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *         returns the configuration information for the Extended Peripherals clocks
 283:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *         (USART, RTC, I2C, CEC and USB).
 284:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval None
 285:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 286:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** void HAL_RCCEx_GetPeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 287:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 357              		.loc 1 287 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 8
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361 0000 80B5     		push	{r7, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 82B0     		sub	sp, sp, #8
 366              		.cfi_def_cfa_offset 16
 367 0004 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
 369 0006 7860     		str	r0, [r7, #4]
 288:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Set all possible values for the extended clock type parameter------------*/
 289:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Common part first */
 290:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection = RCC_PERIPHCLK_USART1 | RCC_PERIPHCLK_I2C1   | RCC_PERIPHCLK
 370              		.loc 1 290 0
 371 0008 7B68     		ldr	r3, [r7, #4]
 372 000a 204A     		ldr	r2, .L19
 373 000c 1A60     		str	r2, [r3]
 291:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get the RTC configuration --------------------------------------------*/
 292:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->RTCClockSelection = __HAL_RCC_GET_RTC_SOURCE();
 374              		.loc 1 292 0
 375 000e 204B     		ldr	r3, .L19+4
 376 0010 1A6A     		ldr	r2, [r3, #32]
 377 0012 C023     		movs	r3, #192
 378 0014 9B00     		lsls	r3, r3, #2
 379 0016 1A40     		ands	r2, r3
 380 0018 7B68     		ldr	r3, [r7, #4]
 381 001a 5A60     		str	r2, [r3, #4]
 293:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get the USART1 clock configuration --------------------------------------------*/
 294:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->Usart1ClockSelection = __HAL_RCC_GET_USART1_SOURCE();
 382              		.loc 1 294 0
 383 001c 1C4B     		ldr	r3, .L19+4
 384 001e 1B6B     		ldr	r3, [r3, #48]
 385 0020 0322     		movs	r2, #3
 386 0022 1A40     		ands	r2, r3
 387 0024 7B68     		ldr	r3, [r7, #4]
 388 0026 9A60     		str	r2, [r3, #8]
 295:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get the I2C1 clock source -----------------------------------------------*/
 296:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->I2c1ClockSelection = __HAL_RCC_GET_I2C1_SOURCE();
 389              		.loc 1 296 0
ARM GAS  /tmp/cc0ftZwI.s 			page 13


 390 0028 194B     		ldr	r3, .L19+4
 391 002a 1B6B     		ldr	r3, [r3, #48]
 392 002c 1022     		movs	r2, #16
 393 002e 1A40     		ands	r2, r3
 394 0030 7B68     		ldr	r3, [r7, #4]
 395 0032 1A61     		str	r2, [r3, #16]
 297:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 298:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 299:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 300:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |= RCC_PERIPHCLK_USART2;
 396              		.loc 1 300 0
 397 0034 7B68     		ldr	r3, [r7, #4]
 398 0036 1B68     		ldr	r3, [r3]
 399 0038 0222     		movs	r2, #2
 400 003a 1A43     		orrs	r2, r3
 401 003c 7B68     		ldr	r3, [r7, #4]
 402 003e 1A60     		str	r2, [r3]
 301:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get the USART2 clock source ---------------------------------------------*/
 302:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->Usart2ClockSelection = __HAL_RCC_GET_USART2_SOURCE();
 403              		.loc 1 302 0
 404 0040 134B     		ldr	r3, .L19+4
 405 0042 1A6B     		ldr	r2, [r3, #48]
 406 0044 C023     		movs	r3, #192
 407 0046 9B02     		lsls	r3, r3, #10
 408 0048 1A40     		ands	r2, r3
 409 004a 7B68     		ldr	r3, [r7, #4]
 410 004c DA60     		str	r2, [r3, #12]
 303:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* STM32F071xB || STM32F072xB || STM32F078xx || */
 304:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****        /* STM32F091xC || STM32F098xx */
 305:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 306:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(STM32F091xC) || defined(STM32F098xx)
 307:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |= RCC_PERIPHCLK_USART3;
 308:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get the USART3 clock source ---------------------------------------------*/
 309:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->Usart3ClockSelection = __HAL_RCC_GET_USART3_SOURCE();
 310:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* STM32F091xC || STM32F098xx */
 311:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 312:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) ||
 313:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |= RCC_PERIPHCLK_USB;
 411              		.loc 1 313 0
 412 004e 7B68     		ldr	r3, [r7, #4]
 413 0050 1B68     		ldr	r3, [r3]
 414 0052 8022     		movs	r2, #128
 415 0054 9202     		lsls	r2, r2, #10
 416 0056 1A43     		orrs	r2, r3
 417 0058 7B68     		ldr	r3, [r7, #4]
 418 005a 1A60     		str	r2, [r3]
 314:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get the USB clock source ---------------------------------------------*/
 315:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->UsbClockSelection = __HAL_RCC_GET_USB_SOURCE();
 419              		.loc 1 315 0
 420 005c 0C4B     		ldr	r3, .L19+4
 421 005e 1B6B     		ldr	r3, [r3, #48]
 422 0060 8022     		movs	r2, #128
 423 0062 1A40     		ands	r2, r3
 424 0064 7B68     		ldr	r3, [r7, #4]
 425 0066 9A61     		str	r2, [r3, #24]
 316:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F070xB || STM32F070x6 */
 317:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
ARM GAS  /tmp/cc0ftZwI.s 			page 14


 318:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(STM32F042x6) || defined(STM32F048xx)\
 319:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  || defined(STM32F051x8) || defined(STM32F058xx)\
 320:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 321:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 322:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->PeriphClockSelection |= RCC_PERIPHCLK_CEC;
 426              		.loc 1 322 0
 427 0068 7B68     		ldr	r3, [r7, #4]
 428 006a 1B68     		ldr	r3, [r3]
 429 006c 8022     		movs	r2, #128
 430 006e D200     		lsls	r2, r2, #3
 431 0070 1A43     		orrs	r2, r3
 432 0072 7B68     		ldr	r3, [r7, #4]
 433 0074 1A60     		str	r2, [r3]
 323:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get the CEC clock source ------------------------------------------------*/
 324:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   PeriphClkInit->CecClockSelection = __HAL_RCC_GET_CEC_SOURCE();
 434              		.loc 1 324 0
 435 0076 064B     		ldr	r3, .L19+4
 436 0078 1B6B     		ldr	r3, [r3, #48]
 437 007a 4022     		movs	r2, #64
 438 007c 1A40     		ands	r2, r3
 439 007e 7B68     		ldr	r3, [r7, #4]
 440 0080 5A61     		str	r2, [r3, #20]
 325:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* STM32F042x6 || STM32F048xx ||                */
 326:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****        /* STM32F051x8 || STM32F058xx ||                */
 327:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****        /* STM32F071xB || STM32F072xB || STM32F078xx || */
 328:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****        /* STM32F091xC || STM32F098xx */
 329:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 330:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 441              		.loc 1 330 0
 442 0082 C046     		nop
 443 0084 BD46     		mov	sp, r7
 444 0086 02B0     		add	sp, sp, #8
 445              		@ sp needed
 446 0088 80BD     		pop	{r7, pc}
 447              	.L20:
 448 008a C046     		.align	2
 449              	.L19:
 450 008c 21000100 		.word	65569
 451 0090 00100240 		.word	1073876992
 452              		.cfi_endproc
 453              	.LFE38:
 455              		.global	__aeabi_uidiv
 456              		.section	.text.HAL_RCCEx_GetPeriphCLKFreq,"ax",%progbits
 457              		.align	1
 458              		.global	HAL_RCCEx_GetPeriphCLKFreq
 459              		.syntax unified
 460              		.code	16
 461              		.thumb_func
 462              		.fpu softvfp
 464              	HAL_RCCEx_GetPeriphCLKFreq:
 465              	.LFB39:
 331:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 332:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 333:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief  Returns the peripheral clock frequency
 334:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @note   Returns 0 if peripheral clock is unknown
 335:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @param  PeriphClk Peripheral clock identifier
 336:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *         This parameter can be one of the following values:
ARM GAS  /tmp/cc0ftZwI.s 			page 15


 337:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_RTC     RTC peripheral clock
 338:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART1  USART1 peripheral clock
 339:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_I2C1    I2C1 peripheral clock
 340:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F042x6
 341:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB     USB peripheral clock
 342:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock
 343:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 344:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F048xx
 345:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB     USB peripheral clock
 346:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock
 347:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 348:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F051x8
 349:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock
 350:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 351:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F058xx
 352:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock
 353:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 354:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F070x6
 355:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB     USB peripheral clock
 356:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 357:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F070xB
 358:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB     USB peripheral clock
 359:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 360:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F071xB
 361:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART2  USART2 peripheral clock
 362:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock
 363:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 364:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F072xB
 365:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART2  USART2 peripheral clock
 366:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB     USB peripheral clock
 367:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock
 368:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 369:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F078xx
 370:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART2  USART2 peripheral clock
 371:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USB     USB peripheral clock
 372:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock
 373:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 374:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F091xC
 375:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART2  USART2 peripheral clock
 376:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART3  USART2 peripheral clock
 377:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock
 378:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 379:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @if STM32F098xx
 380:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART2  USART2 peripheral clock
 381:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_USART3  USART2 peripheral clock
 382:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *            @arg @ref RCC_PERIPHCLK_CEC     CEC peripheral clock
 383:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   @endif
 384:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval Frequency in Hz (0: means that no available frequency for the peripheral)
 385:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 386:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
 387:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 466              		.loc 1 387 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 32
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc0ftZwI.s 			page 16


 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 88B0     		sub	sp, sp, #32
 475              		.cfi_def_cfa_offset 40
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 478 0006 7860     		str	r0, [r7, #4]
 388:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* frequency == 0 : means that no available frequency for the peripheral */
 389:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t frequency = 0U;
 479              		.loc 1 389 0
 480 0008 0023     		movs	r3, #0
 481 000a FB61     		str	r3, [r7, #28]
 390:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 391:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t srcclk = 0U;
 482              		.loc 1 391 0
 483 000c 0023     		movs	r3, #0
 484 000e BB61     		str	r3, [r7, #24]
 392:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(USB)
 393:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t pllmull = 0U, pllsource = 0U, predivfactor = 0U;
 485              		.loc 1 393 0
 486 0010 0023     		movs	r3, #0
 487 0012 7B61     		str	r3, [r7, #20]
 488 0014 0023     		movs	r3, #0
 489 0016 3B61     		str	r3, [r7, #16]
 490 0018 0023     		movs	r3, #0
 491 001a FB60     		str	r3, [r7, #12]
 394:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* USB */
 395:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 396:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Check the parameters */
 397:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClk));
 398:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   switch (PeriphClk)
 492              		.loc 1 399 0
 493 001c 7B68     		ldr	r3, [r7, #4]
 494 001e 202B     		cmp	r3, #32
 495 0020 00D1     		bne	.LCB426
 496 0022 AAE0     		b	.L23	@long jump
 497              	.LCB426:
 498 0024 05D8     		bhi	.L24
 499 0026 012B     		cmp	r3, #1
 500 0028 44D0     		beq	.L25
 501 002a 022B     		cmp	r3, #2
 502 002c 00D1     		bne	.LCB432
 503 002e 6FE0     		b	.L26	@long jump
 504              	.LCB432:
 400:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 401:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_RTC:
 402:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 403:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Get the current RTC source */
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_RTC_SOURCE();
 405:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 406:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if LSE is ready and if RTC clock selection is LSE */
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if ((srcclk == RCC_RTCCLKSOURCE_LSE) && (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)))
 408:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = LSE_VALUE;
 410:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 411:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if LSI is ready and if RTC clock selection is LSI */
ARM GAS  /tmp/cc0ftZwI.s 			page 17


 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if ((srcclk == RCC_RTCCLKSOURCE_LSI) && (HAL_IS_BIT_SET(RCC->CSR, RCC_CSR_LSIRDY)))
 413:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = LSI_VALUE;
 415:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 416:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if HSE is ready  and if RTC clock selection is HSI_DIV32*/
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if ((srcclk == RCC_RTCCLKSOURCE_HSE_DIV32) && (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)))
 418:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HSE_VALUE / 32U;
 420:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       break;
 422:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 423:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_USART1:
 424:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 425:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Get the current USART1 source */
 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_USART1_SOURCE();
 427:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 428:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if USART1 clock selection is PCLK1 */
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if (srcclk == RCC_USART1CLKSOURCE_PCLK1)
 430:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HAL_RCC_GetPCLK1Freq();
 432:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 433:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if HSI is ready and if USART1 clock selection is HSI */
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if ((srcclk == RCC_USART1CLKSOURCE_HSI) && (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)))
 435:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HSI_VALUE;
 437:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 438:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if USART1 clock selection is SYSCLK */
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if (srcclk == RCC_USART1CLKSOURCE_SYSCLK)
 440:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HAL_RCC_GetSysClockFreq();
 442:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 443:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if LSE is ready  and if USART1 clock selection is LSE */
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if ((srcclk == RCC_USART1CLKSOURCE_LSE) && (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)))
 445:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = LSE_VALUE;
 447:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       break;
 449:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 450:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(RCC_CFGR3_USART2SW)
 451:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_USART2:
 452:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 453:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Get the current USART2 source */
 454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_USART2_SOURCE();
 455:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 456:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if USART2 clock selection is PCLK1 */
 457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if (srcclk == RCC_USART2CLKSOURCE_PCLK1)
 458:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HAL_RCC_GetPCLK1Freq();
 460:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 461:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if HSI is ready and if USART2 clock selection is HSI */
 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if ((srcclk == RCC_USART2CLKSOURCE_HSI) && (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)))
 463:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HSI_VALUE;
 465:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 466:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if USART2 clock selection is SYSCLK */
 467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if (srcclk == RCC_USART2CLKSOURCE_SYSCLK)
 468:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
ARM GAS  /tmp/cc0ftZwI.s 			page 18


 469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HAL_RCC_GetSysClockFreq();
 470:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 471:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if LSE is ready  and if USART2 clock selection is LSE */
 472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if ((srcclk == RCC_USART2CLKSOURCE_LSE) && (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)))
 473:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = LSE_VALUE;
 475:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       break;
 477:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 478:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* RCC_CFGR3_USART2SW */
 479:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(RCC_CFGR3_USART3SW)
 480:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_USART3:
 481:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 482:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Get the current USART3 source */
 483:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_USART3_SOURCE();
 484:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 485:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if USART3 clock selection is PCLK1 */
 486:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if (srcclk == RCC_USART3CLKSOURCE_PCLK1)
 487:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 488:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HAL_RCC_GetPCLK1Freq();
 489:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 490:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if HSI is ready and if USART3 clock selection is HSI */
 491:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if ((srcclk == RCC_USART3CLKSOURCE_HSI) && (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)))
 492:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 493:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HSI_VALUE;
 494:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 495:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if USART3 clock selection is SYSCLK */
 496:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if (srcclk == RCC_USART3CLKSOURCE_SYSCLK)
 497:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 498:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HAL_RCC_GetSysClockFreq();
 499:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 500:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if LSE is ready  and if USART3 clock selection is LSE */
 501:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if ((srcclk == RCC_USART3CLKSOURCE_LSE) && (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)))
 502:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 503:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = LSE_VALUE;
 504:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 505:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       break;
 506:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 507:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* RCC_CFGR3_USART3SW */
 508:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_I2C1:
 509:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 510:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Get the current I2C1 source */
 511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_I2C1_SOURCE();
 512:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 513:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if HSI is ready and if I2C1 clock selection is HSI */
 514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if ((srcclk == RCC_I2C1CLKSOURCE_HSI) && (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)))
 515:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HSI_VALUE;
 517:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 518:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if I2C1 clock selection is SYSCLK */
 519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if (srcclk == RCC_I2C1CLKSOURCE_SYSCLK)
 520:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HAL_RCC_GetSysClockFreq();
 522:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       break;
 524:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 525:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(USB)
ARM GAS  /tmp/cc0ftZwI.s 			page 19


 526:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_USB:
 527:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 528:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Get the current USB source */
 529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_USB_SOURCE();
 530:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 531:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if PLL is ready and if USB clock selection is PLL */
 532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if ((srcclk == RCC_USBCLKSOURCE_PLL) && (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLLRDY)))
 533:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 534:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         /* Get PLL clock source and multiplication factor ----------------------*/
 535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         pllmull      = RCC->CFGR & RCC_CFGR_PLLMUL;
 536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         pllsource    = RCC->CFGR & RCC_CFGR_PLLSRC;
 537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         pllmull      = (pllmull >> RCC_CFGR_PLLMUL_BITNUMBER) + 2U;
 538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1U;
 539:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
 541:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 542:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           /* HSE used as PLL clock source : frequency = HSE/PREDIV * PLLMUL */
 543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           frequency = (HSE_VALUE/predivfactor) * pllmull;
 544:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         }
 545:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(RCC_CR2_HSI48ON)
 546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         else if (pllsource == RCC_CFGR_PLLSRC_HSI48_PREDIV)
 547:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 548:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           /* HSI48 used as PLL clock source : frequency = HSI48/PREDIV * PLLMUL */
 549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           frequency = (HSI48_VALUE / predivfactor) * pllmull;
 550:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         }
 551:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* RCC_CR2_HSI48ON */
 552:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         else
 553:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 554:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F078xx) || defined(STM32F072xB) ||
 555:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           /* HSI used as PLL clock source : frequency = HSI/PREDIV * PLLMUL */
 556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           frequency = (HSI_VALUE / predivfactor) * pllmull;
 557:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #else
 558:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           /* HSI used as PLL clock source : frequency = HSI/2U * PLLMUL */
 559:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           frequency = (HSI_VALUE >> 1U) * pllmull;
 560:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F070xB */
 561:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         }
 562:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 563:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(RCC_CR2_HSI48ON)
 564:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if HSI48 is ready and if USB clock selection is HSI48 */
 565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if ((srcclk == RCC_USBCLKSOURCE_HSI48) && (HAL_IS_BIT_SET(RCC->CR2, RCC_CR2_HSI48RDY)))
 566:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HSI48_VALUE;
 568:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 569:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* RCC_CR2_HSI48ON */
 570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       break;
 571:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 572:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* USB */
 573:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(CEC)
 574:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   case RCC_PERIPHCLK_CEC:
 575:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 576:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Get the current CEC source */
 577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       srcclk = __HAL_RCC_GET_CEC_SOURCE();
 578:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 579:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if HSI is ready and if CEC clock selection is HSI */
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if ((srcclk == RCC_CECCLKSOURCE_HSI) && (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)))
 581:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = HSI_VALUE;
ARM GAS  /tmp/cc0ftZwI.s 			page 20


 583:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 584:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Check if LSE is ready  and if CEC clock selection is LSE */
 585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       else if ((srcclk == RCC_CECCLKSOURCE_LSE) && (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSERDY)))
 586:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         frequency = LSE_VALUE;
 588:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       break;
 590:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 591:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #endif /* CEC */
 592:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   default: 
 593:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 594:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       break;
 505              		.loc 1 594 0
 506 0030 3CE1     		b	.L33
 507              	.L24:
 399:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 508              		.loc 1 399 0
 509 0032 8022     		movs	r2, #128
 510 0034 5202     		lsls	r2, r2, #9
 511 0036 9342     		cmp	r3, r2
 512 0038 0AD0     		beq	.L27
 513 003a 8022     		movs	r2, #128
 514 003c 9202     		lsls	r2, r2, #10
 515 003e 9342     		cmp	r3, r2
 516 0040 00D1     		bne	.LCB444
 517 0042 B3E0     		b	.L28	@long jump
 518              	.LCB444:
 519 0044 8022     		movs	r2, #128
 520 0046 D200     		lsls	r2, r2, #3
 521 0048 9342     		cmp	r3, r2
 522 004a 00D1     		bne	.LCB448
 523 004c 07E1     		b	.L29	@long jump
 524              	.LCB448:
 525              		.loc 1 594 0
 526 004e 2DE1     		b	.L33
 527              	.L27:
 404:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 528              		.loc 1 404 0
 529 0050 994B     		ldr	r3, .L58
 530 0052 1A6A     		ldr	r2, [r3, #32]
 531 0054 C023     		movs	r3, #192
 532 0056 9B00     		lsls	r3, r3, #2
 533 0058 1340     		ands	r3, r2
 534 005a BB61     		str	r3, [r7, #24]
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 535              		.loc 1 407 0
 536 005c BA69     		ldr	r2, [r7, #24]
 537 005e 8023     		movs	r3, #128
 538 0060 5B00     		lsls	r3, r3, #1
 539 0062 9A42     		cmp	r2, r3
 540 0064 08D1     		bne	.L30
 407:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 541              		.loc 1 407 0 is_stmt 0 discriminator 1
 542 0066 944B     		ldr	r3, .L58
 543 0068 1B6A     		ldr	r3, [r3, #32]
 544 006a 0222     		movs	r2, #2
 545 006c 1340     		ands	r3, r2
ARM GAS  /tmp/cc0ftZwI.s 			page 21


 546 006e 03D0     		beq	.L30
 409:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 547              		.loc 1 409 0 is_stmt 1
 548 0070 8023     		movs	r3, #128
 549 0072 1B02     		lsls	r3, r3, #8
 550 0074 FB61     		str	r3, [r7, #28]
 551 0076 1CE0     		b	.L31
 552              	.L30:
 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 553              		.loc 1 412 0
 554 0078 BA69     		ldr	r2, [r7, #24]
 555 007a 8023     		movs	r3, #128
 556 007c 9B00     		lsls	r3, r3, #2
 557 007e 9A42     		cmp	r2, r3
 558 0080 07D1     		bne	.L32
 412:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 559              		.loc 1 412 0 is_stmt 0 discriminator 1
 560 0082 8D4B     		ldr	r3, .L58
 561 0084 5B6A     		ldr	r3, [r3, #36]
 562 0086 0222     		movs	r2, #2
 563 0088 1340     		ands	r3, r2
 564 008a 02D0     		beq	.L32
 414:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 565              		.loc 1 414 0 is_stmt 1
 566 008c 8B4B     		ldr	r3, .L58+4
 567 008e FB61     		str	r3, [r7, #28]
 568 0090 0FE0     		b	.L31
 569              	.L32:
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 570              		.loc 1 417 0
 571 0092 BA69     		ldr	r2, [r7, #24]
 572 0094 C023     		movs	r3, #192
 573 0096 9B00     		lsls	r3, r3, #2
 574 0098 9A42     		cmp	r2, r3
 575 009a 00D0     		beq	.LCB498
 576 009c FBE0     		b	.L52	@long jump
 577              	.LCB498:
 417:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 578              		.loc 1 417 0 is_stmt 0 discriminator 1
 579 009e 864B     		ldr	r3, .L58
 580 00a0 1A68     		ldr	r2, [r3]
 581 00a2 8023     		movs	r3, #128
 582 00a4 9B02     		lsls	r3, r3, #10
 583 00a6 1340     		ands	r3, r2
 584 00a8 00D1     		bne	.LCB505
 585 00aa F4E0     		b	.L52	@long jump
 586              	.LCB505:
 419:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 587              		.loc 1 419 0 is_stmt 1
 588 00ac 844B     		ldr	r3, .L58+8
 589 00ae FB61     		str	r3, [r7, #28]
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 590              		.loc 1 421 0
 591 00b0 F1E0     		b	.L52
 592              	.L31:
 593 00b2 F0E0     		b	.L52
 594              	.L25:
ARM GAS  /tmp/cc0ftZwI.s 			page 22


 426:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 595              		.loc 1 426 0
 596 00b4 804B     		ldr	r3, .L58
 597 00b6 1B6B     		ldr	r3, [r3, #48]
 598 00b8 0322     		movs	r2, #3
 599 00ba 1340     		ands	r3, r2
 600 00bc BB61     		str	r3, [r7, #24]
 429:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 601              		.loc 1 429 0
 602 00be BB69     		ldr	r3, [r7, #24]
 603 00c0 002B     		cmp	r3, #0
 604 00c2 04D1     		bne	.L34
 431:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 605              		.loc 1 431 0
 606 00c4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 607 00c8 0300     		movs	r3, r0
 608 00ca FB61     		str	r3, [r7, #28]
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 609              		.loc 1 448 0
 610 00cc E5E0     		b	.L53
 611              	.L34:
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 612              		.loc 1 434 0
 613 00ce BB69     		ldr	r3, [r7, #24]
 614 00d0 032B     		cmp	r3, #3
 615 00d2 07D1     		bne	.L36
 434:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 616              		.loc 1 434 0 is_stmt 0 discriminator 1
 617 00d4 784B     		ldr	r3, .L58
 618 00d6 1B68     		ldr	r3, [r3]
 619 00d8 0222     		movs	r2, #2
 620 00da 1340     		ands	r3, r2
 621 00dc 02D0     		beq	.L36
 436:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 622              		.loc 1 436 0 is_stmt 1
 623 00de 794B     		ldr	r3, .L58+12
 624 00e0 FB61     		str	r3, [r7, #28]
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 625              		.loc 1 448 0
 626 00e2 DAE0     		b	.L53
 627              	.L36:
 439:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 628              		.loc 1 439 0
 629 00e4 BB69     		ldr	r3, [r7, #24]
 630 00e6 012B     		cmp	r3, #1
 631 00e8 04D1     		bne	.L37
 441:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 632              		.loc 1 441 0
 633 00ea FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 634 00ee 0300     		movs	r3, r0
 635 00f0 FB61     		str	r3, [r7, #28]
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 636              		.loc 1 448 0
 637 00f2 D2E0     		b	.L53
 638              	.L37:
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 639              		.loc 1 444 0
ARM GAS  /tmp/cc0ftZwI.s 			page 23


 640 00f4 BB69     		ldr	r3, [r7, #24]
 641 00f6 022B     		cmp	r3, #2
 642 00f8 00D0     		beq	.LCB558
 643 00fa CEE0     		b	.L53	@long jump
 644              	.LCB558:
 444:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 645              		.loc 1 444 0 is_stmt 0 discriminator 1
 646 00fc 6E4B     		ldr	r3, .L58
 647 00fe 1B6A     		ldr	r3, [r3, #32]
 648 0100 0222     		movs	r2, #2
 649 0102 1340     		ands	r3, r2
 650 0104 00D1     		bne	.LCB564
 651 0106 C8E0     		b	.L53	@long jump
 652              	.LCB564:
 446:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 653              		.loc 1 446 0 is_stmt 1
 654 0108 8023     		movs	r3, #128
 655 010a 1B02     		lsls	r3, r3, #8
 656 010c FB61     		str	r3, [r7, #28]
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 657              		.loc 1 448 0
 658 010e C4E0     		b	.L53
 659              	.L26:
 454:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 660              		.loc 1 454 0
 661 0110 694B     		ldr	r3, .L58
 662 0112 1A6B     		ldr	r2, [r3, #48]
 663 0114 C023     		movs	r3, #192
 664 0116 9B02     		lsls	r3, r3, #10
 665 0118 1340     		ands	r3, r2
 666 011a BB61     		str	r3, [r7, #24]
 457:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 667              		.loc 1 457 0
 668 011c BB69     		ldr	r3, [r7, #24]
 669 011e 002B     		cmp	r3, #0
 670 0120 04D1     		bne	.L38
 459:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 671              		.loc 1 459 0
 672 0122 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 673 0126 0300     		movs	r3, r0
 674 0128 FB61     		str	r3, [r7, #28]
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 675              		.loc 1 476 0
 676 012a B8E0     		b	.L54
 677              	.L38:
 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 678              		.loc 1 462 0
 679 012c BA69     		ldr	r2, [r7, #24]
 680 012e C023     		movs	r3, #192
 681 0130 9B02     		lsls	r3, r3, #10
 682 0132 9A42     		cmp	r2, r3
 683 0134 07D1     		bne	.L40
 462:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 684              		.loc 1 462 0 is_stmt 0 discriminator 1
 685 0136 604B     		ldr	r3, .L58
 686 0138 1B68     		ldr	r3, [r3]
 687 013a 0222     		movs	r2, #2
ARM GAS  /tmp/cc0ftZwI.s 			page 24


 688 013c 1340     		ands	r3, r2
 689 013e 02D0     		beq	.L40
 464:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 690              		.loc 1 464 0 is_stmt 1
 691 0140 604B     		ldr	r3, .L58+12
 692 0142 FB61     		str	r3, [r7, #28]
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 693              		.loc 1 476 0
 694 0144 ABE0     		b	.L54
 695              	.L40:
 467:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 696              		.loc 1 467 0
 697 0146 BA69     		ldr	r2, [r7, #24]
 698 0148 8023     		movs	r3, #128
 699 014a 5B02     		lsls	r3, r3, #9
 700 014c 9A42     		cmp	r2, r3
 701 014e 04D1     		bne	.L41
 469:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 702              		.loc 1 469 0
 703 0150 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 704 0154 0300     		movs	r3, r0
 705 0156 FB61     		str	r3, [r7, #28]
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 706              		.loc 1 476 0
 707 0158 A1E0     		b	.L54
 708              	.L41:
 472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 709              		.loc 1 472 0
 710 015a BA69     		ldr	r2, [r7, #24]
 711 015c 8023     		movs	r3, #128
 712 015e 9B02     		lsls	r3, r3, #10
 713 0160 9A42     		cmp	r2, r3
 714 0162 00D0     		beq	.LCB621
 715 0164 9BE0     		b	.L54	@long jump
 716              	.LCB621:
 472:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 717              		.loc 1 472 0 is_stmt 0 discriminator 1
 718 0166 544B     		ldr	r3, .L58
 719 0168 1B6A     		ldr	r3, [r3, #32]
 720 016a 0222     		movs	r2, #2
 721 016c 1340     		ands	r3, r2
 722 016e 00D1     		bne	.LCB627
 723 0170 95E0     		b	.L54	@long jump
 724              	.LCB627:
 474:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 725              		.loc 1 474 0 is_stmt 1
 726 0172 8023     		movs	r3, #128
 727 0174 1B02     		lsls	r3, r3, #8
 728 0176 FB61     		str	r3, [r7, #28]
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 729              		.loc 1 476 0
 730 0178 91E0     		b	.L54
 731              	.L23:
 511:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 732              		.loc 1 511 0
 733 017a 4F4B     		ldr	r3, .L58
 734 017c 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/cc0ftZwI.s 			page 25


 735 017e 1022     		movs	r2, #16
 736 0180 1340     		ands	r3, r2
 737 0182 BB61     		str	r3, [r7, #24]
 514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 738              		.loc 1 514 0
 739 0184 BB69     		ldr	r3, [r7, #24]
 740 0186 002B     		cmp	r3, #0
 741 0188 07D1     		bne	.L42
 514:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 742              		.loc 1 514 0 is_stmt 0 discriminator 1
 743 018a 4B4B     		ldr	r3, .L58
 744 018c 1B68     		ldr	r3, [r3]
 745 018e 0222     		movs	r2, #2
 746 0190 1340     		ands	r3, r2
 747 0192 02D0     		beq	.L42
 516:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 748              		.loc 1 516 0 is_stmt 1
 749 0194 4B4B     		ldr	r3, .L58+12
 750 0196 FB61     		str	r3, [r7, #28]
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 751              		.loc 1 523 0
 752 0198 83E0     		b	.L55
 753              	.L42:
 519:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 754              		.loc 1 519 0
 755 019a BB69     		ldr	r3, [r7, #24]
 756 019c 102B     		cmp	r3, #16
 757 019e 00D0     		beq	.LCB657
 758 01a0 7FE0     		b	.L55	@long jump
 759              	.LCB657:
 521:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 760              		.loc 1 521 0
 761 01a2 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 762 01a6 0300     		movs	r3, r0
 763 01a8 FB61     		str	r3, [r7, #28]
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 764              		.loc 1 523 0
 765 01aa 7AE0     		b	.L55
 766              	.L28:
 529:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 767              		.loc 1 529 0
 768 01ac 424B     		ldr	r3, .L58
 769 01ae 1B6B     		ldr	r3, [r3, #48]
 770 01b0 8022     		movs	r2, #128
 771 01b2 1340     		ands	r3, r2
 772 01b4 BB61     		str	r3, [r7, #24]
 532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 773              		.loc 1 532 0
 774 01b6 BB69     		ldr	r3, [r7, #24]
 775 01b8 802B     		cmp	r3, #128
 776 01ba 43D1     		bne	.L44
 532:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 777              		.loc 1 532 0 is_stmt 0 discriminator 1
 778 01bc 3E4B     		ldr	r3, .L58
 779 01be 1A68     		ldr	r2, [r3]
 780 01c0 8023     		movs	r3, #128
 781 01c2 9B04     		lsls	r3, r3, #18
ARM GAS  /tmp/cc0ftZwI.s 			page 26


 782 01c4 1340     		ands	r3, r2
 783 01c6 3DD0     		beq	.L44
 535:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         pllsource    = RCC->CFGR & RCC_CFGR_PLLSRC;
 784              		.loc 1 535 0 is_stmt 1
 785 01c8 3B4B     		ldr	r3, .L58
 786 01ca 5A68     		ldr	r2, [r3, #4]
 787 01cc F023     		movs	r3, #240
 788 01ce 9B03     		lsls	r3, r3, #14
 789 01d0 1340     		ands	r3, r2
 790 01d2 7B61     		str	r3, [r7, #20]
 536:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         pllmull      = (pllmull >> RCC_CFGR_PLLMUL_BITNUMBER) + 2U;
 791              		.loc 1 536 0
 792 01d4 384B     		ldr	r3, .L58
 793 01d6 5A68     		ldr	r2, [r3, #4]
 794 01d8 C023     		movs	r3, #192
 795 01da 5B02     		lsls	r3, r3, #9
 796 01dc 1340     		ands	r3, r2
 797 01de 3B61     		str	r3, [r7, #16]
 537:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1U;
 798              		.loc 1 537 0
 799 01e0 7B69     		ldr	r3, [r7, #20]
 800 01e2 9B0C     		lsrs	r3, r3, #18
 801 01e4 0233     		adds	r3, r3, #2
 802 01e6 7B61     		str	r3, [r7, #20]
 538:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 803              		.loc 1 538 0
 804 01e8 334B     		ldr	r3, .L58
 805 01ea DB6A     		ldr	r3, [r3, #44]
 806 01ec 0F22     		movs	r2, #15
 807 01ee 1340     		ands	r3, r2
 808 01f0 0133     		adds	r3, r3, #1
 809 01f2 FB60     		str	r3, [r7, #12]
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 810              		.loc 1 540 0
 811 01f4 3A69     		ldr	r2, [r7, #16]
 812 01f6 8023     		movs	r3, #128
 813 01f8 5B02     		lsls	r3, r3, #9
 814 01fa 9A42     		cmp	r2, r3
 815 01fc 09D1     		bne	.L45
 543:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         }
 816              		.loc 1 543 0
 817 01fe F968     		ldr	r1, [r7, #12]
 818 0200 3048     		ldr	r0, .L58+12
 819 0202 FFF7FEFF 		bl	__aeabi_uidiv
 820              	.LVL0:
 821 0206 0300     		movs	r3, r0
 822 0208 1A00     		movs	r2, r3
 823 020a 7B69     		ldr	r3, [r7, #20]
 824 020c 5343     		muls	r3, r2
 825 020e FB61     		str	r3, [r7, #28]
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 826              		.loc 1 540 0
 827 0210 24E0     		b	.L48
 828              	.L45:
 546:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 829              		.loc 1 546 0
 830 0212 3A69     		ldr	r2, [r7, #16]
ARM GAS  /tmp/cc0ftZwI.s 			page 27


 831 0214 C023     		movs	r3, #192
 832 0216 5B02     		lsls	r3, r3, #9
 833 0218 9A42     		cmp	r2, r3
 834 021a 09D1     		bne	.L47
 549:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         }
 835              		.loc 1 549 0
 836 021c F968     		ldr	r1, [r7, #12]
 837 021e 2A48     		ldr	r0, .L58+16
 838 0220 FFF7FEFF 		bl	__aeabi_uidiv
 839              	.LVL1:
 840 0224 0300     		movs	r3, r0
 841 0226 1A00     		movs	r2, r3
 842 0228 7B69     		ldr	r3, [r7, #20]
 843 022a 5343     		muls	r3, r2
 844 022c FB61     		str	r3, [r7, #28]
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 845              		.loc 1 540 0
 846 022e 15E0     		b	.L48
 847              	.L47:
 556:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #else
 848              		.loc 1 556 0
 849 0230 F968     		ldr	r1, [r7, #12]
 850 0232 2448     		ldr	r0, .L58+12
 851 0234 FFF7FEFF 		bl	__aeabi_uidiv
 852              	.LVL2:
 853 0238 0300     		movs	r3, r0
 854 023a 1A00     		movs	r2, r3
 855 023c 7B69     		ldr	r3, [r7, #20]
 856 023e 5343     		muls	r3, r2
 857 0240 FB61     		str	r3, [r7, #28]
 540:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         {
 858              		.loc 1 540 0
 859 0242 0BE0     		b	.L48
 860              	.L44:
 565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 861              		.loc 1 565 0
 862 0244 BB69     		ldr	r3, [r7, #24]
 863 0246 002B     		cmp	r3, #0
 864 0248 2DD1     		bne	.L56
 565:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 865              		.loc 1 565 0 is_stmt 0 discriminator 1
 866 024a 1B4B     		ldr	r3, .L58
 867 024c 5A6B     		ldr	r2, [r3, #52]
 868 024e 8023     		movs	r3, #128
 869 0250 9B02     		lsls	r3, r3, #10
 870 0252 1340     		ands	r3, r2
 871 0254 27D0     		beq	.L56
 567:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 872              		.loc 1 567 0 is_stmt 1
 873 0256 1C4B     		ldr	r3, .L58+16
 874 0258 FB61     		str	r3, [r7, #28]
 570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 875              		.loc 1 570 0
 876 025a 24E0     		b	.L56
 877              	.L48:
 570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 878              		.loc 1 570 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc0ftZwI.s 			page 28


 879 025c 23E0     		b	.L56
 880              	.L29:
 577:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 881              		.loc 1 577 0 is_stmt 1
 882 025e 164B     		ldr	r3, .L58
 883 0260 1B6B     		ldr	r3, [r3, #48]
 884 0262 4022     		movs	r2, #64
 885 0264 1340     		ands	r3, r2
 886 0266 BB61     		str	r3, [r7, #24]
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 887              		.loc 1 580 0
 888 0268 BB69     		ldr	r3, [r7, #24]
 889 026a 002B     		cmp	r3, #0
 890 026c 07D1     		bne	.L49
 580:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 891              		.loc 1 580 0 is_stmt 0 discriminator 1
 892 026e 124B     		ldr	r3, .L58
 893 0270 1B68     		ldr	r3, [r3]
 894 0272 0222     		movs	r2, #2
 895 0274 1340     		ands	r3, r2
 896 0276 02D0     		beq	.L49
 582:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 897              		.loc 1 582 0 is_stmt 1
 898 0278 124B     		ldr	r3, .L58+12
 899 027a FB61     		str	r3, [r7, #28]
 589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 900              		.loc 1 589 0
 901 027c 15E0     		b	.L57
 902              	.L49:
 585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 903              		.loc 1 585 0
 904 027e BB69     		ldr	r3, [r7, #24]
 905 0280 402B     		cmp	r3, #64
 906 0282 12D1     		bne	.L57
 585:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 907              		.loc 1 585 0 is_stmt 0 discriminator 1
 908 0284 0C4B     		ldr	r3, .L58
 909 0286 1B6A     		ldr	r3, [r3, #32]
 910 0288 0222     		movs	r2, #2
 911 028a 1340     		ands	r3, r2
 912 028c 0DD0     		beq	.L57
 587:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 913              		.loc 1 587 0 is_stmt 1
 914 028e 8023     		movs	r3, #128
 915 0290 1B02     		lsls	r3, r3, #8
 916 0292 FB61     		str	r3, [r7, #28]
 589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 917              		.loc 1 589 0
 918 0294 09E0     		b	.L57
 919              	.L52:
 421:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 920              		.loc 1 421 0
 921 0296 C046     		nop
 922 0298 08E0     		b	.L33
 923              	.L53:
 448:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 924              		.loc 1 448 0
ARM GAS  /tmp/cc0ftZwI.s 			page 29


 925 029a C046     		nop
 926 029c 06E0     		b	.L33
 927              	.L54:
 476:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 928              		.loc 1 476 0
 929 029e C046     		nop
 930 02a0 04E0     		b	.L33
 931              	.L55:
 523:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 932              		.loc 1 523 0
 933 02a2 C046     		nop
 934 02a4 02E0     		b	.L33
 935              	.L56:
 570:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 936              		.loc 1 570 0
 937 02a6 C046     		nop
 938 02a8 00E0     		b	.L33
 939              	.L57:
 589:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 940              		.loc 1 589 0
 941 02aa C046     		nop
 942              	.L33:
 595:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 596:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 597:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   return(frequency);
 943              		.loc 1 597 0
 944 02ac FB69     		ldr	r3, [r7, #28]
 598:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 945              		.loc 1 598 0
 946 02ae 1800     		movs	r0, r3
 947 02b0 BD46     		mov	sp, r7
 948 02b2 08B0     		add	sp, sp, #32
 949              		@ sp needed
 950 02b4 80BD     		pop	{r7, pc}
 951              	.L59:
 952 02b6 C046     		.align	2
 953              	.L58:
 954 02b8 00100240 		.word	1073876992
 955 02bc 409C0000 		.word	40000
 956 02c0 90D00300 		.word	250000
 957 02c4 00127A00 		.word	8000000
 958 02c8 006CDC02 		.word	48000000
 959              		.cfi_endproc
 960              	.LFE39:
 962              		.section	.text.HAL_RCCEx_CRSConfig,"ax",%progbits
 963              		.align	1
 964              		.global	HAL_RCCEx_CRSConfig
 965              		.syntax unified
 966              		.code	16
 967              		.thumb_func
 968              		.fpu softvfp
 970              	HAL_RCCEx_CRSConfig:
 971              	.LFB40:
 599:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 600:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 601:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @}
 602:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
ARM GAS  /tmp/cc0ftZwI.s 			page 30


 603:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 604:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** #if defined(CRS)
 605:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 606:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /** @defgroup RCCEx_Exported_Functions_Group3 Extended Clock Recovery System Control functions 
 607:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  *  @brief  Extended Clock Recovery System Control functions
 608:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  *
 609:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** @verbatim
 610:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  ===============================================================================
 611:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****                 ##### Extended Clock Recovery System Control functions  #####
 612:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  ===============================================================================
 613:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     [..]
 614:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       For devices with Clock Recovery System feature (CRS), RCC Extention HAL driver can be used as
 615:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 616:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       (#) In System clock config, HSI48 needs to be enabled
 617:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 618:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       (#) Enable CRS clock in IP MSP init which will use CRS functions
 619:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 620:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       (#) Call CRS functions as follows:
 621:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           (##) Prepare synchronization configuration necessary for HSI48 calibration
 622:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (+++) Default values can be set for frequency Error Measurement (reload and error lim
 623:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****                         and also HSI48 oscillator smooth trimming.
 624:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (+++) Macro @ref __HAL_RCC_CRS_RELOADVALUE_CALCULATE can be also used to calculate 
 625:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****                         directly reload value with target and synchronization frequencies values
 626:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           (##) Call function @ref HAL_RCCEx_CRSConfig which
 627:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (+++) Reset CRS registers to their default values.
 628:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (+++) Configure CRS registers with synchronization configuration 
 629:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (+++) Enable automatic calibration and frequency error counter feature
 630:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****            Note: When using USB LPM (Link Power Management) and the device is in Sleep mode, the
 631:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****            periodic USB SOF will not be generated by the host. No SYNC signal will therefore be
 632:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****            provided to the CRS to calibrate the HSI48 on the run. To guarantee the required clock
 633:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****            precision after waking up from Sleep mode, the LSE or reference clock on the GPIOs
 634:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****            should be used as SYNC signal.
 635:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 636:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           (##) A polling function is provided to wait for complete synchronization
 637:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (+++) Call function @ref HAL_RCCEx_CRSWaitSynchronization()
 638:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (+++) According to CRS status, user can decide to adjust again the calibration or con
 639:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****                         application if synchronization is OK
 640:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               
 641:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       (#) User can retrieve information related to synchronization in calling function
 642:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****             @ref HAL_RCCEx_CRSGetSynchronizationInfo()
 643:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 644:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       (#) Regarding synchronization status and synchronization information, user can try a new cali
 645:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****            in changing synchronization configuration and call again HAL_RCCEx_CRSConfig.
 646:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****            Note: When the SYNC event is detected during the downcounting phase (before reaching the
 647:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****            it means that the actual frequency is lower than the target (and so, that the TRIM value
 648:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****            incremented), while when it is detected during the upcounting phase it means that the ac
 649:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****            is higher (and that the TRIM value should be decremented).
 650:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 651:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       (#) In interrupt mode, user can resort to the available macros (__HAL_RCC_CRS_XXX_IT). Interr
 652:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           through CRS Handler (RCC_IRQn/RCC_IRQHandler)
 653:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (++) Call function @ref HAL_RCCEx_CRSConfig()
 654:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (++) Enable RCC_IRQn (thanks to NVIC functions)
 655:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (++) Enable CRS interrupt (@ref __HAL_RCC_CRS_ENABLE_IT)
 656:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****               (++) Implement CRS status management in the following user callbacks called from 
 657:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****                    HAL_RCCEx_CRS_IRQHandler():
 658:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****                    (+++) @ref HAL_RCCEx_CRS_SyncOkCallback()
 659:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****                    (+++) @ref HAL_RCCEx_CRS_SyncWarnCallback()
ARM GAS  /tmp/cc0ftZwI.s 			page 31


 660:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****                    (+++) @ref HAL_RCCEx_CRS_ExpectedSyncCallback()
 661:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****                    (+++) @ref HAL_RCCEx_CRS_ErrorCallback()
 662:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 663:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       (#) To force a SYNC EVENT, user can use the function @ref HAL_RCCEx_CRSSoftwareSynchronizatio
 664:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****           This function can be called before calling @ref HAL_RCCEx_CRSConfig (for instance in Syst
 665:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****             
 666:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** @endverbatim
 667:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  * @{
 668:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****  */
 669:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 670:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 671:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief  Start automatic synchronization for polling mode
 672:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @param  pInit Pointer on RCC_CRSInitTypeDef structure
 673:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval None
 674:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 675:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** void HAL_RCCEx_CRSConfig(RCC_CRSInitTypeDef *pInit)
 676:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 972              		.loc 1 676 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 16
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976 0000 80B5     		push	{r7, lr}
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 7, -8
 979              		.cfi_offset 14, -4
 980 0002 84B0     		sub	sp, sp, #16
 981              		.cfi_def_cfa_offset 24
 982 0004 00AF     		add	r7, sp, #0
 983              		.cfi_def_cfa_register 7
 984 0006 7860     		str	r0, [r7, #4]
 677:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t value = 0U;
 985              		.loc 1 677 0
 986 0008 0023     		movs	r3, #0
 987 000a FB60     		str	r3, [r7, #12]
 678:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 679:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Check the parameters */
 680:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_SYNC_DIV(pInit->Prescaler));
 681:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_SYNC_SOURCE(pInit->Source));
 682:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_SYNC_POLARITY(pInit->Polarity));
 683:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_RELOADVALUE(pInit->ReloadValue));
 684:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_ERRORLIMIT(pInit->ErrorLimitValue));
 685:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   assert_param(IS_RCC_CRS_HSI48CALIBRATION(pInit->HSI48CalibrationValue));
 686:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 687:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* CONFIGURATION */
 688:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 689:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Before configuration, reset CRS registers to their default values*/
 690:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   __HAL_RCC_CRS_FORCE_RESET();
 988              		.loc 1 690 0
 989 000c 1C4B     		ldr	r3, .L61
 990 000e 1A69     		ldr	r2, [r3, #16]
 991 0010 1B4B     		ldr	r3, .L61
 992 0012 8021     		movs	r1, #128
 993 0014 0905     		lsls	r1, r1, #20
 994 0016 0A43     		orrs	r2, r1
 995 0018 1A61     		str	r2, [r3, #16]
 691:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   __HAL_RCC_CRS_RELEASE_RESET();
 996              		.loc 1 691 0
ARM GAS  /tmp/cc0ftZwI.s 			page 32


 997 001a 194B     		ldr	r3, .L61
 998 001c 1A69     		ldr	r2, [r3, #16]
 999 001e 184B     		ldr	r3, .L61
 1000 0020 1849     		ldr	r1, .L61+4
 1001 0022 0A40     		ands	r2, r1
 1002 0024 1A61     		str	r2, [r3, #16]
 692:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 693:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Set the SYNCDIV[2:0] bits according to Prescaler value */
 694:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Set the SYNCSRC[1:0] bits according to Source value */
 695:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Set the SYNCSPOL bit according to Polarity value */
 696:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   value = (pInit->Prescaler | pInit->Source | pInit->Polarity);
 1003              		.loc 1 696 0
 1004 0026 7B68     		ldr	r3, [r7, #4]
 1005 0028 1A68     		ldr	r2, [r3]
 1006 002a 7B68     		ldr	r3, [r7, #4]
 1007 002c 5B68     		ldr	r3, [r3, #4]
 1008 002e 1A43     		orrs	r2, r3
 1009 0030 7B68     		ldr	r3, [r7, #4]
 1010 0032 9B68     		ldr	r3, [r3, #8]
 1011 0034 1343     		orrs	r3, r2
 1012 0036 FB60     		str	r3, [r7, #12]
 697:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Set the RELOAD[15:0] bits according to ReloadValue value */
 698:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   value |= pInit->ReloadValue;
 1013              		.loc 1 698 0
 1014 0038 7B68     		ldr	r3, [r7, #4]
 1015 003a DB68     		ldr	r3, [r3, #12]
 1016 003c FA68     		ldr	r2, [r7, #12]
 1017 003e 1343     		orrs	r3, r2
 1018 0040 FB60     		str	r3, [r7, #12]
 699:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Set the FELIM[7:0] bits according to ErrorLimitValue value */
 700:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   value |= (pInit->ErrorLimitValue << CRS_CFGR_FELIM_BITNUMBER);
 1019              		.loc 1 700 0
 1020 0042 7B68     		ldr	r3, [r7, #4]
 1021 0044 1B69     		ldr	r3, [r3, #16]
 1022 0046 1B04     		lsls	r3, r3, #16
 1023 0048 FA68     		ldr	r2, [r7, #12]
 1024 004a 1343     		orrs	r3, r2
 1025 004c FB60     		str	r3, [r7, #12]
 701:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   WRITE_REG(CRS->CFGR, value);
 1026              		.loc 1 701 0
 1027 004e 0E4B     		ldr	r3, .L61+8
 1028 0050 FA68     		ldr	r2, [r7, #12]
 1029 0052 5A60     		str	r2, [r3, #4]
 702:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 703:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Adjust HSI48 oscillator smooth trimming */
 704:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Set the TRIM[5:0] bits according to RCC_CRS_HSI48CalibrationValue value */
 705:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   MODIFY_REG(CRS->CR, CRS_CR_TRIM, (pInit->HSI48CalibrationValue << CRS_CR_TRIM_BITNUMBER));
 1030              		.loc 1 705 0
 1031 0054 0C4B     		ldr	r3, .L61+8
 1032 0056 1B68     		ldr	r3, [r3]
 1033 0058 0C4A     		ldr	r2, .L61+12
 1034 005a 1340     		ands	r3, r2
 1035 005c 1900     		movs	r1, r3
 1036 005e 7B68     		ldr	r3, [r7, #4]
 1037 0060 5B69     		ldr	r3, [r3, #20]
 1038 0062 1A02     		lsls	r2, r3, #8
 1039 0064 084B     		ldr	r3, .L61+8
ARM GAS  /tmp/cc0ftZwI.s 			page 33


 1040 0066 0A43     		orrs	r2, r1
 1041 0068 1A60     		str	r2, [r3]
 706:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 707:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* START AUTOMATIC SYNCHRONIZATION*/
 708:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 709:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Enable Automatic trimming & Frequency error counter */
 710:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   SET_BIT(CRS->CR, CRS_CR_AUTOTRIMEN | CRS_CR_CEN);
 1042              		.loc 1 710 0
 1043 006a 074B     		ldr	r3, .L61+8
 1044 006c 1A68     		ldr	r2, [r3]
 1045 006e 064B     		ldr	r3, .L61+8
 1046 0070 6021     		movs	r1, #96
 1047 0072 0A43     		orrs	r2, r1
 1048 0074 1A60     		str	r2, [r3]
 711:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 1049              		.loc 1 711 0
 1050 0076 C046     		nop
 1051 0078 BD46     		mov	sp, r7
 1052 007a 04B0     		add	sp, sp, #16
 1053              		@ sp needed
 1054 007c 80BD     		pop	{r7, pc}
 1055              	.L62:
 1056 007e C046     		.align	2
 1057              	.L61:
 1058 0080 00100240 		.word	1073876992
 1059 0084 FFFFFFF7 		.word	-134217729
 1060 0088 006C0040 		.word	1073769472
 1061 008c FFC0FFFF 		.word	-16129
 1062              		.cfi_endproc
 1063              	.LFE40:
 1065              		.section	.text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate,"ax",%progbits
 1066              		.align	1
 1067              		.global	HAL_RCCEx_CRSSoftwareSynchronizationGenerate
 1068              		.syntax unified
 1069              		.code	16
 1070              		.thumb_func
 1071              		.fpu softvfp
 1073              	HAL_RCCEx_CRSSoftwareSynchronizationGenerate:
 1074              	.LFB41:
 712:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 713:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 714:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief  Generate the software synchronization event
 715:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval None
 716:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 717:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** void HAL_RCCEx_CRSSoftwareSynchronizationGenerate(void)
 718:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 1075              		.loc 1 718 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 1, uses_anonymous_args = 0
 1079 0000 80B5     		push	{r7, lr}
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 1083 0002 00AF     		add	r7, sp, #0
 1084              		.cfi_def_cfa_register 7
 719:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   SET_BIT(CRS->CR, CRS_CR_SWSYNC);
ARM GAS  /tmp/cc0ftZwI.s 			page 34


 1085              		.loc 1 719 0
 1086 0004 044B     		ldr	r3, .L64
 1087 0006 1A68     		ldr	r2, [r3]
 1088 0008 034B     		ldr	r3, .L64
 1089 000a 8021     		movs	r1, #128
 1090 000c 0A43     		orrs	r2, r1
 1091 000e 1A60     		str	r2, [r3]
 720:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 1092              		.loc 1 720 0
 1093 0010 C046     		nop
 1094 0012 BD46     		mov	sp, r7
 1095              		@ sp needed
 1096 0014 80BD     		pop	{r7, pc}
 1097              	.L65:
 1098 0016 C046     		.align	2
 1099              	.L64:
 1100 0018 006C0040 		.word	1073769472
 1101              		.cfi_endproc
 1102              	.LFE41:
 1104              		.section	.text.HAL_RCCEx_CRSGetSynchronizationInfo,"ax",%progbits
 1105              		.align	1
 1106              		.global	HAL_RCCEx_CRSGetSynchronizationInfo
 1107              		.syntax unified
 1108              		.code	16
 1109              		.thumb_func
 1110              		.fpu softvfp
 1112              	HAL_RCCEx_CRSGetSynchronizationInfo:
 1113              	.LFB42:
 721:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 722:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 723:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief  Return synchronization info 
 724:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @param  pSynchroInfo Pointer on RCC_CRSSynchroInfoTypeDef structure
 725:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval None
 726:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 727:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** void HAL_RCCEx_CRSGetSynchronizationInfo(RCC_CRSSynchroInfoTypeDef *pSynchroInfo)
 728:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 1114              		.loc 1 728 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 8
 1117              		@ frame_needed = 1, uses_anonymous_args = 0
 1118 0000 80B5     		push	{r7, lr}
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 7, -8
 1121              		.cfi_offset 14, -4
 1122 0002 82B0     		sub	sp, sp, #8
 1123              		.cfi_def_cfa_offset 16
 1124 0004 00AF     		add	r7, sp, #0
 1125              		.cfi_def_cfa_register 7
 1126 0006 7860     		str	r0, [r7, #4]
 729:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Check the parameter */
 730:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   assert_param(pSynchroInfo != NULL);
 731:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 732:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get the reload value */
 733:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   pSynchroInfo->ReloadValue = (uint32_t)(READ_BIT(CRS->CFGR, CRS_CFGR_RELOAD));
 1127              		.loc 1 733 0
 1128 0008 0F4B     		ldr	r3, .L67
 1129 000a 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cc0ftZwI.s 			page 35


 1130 000c 1B04     		lsls	r3, r3, #16
 1131 000e 1A0C     		lsrs	r2, r3, #16
 1132 0010 7B68     		ldr	r3, [r7, #4]
 1133 0012 1A60     		str	r2, [r3]
 734:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 735:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get HSI48 oscillator smooth trimming */
 736:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   pSynchroInfo->HSI48CalibrationValue = (uint32_t)(READ_BIT(CRS->CR, CRS_CR_TRIM) >> CRS_CR_TRIM_BI
 1134              		.loc 1 736 0
 1135 0014 0C4B     		ldr	r3, .L67
 1136 0016 1B68     		ldr	r3, [r3]
 1137 0018 1B0A     		lsrs	r3, r3, #8
 1138 001a 3F22     		movs	r2, #63
 1139 001c 1A40     		ands	r2, r3
 1140 001e 7B68     		ldr	r3, [r7, #4]
 1141 0020 5A60     		str	r2, [r3, #4]
 737:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 738:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get Frequency error capture */
 739:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   pSynchroInfo->FreqErrorCapture = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FECAP) >> CRS_ISR_FECAP_BI
 1142              		.loc 1 739 0
 1143 0022 094B     		ldr	r3, .L67
 1144 0024 9B68     		ldr	r3, [r3, #8]
 1145 0026 1B0C     		lsrs	r3, r3, #16
 1146 0028 1B04     		lsls	r3, r3, #16
 1147 002a 1A0C     		lsrs	r2, r3, #16
 1148 002c 7B68     		ldr	r3, [r7, #4]
 1149 002e 9A60     		str	r2, [r3, #8]
 740:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 741:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get Frequency error direction */
 742:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   pSynchroInfo->FreqErrorDirection = (uint32_t)(READ_BIT(CRS->ISR, CRS_ISR_FEDIR));
 1150              		.loc 1 742 0
 1151 0030 054B     		ldr	r3, .L67
 1152 0032 9A68     		ldr	r2, [r3, #8]
 1153 0034 8023     		movs	r3, #128
 1154 0036 1B02     		lsls	r3, r3, #8
 1155 0038 1A40     		ands	r2, r3
 1156 003a 7B68     		ldr	r3, [r7, #4]
 1157 003c DA60     		str	r2, [r3, #12]
 743:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 1158              		.loc 1 743 0
 1159 003e C046     		nop
 1160 0040 BD46     		mov	sp, r7
 1161 0042 02B0     		add	sp, sp, #8
 1162              		@ sp needed
 1163 0044 80BD     		pop	{r7, pc}
 1164              	.L68:
 1165 0046 C046     		.align	2
 1166              	.L67:
 1167 0048 006C0040 		.word	1073769472
 1168              		.cfi_endproc
 1169              	.LFE42:
 1171              		.section	.text.HAL_RCCEx_CRSWaitSynchronization,"ax",%progbits
 1172              		.align	1
 1173              		.global	HAL_RCCEx_CRSWaitSynchronization
 1174              		.syntax unified
 1175              		.code	16
 1176              		.thumb_func
 1177              		.fpu softvfp
ARM GAS  /tmp/cc0ftZwI.s 			page 36


 1179              	HAL_RCCEx_CRSWaitSynchronization:
 1180              	.LFB43:
 744:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 745:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 746:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** * @brief Wait for CRS Synchronization status.
 747:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** * @param Timeout  Duration of the timeout
 748:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** * @note  Timeout is based on the maximum time to receive a SYNC event based on synchronization
 749:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** *        frequency.
 750:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** * @note    If Timeout set to HAL_MAX_DELAY, HAL_TIMEOUT will be never returned.
 751:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** * @retval Combination of Synchronization status
 752:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** *          This parameter can be a combination of the following values:
 753:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_TIMEOUT
 754:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_SYNCOK
 755:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_SYNCWARN
 756:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_SYNCERR
 757:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_SYNCMISS
 758:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** *            @arg @ref RCC_CRS_TRIMOVF
 759:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** */
 760:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** uint32_t HAL_RCCEx_CRSWaitSynchronization(uint32_t Timeout)
 761:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 1181              		.loc 1 761 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 16
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 80B5     		push	{r7, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 84B0     		sub	sp, sp, #16
 1190              		.cfi_def_cfa_offset 24
 1191 0004 00AF     		add	r7, sp, #0
 1192              		.cfi_def_cfa_register 7
 1193 0006 7860     		str	r0, [r7, #4]
 762:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t crsstatus = RCC_CRS_NONE;
 1194              		.loc 1 762 0
 1195 0008 0023     		movs	r3, #0
 1196 000a FB60     		str	r3, [r7, #12]
 763:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t tickstart = 0U;
 1197              		.loc 1 763 0
 1198 000c 0023     		movs	r3, #0
 1199 000e BB60     		str	r3, [r7, #8]
 764:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 765:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get timeout */
 766:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   tickstart = HAL_GetTick();
 1200              		.loc 1 766 0
 1201 0010 FFF7FEFF 		bl	HAL_GetTick
 1202 0014 0300     		movs	r3, r0
 1203 0016 BB60     		str	r3, [r7, #8]
 1204              	.L78:
 767:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   
 768:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Wait for CRS flag or timeout detection */
 769:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   do
 770:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 771:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1205              		.loc 1 771 0
 1206 0018 7B68     		ldr	r3, [r7, #4]
 1207 001a 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc0ftZwI.s 			page 37


 1208 001c 0CD0     		beq	.L70
 772:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 773:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 1209              		.loc 1 773 0
 1210 001e 7B68     		ldr	r3, [r7, #4]
 1211 0020 002B     		cmp	r3, #0
 1212 0022 07D0     		beq	.L71
 1213              		.loc 1 773 0 is_stmt 0 discriminator 1
 1214 0024 FFF7FEFF 		bl	HAL_GetTick
 1215 0028 0200     		movs	r2, r0
 1216 002a BB68     		ldr	r3, [r7, #8]
 1217 002c D31A     		subs	r3, r2, r3
 1218 002e 7A68     		ldr	r2, [r7, #4]
 1219 0030 9A42     		cmp	r2, r3
 1220 0032 01D2     		bcs	.L70
 1221              	.L71:
 774:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 775:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         crsstatus = RCC_CRS_TIMEOUT;
 1222              		.loc 1 775 0 is_stmt 1
 1223 0034 0123     		movs	r3, #1
 1224 0036 FB60     		str	r3, [r7, #12]
 1225              	.L70:
 776:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 777:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 778:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check CRS SYNCOK flag  */
 779:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_SYNCOK))
 1226              		.loc 1 779 0
 1227 0038 2D4B     		ldr	r3, .L80
 1228 003a 9B68     		ldr	r3, [r3, #8]
 1229 003c 0122     		movs	r2, #1
 1230 003e 1340     		ands	r3, r2
 1231 0040 012B     		cmp	r3, #1
 1232 0042 06D1     		bne	.L72
 780:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 781:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* CRS SYNC event OK */
 782:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       crsstatus |= RCC_CRS_SYNCOK;
 1233              		.loc 1 782 0
 1234 0044 FB68     		ldr	r3, [r7, #12]
 1235 0046 0222     		movs	r2, #2
 1236 0048 1343     		orrs	r3, r2
 1237 004a FB60     		str	r3, [r7, #12]
 783:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 784:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Clear CRS SYNC event OK bit */
 785:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_SYNCOK);
 1238              		.loc 1 785 0
 1239 004c 284B     		ldr	r3, .L80
 1240 004e 0122     		movs	r2, #1
 1241 0050 DA60     		str	r2, [r3, #12]
 1242              	.L72:
 786:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 787:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 788:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check CRS SYNCWARN flag  */
 789:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_SYNCWARN))
 1243              		.loc 1 789 0
 1244 0052 274B     		ldr	r3, .L80
 1245 0054 9B68     		ldr	r3, [r3, #8]
 1246 0056 0222     		movs	r2, #2
ARM GAS  /tmp/cc0ftZwI.s 			page 38


 1247 0058 1340     		ands	r3, r2
 1248 005a 022B     		cmp	r3, #2
 1249 005c 06D1     		bne	.L73
 790:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 791:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* CRS SYNC warning */
 792:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       crsstatus |= RCC_CRS_SYNCWARN;
 1250              		.loc 1 792 0
 1251 005e FB68     		ldr	r3, [r7, #12]
 1252 0060 0422     		movs	r2, #4
 1253 0062 1343     		orrs	r3, r2
 1254 0064 FB60     		str	r3, [r7, #12]
 793:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 794:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Clear CRS SYNCWARN bit */
 795:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_SYNCWARN);
 1255              		.loc 1 795 0
 1256 0066 224B     		ldr	r3, .L80
 1257 0068 0222     		movs	r2, #2
 1258 006a DA60     		str	r2, [r3, #12]
 1259              	.L73:
 796:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 797:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 798:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check CRS TRIM overflow flag  */
 799:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_TRIMOVF))
 1260              		.loc 1 799 0
 1261 006c 204B     		ldr	r3, .L80
 1262 006e 9A68     		ldr	r2, [r3, #8]
 1263 0070 8023     		movs	r3, #128
 1264 0072 DB00     		lsls	r3, r3, #3
 1265 0074 1A40     		ands	r2, r3
 1266 0076 8023     		movs	r3, #128
 1267 0078 DB00     		lsls	r3, r3, #3
 1268 007a 9A42     		cmp	r2, r3
 1269 007c 06D1     		bne	.L74
 800:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 801:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* CRS SYNC Error */
 802:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       crsstatus |= RCC_CRS_TRIMOVF;
 1270              		.loc 1 802 0
 1271 007e FB68     		ldr	r3, [r7, #12]
 1272 0080 2022     		movs	r2, #32
 1273 0082 1343     		orrs	r3, r2
 1274 0084 FB60     		str	r3, [r7, #12]
 803:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 804:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Clear CRS Error bit */
 805:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_TRIMOVF);
 1275              		.loc 1 805 0
 1276 0086 1A4B     		ldr	r3, .L80
 1277 0088 0422     		movs	r2, #4
 1278 008a DA60     		str	r2, [r3, #12]
 1279              	.L74:
 806:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 807:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 808:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check CRS Error flag  */
 809:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_SYNCERR))
 1280              		.loc 1 809 0
 1281 008c 184B     		ldr	r3, .L80
 1282 008e 9A68     		ldr	r2, [r3, #8]
 1283 0090 8023     		movs	r3, #128
ARM GAS  /tmp/cc0ftZwI.s 			page 39


 1284 0092 5B00     		lsls	r3, r3, #1
 1285 0094 1A40     		ands	r2, r3
 1286 0096 8023     		movs	r3, #128
 1287 0098 5B00     		lsls	r3, r3, #1
 1288 009a 9A42     		cmp	r2, r3
 1289 009c 06D1     		bne	.L75
 810:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 811:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* CRS SYNC Error */
 812:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       crsstatus |= RCC_CRS_SYNCERR;
 1290              		.loc 1 812 0
 1291 009e FB68     		ldr	r3, [r7, #12]
 1292 00a0 0822     		movs	r2, #8
 1293 00a2 1343     		orrs	r3, r2
 1294 00a4 FB60     		str	r3, [r7, #12]
 813:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 814:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Clear CRS Error bit */
 815:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_SYNCERR);
 1295              		.loc 1 815 0
 1296 00a6 124B     		ldr	r3, .L80
 1297 00a8 0422     		movs	r2, #4
 1298 00aa DA60     		str	r2, [r3, #12]
 1299              	.L75:
 816:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 817:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 818:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check CRS SYNC Missed flag  */
 819:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_SYNCMISS))
 1300              		.loc 1 819 0
 1301 00ac 104B     		ldr	r3, .L80
 1302 00ae 9A68     		ldr	r2, [r3, #8]
 1303 00b0 8023     		movs	r3, #128
 1304 00b2 9B00     		lsls	r3, r3, #2
 1305 00b4 1A40     		ands	r2, r3
 1306 00b6 8023     		movs	r3, #128
 1307 00b8 9B00     		lsls	r3, r3, #2
 1308 00ba 9A42     		cmp	r2, r3
 1309 00bc 06D1     		bne	.L76
 820:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 821:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* CRS SYNC Missed */
 822:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       crsstatus |= RCC_CRS_SYNCMISS;
 1310              		.loc 1 822 0
 1311 00be FB68     		ldr	r3, [r7, #12]
 1312 00c0 1022     		movs	r2, #16
 1313 00c2 1343     		orrs	r3, r2
 1314 00c4 FB60     		str	r3, [r7, #12]
 823:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 824:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Clear CRS SYNC Missed bit */
 825:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_SYNCMISS);
 1315              		.loc 1 825 0
 1316 00c6 0A4B     		ldr	r3, .L80
 1317 00c8 0422     		movs	r2, #4
 1318 00ca DA60     		str	r2, [r3, #12]
 1319              	.L76:
 826:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 827:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 828:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Check CRS Expected SYNC flag  */
 829:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(__HAL_RCC_CRS_GET_FLAG(RCC_CRS_FLAG_ESYNC))
 1320              		.loc 1 829 0
ARM GAS  /tmp/cc0ftZwI.s 			page 40


 1321 00cc 084B     		ldr	r3, .L80
 1322 00ce 9B68     		ldr	r3, [r3, #8]
 1323 00d0 0822     		movs	r2, #8
 1324 00d2 1340     		ands	r3, r2
 1325 00d4 082B     		cmp	r3, #8
 1326 00d6 02D1     		bne	.L77
 830:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 831:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* frequency error counter reached a zero value */
 832:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       __HAL_RCC_CRS_CLEAR_FLAG(RCC_CRS_FLAG_ESYNC);
 1327              		.loc 1 832 0 discriminator 2
 1328 00d8 054B     		ldr	r3, .L80
 1329 00da 0822     		movs	r2, #8
 1330 00dc DA60     		str	r2, [r3, #12]
 1331              	.L77:
 833:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 834:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   } while(RCC_CRS_NONE == crsstatus);
 1332              		.loc 1 834 0
 1333 00de FB68     		ldr	r3, [r7, #12]
 1334 00e0 002B     		cmp	r3, #0
 1335 00e2 99D0     		beq	.L78
 835:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 836:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   return crsstatus;
 1336              		.loc 1 836 0
 1337 00e4 FB68     		ldr	r3, [r7, #12]
 837:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 1338              		.loc 1 837 0
 1339 00e6 1800     		movs	r0, r3
 1340 00e8 BD46     		mov	sp, r7
 1341 00ea 04B0     		add	sp, sp, #16
 1342              		@ sp needed
 1343 00ec 80BD     		pop	{r7, pc}
 1344              	.L81:
 1345 00ee C046     		.align	2
 1346              	.L80:
 1347 00f0 006C0040 		.word	1073769472
 1348              		.cfi_endproc
 1349              	.LFE43:
 1351              		.section	.text.HAL_RCCEx_CRS_IRQHandler,"ax",%progbits
 1352              		.align	1
 1353              		.global	HAL_RCCEx_CRS_IRQHandler
 1354              		.syntax unified
 1355              		.code	16
 1356              		.thumb_func
 1357              		.fpu softvfp
 1359              	HAL_RCCEx_CRS_IRQHandler:
 1360              	.LFB44:
 838:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 839:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 840:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief Handle the Clock Recovery System interrupt request.
 841:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval None
 842:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 843:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** void HAL_RCCEx_CRS_IRQHandler(void)
 844:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 1361              		.loc 1 844 0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 16
 1364              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc0ftZwI.s 			page 41


 1365 0000 80B5     		push	{r7, lr}
 1366              		.cfi_def_cfa_offset 8
 1367              		.cfi_offset 7, -8
 1368              		.cfi_offset 14, -4
 1369 0002 84B0     		sub	sp, sp, #16
 1370              		.cfi_def_cfa_offset 24
 1371 0004 00AF     		add	r7, sp, #0
 1372              		.cfi_def_cfa_register 7
 845:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t crserror = RCC_CRS_NONE;
 1373              		.loc 1 845 0
 1374 0006 0023     		movs	r3, #0
 1375 0008 FB60     		str	r3, [r7, #12]
 846:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Get current IT flags and IT sources values */
 847:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t itflags = READ_REG(CRS->ISR);
 1376              		.loc 1 847 0
 1377 000a 2F4B     		ldr	r3, .L91
 1378 000c 9B68     		ldr	r3, [r3, #8]
 1379 000e BB60     		str	r3, [r7, #8]
 848:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   uint32_t itsources = READ_REG(CRS->CR);
 1380              		.loc 1 848 0
 1381 0010 2D4B     		ldr	r3, .L91
 1382 0012 1B68     		ldr	r3, [r3]
 1383 0014 7B60     		str	r3, [r7, #4]
 849:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 850:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Check CRS SYNCOK flag  */
 851:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   if(((itflags & RCC_CRS_FLAG_SYNCOK) != RESET) && ((itsources & RCC_CRS_IT_SYNCOK) != RESET))
 1384              		.loc 1 851 0
 1385 0016 BB68     		ldr	r3, [r7, #8]
 1386 0018 0122     		movs	r2, #1
 1387 001a 1340     		ands	r3, r2
 1388 001c 09D0     		beq	.L83
 1389              		.loc 1 851 0 is_stmt 0 discriminator 1
 1390 001e 7B68     		ldr	r3, [r7, #4]
 1391 0020 0122     		movs	r2, #1
 1392 0022 1340     		ands	r3, r2
 1393 0024 05D0     		beq	.L83
 852:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 853:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Clear CRS SYNC event OK flag */
 854:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     WRITE_REG(CRS->ICR, CRS_ICR_SYNCOKC);
 1394              		.loc 1 854 0 is_stmt 1
 1395 0026 284B     		ldr	r3, .L91
 1396 0028 0122     		movs	r2, #1
 1397 002a DA60     		str	r2, [r3, #12]
 855:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 856:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* user callback */
 857:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     HAL_RCCEx_CRS_SyncOkCallback();
 1398              		.loc 1 857 0
 1399 002c FFF7FEFF 		bl	HAL_RCCEx_CRS_SyncOkCallback
 1400 0030 46E0     		b	.L84
 1401              	.L83:
 858:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 859:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Check CRS SYNCWARN flag  */
 860:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   else if(((itflags & RCC_CRS_FLAG_SYNCWARN) != RESET) && ((itsources & RCC_CRS_IT_SYNCWARN) != RES
 1402              		.loc 1 860 0
 1403 0032 BB68     		ldr	r3, [r7, #8]
 1404 0034 0222     		movs	r2, #2
 1405 0036 1340     		ands	r3, r2
ARM GAS  /tmp/cc0ftZwI.s 			page 42


 1406 0038 09D0     		beq	.L85
 1407              		.loc 1 860 0 is_stmt 0 discriminator 1
 1408 003a 7B68     		ldr	r3, [r7, #4]
 1409 003c 0222     		movs	r2, #2
 1410 003e 1340     		ands	r3, r2
 1411 0040 05D0     		beq	.L85
 861:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 862:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* Clear CRS SYNCWARN flag */
 863:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     WRITE_REG(CRS->ICR, CRS_ICR_SYNCWARNC);
 1412              		.loc 1 863 0 is_stmt 1
 1413 0042 214B     		ldr	r3, .L91
 1414 0044 0222     		movs	r2, #2
 1415 0046 DA60     		str	r2, [r3, #12]
 864:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 865:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* user callback */
 866:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     HAL_RCCEx_CRS_SyncWarnCallback();
 1416              		.loc 1 866 0
 1417 0048 FFF7FEFF 		bl	HAL_RCCEx_CRS_SyncWarnCallback
 1418 004c 38E0     		b	.L84
 1419              	.L85:
 867:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 868:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Check CRS Expected SYNC flag  */
 869:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   else if(((itflags & RCC_CRS_FLAG_ESYNC) != RESET) && ((itsources & RCC_CRS_IT_ESYNC) != RESET))
 1420              		.loc 1 869 0
 1421 004e BB68     		ldr	r3, [r7, #8]
 1422 0050 0822     		movs	r2, #8
 1423 0052 1340     		ands	r3, r2
 1424 0054 09D0     		beq	.L86
 1425              		.loc 1 869 0 is_stmt 0 discriminator 1
 1426 0056 7B68     		ldr	r3, [r7, #4]
 1427 0058 0822     		movs	r2, #8
 1428 005a 1340     		ands	r3, r2
 1429 005c 05D0     		beq	.L86
 870:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 871:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* frequency error counter reached a zero value */
 872:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     WRITE_REG(CRS->ICR, CRS_ICR_ESYNCC);
 1430              		.loc 1 872 0 is_stmt 1
 1431 005e 1A4B     		ldr	r3, .L91
 1432 0060 0822     		movs	r2, #8
 1433 0062 DA60     		str	r2, [r3, #12]
 873:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 874:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     /* user callback */
 875:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     HAL_RCCEx_CRS_ExpectedSyncCallback();
 1434              		.loc 1 875 0
 1435 0064 FFF7FEFF 		bl	HAL_RCCEx_CRS_ExpectedSyncCallback
 1436 0068 2AE0     		b	.L84
 1437              	.L86:
 876:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 877:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Check CRS Error flags  */
 878:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   else
 879:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   {
 880:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     if(((itflags & RCC_CRS_FLAG_ERR) != RESET) && ((itsources & RCC_CRS_IT_ERR) != RESET))
 1438              		.loc 1 880 0
 1439 006a BB68     		ldr	r3, [r7, #8]
 1440 006c 0422     		movs	r2, #4
 1441 006e 1340     		ands	r3, r2
 1442 0070 26D0     		beq	.L90
ARM GAS  /tmp/cc0ftZwI.s 			page 43


 1443              		.loc 1 880 0 is_stmt 0 discriminator 1
 1444 0072 7B68     		ldr	r3, [r7, #4]
 1445 0074 0422     		movs	r2, #4
 1446 0076 1340     		ands	r3, r2
 1447 0078 22D0     		beq	.L90
 881:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     {
 882:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if((itflags & RCC_CRS_FLAG_SYNCERR) != RESET)
 1448              		.loc 1 882 0 is_stmt 1
 1449 007a BA68     		ldr	r2, [r7, #8]
 1450 007c 8023     		movs	r3, #128
 1451 007e 5B00     		lsls	r3, r3, #1
 1452 0080 1340     		ands	r3, r2
 1453 0082 03D0     		beq	.L87
 883:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 884:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         crserror |= RCC_CRS_SYNCERR;
 1454              		.loc 1 884 0
 1455 0084 FB68     		ldr	r3, [r7, #12]
 1456 0086 0822     		movs	r2, #8
 1457 0088 1343     		orrs	r3, r2
 1458 008a FB60     		str	r3, [r7, #12]
 1459              	.L87:
 885:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 886:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if((itflags & RCC_CRS_FLAG_SYNCMISS) != RESET)
 1460              		.loc 1 886 0
 1461 008c BA68     		ldr	r2, [r7, #8]
 1462 008e 8023     		movs	r3, #128
 1463 0090 9B00     		lsls	r3, r3, #2
 1464 0092 1340     		ands	r3, r2
 1465 0094 03D0     		beq	.L88
 887:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 888:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         crserror |= RCC_CRS_SYNCMISS;
 1466              		.loc 1 888 0
 1467 0096 FB68     		ldr	r3, [r7, #12]
 1468 0098 1022     		movs	r2, #16
 1469 009a 1343     		orrs	r3, r2
 1470 009c FB60     		str	r3, [r7, #12]
 1471              	.L88:
 889:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 890:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       if((itflags & RCC_CRS_FLAG_TRIMOVF) != RESET)
 1472              		.loc 1 890 0
 1473 009e BA68     		ldr	r2, [r7, #8]
 1474 00a0 8023     		movs	r3, #128
 1475 00a2 DB00     		lsls	r3, r3, #3
 1476 00a4 1340     		ands	r3, r2
 1477 00a6 03D0     		beq	.L89
 891:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       {
 892:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****         crserror |= RCC_CRS_TRIMOVF;
 1478              		.loc 1 892 0
 1479 00a8 FB68     		ldr	r3, [r7, #12]
 1480 00aa 2022     		movs	r2, #32
 1481 00ac 1343     		orrs	r3, r2
 1482 00ae FB60     		str	r3, [r7, #12]
 1483              	.L89:
 893:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       }
 894:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 895:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* Clear CRS Error flags */
 896:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       WRITE_REG(CRS->ICR, CRS_ICR_ERRC);
ARM GAS  /tmp/cc0ftZwI.s 			page 44


 1484              		.loc 1 896 0
 1485 00b0 054B     		ldr	r3, .L91
 1486 00b2 0422     		movs	r2, #4
 1487 00b4 DA60     		str	r2, [r3, #12]
 897:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     
 898:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       /* user error callback */
 899:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****       HAL_RCCEx_CRS_ErrorCallback(crserror);
 1488              		.loc 1 899 0
 1489 00b6 FB68     		ldr	r3, [r7, #12]
 1490 00b8 1800     		movs	r0, r3
 1491 00ba FFF7FEFF 		bl	HAL_RCCEx_CRS_ErrorCallback
 900:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****     }
 901:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   }
 902:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 1492              		.loc 1 902 0
 1493 00be FFE7     		b	.L90
 1494              	.L84:
 1495              	.L90:
 1496 00c0 C046     		nop
 1497 00c2 BD46     		mov	sp, r7
 1498 00c4 04B0     		add	sp, sp, #16
 1499              		@ sp needed
 1500 00c6 80BD     		pop	{r7, pc}
 1501              	.L92:
 1502              		.align	2
 1503              	.L91:
 1504 00c8 006C0040 		.word	1073769472
 1505              		.cfi_endproc
 1506              	.LFE44:
 1508              		.section	.text.HAL_RCCEx_CRS_SyncOkCallback,"ax",%progbits
 1509              		.align	1
 1510              		.weak	HAL_RCCEx_CRS_SyncOkCallback
 1511              		.syntax unified
 1512              		.code	16
 1513              		.thumb_func
 1514              		.fpu softvfp
 1516              	HAL_RCCEx_CRS_SyncOkCallback:
 1517              	.LFB45:
 903:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 904:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 905:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief  RCCEx Clock Recovery System SYNCOK interrupt callback.
 906:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval none
 907:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 908:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** __weak void HAL_RCCEx_CRS_SyncOkCallback(void)
 909:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 1518              		.loc 1 909 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 1, uses_anonymous_args = 0
 1522 0000 80B5     		push	{r7, lr}
 1523              		.cfi_def_cfa_offset 8
 1524              		.cfi_offset 7, -8
 1525              		.cfi_offset 14, -4
 1526 0002 00AF     		add	r7, sp, #0
 1527              		.cfi_def_cfa_register 7
 910:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 911:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****             the @ref HAL_RCCEx_CRS_SyncOkCallback should be implemented in the user file
ARM GAS  /tmp/cc0ftZwI.s 			page 45


 912:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****    */
 913:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 1528              		.loc 1 913 0
 1529 0004 C046     		nop
 1530 0006 BD46     		mov	sp, r7
 1531              		@ sp needed
 1532 0008 80BD     		pop	{r7, pc}
 1533              		.cfi_endproc
 1534              	.LFE45:
 1536              		.section	.text.HAL_RCCEx_CRS_SyncWarnCallback,"ax",%progbits
 1537              		.align	1
 1538              		.weak	HAL_RCCEx_CRS_SyncWarnCallback
 1539              		.syntax unified
 1540              		.code	16
 1541              		.thumb_func
 1542              		.fpu softvfp
 1544              	HAL_RCCEx_CRS_SyncWarnCallback:
 1545              	.LFB46:
 914:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 915:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 916:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief  RCCEx Clock Recovery System SYNCWARN interrupt callback.
 917:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval none
 918:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 919:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** __weak void HAL_RCCEx_CRS_SyncWarnCallback(void)
 920:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 1546              		.loc 1 920 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 0
 1549              		@ frame_needed = 1, uses_anonymous_args = 0
 1550 0000 80B5     		push	{r7, lr}
 1551              		.cfi_def_cfa_offset 8
 1552              		.cfi_offset 7, -8
 1553              		.cfi_offset 14, -4
 1554 0002 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
 921:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 922:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****             the @ref HAL_RCCEx_CRS_SyncWarnCallback should be implemented in the user file
 923:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****    */
 924:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 1556              		.loc 1 924 0
 1557 0004 C046     		nop
 1558 0006 BD46     		mov	sp, r7
 1559              		@ sp needed
 1560 0008 80BD     		pop	{r7, pc}
 1561              		.cfi_endproc
 1562              	.LFE46:
 1564              		.section	.text.HAL_RCCEx_CRS_ExpectedSyncCallback,"ax",%progbits
 1565              		.align	1
 1566              		.weak	HAL_RCCEx_CRS_ExpectedSyncCallback
 1567              		.syntax unified
 1568              		.code	16
 1569              		.thumb_func
 1570              		.fpu softvfp
 1572              	HAL_RCCEx_CRS_ExpectedSyncCallback:
 1573              	.LFB47:
 925:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 926:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
ARM GAS  /tmp/cc0ftZwI.s 			page 46


 927:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief  RCCEx Clock Recovery System Expected SYNC interrupt callback.
 928:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval none
 929:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 930:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** __weak void HAL_RCCEx_CRS_ExpectedSyncCallback(void)
 931:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 1574              		.loc 1 931 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 1, uses_anonymous_args = 0
 1578 0000 80B5     		push	{r7, lr}
 1579              		.cfi_def_cfa_offset 8
 1580              		.cfi_offset 7, -8
 1581              		.cfi_offset 14, -4
 1582 0002 00AF     		add	r7, sp, #0
 1583              		.cfi_def_cfa_register 7
 932:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 933:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****             the @ref HAL_RCCEx_CRS_ExpectedSyncCallback should be implemented in the user file
 934:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****    */
 935:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 1584              		.loc 1 935 0
 1585 0004 C046     		nop
 1586 0006 BD46     		mov	sp, r7
 1587              		@ sp needed
 1588 0008 80BD     		pop	{r7, pc}
 1589              		.cfi_endproc
 1590              	.LFE47:
 1592              		.section	.text.HAL_RCCEx_CRS_ErrorCallback,"ax",%progbits
 1593              		.align	1
 1594              		.weak	HAL_RCCEx_CRS_ErrorCallback
 1595              		.syntax unified
 1596              		.code	16
 1597              		.thumb_func
 1598              		.fpu softvfp
 1600              	HAL_RCCEx_CRS_ErrorCallback:
 1601              	.LFB48:
 936:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 937:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** /**
 938:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @brief  RCCEx Clock Recovery System Error interrupt callback.
 939:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @param  Error Combination of Error status. 
 940:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *         This parameter can be a combination of the following values:
 941:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *           @arg @ref RCC_CRS_SYNCERR
 942:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *           @arg @ref RCC_CRS_SYNCMISS
 943:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   *           @arg @ref RCC_CRS_TRIMOVF
 944:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   * @retval none
 945:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   */
 946:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** __weak void HAL_RCCEx_CRS_ErrorCallback(uint32_t Error)
 947:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** {
 1602              		.loc 1 947 0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 8
 1605              		@ frame_needed = 1, uses_anonymous_args = 0
 1606 0000 80B5     		push	{r7, lr}
 1607              		.cfi_def_cfa_offset 8
 1608              		.cfi_offset 7, -8
 1609              		.cfi_offset 14, -4
 1610 0002 82B0     		sub	sp, sp, #8
 1611              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc0ftZwI.s 			page 47


 1612 0004 00AF     		add	r7, sp, #0
 1613              		.cfi_def_cfa_register 7
 1614 0006 7860     		str	r0, [r7, #4]
 948:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 949:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   UNUSED(Error);
 950:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** 
 951:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 952:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****             the @ref HAL_RCCEx_CRS_ErrorCallback should be implemented in the user file
 953:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c ****    */
 954:cube/Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc_ex.c **** }
 1615              		.loc 1 954 0
 1616 0008 C046     		nop
 1617 000a BD46     		mov	sp, r7
 1618 000c 02B0     		add	sp, sp, #8
 1619              		@ sp needed
 1620 000e 80BD     		pop	{r7, pc}
 1621              		.cfi_endproc
 1622              	.LFE48:
 1624              		.text
 1625              	.Letext0:
 1626              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 1627              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 1628              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1629              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1630              		.file 6 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1631              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 1632              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 1633              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 1634              		.file 10 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/re
 1635              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1636              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
ARM GAS  /tmp/cc0ftZwI.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_rcc_ex.c
     /tmp/cc0ftZwI.s:16     .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 $t
     /tmp/cc0ftZwI.s:23     .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 HAL_RCCEx_PeriphCLKConfig
     /tmp/cc0ftZwI.s:337    .text.HAL_RCCEx_PeriphCLKConfig:00000000000001e4 $d
     /tmp/cc0ftZwI.s:348    .text.HAL_RCCEx_GetPeriphCLKConfig:0000000000000000 $t
     /tmp/cc0ftZwI.s:355    .text.HAL_RCCEx_GetPeriphCLKConfig:0000000000000000 HAL_RCCEx_GetPeriphCLKConfig
     /tmp/cc0ftZwI.s:450    .text.HAL_RCCEx_GetPeriphCLKConfig:000000000000008c $d
     /tmp/cc0ftZwI.s:457    .text.HAL_RCCEx_GetPeriphCLKFreq:0000000000000000 $t
     /tmp/cc0ftZwI.s:464    .text.HAL_RCCEx_GetPeriphCLKFreq:0000000000000000 HAL_RCCEx_GetPeriphCLKFreq
     /tmp/cc0ftZwI.s:954    .text.HAL_RCCEx_GetPeriphCLKFreq:00000000000002b8 $d
     /tmp/cc0ftZwI.s:963    .text.HAL_RCCEx_CRSConfig:0000000000000000 $t
     /tmp/cc0ftZwI.s:970    .text.HAL_RCCEx_CRSConfig:0000000000000000 HAL_RCCEx_CRSConfig
     /tmp/cc0ftZwI.s:1058   .text.HAL_RCCEx_CRSConfig:0000000000000080 $d
     /tmp/cc0ftZwI.s:1066   .text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate:0000000000000000 $t
     /tmp/cc0ftZwI.s:1073   .text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate:0000000000000000 HAL_RCCEx_CRSSoftwareSynchronizationGenerate
     /tmp/cc0ftZwI.s:1100   .text.HAL_RCCEx_CRSSoftwareSynchronizationGenerate:0000000000000018 $d
     /tmp/cc0ftZwI.s:1105   .text.HAL_RCCEx_CRSGetSynchronizationInfo:0000000000000000 $t
     /tmp/cc0ftZwI.s:1112   .text.HAL_RCCEx_CRSGetSynchronizationInfo:0000000000000000 HAL_RCCEx_CRSGetSynchronizationInfo
     /tmp/cc0ftZwI.s:1167   .text.HAL_RCCEx_CRSGetSynchronizationInfo:0000000000000048 $d
     /tmp/cc0ftZwI.s:1172   .text.HAL_RCCEx_CRSWaitSynchronization:0000000000000000 $t
     /tmp/cc0ftZwI.s:1179   .text.HAL_RCCEx_CRSWaitSynchronization:0000000000000000 HAL_RCCEx_CRSWaitSynchronization
     /tmp/cc0ftZwI.s:1347   .text.HAL_RCCEx_CRSWaitSynchronization:00000000000000f0 $d
     /tmp/cc0ftZwI.s:1352   .text.HAL_RCCEx_CRS_IRQHandler:0000000000000000 $t
     /tmp/cc0ftZwI.s:1359   .text.HAL_RCCEx_CRS_IRQHandler:0000000000000000 HAL_RCCEx_CRS_IRQHandler
     /tmp/cc0ftZwI.s:1516   .text.HAL_RCCEx_CRS_SyncOkCallback:0000000000000000 HAL_RCCEx_CRS_SyncOkCallback
     /tmp/cc0ftZwI.s:1544   .text.HAL_RCCEx_CRS_SyncWarnCallback:0000000000000000 HAL_RCCEx_CRS_SyncWarnCallback
     /tmp/cc0ftZwI.s:1572   .text.HAL_RCCEx_CRS_ExpectedSyncCallback:0000000000000000 HAL_RCCEx_CRS_ExpectedSyncCallback
     /tmp/cc0ftZwI.s:1600   .text.HAL_RCCEx_CRS_ErrorCallback:0000000000000000 HAL_RCCEx_CRS_ErrorCallback
     /tmp/cc0ftZwI.s:1504   .text.HAL_RCCEx_CRS_IRQHandler:00000000000000c8 $d
     /tmp/cc0ftZwI.s:1509   .text.HAL_RCCEx_CRS_SyncOkCallback:0000000000000000 $t
     /tmp/cc0ftZwI.s:1537   .text.HAL_RCCEx_CRS_SyncWarnCallback:0000000000000000 $t
     /tmp/cc0ftZwI.s:1565   .text.HAL_RCCEx_CRS_ExpectedSyncCallback:0000000000000000 $t
     /tmp/cc0ftZwI.s:1593   .text.HAL_RCCEx_CRS_ErrorCallback:0000000000000000 $t
                           .group:0000000000000000 wm4.0.b7c3d577b02d87ac381ee43eef398462
                           .group:0000000000000000 wm4.main.h.42.3939338cba6ab0a8b761d08be8206d51
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.b0c07d2233f75e3b04f03d95093d88ca
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
ARM GAS  /tmp/cc0ftZwI.s 			page 49


                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart.h.38.e5eada3cdf37ca88de33bd21ddd21a5e
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart_ex.h.38.9430c2ca5ec832677dbe7308c46115fd
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

UNDEFINED SYMBOLS
HAL_GetTick
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
