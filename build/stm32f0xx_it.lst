ARM GAS  /tmp/ccwQyyta.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB37:
  25              		.file 1 "cube/Src/stm32f0xx_it.c"
   1:cube/Src/stm32f0xx_it.c **** /**
   2:cube/Src/stm32f0xx_it.c ****   ******************************************************************************
   3:cube/Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   4:cube/Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   5:cube/Src/stm32f0xx_it.c ****   ******************************************************************************
   6:cube/Src/stm32f0xx_it.c ****   *
   7:cube/Src/stm32f0xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:cube/Src/stm32f0xx_it.c ****   *
   9:cube/Src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:cube/Src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  11:cube/Src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:cube/Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:cube/Src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:cube/Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:cube/Src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  16:cube/Src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:cube/Src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:cube/Src/stm32f0xx_it.c ****   *      without specific prior written permission.
  19:cube/Src/stm32f0xx_it.c ****   *
  20:cube/Src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:cube/Src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:cube/Src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:cube/Src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:cube/Src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:cube/Src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:cube/Src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:cube/Src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:cube/Src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:cube/Src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:cube/Src/stm32f0xx_it.c ****   *
  31:cube/Src/stm32f0xx_it.c ****   ******************************************************************************
  32:cube/Src/stm32f0xx_it.c ****   */
  33:cube/Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccwQyyta.s 			page 2


  34:cube/Src/stm32f0xx_it.c **** #include "stm32f0xx_hal.h"
  35:cube/Src/stm32f0xx_it.c **** #include "stm32f0xx.h"
  36:cube/Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  37:cube/Src/stm32f0xx_it.c **** 
  38:cube/Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  39:cube/Src/stm32f0xx_it.c **** 
  40:cube/Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  41:cube/Src/stm32f0xx_it.c **** 
  42:cube/Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  43:cube/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_adc;
  44:cube/Src/stm32f0xx_it.c **** extern ADC_HandleTypeDef hadc;
  45:cube/Src/stm32f0xx_it.c **** 
  46:cube/Src/stm32f0xx_it.c **** /******************************************************************************/
  47:cube/Src/stm32f0xx_it.c **** /*            Cortex-M0 Processor Interruption and Exception Handlers         */ 
  48:cube/Src/stm32f0xx_it.c **** /******************************************************************************/
  49:cube/Src/stm32f0xx_it.c **** 
  50:cube/Src/stm32f0xx_it.c **** /**
  51:cube/Src/stm32f0xx_it.c **** * @brief This function handles Non maskable interrupt.
  52:cube/Src/stm32f0xx_it.c **** */
  53:cube/Src/stm32f0xx_it.c **** void NMI_Handler(void)
  54:cube/Src/stm32f0xx_it.c **** {
  26              		.loc 1 54 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  55:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  56:cube/Src/stm32f0xx_it.c **** 
  57:cube/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  58:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  59:cube/Src/stm32f0xx_it.c **** 
  60:cube/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  61:cube/Src/stm32f0xx_it.c **** }
  36              		.loc 1 61 0
  37 0004 C046     		nop
  38 0006 BD46     		mov	sp, r7
  39              		@ sp needed
  40 0008 80BD     		pop	{r7, pc}
  41              		.cfi_endproc
  42              	.LFE37:
  44              		.section	.text.HardFault_Handler,"ax",%progbits
  45              		.align	1
  46              		.global	HardFault_Handler
  47              		.syntax unified
  48              		.code	16
  49              		.thumb_func
  50              		.fpu softvfp
  52              	HardFault_Handler:
  53              	.LFB38:
  62:cube/Src/stm32f0xx_it.c **** 
  63:cube/Src/stm32f0xx_it.c **** /**
  64:cube/Src/stm32f0xx_it.c **** * @brief This function handles Hard fault interrupt.
ARM GAS  /tmp/ccwQyyta.s 			page 3


  65:cube/Src/stm32f0xx_it.c **** */
  66:cube/Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  67:cube/Src/stm32f0xx_it.c **** {
  54              		.loc 1 67 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 80B5     		push	{r7, lr}
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  64              	.L3:
  68:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  69:cube/Src/stm32f0xx_it.c **** 
  70:cube/Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  71:cube/Src/stm32f0xx_it.c ****   while (1)
  65              		.loc 1 71 0 discriminator 1
  66 0004 FEE7     		b	.L3
  67              		.cfi_endproc
  68              	.LFE38:
  70              		.section	.text.SVC_Handler,"ax",%progbits
  71              		.align	1
  72              		.global	SVC_Handler
  73              		.syntax unified
  74              		.code	16
  75              		.thumb_func
  76              		.fpu softvfp
  78              	SVC_Handler:
  79              	.LFB39:
  72:cube/Src/stm32f0xx_it.c ****   {
  73:cube/Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  74:cube/Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  75:cube/Src/stm32f0xx_it.c ****   }
  76:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  77:cube/Src/stm32f0xx_it.c **** 
  78:cube/Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  79:cube/Src/stm32f0xx_it.c **** }
  80:cube/Src/stm32f0xx_it.c **** 
  81:cube/Src/stm32f0xx_it.c **** /**
  82:cube/Src/stm32f0xx_it.c **** * @brief This function handles System service call via SWI instruction.
  83:cube/Src/stm32f0xx_it.c **** */
  84:cube/Src/stm32f0xx_it.c **** void SVC_Handler(void)
  85:cube/Src/stm32f0xx_it.c **** {
  80              		.loc 1 85 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
  86:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
  87:cube/Src/stm32f0xx_it.c **** 
ARM GAS  /tmp/ccwQyyta.s 			page 4


  88:cube/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
  89:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
  90:cube/Src/stm32f0xx_it.c **** 
  91:cube/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
  92:cube/Src/stm32f0xx_it.c **** }
  90              		.loc 1 92 0
  91 0004 C046     		nop
  92 0006 BD46     		mov	sp, r7
  93              		@ sp needed
  94 0008 80BD     		pop	{r7, pc}
  95              		.cfi_endproc
  96              	.LFE39:
  98              		.section	.text.PendSV_Handler,"ax",%progbits
  99              		.align	1
 100              		.global	PendSV_Handler
 101              		.syntax unified
 102              		.code	16
 103              		.thumb_func
 104              		.fpu softvfp
 106              	PendSV_Handler:
 107              	.LFB40:
  93:cube/Src/stm32f0xx_it.c **** 
  94:cube/Src/stm32f0xx_it.c **** /**
  95:cube/Src/stm32f0xx_it.c **** * @brief This function handles Pendable request for system service.
  96:cube/Src/stm32f0xx_it.c **** */
  97:cube/Src/stm32f0xx_it.c **** void PendSV_Handler(void)
  98:cube/Src/stm32f0xx_it.c **** {
 108              		.loc 1 98 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112 0000 80B5     		push	{r7, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 00AF     		add	r7, sp, #0
 117              		.cfi_def_cfa_register 7
  99:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 100:cube/Src/stm32f0xx_it.c **** 
 101:cube/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 102:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 103:cube/Src/stm32f0xx_it.c **** 
 104:cube/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 105:cube/Src/stm32f0xx_it.c **** }
 118              		.loc 1 105 0
 119 0004 C046     		nop
 120 0006 BD46     		mov	sp, r7
 121              		@ sp needed
 122 0008 80BD     		pop	{r7, pc}
 123              		.cfi_endproc
 124              	.LFE40:
 126              		.section	.text.SysTick_Handler,"ax",%progbits
 127              		.align	1
 128              		.global	SysTick_Handler
 129              		.syntax unified
 130              		.code	16
 131              		.thumb_func
ARM GAS  /tmp/ccwQyyta.s 			page 5


 132              		.fpu softvfp
 134              	SysTick_Handler:
 135              	.LFB41:
 106:cube/Src/stm32f0xx_it.c **** 
 107:cube/Src/stm32f0xx_it.c **** /**
 108:cube/Src/stm32f0xx_it.c **** * @brief This function handles System tick timer.
 109:cube/Src/stm32f0xx_it.c **** */
 110:cube/Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 111:cube/Src/stm32f0xx_it.c **** {
 136              		.loc 1 111 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 00AF     		add	r7, sp, #0
 145              		.cfi_def_cfa_register 7
 112:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 113:cube/Src/stm32f0xx_it.c **** 
 114:cube/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 115:cube/Src/stm32f0xx_it.c ****   HAL_IncTick();
 146              		.loc 1 115 0
 147 0004 FFF7FEFF 		bl	HAL_IncTick
 116:cube/Src/stm32f0xx_it.c ****   HAL_SYSTICK_IRQHandler();
 148              		.loc 1 116 0
 149 0008 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 117:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 118:cube/Src/stm32f0xx_it.c **** 
 119:cube/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 120:cube/Src/stm32f0xx_it.c **** }
 150              		.loc 1 120 0
 151 000c C046     		nop
 152 000e BD46     		mov	sp, r7
 153              		@ sp needed
 154 0010 80BD     		pop	{r7, pc}
 155              		.cfi_endproc
 156              	.LFE41:
 158              		.section	.text.EXTI4_15_IRQHandler,"ax",%progbits
 159              		.align	1
 160              		.global	EXTI4_15_IRQHandler
 161              		.syntax unified
 162              		.code	16
 163              		.thumb_func
 164              		.fpu softvfp
 166              	EXTI4_15_IRQHandler:
 167              	.LFB42:
 121:cube/Src/stm32f0xx_it.c **** 
 122:cube/Src/stm32f0xx_it.c **** /******************************************************************************/
 123:cube/Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 124:cube/Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 125:cube/Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 126:cube/Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 127:cube/Src/stm32f0xx_it.c **** /******************************************************************************/
 128:cube/Src/stm32f0xx_it.c **** 
 129:cube/Src/stm32f0xx_it.c **** /**
ARM GAS  /tmp/ccwQyyta.s 			page 6


 130:cube/Src/stm32f0xx_it.c **** * @brief This function handles EXTI line 4 to 15 interrupts.
 131:cube/Src/stm32f0xx_it.c **** */
 132:cube/Src/stm32f0xx_it.c **** void EXTI4_15_IRQHandler(void)
 133:cube/Src/stm32f0xx_it.c **** {
 168              		.loc 1 133 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172 0000 80B5     		push	{r7, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 7, -8
 175              		.cfi_offset 14, -4
 176 0002 00AF     		add	r7, sp, #0
 177              		.cfi_def_cfa_register 7
 134:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 0 */
 135:cube/Src/stm32f0xx_it.c **** 
 136:cube/Src/stm32f0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 0 */
 137:cube/Src/stm32f0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 178              		.loc 1 137 0
 179 0004 8023     		movs	r3, #128
 180 0006 9B01     		lsls	r3, r3, #6
 181 0008 1800     		movs	r0, r3
 182 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 138:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 1 */
 139:cube/Src/stm32f0xx_it.c **** 
 140:cube/Src/stm32f0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 1 */
 141:cube/Src/stm32f0xx_it.c **** }
 183              		.loc 1 141 0
 184 000e C046     		nop
 185 0010 BD46     		mov	sp, r7
 186              		@ sp needed
 187 0012 80BD     		pop	{r7, pc}
 188              		.cfi_endproc
 189              	.LFE42:
 191              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 192              		.align	1
 193              		.global	DMA1_Channel1_IRQHandler
 194              		.syntax unified
 195              		.code	16
 196              		.thumb_func
 197              		.fpu softvfp
 199              	DMA1_Channel1_IRQHandler:
 200              	.LFB43:
 142:cube/Src/stm32f0xx_it.c **** 
 143:cube/Src/stm32f0xx_it.c **** /**
 144:cube/Src/stm32f0xx_it.c **** * @brief This function handles DMA1 channel 1 global interrupt.
 145:cube/Src/stm32f0xx_it.c **** */
 146:cube/Src/stm32f0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 147:cube/Src/stm32f0xx_it.c **** {
 201              		.loc 1 147 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205 0000 80B5     		push	{r7, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
ARM GAS  /tmp/ccwQyyta.s 			page 7


 209 0002 00AF     		add	r7, sp, #0
 210              		.cfi_def_cfa_register 7
 148:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 149:cube/Src/stm32f0xx_it.c **** 
 150:cube/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 151:cube/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc);
 211              		.loc 1 151 0
 212 0004 034B     		ldr	r3, .L9
 213 0006 1800     		movs	r0, r3
 214 0008 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 152:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 153:cube/Src/stm32f0xx_it.c **** 
 154:cube/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 155:cube/Src/stm32f0xx_it.c **** }
 215              		.loc 1 155 0
 216 000c C046     		nop
 217 000e BD46     		mov	sp, r7
 218              		@ sp needed
 219 0010 80BD     		pop	{r7, pc}
 220              	.L10:
 221 0012 C046     		.align	2
 222              	.L9:
 223 0014 00000000 		.word	hdma_adc
 224              		.cfi_endproc
 225              	.LFE43:
 227              		.section	.text.ADC1_COMP_IRQHandler,"ax",%progbits
 228              		.align	1
 229              		.global	ADC1_COMP_IRQHandler
 230              		.syntax unified
 231              		.code	16
 232              		.thumb_func
 233              		.fpu softvfp
 235              	ADC1_COMP_IRQHandler:
 236              	.LFB44:
 156:cube/Src/stm32f0xx_it.c **** 
 157:cube/Src/stm32f0xx_it.c **** /**
 158:cube/Src/stm32f0xx_it.c **** * @brief This function handles ADC and COMP interrupts (COMP interrupts through EXTI lines 21 and 2
 159:cube/Src/stm32f0xx_it.c **** */
 160:cube/Src/stm32f0xx_it.c **** void ADC1_COMP_IRQHandler(void)
 161:cube/Src/stm32f0xx_it.c **** {
 237              		.loc 1 161 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241 0000 80B5     		push	{r7, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 00AF     		add	r7, sp, #0
 246              		.cfi_def_cfa_register 7
 162:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN ADC1_COMP_IRQn 0 */
 163:cube/Src/stm32f0xx_it.c **** 
 164:cube/Src/stm32f0xx_it.c ****   /* USER CODE END ADC1_COMP_IRQn 0 */
 165:cube/Src/stm32f0xx_it.c ****   HAL_ADC_IRQHandler(&hadc);
 247              		.loc 1 165 0
 248 0004 034B     		ldr	r3, .L12
 249 0006 1800     		movs	r0, r3
ARM GAS  /tmp/ccwQyyta.s 			page 8


 250 0008 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 166:cube/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN ADC1_COMP_IRQn 1 */
 167:cube/Src/stm32f0xx_it.c **** 
 168:cube/Src/stm32f0xx_it.c ****   /* USER CODE END ADC1_COMP_IRQn 1 */
 169:cube/Src/stm32f0xx_it.c **** }
 251              		.loc 1 169 0
 252 000c C046     		nop
 253 000e BD46     		mov	sp, r7
 254              		@ sp needed
 255 0010 80BD     		pop	{r7, pc}
 256              	.L13:
 257 0012 C046     		.align	2
 258              	.L12:
 259 0014 00000000 		.word	hadc
 260              		.cfi_endproc
 261              	.LFE44:
 263              		.text
 264              	.Letext0:
 265              		.file 2 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine
 266              		.file 3 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_st
 267              		.file 4 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 268              		.file 5 "cube/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 269              		.file 6 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/loc
 270              		.file 7 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_ty
 271              		.file 8 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/i
 272              		.file 9 "/home/lhaug/Applications/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/ree
 273              		.file 10 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 274              		.file 11 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 275              		.file 12 "cube/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
ARM GAS  /tmp/ccwQyyta.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_it.c
     /tmp/ccwQyyta.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccwQyyta.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccwQyyta.s:45     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccwQyyta.s:52     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccwQyyta.s:71     .text.SVC_Handler:0000000000000000 $t
     /tmp/ccwQyyta.s:78     .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccwQyyta.s:99     .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccwQyyta.s:106    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccwQyyta.s:127    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccwQyyta.s:134    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccwQyyta.s:159    .text.EXTI4_15_IRQHandler:0000000000000000 $t
     /tmp/ccwQyyta.s:166    .text.EXTI4_15_IRQHandler:0000000000000000 EXTI4_15_IRQHandler
     /tmp/ccwQyyta.s:192    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
     /tmp/ccwQyyta.s:199    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
     /tmp/ccwQyyta.s:223    .text.DMA1_Channel1_IRQHandler:0000000000000014 $d
     /tmp/ccwQyyta.s:228    .text.ADC1_COMP_IRQHandler:0000000000000000 $t
     /tmp/ccwQyyta.s:235    .text.ADC1_COMP_IRQHandler:0000000000000000 ADC1_COMP_IRQHandler
     /tmp/ccwQyyta.s:259    .text.ADC1_COMP_IRQHandler:0000000000000014 $d
                           .group:0000000000000000 wm4.0.b7c3d577b02d87ac381ee43eef398462
                           .group:0000000000000000 wm4.main.h.42.3939338cba6ab0a8b761d08be8206d51
                           .group:0000000000000000 wm4.stm32f0xx_hal_conf.h.51.b0c07d2233f75e3b04f03d95093d88ca
                           .group:0000000000000000 wm4.stm32f0xx.h.55.6dda558900ae83b4ddf41af91bcbf2f5
                           .group:0000000000000000 wm4.stm32f072xb.h.53.c99f4c72149ed98740992cfc418a4d39
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.d0b7f3cd6ee95f610104014bb3ed522a
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.core_cm0.h.74.a7f5ed9ff199b3163f5ed99892efe60d
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.5bb14fd68ce7855540fcfe2d9305ae16
                           .group:0000000000000000 wm4.core_cm0.h.175.2353140684a11cc8267b4125ac92735e
                           .group:0000000000000000 wm4.stm32f072xb.h.653.664388dc5ef2a697008be7ff13986fc5
                           .group:0000000000000000 wm4.stm32f0xx.h.186.8a2f1abf0fccd74c76b01fef06350694
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.types.h.114.fb65732f4f5f288a036a25898de2c91f
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.2a55589bfa3ee24eeb84e3c79458e4a9
                           .group:0000000000000000 wm4.stm32f0xx_hal_def.h.76.81362c22f1bfa407bb20bdc5ef2fe817
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc.h.64.1680b96367ed05251327e73e2ef7e0a0
                           .group:0000000000000000 wm4.stm32f0xx_hal_rcc_ex.h.38.fed157297eb0e49fa475a8f4d962b1a1
ARM GAS  /tmp/ccwQyyta.s 			page 10


                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio.h.38.5de46a121e30d1d136216266f57becb9
                           .group:0000000000000000 wm4.stm32f0xx_hal_gpio_ex.h.38.4ae096506dfd35e4cd1e2bfdbf19c71f
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.38.9bc992aa465d2468bc055502b51063f3
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma_ex.h.38.c2269542e0bcc97944af39289a0a60b8
                           .group:0000000000000000 wm4.stm32f0xx_hal_dma.h.500.3b36a5be41f3e2ac138f4041ccf5cecb
                           .group:0000000000000000 wm4.stm32f0xx_hal_cortex.h.38.61b1088b7495d338bc65ee2571a0bb95
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc.h.38.e3e4bca0d8b91dc0f73ca672bc0e5aca
                           .group:0000000000000000 wm4.stm32f0xx_hal_adc_ex.h.38.79c684f1976d63630feab98f4d82be4a
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash.h.38.752a2d52b6ea91b900355f4ecd0538c0
                           .group:0000000000000000 wm4.stm32f0xx_hal_flash_ex.h.38.8097982a0077322c9b7a892e64a756d8
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.38.387f38a4bc9cbea958e7081da9f60815
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c_ex.h.38.9a4523b2ddbaaa2727287ccab47d88d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_i2c.h.625.1e7eff54876bba211f769007bbafd5f1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr.h.38.2c4d8c2e90fc76cec57b78b078d485d1
                           .group:0000000000000000 wm4.stm32f0xx_hal_pwr_ex.h.38.e18331c4036598a45f5d1fd3922b2997
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim.h.38.42f3ee0b54a54fc44c665553058edb38
                           .group:0000000000000000 wm4.stm32f0xx_hal_tim_ex.h.38.12cd16a4e412877272e70689edb6b518
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart.h.38.e5eada3cdf37ca88de33bd21ddd21a5e
                           .group:0000000000000000 wm4.stm32f0xx_hal_uart_ex.h.38.9430c2ca5ec832677dbe7308c46115fd
                           .group:0000000000000000 wm4.stm32f0xx_hal.h.70.818459bc3b31dd9e51543930b5b3b8df

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_adc
HAL_ADC_IRQHandler
hadc
